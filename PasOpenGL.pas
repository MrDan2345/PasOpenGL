unit PasOpenGL;

{$mode objfpc}
{$macro on}
{$modeswitch advancedrecords}
{$modeswitch typehelpers}
{$h+}

interface

{$if defined(WINDOWS)}
  uses Windows;
{$elseif defined(LINUX)}
  uses X, XLib, XUtil;
{$elseif defined(DARWIN)}
  uses MacOSAll;
{$endif}

{$if defined(WINDOWS)}
  {$define libdecl := stdcall}
{$else}
  {$define libdecl := cdecl}
{$endif}

{$if defined(WINDOWS)}
  const LibGL = 'opengl32.dll';
{$elseif defined(LINUX)}
  const LibGL = 'libGL.so.1';
{$elseif defined(DARWIN)}
  const LibGL = 'System/Library/Frameworks/OpenGL.framework/Libraries/libGL.dylib';
{$endif}

type
  GLenum = LongWord;
  TGLenum = GLenum;
  GLboolean = Byte;
  TGLboolean = GLboolean;
  GLbitfield = LongWord;
  TGLbitfield = GLbitfield;
  GLvoid = Pointer;
  TGLvoid = GLvoid;
  GLbyte = ShortInt;
  TGLbyte = GLbyte;
  GLubyte = Byte;
  TGLubyte = GLubyte;
  GLshort = SmallInt;
  TGLshort = GLshort;
  GLushort = Word;
  TGLushort = GLushort;
  GLint = LongInt;
  TGLint = GLint;
  GLuint = LongWord;
  TGLuint = GLuint;
  GLclampx = LongInt;
  TGLclampx = GLclampx;
  GLsizei = LongInt;
  TGLsizei = GLsizei;
  GLfloat = Single;
  TGLfloat = GLfloat;
  GLclampf = Single;
  TGLclampf = GLclampf;
  GLdouble = Double;
  TGLdouble = GLdouble;
  GLclampd = Double;
  TGLclampd = GLclampd;
  GLeglClientBufferEXT = Pointer;
  TGLeglClientBufferEXT = GLeglClientBufferEXT;
  GLeglImageOES = Pointer;
  TGLeglImageOES = GLeglImageOES;
  GLchar = ShortInt;
  TGLchar = GLchar;
  GLcharARB = ShortInt;
  TGLcharARB = GLcharARB;
  GLhandleARB = LongWord;
  TGLhandleARB = GLhandleARB;
  GLhalf = Word;
  TGLhalf = GLhalf;
  GLhalfARB = Word;
  TGLhalfARB = GLhalfARB;
  GLfixed = LongInt;
  TGLfixed = GLfixed;
  GLintptr = PtrInt;
  TGLintptr = GLintptr;
  GLintptrARB = PtrInt;
  TGLintptrARB = GLintptrARB;
  GLsizeiptr = PtrInt;
  TGLsizeiptr = GLsizeiptr;
  GLsizeiptrARB = PtrInt;
  TGLsizeiptrARB = GLsizeiptrARB;
  GLint64 = Int64;
  TGLint64 = GLint64;
  GLint64EXT = Int64;
  TGLint64EXT = GLint64EXT;
  GLuint64 = QWord;
  TGLuint64 = GLuint64;
  GLuint64EXT = QWord;
  TGLuint64EXT = GLuint64EXT;
  GLsync = Pointer;
  TGLsync = GLsync;
  _cl_context = record end;
  _cl_event = record end;
  PGLchar = ^GLchar;
  GLDEBUGPROC = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const _message: PGLchar; const userParam: Pointer) libdecl;
  TGLDEBUGPROC = GLDEBUGPROC;
  GLDEBUGPROCARB = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const _message: PGLchar; const userParam: Pointer) libdecl;
  TGLDEBUGPROCARB = GLDEBUGPROCARB;
  GLDEBUGPROCKHR = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const _message: PGLchar; const userParam: Pointer) libdecl;
  TGLDEBUGPROCKHR = GLDEBUGPROCKHR;
  GLDEBUGPROCAMD = procedure (id: GLuint; category: GLenum; severity: GLenum; length: GLsizei; const _message: PGLchar; userParam: Pointer) libdecl;
  TGLDEBUGPROCAMD = GLDEBUGPROCAMD;
  GLhalfNV = Word;
  TGLhalfNV = GLhalfNV;
  GLvdpauSurfaceNV = GLintptr;
  TGLvdpauSurfaceNV = GLvdpauSurfaceNV;
  GLVULKANPROCNV = procedure () libdecl;
  TGLVULKANPROCNV = GLVULKANPROCNV;
  PGLuint = ^GLuint;
  PGLboolean = ^GLboolean;
  PGLuint64 = ^GLuint64;
  PGLcharARB = ^GLcharARB;
  PGLintptr = ^GLintptr;
  PGLsizeiptr = ^GLsizeiptr;
  PGLsizei = ^GLsizei;
  PGLbyte = ^GLbyte;
  PGLdouble = ^GLdouble;
  PGLfloat = ^GLfloat;
  PGLint = ^GLint;
  PGLshort = ^GLshort;
  PGLubyte = ^GLubyte;
  PGLfixed = ^GLfixed;
  PGLhalfNV = ^GLhalfNV;
  PGLushort = ^GLushort;
  PPointer = ^Pointer;
  PPGLchar = ^PGLchar;
  P_cl_context = ^_cl_context;
  P_cl_event = ^_cl_event;
  PGLenum = ^GLenum;
  PPGLboolean = ^PGLboolean;
  PGLhandleARB = ^GLhandleARB;
  PGLint64 = ^GLint64;
  PGLuint64EXT = ^GLuint64EXT;
  PGLint64EXT = ^GLint64EXT;
  PGLclampf = ^GLclampf;
  PPGLcharARB = ^PGLcharARB;
  PGLvdpauSurfaceNV = ^GLvdpauSurfaceNV;
{$if defined(WINDOWS)}
  FLOAT = Single;
  INT = LongInt;
  _GPU_DEVICE = record
    cb: DWORD;
    DeviceName: array [0..31] of CHAR;
    DeviceString: array [0..127] of CHAR;
    Flags: DWORD;
    rcVirtualScreen: RECT;
  end;
  HPBUFFERARB = HANDLE;
  HPBUFFEREXT = HANDLE;
  HVIDEOOUTPUTDEVICENV = HANDLE;
  HPVIDEODEV = HANDLE;
  HPGPUNV = HANDLE;
  HGPUNV = HANDLE;
  HVIDEOINPUTDEVICENV = HANDLE;
  GPU_DEVICE = _GPU_DEVICE;
  P_GPU_DEVICE = ^_GPU_DEVICE;
  PGPU_DEVICE = P_GPU_DEVICE;
  PPIXELFORMATDESCRIPTOR = ^PIXELFORMATDESCRIPTOR;
  PHANDLE = ^HANDLE;
  PLPVOID = ^LPVOID;
  PDWORD = ^DWORD;
  PLongInt = ^LongInt;
  PFLOAT = ^FLOAT;
  PUINT = ^UINT;
  PHGPUNV = ^HGPUNV;
  PLAYERPLANEDESCRIPTOR = ^LAYERPLANEDESCRIPTOR;
  PHVIDEOINPUTDEVICENV = ^HVIDEOINPUTDEVICENV;
  PHVIDEOOUTPUTDEVICENV = ^HVIDEOOUTPUTDEVICENV;
  PShortInt = ^ShortInt;
  PSingle = ^Single;
  PUSHORT = ^USHORT;
  PCOLORREF = ^COLORREF;
  PINT32 = ^INT32;
  PINT64 = ^INT64;
  PHPVIDEODEV = ^HPVIDEODEV;
  PLongWord = ^LongWord;
  PBOOL = ^BOOL;
{$endif}
{$if defined(LINUX)}
  __GLXFBConfigRec = record end;
  __GLXcontextRec = record end;
  DMparams = record end;
  DMbuffer = record end;
  VLNode = record end;
  VLPath = record end;
  VLServer = record end;
  GLXFBConfigID = TXID;
  TGLXFBConfigID = GLXFBConfigID;
  P__GLXFBConfigRec = ^__GLXFBConfigRec;
  GLXFBConfig = P__GLXFBConfigRec;
  TGLXFBConfig = GLXFBConfig;
  GLXContextID = TXID;
  TGLXContextID = GLXContextID;
  P__GLXcontextRec = ^__GLXcontextRec;
  GLXContext = P__GLXcontextRec;
  TGLXContext = GLXContext;
  GLXPixmap = TXID;
  TGLXPixmap = GLXPixmap;
  GLXDrawable = TXID;
  TGLXDrawable = GLXDrawable;
  GLXWindow = TXID;
  TGLXWindow = GLXWindow;
  GLXPbuffer = TXID;
  TGLXPbuffer = GLXPbuffer;
  __GLXextFuncPtr = procedure () libdecl;
  GLXVideoCaptureDeviceNV = TXID;
  TGLXVideoCaptureDeviceNV = GLXVideoCaptureDeviceNV;
  GLXVideoDeviceNV = LongWord;
  TGLXVideoDeviceNV = GLXVideoDeviceNV;
  GLXVideoSourceSGIX = TXID;
  TGLXVideoSourceSGIX = GLXVideoSourceSGIX;
  GLXFBConfigIDSGIX = TXID;
  TGLXFBConfigIDSGIX = GLXFBConfigIDSGIX;
  GLXFBConfigSGIX = P__GLXFBConfigRec;
  TGLXFBConfigSGIX = GLXFBConfigSGIX;
  GLXPbufferSGIX = TXID;
  TGLXPbufferSGIX = GLXPbufferSGIX;
  PTXDisplay = ^TXDisplay;
  GLXPbufferClobberEvent = record
    event_type: LongInt;
    draw_type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    drawable: GLXDrawable;
    buffer_mask: LongWord;
    aux_buffer: LongWord;
    x: LongInt;
    y: LongInt;
    width: LongInt;
    height: LongInt;
    count: LongInt;
  end;
  TGLXPbufferClobberEvent = GLXPbufferClobberEvent;
  GLXBufferSwapComplete = record
    _type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    drawable: GLXDrawable;
    event_type: LongInt;
    ust: Int64;
    msc: Int64;
    sbc: Int64;
  end;
  TGLXBufferSwapComplete = GLXBufferSwapComplete;
  GLXStereoNotifyEventEXT = record
    _type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    extension: LongInt;
    evtype: LongInt;
    window: GLXDrawable;
    stereo_tree: TBool;
  end;
  TGLXStereoNotifyEventEXT = GLXStereoNotifyEventEXT;
  GLXBufferClobberEventSGIX = record
    _type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    drawable: GLXDrawable;
    event_type: LongInt;
    draw_type: LongInt;
    mask: LongWord;
    x: LongInt;
    y: LongInt;
    width: LongInt;
    height: LongInt;
    count: LongInt;
  end;
  TGLXBufferClobberEventSGIX = GLXBufferClobberEventSGIX;
  GLXHyperpipeNetworkSGIX = record
    pipeName: array [0..79] of ShortInt;
    networkId: LongInt;
  end;
  TGLXHyperpipeNetworkSGIX = GLXHyperpipeNetworkSGIX;
  GLXHyperpipeConfigSGIX_ = record
    pipeName: array [0..79] of ShortInt;
    channel: LongInt;
    participationType: LongWord;
    timeSlice: LongInt;
  end;
  TGLXHyperpipeConfigSGIX_ = GLXHyperpipeConfigSGIX_;
  GLXPipeRect = record
    pipeName: array [0..79] of ShortInt;
    srcXOrigin: LongInt;
    srcYOrigin: LongInt;
    srcWidth: LongInt;
    srcHeight: LongInt;
    destXOrigin: LongInt;
    destYOrigin: LongInt;
    destWidth: LongInt;
    destHeight: LongInt;
  end;
  TGLXPipeRect = GLXPipeRect;
  GLXPipeRectLimits = record
    pipeName: array [0..79] of ShortInt;
    XOrigin: LongInt;
    YOrigin: LongInt;
    maxHeight: LongInt;
    maxWidth: LongInt;
  end;
  TGLXPipeRectLimits = GLXPipeRectLimits;
  PDMparams = ^DMparams;
  PGLXFBConfig = ^GLXFBConfig;
  PGLXFBConfigSGIX = ^GLXFBConfigSGIX;
  PTXVisualInfo = ^TXVisualInfo;
  PGLXVideoCaptureDeviceNV = ^GLXVideoCaptureDeviceNV;
  PGLXVideoDeviceNV = ^GLXVideoDeviceNV;
  PGLXHyperpipeConfigSGIX = ^GLXHyperpipeConfigSGIX_;
  PGLXHyperpipeNetworkSGIX = ^GLXHyperpipeNetworkSGIX;
{$endif}
const
  GL_CURRENT_BIT = $00000001;
  GL_POINT_BIT = $00000002;
  GL_LINE_BIT = $00000004;
  GL_POLYGON_BIT = $00000008;
  GL_POLYGON_STIPPLE_BIT = $00000010;
  GL_PIXEL_MODE_BIT = $00000020;
  GL_LIGHTING_BIT = $00000040;
  GL_FOG_BIT = $00000080;
  GL_DEPTH_BUFFER_BIT = $00000100;
  GL_ACCUM_BUFFER_BIT = $00000200;
  GL_STENCIL_BUFFER_BIT = $00000400;
  GL_VIEWPORT_BIT = $00000800;
  GL_TRANSFORM_BIT = $00001000;
  GL_ENABLE_BIT = $00002000;
  GL_COLOR_BUFFER_BIT = $00004000;
  GL_HINT_BIT = $00008000;
  GL_EVAL_BIT = $00010000;
  GL_LIST_BIT = $00020000;
  GL_TEXTURE_BIT = $00040000;
  GL_SCISSOR_BIT = $00080000;
  GL_MULTISAMPLE_BIT = $20000000;
  GL_MULTISAMPLE_BIT_ARB = $20000000;
  GL_MULTISAMPLE_BIT_EXT = $20000000;
  GL_MULTISAMPLE_BIT_3DFX = $20000000;
  GL_ALL_ATTRIB_BITS = $FFFFFFFF;
  GL_DYNAMIC_STORAGE_BIT = $00000100;
  GL_DYNAMIC_STORAGE_BIT_EXT = $00000100;
  GL_CLIENT_STORAGE_BIT = $00000200;
  GL_CLIENT_STORAGE_BIT_EXT = $00000200;
  GL_SPARSE_STORAGE_BIT_ARB = $00000400;
  GL_LGPU_SEPARATE_STORAGE_BIT_NVX = $00000800;
  GL_PER_GPU_STORAGE_BIT_NV = $00000800;
  GL_EXTERNAL_STORAGE_BIT_NVX = $00002000;
  GL_COVERAGE_BUFFER_BIT_NV = $00008000;
  GL_CLIENT_PIXEL_STORE_BIT = $00000001;
  GL_CLIENT_VERTEX_ARRAY_BIT = $00000002;
  GL_CLIENT_ALL_ATTRIB_BITS = $FFFFFFFF;
  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = $00000001;
  GL_CONTEXT_FLAG_DEBUG_BIT = $00000002;
  GL_CONTEXT_FLAG_DEBUG_BIT_KHR = $00000002;
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = $00000004;
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = $00000004;
  GL_CONTEXT_FLAG_NO_ERROR_BIT = $00000008;
  GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = GL_CONTEXT_FLAG_NO_ERROR_BIT;
  GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT = $00000010;
  GL_CONTEXT_CORE_PROFILE_BIT = $00000001;
  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = $00000002;
  GL_MAP_READ_BIT = $00000001;
  GL_MAP_READ_BIT_EXT = $00000001;
  GL_MAP_WRITE_BIT = $00000002;
  GL_MAP_WRITE_BIT_EXT = $00000002;
  GL_MAP_INVALIDATE_RANGE_BIT = $00000004;
  GL_MAP_INVALIDATE_RANGE_BIT_EXT = $00000004;
  GL_MAP_INVALIDATE_BUFFER_BIT = $00000008;
  GL_MAP_INVALIDATE_BUFFER_BIT_EXT = $00000008;
  GL_MAP_FLUSH_EXPLICIT_BIT = $00000010;
  GL_MAP_FLUSH_EXPLICIT_BIT_EXT = $00000010;
  GL_MAP_UNSYNCHRONIZED_BIT = $00000020;
  GL_MAP_UNSYNCHRONIZED_BIT_EXT = $00000020;
  GL_MAP_PERSISTENT_BIT = $00000040;
  GL_MAP_PERSISTENT_BIT_EXT = $00000040;
  GL_MAP_COHERENT_BIT = $00000080;
  GL_MAP_COHERENT_BIT_EXT = $00000080;
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = $00000001;
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = $00000001;
  GL_ELEMENT_ARRAY_BARRIER_BIT = $00000002;
  GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = $00000002;
  GL_UNIFORM_BARRIER_BIT = $00000004;
  GL_UNIFORM_BARRIER_BIT_EXT = $00000004;
  GL_TEXTURE_FETCH_BARRIER_BIT = $00000008;
  GL_TEXTURE_FETCH_BARRIER_BIT_EXT = $00000008;
  GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = $00000010;
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = $00000020;
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = $00000020;
  GL_COMMAND_BARRIER_BIT = $00000040;
  GL_COMMAND_BARRIER_BIT_EXT = $00000040;
  GL_PIXEL_BUFFER_BARRIER_BIT = $00000080;
  GL_PIXEL_BUFFER_BARRIER_BIT_EXT = $00000080;
  GL_TEXTURE_UPDATE_BARRIER_BIT = $00000100;
  GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = $00000100;
  GL_BUFFER_UPDATE_BARRIER_BIT = $00000200;
  GL_BUFFER_UPDATE_BARRIER_BIT_EXT = $00000200;
  GL_FRAMEBUFFER_BARRIER_BIT = $00000400;
  GL_FRAMEBUFFER_BARRIER_BIT_EXT = $00000400;
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT = $00000800;
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = $00000800;
  GL_ATOMIC_COUNTER_BARRIER_BIT = $00001000;
  GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = $00001000;
  GL_SHADER_STORAGE_BARRIER_BIT = $00002000;
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = $00004000;
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT = $00004000;
  GL_QUERY_BUFFER_BARRIER_BIT = $00008000;
  GL_ALL_BARRIER_BITS = $FFFFFFFF;
  GL_ALL_BARRIER_BITS_EXT = $FFFFFFFF;
  GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = $00000001;
  GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = $00000002;
  GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = $00000004;
  GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = $00000008;
  GL_QUERY_ALL_EVENT_BITS_AMD = $FFFFFFFF;
  GL_SYNC_FLUSH_COMMANDS_BIT = $00000001;
  GL_SYNC_FLUSH_COMMANDS_BIT_APPLE = $00000001;
  GL_VERTEX_SHADER_BIT = $00000001;
  GL_VERTEX_SHADER_BIT_EXT = $00000001;
  GL_FRAGMENT_SHADER_BIT = $00000002;
  GL_FRAGMENT_SHADER_BIT_EXT = $00000002;
  GL_GEOMETRY_SHADER_BIT = $00000004;
  GL_GEOMETRY_SHADER_BIT_EXT = $00000004;
  GL_GEOMETRY_SHADER_BIT_OES = $00000004;
  GL_TESS_CONTROL_SHADER_BIT = $00000008;
  GL_TESS_CONTROL_SHADER_BIT_EXT = $00000008;
  GL_TESS_CONTROL_SHADER_BIT_OES = $00000008;
  GL_TESS_EVALUATION_SHADER_BIT = $00000010;
  GL_TESS_EVALUATION_SHADER_BIT_EXT = $00000010;
  GL_TESS_EVALUATION_SHADER_BIT_OES = $00000010;
  GL_COMPUTE_SHADER_BIT = $00000020;
  GL_MESH_SHADER_BIT_NV = $00000040;
  GL_TASK_SHADER_BIT_NV = $00000080;
  GL_ALL_SHADER_BITS = $FFFFFFFF;
  GL_ALL_SHADER_BITS_EXT = $FFFFFFFF;
  GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = $00000001;
  GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = $00000002;
  GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = $00000004;
  GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = $00000008;
  GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = $00000010;
  GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = $00000020;
  GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = $00000040;
  GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = $00000080;
  GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = $00000100;
  GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = $00000001;
  GL_RED_BIT_ATI = $00000001;
  GL_GREEN_BIT_ATI = $00000002;
  GL_BLUE_BIT_ATI = $00000004;
  GL_2X_BIT_ATI = $00000001;
  GL_4X_BIT_ATI = $00000002;
  GL_8X_BIT_ATI = $00000004;
  GL_HALF_BIT_ATI = $00000008;
  GL_QUARTER_BIT_ATI = $00000010;
  GL_EIGHTH_BIT_ATI = $00000020;
  GL_SATURATE_BIT_ATI = $00000040;
  GL_COMP_BIT_ATI = $00000002;
  GL_NEGATE_BIT_ATI = $00000004;
  GL_BIAS_BIT_ATI = $00000008;
  GL_TRACE_OPERATIONS_BIT_MESA = $00000001;
  GL_TRACE_PRIMITIVES_BIT_MESA = $00000002;
  GL_TRACE_ARRAYS_BIT_MESA = $00000004;
  GL_TRACE_TEXTURES_BIT_MESA = $00000008;
  GL_TRACE_PIXELS_BIT_MESA = $00000010;
  GL_TRACE_ERRORS_BIT_MESA = $00000020;
  GL_TRACE_ALL_BITS_MESA = $0000FFFF;
  GL_BOLD_BIT_NV = $00000001;
  GL_ITALIC_BIT_NV = $00000002;
  GL_GLYPH_WIDTH_BIT_NV = $00000001;
  GL_GLYPH_HEIGHT_BIT_NV = $00000002;
  GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = $00000004;
  GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = $00000008;
  GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = $00000010;
  GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = $00000020;
  GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = $00000040;
  GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = $00000080;
  GL_GLYPH_HAS_KERNING_BIT_NV = $00000100;
  GL_FONT_X_MIN_BOUNDS_BIT_NV = $00010000;
  GL_FONT_Y_MIN_BOUNDS_BIT_NV = $00020000;
  GL_FONT_X_MAX_BOUNDS_BIT_NV = $00040000;
  GL_FONT_Y_MAX_BOUNDS_BIT_NV = $00080000;
  GL_FONT_UNITS_PER_EM_BIT_NV = $00100000;
  GL_FONT_ASCENDER_BIT_NV = $00200000;
  GL_FONT_DESCENDER_BIT_NV = $00400000;
  GL_FONT_HEIGHT_BIT_NV = $00800000;
  GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = $01000000;
  GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = $02000000;
  GL_FONT_UNDERLINE_POSITION_BIT_NV = $04000000;
  GL_FONT_UNDERLINE_THICKNESS_BIT_NV = $08000000;
  GL_FONT_HAS_KERNING_BIT_NV = $10000000;
  GL_FONT_NUM_GLYPH_INDICES_BIT_NV = $20000000;
  GL_PERFQUERY_SINGLE_CONTEXT_INTEL = $00000000;
  GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = $00000001;
  GL_VERTEX23_BIT_PGI = $00000004;
  GL_VERTEX4_BIT_PGI = $00000008;
  GL_COLOR3_BIT_PGI = $00010000;
  GL_COLOR4_BIT_PGI = $00020000;
  GL_EDGEFLAG_BIT_PGI = $00040000;
  GL_INDEX_BIT_PGI = $00080000;
  GL_MAT_AMBIENT_BIT_PGI = $00100000;
  GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = $00200000;
  GL_MAT_DIFFUSE_BIT_PGI = $00400000;
  GL_MAT_EMISSION_BIT_PGI = $00800000;
  GL_MAT_COLOR_INDEXES_BIT_PGI = $01000000;
  GL_MAT_SHININESS_BIT_PGI = $02000000;
  GL_MAT_SPECULAR_BIT_PGI = $04000000;
  GL_NORMAL_BIT_PGI = $08000000;
  GL_TEXCOORD1_BIT_PGI = $10000000;
  GL_TEXCOORD2_BIT_PGI = $20000000;
  GL_TEXCOORD3_BIT_PGI = $40000000;
  GL_TEXCOORD4_BIT_PGI = $80000000;
  GL_COLOR_BUFFER_BIT0_QCOM = $00000001;
  GL_COLOR_BUFFER_BIT1_QCOM = $00000002;
  GL_COLOR_BUFFER_BIT2_QCOM = $00000004;
  GL_COLOR_BUFFER_BIT3_QCOM = $00000008;
  GL_COLOR_BUFFER_BIT4_QCOM = $00000010;
  GL_COLOR_BUFFER_BIT5_QCOM = $00000020;
  GL_COLOR_BUFFER_BIT6_QCOM = $00000040;
  GL_COLOR_BUFFER_BIT7_QCOM = $00000080;
  GL_DEPTH_BUFFER_BIT0_QCOM = $00000100;
  GL_DEPTH_BUFFER_BIT1_QCOM = $00000200;
  GL_DEPTH_BUFFER_BIT2_QCOM = $00000400;
  GL_DEPTH_BUFFER_BIT3_QCOM = $00000800;
  GL_DEPTH_BUFFER_BIT4_QCOM = $00001000;
  GL_DEPTH_BUFFER_BIT5_QCOM = $00002000;
  GL_DEPTH_BUFFER_BIT6_QCOM = $00004000;
  GL_DEPTH_BUFFER_BIT7_QCOM = $00008000;
  GL_STENCIL_BUFFER_BIT0_QCOM = $00010000;
  GL_STENCIL_BUFFER_BIT1_QCOM = $00020000;
  GL_STENCIL_BUFFER_BIT2_QCOM = $00040000;
  GL_STENCIL_BUFFER_BIT3_QCOM = $00080000;
  GL_STENCIL_BUFFER_BIT4_QCOM = $00100000;
  GL_STENCIL_BUFFER_BIT5_QCOM = $00200000;
  GL_STENCIL_BUFFER_BIT6_QCOM = $00400000;
  GL_STENCIL_BUFFER_BIT7_QCOM = $00800000;
  GL_MULTISAMPLE_BUFFER_BIT0_QCOM = $01000000;
  GL_MULTISAMPLE_BUFFER_BIT1_QCOM = $02000000;
  GL_MULTISAMPLE_BUFFER_BIT2_QCOM = $04000000;
  GL_MULTISAMPLE_BUFFER_BIT3_QCOM = $08000000;
  GL_MULTISAMPLE_BUFFER_BIT4_QCOM = $10000000;
  GL_MULTISAMPLE_BUFFER_BIT5_QCOM = $20000000;
  GL_MULTISAMPLE_BUFFER_BIT6_QCOM = $40000000;
  GL_MULTISAMPLE_BUFFER_BIT7_QCOM = $80000000;
  GL_FOVEATION_ENABLE_BIT_QCOM = $00000001;
  GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM = $00000002;
  GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM = $00000004;
  GL_TEXTURE_DEFORMATION_BIT_SGIX = $00000001;
  GL_GEOMETRY_DEFORMATION_BIT_SGIX = $00000002;
  GL_TERMINATE_SEQUENCE_COMMAND_NV = $00000000;
  GL_NOP_COMMAND_NV = $00000001;
  GL_DRAW_ELEMENTS_COMMAND_NV = $00000002;
  GL_DRAW_ARRAYS_COMMAND_NV = $00000003;
  GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = $00000004;
  GL_DRAW_ARRAYS_STRIP_COMMAND_NV = $00000005;
  GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = $00000006;
  GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = $00000007;
  GL_ELEMENT_ADDRESS_COMMAND_NV = $00000008;
  GL_ATTRIBUTE_ADDRESS_COMMAND_NV = $00000009;
  GL_UNIFORM_ADDRESS_COMMAND_NV = $0000000A;
  GL_BLEND_COLOR_COMMAND_NV = $0000000B;
  GL_STENCIL_REF_COMMAND_NV = $0000000C;
  GL_LINE_WIDTH_COMMAND_NV = $0000000D;
  GL_POLYGON_OFFSET_COMMAND_NV = $0000000E;
  GL_ALPHA_REF_COMMAND_NV = $0000000F;
  GL_VIEWPORT_COMMAND_NV = $00000010;
  GL_SCISSOR_COMMAND_NV = $00000011;
  GL_FRONT_FACE_COMMAND_NV = $00000012;
  GL_LAYOUT_DEFAULT_INTEL = $00000000;
  GL_LAYOUT_LINEAR_INTEL = $00000001;
  GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = $00000002;
  GL_CLOSE_PATH_NV = $00000000;
  GL_MOVE_TO_NV = $00000002;
  GL_RELATIVE_MOVE_TO_NV = $00000003;
  GL_LINE_TO_NV = $00000004;
  GL_RELATIVE_LINE_TO_NV = $00000005;
  GL_HORIZONTAL_LINE_TO_NV = $00000006;
  GL_RELATIVE_HORIZONTAL_LINE_TO_NV = $00000007;
  GL_VERTICAL_LINE_TO_NV = $00000008;
  GL_RELATIVE_VERTICAL_LINE_TO_NV = $00000009;
  GL_QUADRATIC_CURVE_TO_NV = $0000000A;
  GL_RELATIVE_QUADRATIC_CURVE_TO_NV = $0000000B;
  GL_CUBIC_CURVE_TO_NV = $0000000C;
  GL_RELATIVE_CUBIC_CURVE_TO_NV = $0000000D;
  GL_SMOOTH_QUADRATIC_CURVE_TO_NV = $0000000E;
  GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = $0000000F;
  GL_SMOOTH_CUBIC_CURVE_TO_NV = $00000010;
  GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = $00000011;
  GL_SMALL_CCW_ARC_TO_NV = $00000012;
  GL_RELATIVE_SMALL_CCW_ARC_TO_NV = $00000013;
  GL_SMALL_CW_ARC_TO_NV = $00000014;
  GL_RELATIVE_SMALL_CW_ARC_TO_NV = $00000015;
  GL_LARGE_CCW_ARC_TO_NV = $00000016;
  GL_RELATIVE_LARGE_CCW_ARC_TO_NV = $00000017;
  GL_LARGE_CW_ARC_TO_NV = $00000018;
  GL_RELATIVE_LARGE_CW_ARC_TO_NV = $00000019;
  GL_CONIC_CURVE_TO_NV = $0000001A;
  GL_RELATIVE_CONIC_CURVE_TO_NV = $0000001B;
  GL_SHARED_EDGE_NV = $000000C0;
  GL_ROUNDED_RECT_NV = $000000E8;
  GL_RELATIVE_ROUNDED_RECT_NV = $000000E9;
  GL_ROUNDED_RECT2_NV = $000000EA;
  GL_RELATIVE_ROUNDED_RECT2_NV = $000000EB;
  GL_ROUNDED_RECT4_NV = $000000EC;
  GL_RELATIVE_ROUNDED_RECT4_NV = $000000ED;
  GL_ROUNDED_RECT8_NV = $000000EE;
  GL_RELATIVE_ROUNDED_RECT8_NV = $000000EF;
  GL_RESTART_PATH_NV = $000000F0;
  GL_DUP_FIRST_CUBIC_CURVE_TO_NV = $000000F2;
  GL_DUP_LAST_CUBIC_CURVE_TO_NV = $000000F4;
  GL_RECT_NV = $000000F6;
  GL_RELATIVE_RECT_NV = $000000F7;
  GL_CIRCULAR_CCW_ARC_TO_NV = $000000F8;
  GL_CIRCULAR_CW_ARC_TO_NV = $000000FA;
  GL_CIRCULAR_TANGENT_ARC_TO_NV = $000000FC;
  GL_ARC_TO_NV = $000000FE;
  GL_RELATIVE_ARC_TO_NV = $000000FF;
  GL_NEXT_BUFFER_NV = $FFFFFFFE;
  GL_SKIP_COMPONENTS4_NV = $FFFFFFFD;
  GL_SKIP_COMPONENTS3_NV = $FFFFFFFC;
  GL_SKIP_COMPONENTS2_NV = $FFFFFFFB;
  GL_SKIP_COMPONENTS1_NV = $FFFFFFFA;
  GL_RESTART_SUN = $00000001;
  GL_REPLACE_MIDDLE_SUN = $00000002;
  GL_REPLACE_OLDEST_SUN = $00000003;
  GL_FALSE = $00000000;
  GL_NO_ERROR = $00000000;
  GL_ZERO = $00000000;
  GL_NONE = $00000000;
  GL_NONE_OES = $00000000;
  GL_TRUE = $00000001;
  GL_ONE = $00000001;
  GL_INVALID_INDEX = $FFFFFFFF;
  GL_ALL_PIXELS_AMD = $FFFFFFFF;
  GL_TIMEOUT_IGNORED = $00000000;
  GL_TIMEOUT_IGNORED_APPLE = $00000000;
  GL_VERSION_ES_CL_1_0 = $00000001;
  GL_VERSION_ES_CM_1_1 = $00000001;
  GL_VERSION_ES_CL_1_1 = $00000001;
  GL_UUID_SIZE_EXT = $00000010;
  GL_LUID_SIZE_EXT = $00000008;
  GL_POINTS = $00000000;
  GL_LINES = $00000001;
  GL_LINE_LOOP = $00000002;
  GL_LINE_STRIP = $00000003;
  GL_TRIANGLES = $00000004;
  GL_TRIANGLE_STRIP = $00000005;
  GL_TRIANGLE_FAN = $00000006;
  GL_QUADS = $00000007;
  GL_QUADS_EXT = $00000007;
  GL_QUADS_OES = $00000007;
  GL_QUAD_STRIP = $00000008;
  GL_POLYGON = $00000009;
  GL_LINES_ADJACENCY = $0000000A;
  GL_LINES_ADJACENCY_ARB = $0000000A;
  GL_LINES_ADJACENCY_EXT = $0000000A;
  GL_LINES_ADJACENCY_OES = $0000000A;
  GL_LINE_STRIP_ADJACENCY = $0000000B;
  GL_LINE_STRIP_ADJACENCY_ARB = $0000000B;
  GL_LINE_STRIP_ADJACENCY_EXT = $0000000B;
  GL_LINE_STRIP_ADJACENCY_OES = $0000000B;
  GL_TRIANGLES_ADJACENCY = $0000000C;
  GL_TRIANGLES_ADJACENCY_ARB = $0000000C;
  GL_TRIANGLES_ADJACENCY_EXT = $0000000C;
  GL_TRIANGLES_ADJACENCY_OES = $0000000C;
  GL_TRIANGLE_STRIP_ADJACENCY = $0000000D;
  GL_TRIANGLE_STRIP_ADJACENCY_ARB = $0000000D;
  GL_TRIANGLE_STRIP_ADJACENCY_EXT = $0000000D;
  GL_TRIANGLE_STRIP_ADJACENCY_OES = $0000000D;
  GL_PATCHES = $0000000E;
  GL_PATCHES_EXT = $0000000E;
  GL_PATCHES_OES = $0000000E;
  GL_ACCUM = $00000100;
  GL_LOAD = $00000101;
  GL_RETURN = $00000102;
  GL_MULT = $00000103;
  GL_ADD = $00000104;
  GL_NEVER = $00000200;
  GL_LESS = $00000201;
  GL_EQUAL = $00000202;
  GL_LEQUAL = $00000203;
  GL_GREATER = $00000204;
  GL_NOTEQUAL = $00000205;
  GL_GEQUAL = $00000206;
  GL_ALWAYS = $00000207;
  GL_SRC_COLOR = $00000300;
  GL_ONE_MINUS_SRC_COLOR = $00000301;
  GL_SRC_ALPHA = $00000302;
  GL_ONE_MINUS_SRC_ALPHA = $00000303;
  GL_DST_ALPHA = $00000304;
  GL_ONE_MINUS_DST_ALPHA = $00000305;
  GL_DST_COLOR = $00000306;
  GL_ONE_MINUS_DST_COLOR = $00000307;
  GL_SRC_ALPHA_SATURATE = $00000308;
  GL_SRC_ALPHA_SATURATE_EXT = $00000308;
  GL_FRONT_LEFT = $00000400;
  GL_FRONT_RIGHT = $00000401;
  GL_BACK_LEFT = $00000402;
  GL_BACK_RIGHT = $00000403;
  GL_FRONT = $00000404;
  GL_BACK = $00000405;
  GL_LEFT = $00000406;
  GL_RIGHT = $00000407;
  GL_FRONT_AND_BACK = $00000408;
  GL_AUX0 = $00000409;
  GL_AUX1 = $0000040A;
  GL_AUX2 = $0000040B;
  GL_AUX3 = $0000040C;
  GL_INVALID_ENUM = $00000500;
  GL_INVALID_VALUE = $00000501;
  GL_INVALID_OPERATION = $00000502;
  GL_STACK_OVERFLOW = $00000503;
  GL_STACK_OVERFLOW_KHR = $00000503;
  GL_STACK_UNDERFLOW = $00000504;
  GL_STACK_UNDERFLOW_KHR = $00000504;
  GL_OUT_OF_MEMORY = $00000505;
  GL_INVALID_FRAMEBUFFER_OPERATION = $00000506;
  GL_INVALID_FRAMEBUFFER_OPERATION_EXT = $00000506;
  GL_INVALID_FRAMEBUFFER_OPERATION_OES = $00000506;
  GL_CONTEXT_LOST = $00000507;
  GL_CONTEXT_LOST_KHR = $00000507;
  GL_2D = $00000600;
  GL_3D = $00000601;
  GL_3D_COLOR = $00000602;
  GL_3D_COLOR_TEXTURE = $00000603;
  GL_4D_COLOR_TEXTURE = $00000604;
  GL_PASS_THROUGH_TOKEN = $00000700;
  GL_POINT_TOKEN = $00000701;
  GL_LINE_TOKEN = $00000702;
  GL_POLYGON_TOKEN = $00000703;
  GL_BITMAP_TOKEN = $00000704;
  GL_DRAW_PIXEL_TOKEN = $00000705;
  GL_COPY_PIXEL_TOKEN = $00000706;
  GL_LINE_RESET_TOKEN = $00000707;
  GL_EXP = $00000800;
  GL_EXP2 = $00000801;
  GL_CW = $00000900;
  GL_CCW = $00000901;
  GL_COEFF = $00000A00;
  GL_ORDER = $00000A01;
  GL_DOMAIN = $00000A02;
  GL_CURRENT_COLOR = $00000B00;
  GL_CURRENT_INDEX = $00000B01;
  GL_CURRENT_NORMAL = $00000B02;
  GL_CURRENT_TEXTURE_COORDS = $00000B03;
  GL_CURRENT_RASTER_COLOR = $00000B04;
  GL_CURRENT_RASTER_INDEX = $00000B05;
  GL_CURRENT_RASTER_TEXTURE_COORDS = $00000B06;
  GL_CURRENT_RASTER_POSITION = $00000B07;
  GL_CURRENT_RASTER_POSITION_VALID = $00000B08;
  GL_CURRENT_RASTER_DISTANCE = $00000B09;
  GL_POINT_SMOOTH = $00000B10;
  GL_POINT_SIZE = $00000B11;
  GL_POINT_SIZE_RANGE = $00000B12;
  GL_SMOOTH_POINT_SIZE_RANGE = GL_POINT_SIZE_RANGE;
  GL_POINT_SIZE_GRANULARITY = $00000B13;
  GL_SMOOTH_POINT_SIZE_GRANULARITY = GL_POINT_SIZE_GRANULARITY;
  GL_LINE_SMOOTH = $00000B20;
  GL_LINE_WIDTH = $00000B21;
  GL_LINE_WIDTH_RANGE = $00000B22;
  GL_SMOOTH_LINE_WIDTH_RANGE = GL_LINE_WIDTH_RANGE;
  GL_LINE_WIDTH_GRANULARITY = $00000B23;
  GL_SMOOTH_LINE_WIDTH_GRANULARITY = GL_LINE_WIDTH_GRANULARITY;
  GL_LINE_STIPPLE = $00000B24;
  GL_LINE_STIPPLE_PATTERN = $00000B25;
  GL_LINE_STIPPLE_REPEAT = $00000B26;
  GL_LIST_MODE = $00000B30;
  GL_MAX_LIST_NESTING = $00000B31;
  GL_LIST_BASE = $00000B32;
  GL_LIST_INDEX = $00000B33;
  GL_POLYGON_MODE = $00000B40;
  GL_POLYGON_MODE_NV = $00000B40;
  GL_POLYGON_SMOOTH = $00000B41;
  GL_POLYGON_STIPPLE = $00000B42;
  GL_EDGE_FLAG = $00000B43;
  GL_CULL_FACE = $00000B44;
  GL_CULL_FACE_MODE = $00000B45;
  GL_FRONT_FACE = $00000B46;
  GL_LIGHTING = $00000B50;
  GL_LIGHT_MODEL_LOCAL_VIEWER = $00000B51;
  GL_LIGHT_MODEL_TWO_SIDE = $00000B52;
  GL_LIGHT_MODEL_AMBIENT = $00000B53;
  GL_SHADE_MODEL = $00000B54;
  GL_COLOR_MATERIAL_FACE = $00000B55;
  GL_COLOR_MATERIAL_PARAMETER = $00000B56;
  GL_COLOR_MATERIAL = $00000B57;
  GL_FOG = $00000B60;
  GL_FOG_INDEX = $00000B61;
  GL_FOG_DENSITY = $00000B62;
  GL_FOG_START = $00000B63;
  GL_FOG_END = $00000B64;
  GL_FOG_MODE = $00000B65;
  GL_FOG_COLOR = $00000B66;
  GL_DEPTH_RANGE = $00000B70;
  GL_DEPTH_TEST = $00000B71;
  GL_DEPTH_WRITEMASK = $00000B72;
  GL_DEPTH_CLEAR_VALUE = $00000B73;
  GL_DEPTH_FUNC = $00000B74;
  GL_ACCUM_CLEAR_VALUE = $00000B80;
  GL_STENCIL_TEST = $00000B90;
  GL_STENCIL_CLEAR_VALUE = $00000B91;
  GL_STENCIL_FUNC = $00000B92;
  GL_STENCIL_VALUE_MASK = $00000B93;
  GL_STENCIL_FAIL = $00000B94;
  GL_STENCIL_PASS_DEPTH_FAIL = $00000B95;
  GL_STENCIL_PASS_DEPTH_PASS = $00000B96;
  GL_STENCIL_REF = $00000B97;
  GL_STENCIL_WRITEMASK = $00000B98;
  GL_MATRIX_MODE = $00000BA0;
  GL_NORMALIZE = $00000BA1;
  GL_VIEWPORT = $00000BA2;
  GL_MODELVIEW_STACK_DEPTH = $00000BA3;
  GL_MODELVIEW0_STACK_DEPTH_EXT = $00000BA3;
  GL_PATH_MODELVIEW_STACK_DEPTH_NV = $00000BA3;
  GL_PROJECTION_STACK_DEPTH = $00000BA4;
  GL_PATH_PROJECTION_STACK_DEPTH_NV = $00000BA4;
  GL_TEXTURE_STACK_DEPTH = $00000BA5;
  GL_MODELVIEW_MATRIX = $00000BA6;
  GL_MODELVIEW0_MATRIX_EXT = $00000BA6;
  GL_PATH_MODELVIEW_MATRIX_NV = $00000BA6;
  GL_PROJECTION_MATRIX = $00000BA7;
  GL_PATH_PROJECTION_MATRIX_NV = $00000BA7;
  GL_TEXTURE_MATRIX = $00000BA8;
  GL_ATTRIB_STACK_DEPTH = $00000BB0;
  GL_CLIENT_ATTRIB_STACK_DEPTH = $00000BB1;
  GL_ALPHA_TEST = $00000BC0;
  GL_ALPHA_TEST_QCOM = $00000BC0;
  GL_ALPHA_TEST_FUNC = $00000BC1;
  GL_ALPHA_TEST_FUNC_QCOM = $00000BC1;
  GL_ALPHA_TEST_REF = $00000BC2;
  GL_ALPHA_TEST_REF_QCOM = $00000BC2;
  GL_DITHER = $00000BD0;
  GL_BLEND_DST = $00000BE0;
  GL_BLEND_SRC = $00000BE1;
  GL_BLEND = $00000BE2;
  GL_LOGIC_OP_MODE = $00000BF0;
  GL_INDEX_LOGIC_OP = $00000BF1;
  GL_LOGIC_OP = $00000BF1;
  GL_COLOR_LOGIC_OP = $00000BF2;
  GL_AUX_BUFFERS = $00000C00;
  GL_DRAW_BUFFER = $00000C01;
  GL_DRAW_BUFFER_EXT = $00000C01;
  GL_READ_BUFFER = $00000C02;
  GL_READ_BUFFER_EXT = $00000C02;
  GL_READ_BUFFER_NV = $00000C02;
  GL_SCISSOR_BOX = $00000C10;
  GL_SCISSOR_TEST = $00000C11;
  GL_INDEX_CLEAR_VALUE = $00000C20;
  GL_INDEX_WRITEMASK = $00000C21;
  GL_COLOR_CLEAR_VALUE = $00000C22;
  GL_COLOR_WRITEMASK = $00000C23;
  GL_INDEX_MODE = $00000C30;
  GL_RGBA_MODE = $00000C31;
  GL_DOUBLEBUFFER = $00000C32;
  GL_STEREO = $00000C33;
  GL_RENDER_MODE = $00000C40;
  GL_PERSPECTIVE_CORRECTION_HINT = $00000C50;
  GL_POINT_SMOOTH_HINT = $00000C51;
  GL_LINE_SMOOTH_HINT = $00000C52;
  GL_POLYGON_SMOOTH_HINT = $00000C53;
  GL_FOG_HINT = $00000C54;
  GL_TEXTURE_GEN_S = $00000C60;
  GL_TEXTURE_GEN_T = $00000C61;
  GL_TEXTURE_GEN_R = $00000C62;
  GL_TEXTURE_GEN_Q = $00000C63;
  GL_PIXEL_MAP_I_TO_I = $00000C70;
  GL_PIXEL_MAP_S_TO_S = $00000C71;
  GL_PIXEL_MAP_I_TO_R = $00000C72;
  GL_PIXEL_MAP_I_TO_G = $00000C73;
  GL_PIXEL_MAP_I_TO_B = $00000C74;
  GL_PIXEL_MAP_I_TO_A = $00000C75;
  GL_PIXEL_MAP_R_TO_R = $00000C76;
  GL_PIXEL_MAP_G_TO_G = $00000C77;
  GL_PIXEL_MAP_B_TO_B = $00000C78;
  GL_PIXEL_MAP_A_TO_A = $00000C79;
  GL_PIXEL_MAP_I_TO_I_SIZE = $00000CB0;
  GL_PIXEL_MAP_S_TO_S_SIZE = $00000CB1;
  GL_PIXEL_MAP_I_TO_R_SIZE = $00000CB2;
  GL_PIXEL_MAP_I_TO_G_SIZE = $00000CB3;
  GL_PIXEL_MAP_I_TO_B_SIZE = $00000CB4;
  GL_PIXEL_MAP_I_TO_A_SIZE = $00000CB5;
  GL_PIXEL_MAP_R_TO_R_SIZE = $00000CB6;
  GL_PIXEL_MAP_G_TO_G_SIZE = $00000CB7;
  GL_PIXEL_MAP_B_TO_B_SIZE = $00000CB8;
  GL_PIXEL_MAP_A_TO_A_SIZE = $00000CB9;
  GL_UNPACK_SWAP_BYTES = $00000CF0;
  GL_UNPACK_LSB_FIRST = $00000CF1;
  GL_UNPACK_ROW_LENGTH = $00000CF2;
  GL_UNPACK_ROW_LENGTH_EXT = $00000CF2;
  GL_UNPACK_SKIP_ROWS = $00000CF3;
  GL_UNPACK_SKIP_ROWS_EXT = $00000CF3;
  GL_UNPACK_SKIP_PIXELS = $00000CF4;
  GL_UNPACK_SKIP_PIXELS_EXT = $00000CF4;
  GL_UNPACK_ALIGNMENT = $00000CF5;
  GL_PACK_SWAP_BYTES = $00000D00;
  GL_PACK_LSB_FIRST = $00000D01;
  GL_PACK_ROW_LENGTH = $00000D02;
  GL_PACK_ROW_LENGTH_NV = $00000D02;
  GL_PACK_SKIP_ROWS = $00000D03;
  GL_PACK_SKIP_ROWS_NV = $00000D03;
  GL_PACK_SKIP_PIXELS = $00000D04;
  GL_PACK_SKIP_PIXELS_NV = $00000D04;
  GL_PACK_ALIGNMENT = $00000D05;
  GL_MAP_COLOR = $00000D10;
  GL_MAP_STENCIL = $00000D11;
  GL_INDEX_SHIFT = $00000D12;
  GL_INDEX_OFFSET = $00000D13;
  GL_RED_SCALE = $00000D14;
  GL_RED_BIAS = $00000D15;
  GL_ZOOM_X = $00000D16;
  GL_ZOOM_Y = $00000D17;
  GL_GREEN_SCALE = $00000D18;
  GL_GREEN_BIAS = $00000D19;
  GL_BLUE_SCALE = $00000D1A;
  GL_BLUE_BIAS = $00000D1B;
  GL_ALPHA_SCALE = $00000D1C;
  GL_ALPHA_BIAS = $00000D1D;
  GL_DEPTH_SCALE = $00000D1E;
  GL_DEPTH_BIAS = $00000D1F;
  GL_MAX_EVAL_ORDER = $00000D30;
  GL_MAX_LIGHTS = $00000D31;
  GL_MAX_CLIP_PLANES = $00000D32;
  GL_MAX_CLIP_PLANES_IMG = $00000D32;
  GL_MAX_CLIP_DISTANCES = GL_MAX_CLIP_PLANES;
  GL_MAX_CLIP_DISTANCES_EXT = GL_MAX_CLIP_PLANES;
  GL_MAX_CLIP_DISTANCES_APPLE = $00000D32;
  GL_MAX_TEXTURE_SIZE = $00000D33;
  GL_MAX_PIXEL_MAP_TABLE = $00000D34;
  GL_MAX_ATTRIB_STACK_DEPTH = $00000D35;
  GL_MAX_MODELVIEW_STACK_DEPTH = $00000D36;
  GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = $00000D36;
  GL_MAX_NAME_STACK_DEPTH = $00000D37;
  GL_MAX_PROJECTION_STACK_DEPTH = $00000D38;
  GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = $00000D38;
  GL_MAX_TEXTURE_STACK_DEPTH = $00000D39;
  GL_MAX_VIEWPORT_DIMS = $00000D3A;
  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = $00000D3B;
  GL_SUBPIXEL_BITS = $00000D50;
  GL_INDEX_BITS = $00000D51;
  GL_RED_BITS = $00000D52;
  GL_GREEN_BITS = $00000D53;
  GL_BLUE_BITS = $00000D54;
  GL_ALPHA_BITS = $00000D55;
  GL_DEPTH_BITS = $00000D56;
  GL_STENCIL_BITS = $00000D57;
  GL_ACCUM_RED_BITS = $00000D58;
  GL_ACCUM_GREEN_BITS = $00000D59;
  GL_ACCUM_BLUE_BITS = $00000D5A;
  GL_ACCUM_ALPHA_BITS = $00000D5B;
  GL_NAME_STACK_DEPTH = $00000D70;
  GL_AUTO_NORMAL = $00000D80;
  GL_MAP1_COLOR_4 = $00000D90;
  GL_MAP1_INDEX = $00000D91;
  GL_MAP1_NORMAL = $00000D92;
  GL_MAP1_TEXTURE_COORD_1 = $00000D93;
  GL_MAP1_TEXTURE_COORD_2 = $00000D94;
  GL_MAP1_TEXTURE_COORD_3 = $00000D95;
  GL_MAP1_TEXTURE_COORD_4 = $00000D96;
  GL_MAP1_VERTEX_3 = $00000D97;
  GL_MAP1_VERTEX_4 = $00000D98;
  GL_MAP2_COLOR_4 = $00000DB0;
  GL_MAP2_INDEX = $00000DB1;
  GL_MAP2_NORMAL = $00000DB2;
  GL_MAP2_TEXTURE_COORD_1 = $00000DB3;
  GL_MAP2_TEXTURE_COORD_2 = $00000DB4;
  GL_MAP2_TEXTURE_COORD_3 = $00000DB5;
  GL_MAP2_TEXTURE_COORD_4 = $00000DB6;
  GL_MAP2_VERTEX_3 = $00000DB7;
  GL_MAP2_VERTEX_4 = $00000DB8;
  GL_MAP1_GRID_DOMAIN = $00000DD0;
  GL_MAP1_GRID_SEGMENTS = $00000DD1;
  GL_MAP2_GRID_DOMAIN = $00000DD2;
  GL_MAP2_GRID_SEGMENTS = $00000DD3;
  GL_TEXTURE_1D = $00000DE0;
  GL_TEXTURE_2D = $00000DE1;
  GL_FEEDBACK_BUFFER_POINTER = $00000DF0;
  GL_FEEDBACK_BUFFER_SIZE = $00000DF1;
  GL_FEEDBACK_BUFFER_TYPE = $00000DF2;
  GL_SELECTION_BUFFER_POINTER = $00000DF3;
  GL_SELECTION_BUFFER_SIZE = $00000DF4;
  GL_TEXTURE_WIDTH = $00001000;
  GL_TEXTURE_HEIGHT = $00001001;
  GL_TEXTURE_INTERNAL_FORMAT = $00001003;
  GL_TEXTURE_COMPONENTS = $00001003;
  GL_TEXTURE_BORDER_COLOR = $00001004;
  GL_TEXTURE_BORDER_COLOR_EXT = $00001004;
  GL_TEXTURE_BORDER_COLOR_NV = $00001004;
  GL_TEXTURE_BORDER_COLOR_OES = $00001004;
  GL_TEXTURE_BORDER = $00001005;
  GL_TEXTURE_TARGET = $00001006;
  GL_DONT_CARE = $00001100;
  GL_FASTEST = $00001101;
  GL_NICEST = $00001102;
  GL_AMBIENT = $00001200;
  GL_DIFFUSE = $00001201;
  GL_SPECULAR = $00001202;
  GL_POSITION = $00001203;
  GL_SPOT_DIRECTION = $00001204;
  GL_SPOT_EXPONENT = $00001205;
  GL_SPOT_CUTOFF = $00001206;
  GL_CONSTANT_ATTENUATION = $00001207;
  GL_LINEAR_ATTENUATION = $00001208;
  GL_QUADRATIC_ATTENUATION = $00001209;
  GL_COMPILE = $00001300;
  GL_COMPILE_AND_EXECUTE = $00001301;
  GL_BYTE = $00001400;
  GL_UNSIGNED_BYTE = $00001401;
  GL_SHORT = $00001402;
  GL_UNSIGNED_SHORT = $00001403;
  GL_INT = $00001404;
  GL_UNSIGNED_INT = $00001405;
  GL_FLOAT = $00001406;
  GL_2_BYTES = $00001407;
  GL_2_BYTES_NV = $00001407;
  GL_3_BYTES = $00001408;
  GL_3_BYTES_NV = $00001408;
  GL_4_BYTES = $00001409;
  GL_4_BYTES_NV = $00001409;
  GL_DOUBLE = $0000140A;
  GL_DOUBLE_EXT = $0000140A;
  GL_HALF_FLOAT = $0000140B;
  GL_HALF_FLOAT_ARB = $0000140B;
  GL_HALF_FLOAT_NV = $0000140B;
  GL_HALF_APPLE = $0000140B;
  GL_FIXED = $0000140C;
  GL_FIXED_OES = $0000140C;
  GL_INT64_ARB = $0000140E;
  GL_INT64_NV = $0000140E;
  GL_UNSIGNED_INT64_ARB = $0000140F;
  GL_UNSIGNED_INT64_NV = $0000140F;
  GL_CLEAR = $00001500;
  GL_AND = $00001501;
  GL_AND_REVERSE = $00001502;
  GL_COPY = $00001503;
  GL_AND_INVERTED = $00001504;
  GL_NOOP = $00001505;
  GL_XOR = $00001506;
  GL_XOR_NV = $00001506;
  GL_OR = $00001507;
  GL_NOR = $00001508;
  GL_EQUIV = $00001509;
  GL_INVERT = $0000150A;
  GL_OR_REVERSE = $0000150B;
  GL_COPY_INVERTED = $0000150C;
  GL_OR_INVERTED = $0000150D;
  GL_NAND = $0000150E;
  GL_SET = $0000150F;
  GL_EMISSION = $00001600;
  GL_SHININESS = $00001601;
  GL_AMBIENT_AND_DIFFUSE = $00001602;
  GL_COLOR_INDEXES = $00001603;
  GL_MODELVIEW = $00001700;
  GL_MODELVIEW0_ARB = $00001700;
  GL_MODELVIEW0_EXT = $00001700;
  GL_PATH_MODELVIEW_NV = $00001700;
  GL_PROJECTION = $00001701;
  GL_PATH_PROJECTION_NV = $00001701;
  GL_TEXTURE = $00001702;
  GL_COLOR = $00001800;
  GL_COLOR_EXT = $00001800;
  GL_DEPTH = $00001801;
  GL_DEPTH_EXT = $00001801;
  GL_STENCIL = $00001802;
  GL_STENCIL_EXT = $00001802;
  GL_COLOR_INDEX = $00001900;
  GL_STENCIL_INDEX = $00001901;
  GL_STENCIL_INDEX_OES = $00001901;
  GL_DEPTH_COMPONENT = $00001902;
  GL_RED = $00001903;
  GL_RED_EXT = $00001903;
  GL_RED_NV = $00001903;
  GL_GREEN = $00001904;
  GL_GREEN_NV = $00001904;
  GL_BLUE = $00001905;
  GL_BLUE_NV = $00001905;
  GL_ALPHA = $00001906;
  GL_RGB = $00001907;
  GL_RGBA = $00001908;
  GL_LUMINANCE = $00001909;
  GL_LUMINANCE_ALPHA = $0000190A;
  GL_BITMAP = $00001A00;
  GL_POINT = $00001B00;
  GL_POINT_NV = $00001B00;
  GL_LINE = $00001B01;
  GL_LINE_NV = $00001B01;
  GL_FILL = $00001B02;
  GL_FILL_NV = $00001B02;
  GL_RENDER = $00001C00;
  GL_FEEDBACK = $00001C01;
  GL_SELECT = $00001C02;
  GL_FLAT = $00001D00;
  GL_SMOOTH = $00001D01;
  GL_KEEP = $00001E00;
  GL_REPLACE = $00001E01;
  GL_INCR = $00001E02;
  GL_DECR = $00001E03;
  GL_VENDOR = $00001F00;
  GL_RENDERER = $00001F01;
  GL_VERSION = $00001F02;
  GL_EXTENSIONS = $00001F03;
  GL_S = $00002000;
  GL_T = $00002001;
  GL_R = $00002002;
  GL_Q = $00002003;
  GL_MODULATE = $00002100;
  GL_DECAL = $00002101;
  GL_TEXTURE_ENV_MODE = $00002200;
  GL_TEXTURE_ENV_COLOR = $00002201;
  GL_TEXTURE_ENV = $00002300;
  GL_EYE_LINEAR = $00002400;
  GL_EYE_LINEAR_NV = $00002400;
  GL_OBJECT_LINEAR = $00002401;
  GL_OBJECT_LINEAR_NV = $00002401;
  GL_SPHERE_MAP = $00002402;
  GL_TEXTURE_GEN_MODE = $00002500;
  GL_TEXTURE_GEN_MODE_OES = $00002500;
  GL_OBJECT_PLANE = $00002501;
  GL_EYE_PLANE = $00002502;
  GL_NEAREST = $00002600;
  GL_LINEAR = $00002601;
  GL_NEAREST_MIPMAP_NEAREST = $00002700;
  GL_LINEAR_MIPMAP_NEAREST = $00002701;
  GL_NEAREST_MIPMAP_LINEAR = $00002702;
  GL_LINEAR_MIPMAP_LINEAR = $00002703;
  GL_TEXTURE_MAG_FILTER = $00002800;
  GL_TEXTURE_MIN_FILTER = $00002801;
  GL_TEXTURE_WRAP_S = $00002802;
  GL_TEXTURE_WRAP_T = $00002803;
  GL_CLAMP = $00002900;
  GL_REPEAT = $00002901;
  GL_POLYGON_OFFSET_UNITS = $00002A00;
  GL_POLYGON_OFFSET_POINT = $00002A01;
  GL_POLYGON_OFFSET_POINT_NV = $00002A01;
  GL_POLYGON_OFFSET_LINE = $00002A02;
  GL_POLYGON_OFFSET_LINE_NV = $00002A02;
  GL_R3_G3_B2 = $00002A10;
  GL_V2F = $00002A20;
  GL_V3F = $00002A21;
  GL_C4UB_V2F = $00002A22;
  GL_C4UB_V3F = $00002A23;
  GL_C3F_V3F = $00002A24;
  GL_N3F_V3F = $00002A25;
  GL_C4F_N3F_V3F = $00002A26;
  GL_T2F_V3F = $00002A27;
  GL_T4F_V4F = $00002A28;
  GL_T2F_C4UB_V3F = $00002A29;
  GL_T2F_C3F_V3F = $00002A2A;
  GL_T2F_N3F_V3F = $00002A2B;
  GL_T2F_C4F_N3F_V3F = $00002A2C;
  GL_T4F_C4F_N3F_V4F = $00002A2D;
  GL_CLIP_PLANE0 = $00003000;
  GL_CLIP_PLANE0_IMG = $00003000;
  GL_CLIP_DISTANCE0 = GL_CLIP_PLANE0;
  GL_CLIP_DISTANCE0_EXT = GL_CLIP_PLANE0;
  GL_CLIP_DISTANCE0_APPLE = $00003000;
  GL_CLIP_PLANE1 = $00003001;
  GL_CLIP_PLANE1_IMG = $00003001;
  GL_CLIP_DISTANCE1 = GL_CLIP_PLANE1;
  GL_CLIP_DISTANCE1_EXT = GL_CLIP_PLANE1;
  GL_CLIP_DISTANCE1_APPLE = $00003001;
  GL_CLIP_PLANE2 = $00003002;
  GL_CLIP_PLANE2_IMG = $00003002;
  GL_CLIP_DISTANCE2 = GL_CLIP_PLANE2;
  GL_CLIP_DISTANCE2_EXT = GL_CLIP_PLANE2;
  GL_CLIP_DISTANCE2_APPLE = $00003002;
  GL_CLIP_PLANE3 = $00003003;
  GL_CLIP_PLANE3_IMG = $00003003;
  GL_CLIP_DISTANCE3 = GL_CLIP_PLANE3;
  GL_CLIP_DISTANCE3_EXT = GL_CLIP_PLANE3;
  GL_CLIP_DISTANCE3_APPLE = $00003003;
  GL_CLIP_PLANE4 = $00003004;
  GL_CLIP_PLANE4_IMG = $00003004;
  GL_CLIP_DISTANCE4 = GL_CLIP_PLANE4;
  GL_CLIP_DISTANCE4_EXT = GL_CLIP_PLANE4;
  GL_CLIP_DISTANCE4_APPLE = $00003004;
  GL_CLIP_PLANE5 = $00003005;
  GL_CLIP_PLANE5_IMG = $00003005;
  GL_CLIP_DISTANCE5 = GL_CLIP_PLANE5;
  GL_CLIP_DISTANCE5_EXT = GL_CLIP_PLANE5;
  GL_CLIP_DISTANCE5_APPLE = $00003005;
  GL_CLIP_DISTANCE6 = $00003006;
  GL_CLIP_DISTANCE6_EXT = GL_CLIP_DISTANCE6;
  GL_CLIP_DISTANCE6_APPLE = $00003006;
  GL_CLIP_DISTANCE7 = $00003007;
  GL_CLIP_DISTANCE7_EXT = GL_CLIP_DISTANCE7;
  GL_CLIP_DISTANCE7_APPLE = $00003007;
  GL_LIGHT0 = $00004000;
  GL_LIGHT1 = $00004001;
  GL_LIGHT2 = $00004002;
  GL_LIGHT3 = $00004003;
  GL_LIGHT4 = $00004004;
  GL_LIGHT5 = $00004005;
  GL_LIGHT6 = $00004006;
  GL_LIGHT7 = $00004007;
  GL_ABGR_EXT = $00008000;
  GL_CONSTANT_COLOR = $00008001;
  GL_CONSTANT_COLOR_EXT = $00008001;
  GL_ONE_MINUS_CONSTANT_COLOR = $00008002;
  GL_ONE_MINUS_CONSTANT_COLOR_EXT = $00008002;
  GL_CONSTANT_ALPHA = $00008003;
  GL_CONSTANT_ALPHA_EXT = $00008003;
  GL_ONE_MINUS_CONSTANT_ALPHA = $00008004;
  GL_ONE_MINUS_CONSTANT_ALPHA_EXT = $00008004;
  GL_BLEND_COLOR = $00008005;
  GL_BLEND_COLOR_EXT = $00008005;
  GL_FUNC_ADD = $00008006;
  GL_FUNC_ADD_EXT = $00008006;
  GL_FUNC_ADD_OES = $00008006;
  GL_MIN = $00008007;
  GL_MIN_EXT = $00008007;
  GL_MAX = $00008008;
  GL_MAX_EXT = $00008008;
  GL_BLEND_EQUATION = $00008009;
  GL_BLEND_EQUATION_EXT = $00008009;
  GL_BLEND_EQUATION_OES = $00008009;
  GL_BLEND_EQUATION_RGB = $00008009;
  GL_BLEND_EQUATION_RGB_EXT = $00008009;
  GL_BLEND_EQUATION_RGB_OES = $00008009;
  GL_FUNC_SUBTRACT = $0000800A;
  GL_FUNC_SUBTRACT_EXT = $0000800A;
  GL_FUNC_SUBTRACT_OES = $0000800A;
  GL_FUNC_REVERSE_SUBTRACT = $0000800B;
  GL_FUNC_REVERSE_SUBTRACT_EXT = $0000800B;
  GL_FUNC_REVERSE_SUBTRACT_OES = $0000800B;
  GL_CMYK_EXT = $0000800C;
  GL_CMYKA_EXT = $0000800D;
  GL_PACK_CMYK_HINT_EXT = $0000800E;
  GL_UNPACK_CMYK_HINT_EXT = $0000800F;
  GL_CONVOLUTION_1D = $00008010;
  GL_CONVOLUTION_1D_EXT = $00008010;
  GL_CONVOLUTION_2D = $00008011;
  GL_CONVOLUTION_2D_EXT = $00008011;
  GL_SEPARABLE_2D = $00008012;
  GL_SEPARABLE_2D_EXT = $00008012;
  GL_CONVOLUTION_BORDER_MODE = $00008013;
  GL_CONVOLUTION_BORDER_MODE_EXT = $00008013;
  GL_CONVOLUTION_FILTER_SCALE = $00008014;
  GL_CONVOLUTION_FILTER_SCALE_EXT = $00008014;
  GL_CONVOLUTION_FILTER_BIAS = $00008015;
  GL_CONVOLUTION_FILTER_BIAS_EXT = $00008015;
  GL_REDUCE = $00008016;
  GL_REDUCE_EXT = $00008016;
  GL_CONVOLUTION_FORMAT = $00008017;
  GL_CONVOLUTION_FORMAT_EXT = $00008017;
  GL_CONVOLUTION_WIDTH = $00008018;
  GL_CONVOLUTION_WIDTH_EXT = $00008018;
  GL_CONVOLUTION_HEIGHT = $00008019;
  GL_CONVOLUTION_HEIGHT_EXT = $00008019;
  GL_MAX_CONVOLUTION_WIDTH = $0000801A;
  GL_MAX_CONVOLUTION_WIDTH_EXT = $0000801A;
  GL_MAX_CONVOLUTION_HEIGHT = $0000801B;
  GL_MAX_CONVOLUTION_HEIGHT_EXT = $0000801B;
  GL_POST_CONVOLUTION_RED_SCALE = $0000801C;
  GL_POST_CONVOLUTION_RED_SCALE_EXT = $0000801C;
  GL_POST_CONVOLUTION_GREEN_SCALE = $0000801D;
  GL_POST_CONVOLUTION_GREEN_SCALE_EXT = $0000801D;
  GL_POST_CONVOLUTION_BLUE_SCALE = $0000801E;
  GL_POST_CONVOLUTION_BLUE_SCALE_EXT = $0000801E;
  GL_POST_CONVOLUTION_ALPHA_SCALE = $0000801F;
  GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = $0000801F;
  GL_POST_CONVOLUTION_RED_BIAS = $00008020;
  GL_POST_CONVOLUTION_RED_BIAS_EXT = $00008020;
  GL_POST_CONVOLUTION_GREEN_BIAS = $00008021;
  GL_POST_CONVOLUTION_GREEN_BIAS_EXT = $00008021;
  GL_POST_CONVOLUTION_BLUE_BIAS = $00008022;
  GL_POST_CONVOLUTION_BLUE_BIAS_EXT = $00008022;
  GL_POST_CONVOLUTION_ALPHA_BIAS = $00008023;
  GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = $00008023;
  GL_HISTOGRAM = $00008024;
  GL_HISTOGRAM_EXT = $00008024;
  GL_PROXY_HISTOGRAM = $00008025;
  GL_PROXY_HISTOGRAM_EXT = $00008025;
  GL_HISTOGRAM_WIDTH = $00008026;
  GL_HISTOGRAM_WIDTH_EXT = $00008026;
  GL_HISTOGRAM_FORMAT = $00008027;
  GL_HISTOGRAM_FORMAT_EXT = $00008027;
  GL_HISTOGRAM_RED_SIZE = $00008028;
  GL_HISTOGRAM_RED_SIZE_EXT = $00008028;
  GL_HISTOGRAM_GREEN_SIZE = $00008029;
  GL_HISTOGRAM_GREEN_SIZE_EXT = $00008029;
  GL_HISTOGRAM_BLUE_SIZE = $0000802A;
  GL_HISTOGRAM_BLUE_SIZE_EXT = $0000802A;
  GL_HISTOGRAM_ALPHA_SIZE = $0000802B;
  GL_HISTOGRAM_ALPHA_SIZE_EXT = $0000802B;
  GL_HISTOGRAM_LUMINANCE_SIZE = $0000802C;
  GL_HISTOGRAM_LUMINANCE_SIZE_EXT = $0000802C;
  GL_HISTOGRAM_SINK = $0000802D;
  GL_HISTOGRAM_SINK_EXT = $0000802D;
  GL_MINMAX = $0000802E;
  GL_MINMAX_EXT = $0000802E;
  GL_MINMAX_FORMAT = $0000802F;
  GL_MINMAX_FORMAT_EXT = $0000802F;
  GL_MINMAX_SINK = $00008030;
  GL_MINMAX_SINK_EXT = $00008030;
  GL_TABLE_TOO_LARGE_EXT = $00008031;
  GL_TABLE_TOO_LARGE = $00008031;
  GL_UNSIGNED_BYTE_3_3_2 = $00008032;
  GL_UNSIGNED_BYTE_3_3_2_EXT = $00008032;
  GL_UNSIGNED_SHORT_4_4_4_4 = $00008033;
  GL_UNSIGNED_SHORT_4_4_4_4_EXT = $00008033;
  GL_UNSIGNED_SHORT_5_5_5_1 = $00008034;
  GL_UNSIGNED_SHORT_5_5_5_1_EXT = $00008034;
  GL_UNSIGNED_INT_8_8_8_8 = $00008035;
  GL_UNSIGNED_INT_8_8_8_8_EXT = $00008035;
  GL_UNSIGNED_INT_10_10_10_2 = $00008036;
  GL_UNSIGNED_INT_10_10_10_2_EXT = $00008036;
  GL_POLYGON_OFFSET_EXT = $00008037;
  GL_POLYGON_OFFSET_FILL = $00008037;
  GL_POLYGON_OFFSET_FACTOR = $00008038;
  GL_POLYGON_OFFSET_FACTOR_EXT = $00008038;
  GL_POLYGON_OFFSET_BIAS_EXT = $00008039;
  GL_RESCALE_NORMAL = $0000803A;
  GL_RESCALE_NORMAL_EXT = $0000803A;
  GL_ALPHA4 = $0000803B;
  GL_ALPHA4_EXT = $0000803B;
  GL_ALPHA8 = $0000803C;
  GL_ALPHA8_EXT = $0000803C;
  GL_ALPHA8_OES = $0000803C;
  GL_ALPHA12 = $0000803D;
  GL_ALPHA12_EXT = $0000803D;
  GL_ALPHA16 = $0000803E;
  GL_ALPHA16_EXT = $0000803E;
  GL_LUMINANCE4 = $0000803F;
  GL_LUMINANCE4_EXT = $0000803F;
  GL_LUMINANCE8 = $00008040;
  GL_LUMINANCE8_EXT = $00008040;
  GL_LUMINANCE8_OES = $00008040;
  GL_LUMINANCE12 = $00008041;
  GL_LUMINANCE12_EXT = $00008041;
  GL_LUMINANCE16 = $00008042;
  GL_LUMINANCE16_EXT = $00008042;
  GL_LUMINANCE4_ALPHA4 = $00008043;
  GL_LUMINANCE4_ALPHA4_EXT = $00008043;
  GL_LUMINANCE4_ALPHA4_OES = $00008043;
  GL_LUMINANCE6_ALPHA2 = $00008044;
  GL_LUMINANCE6_ALPHA2_EXT = $00008044;
  GL_LUMINANCE8_ALPHA8 = $00008045;
  GL_LUMINANCE8_ALPHA8_EXT = $00008045;
  GL_LUMINANCE8_ALPHA8_OES = $00008045;
  GL_LUMINANCE12_ALPHA4 = $00008046;
  GL_LUMINANCE12_ALPHA4_EXT = $00008046;
  GL_LUMINANCE12_ALPHA12 = $00008047;
  GL_LUMINANCE12_ALPHA12_EXT = $00008047;
  GL_LUMINANCE16_ALPHA16 = $00008048;
  GL_LUMINANCE16_ALPHA16_EXT = $00008048;
  GL_INTENSITY = $00008049;
  GL_INTENSITY_EXT = $00008049;
  GL_INTENSITY4 = $0000804A;
  GL_INTENSITY4_EXT = $0000804A;
  GL_INTENSITY8 = $0000804B;
  GL_INTENSITY8_EXT = $0000804B;
  GL_INTENSITY12 = $0000804C;
  GL_INTENSITY12_EXT = $0000804C;
  GL_INTENSITY16 = $0000804D;
  GL_INTENSITY16_EXT = $0000804D;
  GL_RGB2_EXT = $0000804E;
  GL_RGB4 = $0000804F;
  GL_RGB4_EXT = $0000804F;
  GL_RGB5 = $00008050;
  GL_RGB5_EXT = $00008050;
  GL_RGB8 = $00008051;
  GL_RGB8_EXT = $00008051;
  GL_RGB8_OES = $00008051;
  GL_RGB10 = $00008052;
  GL_RGB10_EXT = $00008052;
  GL_RGB12 = $00008053;
  GL_RGB12_EXT = $00008053;
  GL_RGB16 = $00008054;
  GL_RGB16_EXT = $00008054;
  GL_RGBA2 = $00008055;
  GL_RGBA2_EXT = $00008055;
  GL_RGBA4 = $00008056;
  GL_RGBA4_EXT = $00008056;
  GL_RGBA4_OES = $00008056;
  GL_RGB5_A1 = $00008057;
  GL_RGB5_A1_EXT = $00008057;
  GL_RGB5_A1_OES = $00008057;
  GL_RGBA8 = $00008058;
  GL_RGBA8_EXT = $00008058;
  GL_RGBA8_OES = $00008058;
  GL_RGB10_A2 = $00008059;
  GL_RGB10_A2_EXT = $00008059;
  GL_RGBA12 = $0000805A;
  GL_RGBA12_EXT = $0000805A;
  GL_RGBA16 = $0000805B;
  GL_RGBA16_EXT = $0000805B;
  GL_TEXTURE_RED_SIZE = $0000805C;
  GL_TEXTURE_RED_SIZE_EXT = $0000805C;
  GL_TEXTURE_GREEN_SIZE = $0000805D;
  GL_TEXTURE_GREEN_SIZE_EXT = $0000805D;
  GL_TEXTURE_BLUE_SIZE = $0000805E;
  GL_TEXTURE_BLUE_SIZE_EXT = $0000805E;
  GL_TEXTURE_ALPHA_SIZE = $0000805F;
  GL_TEXTURE_ALPHA_SIZE_EXT = $0000805F;
  GL_TEXTURE_LUMINANCE_SIZE = $00008060;
  GL_TEXTURE_LUMINANCE_SIZE_EXT = $00008060;
  GL_TEXTURE_INTENSITY_SIZE = $00008061;
  GL_TEXTURE_INTENSITY_SIZE_EXT = $00008061;
  GL_REPLACE_EXT = $00008062;
  GL_PROXY_TEXTURE_1D = $00008063;
  GL_PROXY_TEXTURE_1D_EXT = $00008063;
  GL_PROXY_TEXTURE_2D = $00008064;
  GL_PROXY_TEXTURE_2D_EXT = $00008064;
  GL_TEXTURE_TOO_LARGE_EXT = $00008065;
  GL_TEXTURE_PRIORITY = $00008066;
  GL_TEXTURE_PRIORITY_EXT = $00008066;
  GL_TEXTURE_RESIDENT = $00008067;
  GL_TEXTURE_RESIDENT_EXT = $00008067;
  GL_TEXTURE_1D_BINDING_EXT = $00008068;
  GL_TEXTURE_BINDING_1D = $00008068;
  GL_TEXTURE_2D_BINDING_EXT = $00008069;
  GL_TEXTURE_BINDING_2D = $00008069;
  GL_TEXTURE_3D_BINDING_EXT = $0000806A;
  GL_TEXTURE_3D_BINDING_OES = $0000806A;
  GL_TEXTURE_BINDING_3D = $0000806A;
  GL_TEXTURE_BINDING_3D_OES = $0000806A;
  GL_PACK_SKIP_IMAGES = $0000806B;
  GL_PACK_SKIP_IMAGES_EXT = $0000806B;
  GL_PACK_IMAGE_HEIGHT = $0000806C;
  GL_PACK_IMAGE_HEIGHT_EXT = $0000806C;
  GL_UNPACK_SKIP_IMAGES = $0000806D;
  GL_UNPACK_SKIP_IMAGES_EXT = $0000806D;
  GL_UNPACK_IMAGE_HEIGHT = $0000806E;
  GL_UNPACK_IMAGE_HEIGHT_EXT = $0000806E;
  GL_TEXTURE_3D = $0000806F;
  GL_TEXTURE_3D_EXT = $0000806F;
  GL_TEXTURE_3D_OES = $0000806F;
  GL_PROXY_TEXTURE_3D = $00008070;
  GL_PROXY_TEXTURE_3D_EXT = $00008070;
  GL_TEXTURE_DEPTH = $00008071;
  GL_TEXTURE_DEPTH_EXT = $00008071;
  GL_TEXTURE_WRAP_R = $00008072;
  GL_TEXTURE_WRAP_R_EXT = $00008072;
  GL_TEXTURE_WRAP_R_OES = $00008072;
  GL_MAX_3D_TEXTURE_SIZE = $00008073;
  GL_MAX_3D_TEXTURE_SIZE_EXT = $00008073;
  GL_MAX_3D_TEXTURE_SIZE_OES = $00008073;
  GL_VERTEX_ARRAY = $00008074;
  GL_VERTEX_ARRAY_EXT = $00008074;
  GL_VERTEX_ARRAY_KHR = $00008074;
  GL_NORMAL_ARRAY = $00008075;
  GL_NORMAL_ARRAY_EXT = $00008075;
  GL_COLOR_ARRAY = $00008076;
  GL_COLOR_ARRAY_EXT = $00008076;
  GL_INDEX_ARRAY = $00008077;
  GL_INDEX_ARRAY_EXT = $00008077;
  GL_TEXTURE_COORD_ARRAY = $00008078;
  GL_TEXTURE_COORD_ARRAY_EXT = $00008078;
  GL_EDGE_FLAG_ARRAY = $00008079;
  GL_EDGE_FLAG_ARRAY_EXT = $00008079;
  GL_VERTEX_ARRAY_SIZE = $0000807A;
  GL_VERTEX_ARRAY_SIZE_EXT = $0000807A;
  GL_VERTEX_ARRAY_TYPE = $0000807B;
  GL_VERTEX_ARRAY_TYPE_EXT = $0000807B;
  GL_VERTEX_ARRAY_STRIDE = $0000807C;
  GL_VERTEX_ARRAY_STRIDE_EXT = $0000807C;
  GL_VERTEX_ARRAY_COUNT_EXT = $0000807D;
  GL_NORMAL_ARRAY_TYPE = $0000807E;
  GL_NORMAL_ARRAY_TYPE_EXT = $0000807E;
  GL_NORMAL_ARRAY_STRIDE = $0000807F;
  GL_NORMAL_ARRAY_STRIDE_EXT = $0000807F;
  GL_NORMAL_ARRAY_COUNT_EXT = $00008080;
  GL_COLOR_ARRAY_SIZE = $00008081;
  GL_COLOR_ARRAY_SIZE_EXT = $00008081;
  GL_COLOR_ARRAY_TYPE = $00008082;
  GL_COLOR_ARRAY_TYPE_EXT = $00008082;
  GL_COLOR_ARRAY_STRIDE = $00008083;
  GL_COLOR_ARRAY_STRIDE_EXT = $00008083;
  GL_COLOR_ARRAY_COUNT_EXT = $00008084;
  GL_INDEX_ARRAY_TYPE = $00008085;
  GL_INDEX_ARRAY_TYPE_EXT = $00008085;
  GL_INDEX_ARRAY_STRIDE = $00008086;
  GL_INDEX_ARRAY_STRIDE_EXT = $00008086;
  GL_INDEX_ARRAY_COUNT_EXT = $00008087;
  GL_TEXTURE_COORD_ARRAY_SIZE = $00008088;
  GL_TEXTURE_COORD_ARRAY_SIZE_EXT = $00008088;
  GL_TEXTURE_COORD_ARRAY_TYPE = $00008089;
  GL_TEXTURE_COORD_ARRAY_TYPE_EXT = $00008089;
  GL_TEXTURE_COORD_ARRAY_STRIDE = $0000808A;
  GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = $0000808A;
  GL_TEXTURE_COORD_ARRAY_COUNT_EXT = $0000808B;
  GL_EDGE_FLAG_ARRAY_STRIDE = $0000808C;
  GL_EDGE_FLAG_ARRAY_STRIDE_EXT = $0000808C;
  GL_EDGE_FLAG_ARRAY_COUNT_EXT = $0000808D;
  GL_VERTEX_ARRAY_POINTER = $0000808E;
  GL_VERTEX_ARRAY_POINTER_EXT = $0000808E;
  GL_NORMAL_ARRAY_POINTER = $0000808F;
  GL_NORMAL_ARRAY_POINTER_EXT = $0000808F;
  GL_COLOR_ARRAY_POINTER = $00008090;
  GL_COLOR_ARRAY_POINTER_EXT = $00008090;
  GL_INDEX_ARRAY_POINTER = $00008091;
  GL_INDEX_ARRAY_POINTER_EXT = $00008091;
  GL_TEXTURE_COORD_ARRAY_POINTER = $00008092;
  GL_TEXTURE_COORD_ARRAY_POINTER_EXT = $00008092;
  GL_EDGE_FLAG_ARRAY_POINTER = $00008093;
  GL_EDGE_FLAG_ARRAY_POINTER_EXT = $00008093;
  GL_INTERLACE_SGIX = $00008094;
  GL_DETAIL_TEXTURE_2D_SGIS = $00008095;
  GL_DETAIL_TEXTURE_2D_BINDING_SGIS = $00008096;
  GL_LINEAR_DETAIL_SGIS = $00008097;
  GL_LINEAR_DETAIL_ALPHA_SGIS = $00008098;
  GL_LINEAR_DETAIL_COLOR_SGIS = $00008099;
  GL_DETAIL_TEXTURE_LEVEL_SGIS = $0000809A;
  GL_DETAIL_TEXTURE_MODE_SGIS = $0000809B;
  GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = $0000809C;
  GL_MULTISAMPLE = $0000809D;
  GL_MULTISAMPLE_ARB = $0000809D;
  GL_MULTISAMPLE_EXT = $0000809D;
  GL_MULTISAMPLE_SGIS = $0000809D;
  GL_SAMPLE_ALPHA_TO_COVERAGE = $0000809E;
  GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = $0000809E;
  GL_SAMPLE_ALPHA_TO_MASK_EXT = $0000809E;
  GL_SAMPLE_ALPHA_TO_MASK_SGIS = $0000809E;
  GL_SAMPLE_ALPHA_TO_ONE = $0000809F;
  GL_SAMPLE_ALPHA_TO_ONE_ARB = $0000809F;
  GL_SAMPLE_ALPHA_TO_ONE_EXT = $0000809F;
  GL_SAMPLE_ALPHA_TO_ONE_SGIS = $0000809F;
  GL_SAMPLE_COVERAGE = $000080A0;
  GL_SAMPLE_COVERAGE_ARB = $000080A0;
  GL_SAMPLE_MASK_EXT = $000080A0;
  GL_SAMPLE_MASK_SGIS = $000080A0;
  GL_1PASS_EXT = $000080A1;
  GL_1PASS_SGIS = $000080A1;
  GL_2PASS_0_EXT = $000080A2;
  GL_2PASS_0_SGIS = $000080A2;
  GL_2PASS_1_EXT = $000080A3;
  GL_2PASS_1_SGIS = $000080A3;
  GL_4PASS_0_EXT = $000080A4;
  GL_4PASS_0_SGIS = $000080A4;
  GL_4PASS_1_EXT = $000080A5;
  GL_4PASS_1_SGIS = $000080A5;
  GL_4PASS_2_EXT = $000080A6;
  GL_4PASS_2_SGIS = $000080A6;
  GL_4PASS_3_EXT = $000080A7;
  GL_4PASS_3_SGIS = $000080A7;
  GL_SAMPLE_BUFFERS = $000080A8;
  GL_SAMPLE_BUFFERS_ARB = $000080A8;
  GL_SAMPLE_BUFFERS_EXT = $000080A8;
  GL_SAMPLE_BUFFERS_SGIS = $000080A8;
  GL_SAMPLES = $000080A9;
  GL_SAMPLES_ARB = $000080A9;
  GL_SAMPLES_EXT = $000080A9;
  GL_SAMPLES_SGIS = $000080A9;
  GL_SAMPLE_COVERAGE_VALUE = $000080AA;
  GL_SAMPLE_COVERAGE_VALUE_ARB = $000080AA;
  GL_SAMPLE_MASK_VALUE_EXT = $000080AA;
  GL_SAMPLE_MASK_VALUE_SGIS = $000080AA;
  GL_SAMPLE_COVERAGE_INVERT = $000080AB;
  GL_SAMPLE_COVERAGE_INVERT_ARB = $000080AB;
  GL_SAMPLE_MASK_INVERT_EXT = $000080AB;
  GL_SAMPLE_MASK_INVERT_SGIS = $000080AB;
  GL_SAMPLE_PATTERN_EXT = $000080AC;
  GL_SAMPLE_PATTERN_SGIS = $000080AC;
  GL_LINEAR_SHARPEN_SGIS = $000080AD;
  GL_LINEAR_SHARPEN_ALPHA_SGIS = $000080AE;
  GL_LINEAR_SHARPEN_COLOR_SGIS = $000080AF;
  GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = $000080B0;
  GL_COLOR_MATRIX = $000080B1;
  GL_COLOR_MATRIX_SGI = $000080B1;
  GL_COLOR_MATRIX_STACK_DEPTH = $000080B2;
  GL_COLOR_MATRIX_STACK_DEPTH_SGI = $000080B2;
  GL_MAX_COLOR_MATRIX_STACK_DEPTH = $000080B3;
  GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = $000080B3;
  GL_POST_COLOR_MATRIX_RED_SCALE = $000080B4;
  GL_POST_COLOR_MATRIX_RED_SCALE_SGI = $000080B4;
  GL_POST_COLOR_MATRIX_GREEN_SCALE = $000080B5;
  GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = $000080B5;
  GL_POST_COLOR_MATRIX_BLUE_SCALE = $000080B6;
  GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = $000080B6;
  GL_POST_COLOR_MATRIX_ALPHA_SCALE = $000080B7;
  GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = $000080B7;
  GL_POST_COLOR_MATRIX_RED_BIAS = $000080B8;
  GL_POST_COLOR_MATRIX_RED_BIAS_SGI = $000080B8;
  GL_POST_COLOR_MATRIX_GREEN_BIAS = $000080B9;
  GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = $000080B9;
  GL_POST_COLOR_MATRIX_BLUE_BIAS = $000080BA;
  GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = $000080BA;
  GL_POST_COLOR_MATRIX_ALPHA_BIAS = $000080BB;
  GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = $000080BB;
  GL_TEXTURE_COLOR_TABLE_SGI = $000080BC;
  GL_PROXY_TEXTURE_COLOR_TABLE_SGI = $000080BD;
  GL_TEXTURE_ENV_BIAS_SGIX = $000080BE;
  GL_SHADOW_AMBIENT_SGIX = $000080BF;
  GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = $000080BF;
  GL_BLEND_DST_RGB = $000080C8;
  GL_BLEND_DST_RGB_EXT = $000080C8;
  GL_BLEND_DST_RGB_OES = $000080C8;
  GL_BLEND_SRC_RGB = $000080C9;
  GL_BLEND_SRC_RGB_EXT = $000080C9;
  GL_BLEND_SRC_RGB_OES = $000080C9;
  GL_BLEND_DST_ALPHA = $000080CA;
  GL_BLEND_DST_ALPHA_EXT = $000080CA;
  GL_BLEND_DST_ALPHA_OES = $000080CA;
  GL_BLEND_SRC_ALPHA = $000080CB;
  GL_BLEND_SRC_ALPHA_EXT = $000080CB;
  GL_BLEND_SRC_ALPHA_OES = $000080CB;
  GL_422_EXT = $000080CC;
  GL_422_REV_EXT = $000080CD;
  GL_422_AVERAGE_EXT = $000080CE;
  GL_422_REV_AVERAGE_EXT = $000080CF;
  GL_COLOR_TABLE = $000080D0;
  GL_COLOR_TABLE_SGI = $000080D0;
  GL_POST_CONVOLUTION_COLOR_TABLE = $000080D1;
  GL_POST_CONVOLUTION_COLOR_TABLE_SGI = $000080D1;
  GL_POST_COLOR_MATRIX_COLOR_TABLE = $000080D2;
  GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = $000080D2;
  GL_PROXY_COLOR_TABLE = $000080D3;
  GL_PROXY_COLOR_TABLE_SGI = $000080D3;
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = $000080D4;
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = $000080D4;
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = $000080D5;
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = $000080D5;
  GL_COLOR_TABLE_SCALE = $000080D6;
  GL_COLOR_TABLE_SCALE_SGI = $000080D6;
  GL_COLOR_TABLE_BIAS = $000080D7;
  GL_COLOR_TABLE_BIAS_SGI = $000080D7;
  GL_COLOR_TABLE_FORMAT = $000080D8;
  GL_COLOR_TABLE_FORMAT_SGI = $000080D8;
  GL_COLOR_TABLE_WIDTH = $000080D9;
  GL_COLOR_TABLE_WIDTH_SGI = $000080D9;
  GL_COLOR_TABLE_RED_SIZE = $000080DA;
  GL_COLOR_TABLE_RED_SIZE_SGI = $000080DA;
  GL_COLOR_TABLE_GREEN_SIZE = $000080DB;
  GL_COLOR_TABLE_GREEN_SIZE_SGI = $000080DB;
  GL_COLOR_TABLE_BLUE_SIZE = $000080DC;
  GL_COLOR_TABLE_BLUE_SIZE_SGI = $000080DC;
  GL_COLOR_TABLE_ALPHA_SIZE = $000080DD;
  GL_COLOR_TABLE_ALPHA_SIZE_SGI = $000080DD;
  GL_COLOR_TABLE_LUMINANCE_SIZE = $000080DE;
  GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = $000080DE;
  GL_COLOR_TABLE_INTENSITY_SIZE = $000080DF;
  GL_COLOR_TABLE_INTENSITY_SIZE_SGI = $000080DF;
  GL_BGR = $000080E0;
  GL_BGR_EXT = $000080E0;
  GL_BGRA = $000080E1;
  GL_BGRA_EXT = $000080E1;
  GL_BGRA_IMG = $000080E1;
  GL_COLOR_INDEX1_EXT = $000080E2;
  GL_COLOR_INDEX2_EXT = $000080E3;
  GL_COLOR_INDEX4_EXT = $000080E4;
  GL_COLOR_INDEX8_EXT = $000080E5;
  GL_COLOR_INDEX12_EXT = $000080E6;
  GL_COLOR_INDEX16_EXT = $000080E7;
  GL_MAX_ELEMENTS_VERTICES = $000080E8;
  GL_MAX_ELEMENTS_VERTICES_EXT = $000080E8;
  GL_MAX_ELEMENTS_INDICES = $000080E9;
  GL_MAX_ELEMENTS_INDICES_EXT = $000080E9;
  GL_PHONG_WIN = $000080EA;
  GL_PHONG_HINT_WIN = $000080EB;
  GL_FOG_SPECULAR_TEXTURE_WIN = $000080EC;
  GL_TEXTURE_INDEX_SIZE_EXT = $000080ED;
  GL_PARAMETER_BUFFER = $000080EE;
  GL_PARAMETER_BUFFER_ARB = GL_PARAMETER_BUFFER;
  GL_PARAMETER_BUFFER_BINDING = $000080EF;
  GL_PARAMETER_BUFFER_BINDING_ARB = GL_PARAMETER_BUFFER_BINDING;
  GL_CLIP_VOLUME_CLIPPING_HINT_EXT = $000080F0;
  GL_DUAL_ALPHA4_SGIS = $00008110;
  GL_DUAL_ALPHA8_SGIS = $00008111;
  GL_DUAL_ALPHA12_SGIS = $00008112;
  GL_DUAL_ALPHA16_SGIS = $00008113;
  GL_DUAL_LUMINANCE4_SGIS = $00008114;
  GL_DUAL_LUMINANCE8_SGIS = $00008115;
  GL_DUAL_LUMINANCE12_SGIS = $00008116;
  GL_DUAL_LUMINANCE16_SGIS = $00008117;
  GL_DUAL_INTENSITY4_SGIS = $00008118;
  GL_DUAL_INTENSITY8_SGIS = $00008119;
  GL_DUAL_INTENSITY12_SGIS = $0000811A;
  GL_DUAL_INTENSITY16_SGIS = $0000811B;
  GL_DUAL_LUMINANCE_ALPHA4_SGIS = $0000811C;
  GL_DUAL_LUMINANCE_ALPHA8_SGIS = $0000811D;
  GL_QUAD_ALPHA4_SGIS = $0000811E;
  GL_QUAD_ALPHA8_SGIS = $0000811F;
  GL_QUAD_LUMINANCE4_SGIS = $00008120;
  GL_QUAD_LUMINANCE8_SGIS = $00008121;
  GL_QUAD_INTENSITY4_SGIS = $00008122;
  GL_QUAD_INTENSITY8_SGIS = $00008123;
  GL_DUAL_TEXTURE_SELECT_SGIS = $00008124;
  GL_QUAD_TEXTURE_SELECT_SGIS = $00008125;
  GL_POINT_SIZE_MIN = $00008126;
  GL_POINT_SIZE_MIN_ARB = $00008126;
  GL_POINT_SIZE_MIN_EXT = $00008126;
  GL_POINT_SIZE_MIN_SGIS = $00008126;
  GL_POINT_SIZE_MAX = $00008127;
  GL_POINT_SIZE_MAX_ARB = $00008127;
  GL_POINT_SIZE_MAX_EXT = $00008127;
  GL_POINT_SIZE_MAX_SGIS = $00008127;
  GL_POINT_FADE_THRESHOLD_SIZE = $00008128;
  GL_POINT_FADE_THRESHOLD_SIZE_ARB = $00008128;
  GL_POINT_FADE_THRESHOLD_SIZE_EXT = $00008128;
  GL_POINT_FADE_THRESHOLD_SIZE_SGIS = $00008128;
  GL_DISTANCE_ATTENUATION_EXT = $00008129;
  GL_DISTANCE_ATTENUATION_SGIS = $00008129;
  GL_POINT_DISTANCE_ATTENUATION = $00008129;
  GL_POINT_DISTANCE_ATTENUATION_ARB = $00008129;
  GL_FOG_FUNC_SGIS = $0000812A;
  GL_FOG_FUNC_POINTS_SGIS = $0000812B;
  GL_MAX_FOG_FUNC_POINTS_SGIS = $0000812C;
  GL_CLAMP_TO_BORDER = $0000812D;
  GL_CLAMP_TO_BORDER_ARB = $0000812D;
  GL_CLAMP_TO_BORDER_EXT = $0000812D;
  GL_CLAMP_TO_BORDER_NV = $0000812D;
  GL_CLAMP_TO_BORDER_SGIS = $0000812D;
  GL_CLAMP_TO_BORDER_OES = $0000812D;
  GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = $0000812E;
  GL_CLAMP_TO_EDGE = $0000812F;
  GL_CLAMP_TO_EDGE_SGIS = $0000812F;
  GL_PACK_SKIP_VOLUMES_SGIS = $00008130;
  GL_PACK_IMAGE_DEPTH_SGIS = $00008131;
  GL_UNPACK_SKIP_VOLUMES_SGIS = $00008132;
  GL_UNPACK_IMAGE_DEPTH_SGIS = $00008133;
  GL_TEXTURE_4D_SGIS = $00008134;
  GL_PROXY_TEXTURE_4D_SGIS = $00008135;
  GL_TEXTURE_4DSIZE_SGIS = $00008136;
  GL_TEXTURE_WRAP_Q_SGIS = $00008137;
  GL_MAX_4D_TEXTURE_SIZE_SGIS = $00008138;
  GL_PIXEL_TEX_GEN_SGIX = $00008139;
  GL_TEXTURE_MIN_LOD = $0000813A;
  GL_TEXTURE_MIN_LOD_SGIS = $0000813A;
  GL_TEXTURE_MAX_LOD = $0000813B;
  GL_TEXTURE_MAX_LOD_SGIS = $0000813B;
  GL_TEXTURE_BASE_LEVEL = $0000813C;
  GL_TEXTURE_BASE_LEVEL_SGIS = $0000813C;
  GL_TEXTURE_MAX_LEVEL = $0000813D;
  GL_TEXTURE_MAX_LEVEL_APPLE = $0000813D;
  GL_TEXTURE_MAX_LEVEL_SGIS = $0000813D;
  GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = $0000813E;
  GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = $0000813F;
  GL_PIXEL_TILE_WIDTH_SGIX = $00008140;
  GL_PIXEL_TILE_HEIGHT_SGIX = $00008141;
  GL_PIXEL_TILE_GRID_WIDTH_SGIX = $00008142;
  GL_PIXEL_TILE_GRID_HEIGHT_SGIX = $00008143;
  GL_PIXEL_TILE_GRID_DEPTH_SGIX = $00008144;
  GL_PIXEL_TILE_CACHE_SIZE_SGIX = $00008145;
  GL_FILTER4_SGIS = $00008146;
  GL_TEXTURE_FILTER4_SIZE_SGIS = $00008147;
  GL_SPRITE_SGIX = $00008148;
  GL_SPRITE_MODE_SGIX = $00008149;
  GL_SPRITE_AXIS_SGIX = $0000814A;
  GL_SPRITE_TRANSLATION_SGIX = $0000814B;
  GL_SPRITE_AXIAL_SGIX = $0000814C;
  GL_SPRITE_OBJECT_ALIGNED_SGIX = $0000814D;
  GL_SPRITE_EYE_ALIGNED_SGIX = $0000814E;
  GL_TEXTURE_4D_BINDING_SGIS = $0000814F;
  GL_IGNORE_BORDER_HP = $00008150;
  GL_CONSTANT_BORDER = $00008151;
  GL_CONSTANT_BORDER_HP = $00008151;
  GL_REPLICATE_BORDER = $00008153;
  GL_REPLICATE_BORDER_HP = $00008153;
  GL_CONVOLUTION_BORDER_COLOR = $00008154;
  GL_CONVOLUTION_BORDER_COLOR_HP = $00008154;
  GL_IMAGE_SCALE_X_HP = $00008155;
  GL_IMAGE_SCALE_Y_HP = $00008156;
  GL_IMAGE_TRANSLATE_X_HP = $00008157;
  GL_IMAGE_TRANSLATE_Y_HP = $00008158;
  GL_IMAGE_ROTATE_ANGLE_HP = $00008159;
  GL_IMAGE_ROTATE_ORIGIN_X_HP = $0000815A;
  GL_IMAGE_ROTATE_ORIGIN_Y_HP = $0000815B;
  GL_IMAGE_MAG_FILTER_HP = $0000815C;
  GL_IMAGE_MIN_FILTER_HP = $0000815D;
  GL_IMAGE_CUBIC_WEIGHT_HP = $0000815E;
  GL_CUBIC_HP = $0000815F;
  GL_AVERAGE_HP = $00008160;
  GL_IMAGE_TRANSFORM_2D_HP = $00008161;
  GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = $00008162;
  GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = $00008163;
  GL_OCCLUSION_TEST_HP = $00008165;
  GL_OCCLUSION_TEST_RESULT_HP = $00008166;
  GL_TEXTURE_LIGHTING_MODE_HP = $00008167;
  GL_TEXTURE_POST_SPECULAR_HP = $00008168;
  GL_TEXTURE_PRE_SPECULAR_HP = $00008169;
  GL_LINEAR_CLIPMAP_LINEAR_SGIX = $00008170;
  GL_TEXTURE_CLIPMAP_CENTER_SGIX = $00008171;
  GL_TEXTURE_CLIPMAP_FRAME_SGIX = $00008172;
  GL_TEXTURE_CLIPMAP_OFFSET_SGIX = $00008173;
  GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = $00008174;
  GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = $00008175;
  GL_TEXTURE_CLIPMAP_DEPTH_SGIX = $00008176;
  GL_MAX_CLIPMAP_DEPTH_SGIX = $00008177;
  GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = $00008178;
  GL_POST_TEXTURE_FILTER_BIAS_SGIX = $00008179;
  GL_POST_TEXTURE_FILTER_SCALE_SGIX = $0000817A;
  GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = $0000817B;
  GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = $0000817C;
  GL_REFERENCE_PLANE_SGIX = $0000817D;
  GL_REFERENCE_PLANE_EQUATION_SGIX = $0000817E;
  GL_IR_INSTRUMENT1_SGIX = $0000817F;
  GL_INSTRUMENT_BUFFER_POINTER_SGIX = $00008180;
  GL_INSTRUMENT_MEASUREMENTS_SGIX = $00008181;
  GL_LIST_PRIORITY_SGIX = $00008182;
  GL_CALLIGRAPHIC_FRAGMENT_SGIX = $00008183;
  GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = $00008184;
  GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = $00008185;
  GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = $00008186;
  GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = $00008189;
  GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = $0000818A;
  GL_FRAMEZOOM_SGIX = $0000818B;
  GL_FRAMEZOOM_FACTOR_SGIX = $0000818C;
  GL_MAX_FRAMEZOOM_FACTOR_SGIX = $0000818D;
  GL_TEXTURE_LOD_BIAS_S_SGIX = $0000818E;
  GL_TEXTURE_LOD_BIAS_T_SGIX = $0000818F;
  GL_TEXTURE_LOD_BIAS_R_SGIX = $00008190;
  GL_GENERATE_MIPMAP = $00008191;
  GL_GENERATE_MIPMAP_SGIS = $00008191;
  GL_GENERATE_MIPMAP_HINT = $00008192;
  GL_GENERATE_MIPMAP_HINT_SGIS = $00008192;
  GL_GEOMETRY_DEFORMATION_SGIX = $00008194;
  GL_TEXTURE_DEFORMATION_SGIX = $00008195;
  GL_DEFORMATIONS_MASK_SGIX = $00008196;
  GL_MAX_DEFORMATION_ORDER_SGIX = $00008197;
  GL_FOG_OFFSET_SGIX = $00008198;
  GL_FOG_OFFSET_VALUE_SGIX = $00008199;
  GL_TEXTURE_COMPARE_SGIX = $0000819A;
  GL_TEXTURE_COMPARE_OPERATOR_SGIX = $0000819B;
  GL_TEXTURE_LEQUAL_R_SGIX = $0000819C;
  GL_TEXTURE_GEQUAL_R_SGIX = $0000819D;
  GL_DEPTH_COMPONENT16 = $000081A5;
  GL_DEPTH_COMPONENT16_ARB = $000081A5;
  GL_DEPTH_COMPONENT16_OES = $000081A5;
  GL_DEPTH_COMPONENT16_SGIX = $000081A5;
  GL_DEPTH_COMPONENT24 = $000081A6;
  GL_DEPTH_COMPONENT24_ARB = $000081A6;
  GL_DEPTH_COMPONENT24_OES = $000081A6;
  GL_DEPTH_COMPONENT24_SGIX = $000081A6;
  GL_DEPTH_COMPONENT32 = $000081A7;
  GL_DEPTH_COMPONENT32_ARB = $000081A7;
  GL_DEPTH_COMPONENT32_OES = $000081A7;
  GL_DEPTH_COMPONENT32_SGIX = $000081A7;
  GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = $000081A8;
  GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = $000081A9;
  GL_CULL_VERTEX_EXT = $000081AA;
  GL_CULL_VERTEX_EYE_POSITION_EXT = $000081AB;
  GL_CULL_VERTEX_OBJECT_POSITION_EXT = $000081AC;
  GL_IUI_V2F_EXT = $000081AD;
  GL_IUI_V3F_EXT = $000081AE;
  GL_IUI_N3F_V2F_EXT = $000081AF;
  GL_IUI_N3F_V3F_EXT = $000081B0;
  GL_T2F_IUI_V2F_EXT = $000081B1;
  GL_T2F_IUI_V3F_EXT = $000081B2;
  GL_T2F_IUI_N3F_V2F_EXT = $000081B3;
  GL_T2F_IUI_N3F_V3F_EXT = $000081B4;
  GL_INDEX_TEST_EXT = $000081B5;
  GL_INDEX_TEST_FUNC_EXT = $000081B6;
  GL_INDEX_TEST_REF_EXT = $000081B7;
  GL_INDEX_MATERIAL_EXT = $000081B8;
  GL_INDEX_MATERIAL_PARAMETER_EXT = $000081B9;
  GL_INDEX_MATERIAL_FACE_EXT = $000081BA;
  GL_YCRCB_422_SGIX = $000081BB;
  GL_YCRCB_444_SGIX = $000081BC;
  GL_WRAP_BORDER_SUN = $000081D4;
  GL_UNPACK_CONSTANT_DATA_SUNX = $000081D5;
  GL_TEXTURE_CONSTANT_DATA_SUNX = $000081D6;
  GL_TRIANGLE_LIST_SUN = $000081D7;
  GL_REPLACEMENT_CODE_SUN = $000081D8;
  GL_GLOBAL_ALPHA_SUN = $000081D9;
  GL_GLOBAL_ALPHA_FACTOR_SUN = $000081DA;
  GL_TEXTURE_COLOR_WRITEMASK_SGIS = $000081EF;
  GL_EYE_DISTANCE_TO_POINT_SGIS = $000081F0;
  GL_OBJECT_DISTANCE_TO_POINT_SGIS = $000081F1;
  GL_EYE_DISTANCE_TO_LINE_SGIS = $000081F2;
  GL_OBJECT_DISTANCE_TO_LINE_SGIS = $000081F3;
  GL_EYE_POINT_SGIS = $000081F4;
  GL_OBJECT_POINT_SGIS = $000081F5;
  GL_EYE_LINE_SGIS = $000081F6;
  GL_OBJECT_LINE_SGIS = $000081F7;
  GL_LIGHT_MODEL_COLOR_CONTROL = $000081F8;
  GL_LIGHT_MODEL_COLOR_CONTROL_EXT = $000081F8;
  GL_SINGLE_COLOR = $000081F9;
  GL_SINGLE_COLOR_EXT = $000081F9;
  GL_SEPARATE_SPECULAR_COLOR = $000081FA;
  GL_SEPARATE_SPECULAR_COLOR_EXT = $000081FA;
  GL_SHARED_TEXTURE_PALETTE_EXT = $000081FB;
  GL_TEXT_FRAGMENT_SHADER_ATI = $00008200;
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = $00008210;
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = $00008210;
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = $00008211;
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = $00008211;
  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = $00008212;
  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = $00008213;
  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = $00008214;
  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = $00008215;
  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = $00008216;
  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = $00008217;
  GL_FRAMEBUFFER_DEFAULT = $00008218;
  GL_FRAMEBUFFER_UNDEFINED = $00008219;
  GL_FRAMEBUFFER_UNDEFINED_OES = $00008219;
  GL_DEPTH_STENCIL_ATTACHMENT = $0000821A;
  GL_MAJOR_VERSION = $0000821B;
  GL_MINOR_VERSION = $0000821C;
  GL_NUM_EXTENSIONS = $0000821D;
  GL_CONTEXT_FLAGS = $0000821E;
  GL_BUFFER_IMMUTABLE_STORAGE = $0000821F;
  GL_BUFFER_IMMUTABLE_STORAGE_EXT = $0000821F;
  GL_BUFFER_STORAGE_FLAGS = $00008220;
  GL_BUFFER_STORAGE_FLAGS_EXT = $00008220;
  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = $00008221;
  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES = $00008221;
  GL_INDEX = $00008222;
  GL_COMPRESSED_RED = $00008225;
  GL_COMPRESSED_RG = $00008226;
  GL_RG = $00008227;
  GL_RG_EXT = $00008227;
  GL_RG_INTEGER = $00008228;
  GL_R8 = $00008229;
  GL_R8_EXT = $00008229;
  GL_R16 = $0000822A;
  GL_R16_EXT = $0000822A;
  GL_RG8 = $0000822B;
  GL_RG8_EXT = $0000822B;
  GL_RG16 = $0000822C;
  GL_RG16_EXT = $0000822C;
  GL_R16F = $0000822D;
  GL_R16F_EXT = $0000822D;
  GL_R32F = $0000822E;
  GL_R32F_EXT = $0000822E;
  GL_RG16F = $0000822F;
  GL_RG16F_EXT = $0000822F;
  GL_RG32F = $00008230;
  GL_RG32F_EXT = $00008230;
  GL_R8I = $00008231;
  GL_R8UI = $00008232;
  GL_R16I = $00008233;
  GL_R16UI = $00008234;
  GL_R32I = $00008235;
  GL_R32UI = $00008236;
  GL_RG8I = $00008237;
  GL_RG8UI = $00008238;
  GL_RG16I = $00008239;
  GL_RG16UI = $0000823A;
  GL_RG32I = $0000823B;
  GL_RG32UI = $0000823C;
  GL_SYNC_CL_EVENT_ARB = $00008240;
  GL_SYNC_CL_EVENT_COMPLETE_ARB = $00008241;
  GL_DEBUG_OUTPUT_SYNCHRONOUS = $00008242;
  GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = $00008242;
  GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR = $00008242;
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = $00008243;
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = $00008243;
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = $00008243;
  GL_DEBUG_CALLBACK_FUNCTION = $00008244;
  GL_DEBUG_CALLBACK_FUNCTION_ARB = $00008244;
  GL_DEBUG_CALLBACK_FUNCTION_KHR = $00008244;
  GL_DEBUG_CALLBACK_USER_PARAM = $00008245;
  GL_DEBUG_CALLBACK_USER_PARAM_ARB = $00008245;
  GL_DEBUG_CALLBACK_USER_PARAM_KHR = $00008245;
  GL_DEBUG_SOURCE_API = $00008246;
  GL_DEBUG_SOURCE_API_ARB = $00008246;
  GL_DEBUG_SOURCE_API_KHR = $00008246;
  GL_DEBUG_SOURCE_WINDOW_SYSTEM = $00008247;
  GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = $00008247;
  GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = $00008247;
  GL_DEBUG_SOURCE_SHADER_COMPILER = $00008248;
  GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = $00008248;
  GL_DEBUG_SOURCE_SHADER_COMPILER_KHR = $00008248;
  GL_DEBUG_SOURCE_THIRD_PARTY = $00008249;
  GL_DEBUG_SOURCE_THIRD_PARTY_ARB = $00008249;
  GL_DEBUG_SOURCE_THIRD_PARTY_KHR = $00008249;
  GL_DEBUG_SOURCE_APPLICATION = $0000824A;
  GL_DEBUG_SOURCE_APPLICATION_ARB = $0000824A;
  GL_DEBUG_SOURCE_APPLICATION_KHR = $0000824A;
  GL_DEBUG_SOURCE_OTHER = $0000824B;
  GL_DEBUG_SOURCE_OTHER_ARB = $0000824B;
  GL_DEBUG_SOURCE_OTHER_KHR = $0000824B;
  GL_DEBUG_TYPE_ERROR = $0000824C;
  GL_DEBUG_TYPE_ERROR_ARB = $0000824C;
  GL_DEBUG_TYPE_ERROR_KHR = $0000824C;
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = $0000824D;
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = $0000824D;
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = $0000824D;
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = $0000824E;
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = $0000824E;
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = $0000824E;
  GL_DEBUG_TYPE_PORTABILITY = $0000824F;
  GL_DEBUG_TYPE_PORTABILITY_ARB = $0000824F;
  GL_DEBUG_TYPE_PORTABILITY_KHR = $0000824F;
  GL_DEBUG_TYPE_PERFORMANCE = $00008250;
  GL_DEBUG_TYPE_PERFORMANCE_ARB = $00008250;
  GL_DEBUG_TYPE_PERFORMANCE_KHR = $00008250;
  GL_DEBUG_TYPE_OTHER = $00008251;
  GL_DEBUG_TYPE_OTHER_ARB = $00008251;
  GL_DEBUG_TYPE_OTHER_KHR = $00008251;
  GL_LOSE_CONTEXT_ON_RESET = $00008252;
  GL_LOSE_CONTEXT_ON_RESET_ARB = $00008252;
  GL_LOSE_CONTEXT_ON_RESET_EXT = $00008252;
  GL_LOSE_CONTEXT_ON_RESET_KHR = $00008252;
  GL_GUILTY_CONTEXT_RESET = $00008253;
  GL_GUILTY_CONTEXT_RESET_ARB = $00008253;
  GL_GUILTY_CONTEXT_RESET_EXT = $00008253;
  GL_GUILTY_CONTEXT_RESET_KHR = $00008253;
  GL_INNOCENT_CONTEXT_RESET = $00008254;
  GL_INNOCENT_CONTEXT_RESET_ARB = $00008254;
  GL_INNOCENT_CONTEXT_RESET_EXT = $00008254;
  GL_INNOCENT_CONTEXT_RESET_KHR = $00008254;
  GL_UNKNOWN_CONTEXT_RESET = $00008255;
  GL_UNKNOWN_CONTEXT_RESET_ARB = $00008255;
  GL_UNKNOWN_CONTEXT_RESET_EXT = $00008255;
  GL_UNKNOWN_CONTEXT_RESET_KHR = $00008255;
  GL_RESET_NOTIFICATION_STRATEGY = $00008256;
  GL_RESET_NOTIFICATION_STRATEGY_ARB = $00008256;
  GL_RESET_NOTIFICATION_STRATEGY_EXT = $00008256;
  GL_RESET_NOTIFICATION_STRATEGY_KHR = $00008256;
  GL_PROGRAM_BINARY_RETRIEVABLE_HINT = $00008257;
  GL_PROGRAM_SEPARABLE = $00008258;
  GL_PROGRAM_SEPARABLE_EXT = $00008258;
  GL_ACTIVE_PROGRAM = $00008259;
  GL_PROGRAM_PIPELINE_BINDING = $0000825A;
  GL_PROGRAM_PIPELINE_BINDING_EXT = $0000825A;
  GL_MAX_VIEWPORTS = $0000825B;
  GL_MAX_VIEWPORTS_NV = $0000825B;
  GL_MAX_VIEWPORTS_OES = $0000825B;
  GL_VIEWPORT_SUBPIXEL_BITS = $0000825C;
  GL_VIEWPORT_SUBPIXEL_BITS_EXT = $0000825C;
  GL_VIEWPORT_SUBPIXEL_BITS_NV = $0000825C;
  GL_VIEWPORT_SUBPIXEL_BITS_OES = $0000825C;
  GL_VIEWPORT_BOUNDS_RANGE = $0000825D;
  GL_VIEWPORT_BOUNDS_RANGE_EXT = $0000825D;
  GL_VIEWPORT_BOUNDS_RANGE_NV = $0000825D;
  GL_VIEWPORT_BOUNDS_RANGE_OES = $0000825D;
  GL_LAYER_PROVOKING_VERTEX = $0000825E;
  GL_LAYER_PROVOKING_VERTEX_EXT = $0000825E;
  GL_LAYER_PROVOKING_VERTEX_OES = $0000825E;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX = $0000825F;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT = $0000825F;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV = $0000825F;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES = $0000825F;
  GL_UNDEFINED_VERTEX = $00008260;
  GL_UNDEFINED_VERTEX_EXT = $00008260;
  GL_UNDEFINED_VERTEX_OES = $00008260;
  GL_NO_RESET_NOTIFICATION = $00008261;
  GL_NO_RESET_NOTIFICATION_ARB = $00008261;
  GL_NO_RESET_NOTIFICATION_EXT = $00008261;
  GL_NO_RESET_NOTIFICATION_KHR = $00008261;
  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = $00008262;
  GL_MAX_COMPUTE_UNIFORM_COMPONENTS = $00008263;
  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = $00008264;
  GL_MAX_COMPUTE_ATOMIC_COUNTERS = $00008265;
  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = $00008266;
  GL_COMPUTE_WORK_GROUP_SIZE = $00008267;
  GL_DEBUG_TYPE_MARKER = $00008268;
  GL_DEBUG_TYPE_MARKER_KHR = $00008268;
  GL_DEBUG_TYPE_PUSH_GROUP = $00008269;
  GL_DEBUG_TYPE_PUSH_GROUP_KHR = $00008269;
  GL_DEBUG_TYPE_POP_GROUP = $0000826A;
  GL_DEBUG_TYPE_POP_GROUP_KHR = $0000826A;
  GL_DEBUG_SEVERITY_NOTIFICATION = $0000826B;
  GL_DEBUG_SEVERITY_NOTIFICATION_KHR = $0000826B;
  GL_MAX_DEBUG_GROUP_STACK_DEPTH = $0000826C;
  GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = $0000826C;
  GL_DEBUG_GROUP_STACK_DEPTH = $0000826D;
  GL_DEBUG_GROUP_STACK_DEPTH_KHR = $0000826D;
  GL_MAX_UNIFORM_LOCATIONS = $0000826E;
  GL_INTERNALFORMAT_SUPPORTED = $0000826F;
  GL_INTERNALFORMAT_PREFERRED = $00008270;
  GL_INTERNALFORMAT_RED_SIZE = $00008271;
  GL_INTERNALFORMAT_GREEN_SIZE = $00008272;
  GL_INTERNALFORMAT_BLUE_SIZE = $00008273;
  GL_INTERNALFORMAT_ALPHA_SIZE = $00008274;
  GL_INTERNALFORMAT_DEPTH_SIZE = $00008275;
  GL_INTERNALFORMAT_STENCIL_SIZE = $00008276;
  GL_INTERNALFORMAT_SHARED_SIZE = $00008277;
  GL_INTERNALFORMAT_RED_TYPE = $00008278;
  GL_INTERNALFORMAT_GREEN_TYPE = $00008279;
  GL_INTERNALFORMAT_BLUE_TYPE = $0000827A;
  GL_INTERNALFORMAT_ALPHA_TYPE = $0000827B;
  GL_INTERNALFORMAT_DEPTH_TYPE = $0000827C;
  GL_INTERNALFORMAT_STENCIL_TYPE = $0000827D;
  GL_MAX_WIDTH = $0000827E;
  GL_MAX_HEIGHT = $0000827F;
  GL_MAX_DEPTH = $00008280;
  GL_MAX_LAYERS = $00008281;
  GL_MAX_COMBINED_DIMENSIONS = $00008282;
  GL_COLOR_COMPONENTS = $00008283;
  GL_DEPTH_COMPONENTS = $00008284;
  GL_STENCIL_COMPONENTS = $00008285;
  GL_COLOR_RENDERABLE = $00008286;
  GL_DEPTH_RENDERABLE = $00008287;
  GL_STENCIL_RENDERABLE = $00008288;
  GL_FRAMEBUFFER_RENDERABLE = $00008289;
  GL_FRAMEBUFFER_RENDERABLE_LAYERED = $0000828A;
  GL_FRAMEBUFFER_BLEND = $0000828B;
  GL_READ_PIXELS = $0000828C;
  GL_READ_PIXELS_FORMAT = $0000828D;
  GL_READ_PIXELS_TYPE = $0000828E;
  GL_TEXTURE_IMAGE_FORMAT = $0000828F;
  GL_TEXTURE_IMAGE_TYPE = $00008290;
  GL_GET_TEXTURE_IMAGE_FORMAT = $00008291;
  GL_GET_TEXTURE_IMAGE_TYPE = $00008292;
  GL_MIPMAP = $00008293;
  GL_MANUAL_GENERATE_MIPMAP = $00008294;
  GL_AUTO_GENERATE_MIPMAP = $00008295;
  GL_COLOR_ENCODING = $00008296;
  GL_SRGB_READ = $00008297;
  GL_SRGB_WRITE = $00008298;
  GL_SRGB_DECODE_ARB = $00008299;
  GL_FILTER = $0000829A;
  GL_VERTEX_TEXTURE = $0000829B;
  GL_TESS_CONTROL_TEXTURE = $0000829C;
  GL_TESS_EVALUATION_TEXTURE = $0000829D;
  GL_GEOMETRY_TEXTURE = $0000829E;
  GL_FRAGMENT_TEXTURE = $0000829F;
  GL_COMPUTE_TEXTURE = $000082A0;
  GL_TEXTURE_SHADOW = $000082A1;
  GL_TEXTURE_GATHER = $000082A2;
  GL_TEXTURE_GATHER_SHADOW = $000082A3;
  GL_SHADER_IMAGE_LOAD = $000082A4;
  GL_SHADER_IMAGE_STORE = $000082A5;
  GL_SHADER_IMAGE_ATOMIC = $000082A6;
  GL_IMAGE_TEXEL_SIZE = $000082A7;
  GL_IMAGE_COMPATIBILITY_CLASS = $000082A8;
  GL_IMAGE_PIXEL_FORMAT = $000082A9;
  GL_IMAGE_PIXEL_TYPE = $000082AA;
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = $000082AC;
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = $000082AD;
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = $000082AE;
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = $000082AF;
  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = $000082B1;
  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = $000082B2;
  GL_TEXTURE_COMPRESSED_BLOCK_SIZE = $000082B3;
  GL_CLEAR_BUFFER = $000082B4;
  GL_TEXTURE_VIEW = $000082B5;
  GL_VIEW_COMPATIBILITY_CLASS = $000082B6;
  GL_FULL_SUPPORT = $000082B7;
  GL_CAVEAT_SUPPORT = $000082B8;
  GL_IMAGE_CLASS_4_X_32 = $000082B9;
  GL_IMAGE_CLASS_2_X_32 = $000082BA;
  GL_IMAGE_CLASS_1_X_32 = $000082BB;
  GL_IMAGE_CLASS_4_X_16 = $000082BC;
  GL_IMAGE_CLASS_2_X_16 = $000082BD;
  GL_IMAGE_CLASS_1_X_16 = $000082BE;
  GL_IMAGE_CLASS_4_X_8 = $000082BF;
  GL_IMAGE_CLASS_2_X_8 = $000082C0;
  GL_IMAGE_CLASS_1_X_8 = $000082C1;
  GL_IMAGE_CLASS_11_11_10 = $000082C2;
  GL_IMAGE_CLASS_10_10_10_2 = $000082C3;
  GL_VIEW_CLASS_128_BITS = $000082C4;
  GL_VIEW_CLASS_96_BITS = $000082C5;
  GL_VIEW_CLASS_64_BITS = $000082C6;
  GL_VIEW_CLASS_48_BITS = $000082C7;
  GL_VIEW_CLASS_32_BITS = $000082C8;
  GL_VIEW_CLASS_24_BITS = $000082C9;
  GL_VIEW_CLASS_16_BITS = $000082CA;
  GL_VIEW_CLASS_8_BITS = $000082CB;
  GL_VIEW_CLASS_S3TC_DXT1_RGB = $000082CC;
  GL_VIEW_CLASS_S3TC_DXT1_RGBA = $000082CD;
  GL_VIEW_CLASS_S3TC_DXT3_RGBA = $000082CE;
  GL_VIEW_CLASS_S3TC_DXT5_RGBA = $000082CF;
  GL_VIEW_CLASS_RGTC1_RED = $000082D0;
  GL_VIEW_CLASS_RGTC2_RG = $000082D1;
  GL_VIEW_CLASS_BPTC_UNORM = $000082D2;
  GL_VIEW_CLASS_BPTC_FLOAT = $000082D3;
  GL_VERTEX_ATTRIB_BINDING = $000082D4;
  GL_VERTEX_ATTRIB_RELATIVE_OFFSET = $000082D5;
  GL_VERTEX_BINDING_DIVISOR = $000082D6;
  GL_VERTEX_BINDING_OFFSET = $000082D7;
  GL_VERTEX_BINDING_STRIDE = $000082D8;
  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = $000082D9;
  GL_MAX_VERTEX_ATTRIB_BINDINGS = $000082DA;
  GL_TEXTURE_VIEW_MIN_LEVEL = $000082DB;
  GL_TEXTURE_VIEW_MIN_LEVEL_EXT = $000082DB;
  GL_TEXTURE_VIEW_MIN_LEVEL_OES = $000082DB;
  GL_TEXTURE_VIEW_NUM_LEVELS = $000082DC;
  GL_TEXTURE_VIEW_NUM_LEVELS_EXT = $000082DC;
  GL_TEXTURE_VIEW_NUM_LEVELS_OES = $000082DC;
  GL_TEXTURE_VIEW_MIN_LAYER = $000082DD;
  GL_TEXTURE_VIEW_MIN_LAYER_EXT = $000082DD;
  GL_TEXTURE_VIEW_MIN_LAYER_OES = $000082DD;
  GL_TEXTURE_VIEW_NUM_LAYERS = $000082DE;
  GL_TEXTURE_VIEW_NUM_LAYERS_EXT = $000082DE;
  GL_TEXTURE_VIEW_NUM_LAYERS_OES = $000082DE;
  GL_TEXTURE_IMMUTABLE_LEVELS = $000082DF;
  GL_BUFFER = $000082E0;
  GL_BUFFER_KHR = $000082E0;
  GL_SHADER = $000082E1;
  GL_SHADER_KHR = $000082E1;
  GL_PROGRAM = $000082E2;
  GL_PROGRAM_KHR = $000082E2;
  GL_QUERY = $000082E3;
  GL_QUERY_KHR = $000082E3;
  GL_PROGRAM_PIPELINE = $000082E4;
  GL_PROGRAM_PIPELINE_KHR = $000082E4;
  GL_MAX_VERTEX_ATTRIB_STRIDE = $000082E5;
  GL_SAMPLER = $000082E6;
  GL_SAMPLER_KHR = $000082E6;
  GL_DISPLAY_LIST = $000082E7;
  GL_MAX_LABEL_LENGTH = $000082E8;
  GL_MAX_LABEL_LENGTH_KHR = $000082E8;
  GL_NUM_SHADING_LANGUAGE_VERSIONS = $000082E9;
  GL_QUERY_TARGET = $000082EA;
  GL_TRANSFORM_FEEDBACK_OVERFLOW = $000082EC;
  GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = GL_TRANSFORM_FEEDBACK_OVERFLOW;
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = $000082ED;
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW;
  GL_VERTICES_SUBMITTED = $000082EE;
  GL_VERTICES_SUBMITTED_ARB = GL_VERTICES_SUBMITTED;
  GL_PRIMITIVES_SUBMITTED = $000082EF;
  GL_PRIMITIVES_SUBMITTED_ARB = GL_PRIMITIVES_SUBMITTED;
  GL_VERTEX_SHADER_INVOCATIONS = $000082F0;
  GL_VERTEX_SHADER_INVOCATIONS_ARB = GL_VERTEX_SHADER_INVOCATIONS;
  GL_TESS_CONTROL_SHADER_PATCHES = $000082F1;
  GL_TESS_CONTROL_SHADER_PATCHES_ARB = GL_TESS_CONTROL_SHADER_PATCHES;
  GL_TESS_EVALUATION_SHADER_INVOCATIONS = $000082F2;
  GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = GL_TESS_EVALUATION_SHADER_INVOCATIONS;
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = $000082F3;
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED;
  GL_FRAGMENT_SHADER_INVOCATIONS = $000082F4;
  GL_FRAGMENT_SHADER_INVOCATIONS_ARB = GL_FRAGMENT_SHADER_INVOCATIONS;
  GL_COMPUTE_SHADER_INVOCATIONS = $000082F5;
  GL_COMPUTE_SHADER_INVOCATIONS_ARB = GL_COMPUTE_SHADER_INVOCATIONS;
  GL_CLIPPING_INPUT_PRIMITIVES = $000082F6;
  GL_CLIPPING_INPUT_PRIMITIVES_ARB = GL_CLIPPING_INPUT_PRIMITIVES;
  GL_CLIPPING_OUTPUT_PRIMITIVES = $000082F7;
  GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = GL_CLIPPING_OUTPUT_PRIMITIVES;
  GL_SPARSE_BUFFER_PAGE_SIZE_ARB = $000082F8;
  GL_MAX_CULL_DISTANCES = $000082F9;
  GL_MAX_CULL_DISTANCES_EXT = GL_MAX_CULL_DISTANCES;
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = $000082FA;
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT = GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES;
  GL_CONTEXT_RELEASE_BEHAVIOR = $000082FB;
  GL_CONTEXT_RELEASE_BEHAVIOR_KHR = $000082FB;
  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = $000082FC;
  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = $000082FC;
  GL_ROBUST_GPU_TIMEOUT_MS_KHR = $000082FD;
  GL_DEPTH_PASS_INSTRUMENT_SGIX = $00008310;
  GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = $00008311;
  GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = $00008312;
  GL_FRAGMENTS_INSTRUMENT_SGIX = $00008313;
  GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX = $00008314;
  GL_FRAGMENTS_INSTRUMENT_MAX_SGIX = $00008315;
  GL_CONVOLUTION_HINT_SGIX = $00008316;
  GL_YCRCB_SGIX = $00008318;
  GL_YCRCBA_SGIX = $00008319;
  GL_UNPACK_COMPRESSED_SIZE_SGIX = $0000831A;
  GL_PACK_MAX_COMPRESSED_SIZE_SGIX = $0000831B;
  GL_PACK_COMPRESSED_SIZE_SGIX = $0000831C;
  GL_SLIM8U_SGIX = $0000831D;
  GL_SLIM10U_SGIX = $0000831E;
  GL_SLIM12S_SGIX = $0000831F;
  GL_ALPHA_MIN_SGIX = $00008320;
  GL_ALPHA_MAX_SGIX = $00008321;
  GL_SCALEBIAS_HINT_SGIX = $00008322;
  GL_ASYNC_MARKER_SGIX = $00008329;
  GL_PIXEL_TEX_GEN_MODE_SGIX = $0000832B;
  GL_ASYNC_HISTOGRAM_SGIX = $0000832C;
  GL_MAX_ASYNC_HISTOGRAM_SGIX = $0000832D;
  GL_PIXEL_TRANSFORM_2D_EXT = $00008330;
  GL_PIXEL_MAG_FILTER_EXT = $00008331;
  GL_PIXEL_MIN_FILTER_EXT = $00008332;
  GL_PIXEL_CUBIC_WEIGHT_EXT = $00008333;
  GL_CUBIC_EXT = $00008334;
  GL_AVERAGE_EXT = $00008335;
  GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = $00008336;
  GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = $00008337;
  GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = $00008338;
  GL_FRAGMENT_MATERIAL_EXT = $00008349;
  GL_FRAGMENT_NORMAL_EXT = $0000834A;
  GL_FRAGMENT_COLOR_EXT = $0000834C;
  GL_ATTENUATION_EXT = $0000834D;
  GL_SHADOW_ATTENUATION_EXT = $0000834E;
  GL_TEXTURE_APPLICATION_MODE_EXT = $0000834F;
  GL_TEXTURE_LIGHT_EXT = $00008350;
  GL_TEXTURE_MATERIAL_FACE_EXT = $00008351;
  GL_TEXTURE_MATERIAL_PARAMETER_EXT = $00008352;
  GL_PIXEL_TEXTURE_SGIS = $00008353;
  GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = $00008354;
  GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = $00008355;
  GL_PIXEL_GROUP_COLOR_SGIS = $00008356;
  GL_LINE_QUALITY_HINT_SGIX = $0000835B;
  GL_ASYNC_TEX_IMAGE_SGIX = $0000835C;
  GL_ASYNC_DRAW_PIXELS_SGIX = $0000835D;
  GL_ASYNC_READ_PIXELS_SGIX = $0000835E;
  GL_MAX_ASYNC_TEX_IMAGE_SGIX = $0000835F;
  GL_MAX_ASYNC_DRAW_PIXELS_SGIX = $00008360;
  GL_MAX_ASYNC_READ_PIXELS_SGIX = $00008361;
  GL_UNSIGNED_BYTE_2_3_3_REV = $00008362;
  GL_UNSIGNED_BYTE_2_3_3_REV_EXT = $00008362;
  GL_UNSIGNED_SHORT_5_6_5 = $00008363;
  GL_UNSIGNED_SHORT_5_6_5_EXT = $00008363;
  GL_UNSIGNED_SHORT_5_6_5_REV = $00008364;
  GL_UNSIGNED_SHORT_5_6_5_REV_EXT = $00008364;
  GL_UNSIGNED_SHORT_4_4_4_4_REV = $00008365;
  GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = $00008365;
  GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = $00008365;
  GL_UNSIGNED_SHORT_1_5_5_5_REV = $00008366;
  GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = $00008366;
  GL_UNSIGNED_INT_8_8_8_8_REV = $00008367;
  GL_UNSIGNED_INT_8_8_8_8_REV_EXT = $00008367;
  GL_UNSIGNED_INT_2_10_10_10_REV = $00008368;
  GL_UNSIGNED_INT_2_10_10_10_REV_EXT = $00008368;
  GL_TEXTURE_MAX_CLAMP_S_SGIX = $00008369;
  GL_TEXTURE_MAX_CLAMP_T_SGIX = $0000836A;
  GL_TEXTURE_MAX_CLAMP_R_SGIX = $0000836B;
  GL_MIRRORED_REPEAT = $00008370;
  GL_MIRRORED_REPEAT_ARB = $00008370;
  GL_MIRRORED_REPEAT_IBM = $00008370;
  GL_MIRRORED_REPEAT_OES = $00008370;
  GL_RGB_S3TC = $000083A0;
  GL_RGB4_S3TC = $000083A1;
  GL_RGBA_S3TC = $000083A2;
  GL_RGBA4_S3TC = $000083A3;
  GL_RGBA_DXT5_S3TC = $000083A4;
  GL_RGBA4_DXT5_S3TC = $000083A5;
  GL_VERTEX_PRECLIP_SGIX = $000083EE;
  GL_VERTEX_PRECLIP_HINT_SGIX = $000083EF;
  GL_COMPRESSED_RGB_S3TC_DXT1_EXT = $000083F0;
  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = $000083F1;
  GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = $000083F2;
  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = $000083F2;
  GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = $000083F3;
  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = $000083F3;
  GL_PARALLEL_ARRAYS_INTEL = $000083F4;
  GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = $000083F5;
  GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = $000083F6;
  GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = $000083F7;
  GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = $000083F8;
  GL_PERFQUERY_DONOT_FLUSH_INTEL = $000083F9;
  GL_PERFQUERY_FLUSH_INTEL = $000083FA;
  GL_PERFQUERY_WAIT_INTEL = $000083FB;
  GL_BLACKHOLE_RENDER_INTEL = $000083FC;
  GL_CONSERVATIVE_RASTERIZATION_INTEL = $000083FE;
  GL_TEXTURE_MEMORY_LAYOUT_INTEL = $000083FF;
  GL_FRAGMENT_LIGHTING_SGIX = $00008400;
  GL_FRAGMENT_COLOR_MATERIAL_SGIX = $00008401;
  GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = $00008402;
  GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = $00008403;
  GL_MAX_FRAGMENT_LIGHTS_SGIX = $00008404;
  GL_MAX_ACTIVE_LIGHTS_SGIX = $00008405;
  GL_CURRENT_RASTER_NORMAL_SGIX = $00008406;
  GL_LIGHT_ENV_MODE_SGIX = $00008407;
  GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = $00008408;
  GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = $00008409;
  GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = $0000840A;
  GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = $0000840B;
  GL_FRAGMENT_LIGHT0_SGIX = $0000840C;
  GL_FRAGMENT_LIGHT1_SGIX = $0000840D;
  GL_FRAGMENT_LIGHT2_SGIX = $0000840E;
  GL_FRAGMENT_LIGHT3_SGIX = $0000840F;
  GL_FRAGMENT_LIGHT4_SGIX = $00008410;
  GL_FRAGMENT_LIGHT5_SGIX = $00008411;
  GL_FRAGMENT_LIGHT6_SGIX = $00008412;
  GL_FRAGMENT_LIGHT7_SGIX = $00008413;
  GL_PACK_RESAMPLE_SGIX = $0000842E;
  GL_UNPACK_RESAMPLE_SGIX = $0000842F;
  GL_RESAMPLE_DECIMATE_SGIX = $00008430;
  GL_RESAMPLE_REPLICATE_SGIX = $00008433;
  GL_RESAMPLE_ZERO_FILL_SGIX = $00008434;
  GL_TANGENT_ARRAY_EXT = $00008439;
  GL_BINORMAL_ARRAY_EXT = $0000843A;
  GL_CURRENT_TANGENT_EXT = $0000843B;
  GL_CURRENT_BINORMAL_EXT = $0000843C;
  GL_TANGENT_ARRAY_TYPE_EXT = $0000843E;
  GL_TANGENT_ARRAY_STRIDE_EXT = $0000843F;
  GL_BINORMAL_ARRAY_TYPE_EXT = $00008440;
  GL_BINORMAL_ARRAY_STRIDE_EXT = $00008441;
  GL_TANGENT_ARRAY_POINTER_EXT = $00008442;
  GL_BINORMAL_ARRAY_POINTER_EXT = $00008443;
  GL_MAP1_TANGENT_EXT = $00008444;
  GL_MAP2_TANGENT_EXT = $00008445;
  GL_MAP1_BINORMAL_EXT = $00008446;
  GL_MAP2_BINORMAL_EXT = $00008447;
  GL_NEAREST_CLIPMAP_NEAREST_SGIX = $0000844D;
  GL_NEAREST_CLIPMAP_LINEAR_SGIX = $0000844E;
  GL_LINEAR_CLIPMAP_NEAREST_SGIX = $0000844F;
  GL_FOG_COORDINATE_SOURCE = $00008450;
  GL_FOG_COORDINATE_SOURCE_EXT = $00008450;
  GL_FOG_COORD_SRC = GL_FOG_COORDINATE_SOURCE;
  GL_FOG_COORDINATE = $00008451;
  GL_FOG_COORDINATE_EXT = $00008451;
  GL_FOG_COORD = GL_FOG_COORDINATE;
  GL_FRAGMENT_DEPTH = $00008452;
  GL_FRAGMENT_DEPTH_EXT = $00008452;
  GL_CURRENT_FOG_COORDINATE = $00008453;
  GL_CURRENT_FOG_COORD = GL_CURRENT_FOG_COORDINATE;
  GL_CURRENT_FOG_COORDINATE_EXT = $00008453;
  GL_FOG_COORDINATE_ARRAY_TYPE = $00008454;
  GL_FOG_COORDINATE_ARRAY_TYPE_EXT = $00008454;
  GL_FOG_COORD_ARRAY_TYPE = GL_FOG_COORDINATE_ARRAY_TYPE;
  GL_FOG_COORDINATE_ARRAY_STRIDE = $00008455;
  GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = $00008455;
  GL_FOG_COORD_ARRAY_STRIDE = GL_FOG_COORDINATE_ARRAY_STRIDE;
  GL_FOG_COORDINATE_ARRAY_POINTER = $00008456;
  GL_FOG_COORDINATE_ARRAY_POINTER_EXT = $00008456;
  GL_FOG_COORD_ARRAY_POINTER = GL_FOG_COORDINATE_ARRAY_POINTER;
  GL_FOG_COORDINATE_ARRAY = $00008457;
  GL_FOG_COORDINATE_ARRAY_EXT = $00008457;
  GL_FOG_COORD_ARRAY = GL_FOG_COORDINATE_ARRAY;
  GL_COLOR_SUM = $00008458;
  GL_COLOR_SUM_ARB = $00008458;
  GL_COLOR_SUM_EXT = $00008458;
  GL_CURRENT_SECONDARY_COLOR = $00008459;
  GL_CURRENT_SECONDARY_COLOR_EXT = $00008459;
  GL_SECONDARY_COLOR_ARRAY_SIZE = $0000845A;
  GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = $0000845A;
  GL_SECONDARY_COLOR_ARRAY_TYPE = $0000845B;
  GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = $0000845B;
  GL_SECONDARY_COLOR_ARRAY_STRIDE = $0000845C;
  GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = $0000845C;
  GL_SECONDARY_COLOR_ARRAY_POINTER = $0000845D;
  GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = $0000845D;
  GL_SECONDARY_COLOR_ARRAY = $0000845E;
  GL_SECONDARY_COLOR_ARRAY_EXT = $0000845E;
  GL_CURRENT_RASTER_SECONDARY_COLOR = $0000845F;
  GL_ALIASED_POINT_SIZE_RANGE = $0000846D;
  GL_ALIASED_LINE_WIDTH_RANGE = $0000846E;
  GL_SCREEN_COORDINATES_REND = $00008490;
  GL_INVERTED_SCREEN_W_REND = $00008491;
  GL_TEXTURE0 = $000084C0;
  GL_TEXTURE0_ARB = $000084C0;
  GL_TEXTURE1 = $000084C1;
  GL_TEXTURE1_ARB = $000084C1;
  GL_TEXTURE2 = $000084C2;
  GL_TEXTURE2_ARB = $000084C2;
  GL_TEXTURE3 = $000084C3;
  GL_TEXTURE3_ARB = $000084C3;
  GL_TEXTURE4 = $000084C4;
  GL_TEXTURE4_ARB = $000084C4;
  GL_TEXTURE5 = $000084C5;
  GL_TEXTURE5_ARB = $000084C5;
  GL_TEXTURE6 = $000084C6;
  GL_TEXTURE6_ARB = $000084C6;
  GL_TEXTURE7 = $000084C7;
  GL_TEXTURE7_ARB = $000084C7;
  GL_TEXTURE8 = $000084C8;
  GL_TEXTURE8_ARB = $000084C8;
  GL_TEXTURE9 = $000084C9;
  GL_TEXTURE9_ARB = $000084C9;
  GL_TEXTURE10 = $000084CA;
  GL_TEXTURE10_ARB = $000084CA;
  GL_TEXTURE11 = $000084CB;
  GL_TEXTURE11_ARB = $000084CB;
  GL_TEXTURE12 = $000084CC;
  GL_TEXTURE12_ARB = $000084CC;
  GL_TEXTURE13 = $000084CD;
  GL_TEXTURE13_ARB = $000084CD;
  GL_TEXTURE14 = $000084CE;
  GL_TEXTURE14_ARB = $000084CE;
  GL_TEXTURE15 = $000084CF;
  GL_TEXTURE15_ARB = $000084CF;
  GL_TEXTURE16 = $000084D0;
  GL_TEXTURE16_ARB = $000084D0;
  GL_TEXTURE17 = $000084D1;
  GL_TEXTURE17_ARB = $000084D1;
  GL_TEXTURE18 = $000084D2;
  GL_TEXTURE18_ARB = $000084D2;
  GL_TEXTURE19 = $000084D3;
  GL_TEXTURE19_ARB = $000084D3;
  GL_TEXTURE20 = $000084D4;
  GL_TEXTURE20_ARB = $000084D4;
  GL_TEXTURE21 = $000084D5;
  GL_TEXTURE21_ARB = $000084D5;
  GL_TEXTURE22 = $000084D6;
  GL_TEXTURE22_ARB = $000084D6;
  GL_TEXTURE23 = $000084D7;
  GL_TEXTURE23_ARB = $000084D7;
  GL_TEXTURE24 = $000084D8;
  GL_TEXTURE24_ARB = $000084D8;
  GL_TEXTURE25 = $000084D9;
  GL_TEXTURE25_ARB = $000084D9;
  GL_TEXTURE26 = $000084DA;
  GL_TEXTURE26_ARB = $000084DA;
  GL_TEXTURE27 = $000084DB;
  GL_TEXTURE27_ARB = $000084DB;
  GL_TEXTURE28 = $000084DC;
  GL_TEXTURE28_ARB = $000084DC;
  GL_TEXTURE29 = $000084DD;
  GL_TEXTURE29_ARB = $000084DD;
  GL_TEXTURE30 = $000084DE;
  GL_TEXTURE30_ARB = $000084DE;
  GL_TEXTURE31 = $000084DF;
  GL_TEXTURE31_ARB = $000084DF;
  GL_ACTIVE_TEXTURE = $000084E0;
  GL_ACTIVE_TEXTURE_ARB = $000084E0;
  GL_CLIENT_ACTIVE_TEXTURE = $000084E1;
  GL_CLIENT_ACTIVE_TEXTURE_ARB = $000084E1;
  GL_MAX_TEXTURE_UNITS = $000084E2;
  GL_MAX_TEXTURE_UNITS_ARB = $000084E2;
  GL_TRANSPOSE_MODELVIEW_MATRIX = $000084E3;
  GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = $000084E3;
  GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = $000084E3;
  GL_TRANSPOSE_PROJECTION_MATRIX = $000084E4;
  GL_TRANSPOSE_PROJECTION_MATRIX_ARB = $000084E4;
  GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = $000084E4;
  GL_TRANSPOSE_TEXTURE_MATRIX = $000084E5;
  GL_TRANSPOSE_TEXTURE_MATRIX_ARB = $000084E5;
  GL_TRANSPOSE_COLOR_MATRIX = $000084E6;
  GL_TRANSPOSE_COLOR_MATRIX_ARB = $000084E6;
  GL_SUBTRACT = $000084E7;
  GL_SUBTRACT_ARB = $000084E7;
  GL_MAX_RENDERBUFFER_SIZE = $000084E8;
  GL_MAX_RENDERBUFFER_SIZE_EXT = $000084E8;
  GL_MAX_RENDERBUFFER_SIZE_OES = $000084E8;
  GL_COMPRESSED_ALPHA = $000084E9;
  GL_COMPRESSED_ALPHA_ARB = $000084E9;
  GL_COMPRESSED_LUMINANCE = $000084EA;
  GL_COMPRESSED_LUMINANCE_ARB = $000084EA;
  GL_COMPRESSED_LUMINANCE_ALPHA = $000084EB;
  GL_COMPRESSED_LUMINANCE_ALPHA_ARB = $000084EB;
  GL_COMPRESSED_INTENSITY = $000084EC;
  GL_COMPRESSED_INTENSITY_ARB = $000084EC;
  GL_COMPRESSED_RGB = $000084ED;
  GL_COMPRESSED_RGB_ARB = $000084ED;
  GL_COMPRESSED_RGBA = $000084EE;
  GL_COMPRESSED_RGBA_ARB = $000084EE;
  GL_TEXTURE_COMPRESSION_HINT = $000084EF;
  GL_TEXTURE_COMPRESSION_HINT_ARB = $000084EF;
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = $000084F0;
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = $000084F1;
  GL_ALL_COMPLETED_NV = $000084F2;
  GL_FENCE_STATUS_NV = $000084F3;
  GL_FENCE_CONDITION_NV = $000084F4;
  GL_TEXTURE_RECTANGLE = $000084F5;
  GL_TEXTURE_RECTANGLE_ARB = $000084F5;
  GL_TEXTURE_RECTANGLE_NV = $000084F5;
  GL_TEXTURE_BINDING_RECTANGLE = $000084F6;
  GL_TEXTURE_BINDING_RECTANGLE_ARB = $000084F6;
  GL_TEXTURE_BINDING_RECTANGLE_NV = $000084F6;
  GL_PROXY_TEXTURE_RECTANGLE = $000084F7;
  GL_PROXY_TEXTURE_RECTANGLE_ARB = $000084F7;
  GL_PROXY_TEXTURE_RECTANGLE_NV = $000084F7;
  GL_MAX_RECTANGLE_TEXTURE_SIZE = $000084F8;
  GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = $000084F8;
  GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = $000084F8;
  GL_DEPTH_STENCIL = $000084F9;
  GL_DEPTH_STENCIL_EXT = $000084F9;
  GL_DEPTH_STENCIL_NV = $000084F9;
  GL_DEPTH_STENCIL_OES = $000084F9;
  GL_UNSIGNED_INT_24_8 = $000084FA;
  GL_UNSIGNED_INT_24_8_EXT = $000084FA;
  GL_UNSIGNED_INT_24_8_NV = $000084FA;
  GL_UNSIGNED_INT_24_8_OES = $000084FA;
  GL_MAX_TEXTURE_LOD_BIAS = $000084FD;
  GL_MAX_TEXTURE_LOD_BIAS_EXT = $000084FD;
  GL_TEXTURE_MAX_ANISOTROPY = $000084FE;
  GL_TEXTURE_MAX_ANISOTROPY_EXT = GL_TEXTURE_MAX_ANISOTROPY;
  GL_MAX_TEXTURE_MAX_ANISOTROPY = $000084FF;
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = GL_MAX_TEXTURE_MAX_ANISOTROPY;
  GL_TEXTURE_FILTER_CONTROL = $00008500;
  GL_TEXTURE_FILTER_CONTROL_EXT = $00008500;
  GL_TEXTURE_LOD_BIAS = $00008501;
  GL_TEXTURE_LOD_BIAS_EXT = $00008501;
  GL_MODELVIEW1_STACK_DEPTH_EXT = $00008502;
  GL_COMBINE4_NV = $00008503;
  GL_MAX_SHININESS_NV = $00008504;
  GL_MAX_SPOT_EXPONENT_NV = $00008505;
  GL_MODELVIEW1_MATRIX_EXT = $00008506;
  GL_INCR_WRAP = $00008507;
  GL_INCR_WRAP_EXT = $00008507;
  GL_INCR_WRAP_OES = $00008507;
  GL_DECR_WRAP = $00008508;
  GL_DECR_WRAP_EXT = $00008508;
  GL_DECR_WRAP_OES = $00008508;
  GL_VERTEX_WEIGHTING_EXT = $00008509;
  GL_MODELVIEW1_ARB = $0000850A;
  GL_MODELVIEW1_EXT = $0000850A;
  GL_CURRENT_VERTEX_WEIGHT_EXT = $0000850B;
  GL_VERTEX_WEIGHT_ARRAY_EXT = $0000850C;
  GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = $0000850D;
  GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = $0000850E;
  GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = $0000850F;
  GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = $00008510;
  GL_NORMAL_MAP = $00008511;
  GL_NORMAL_MAP_ARB = $00008511;
  GL_NORMAL_MAP_EXT = $00008511;
  GL_NORMAL_MAP_NV = $00008511;
  GL_NORMAL_MAP_OES = $00008511;
  GL_REFLECTION_MAP = $00008512;
  GL_REFLECTION_MAP_ARB = $00008512;
  GL_REFLECTION_MAP_EXT = $00008512;
  GL_REFLECTION_MAP_NV = $00008512;
  GL_REFLECTION_MAP_OES = $00008512;
  GL_TEXTURE_CUBE_MAP = $00008513;
  GL_TEXTURE_CUBE_MAP_ARB = $00008513;
  GL_TEXTURE_CUBE_MAP_EXT = $00008513;
  GL_TEXTURE_CUBE_MAP_OES = $00008513;
  GL_TEXTURE_BINDING_CUBE_MAP = $00008514;
  GL_TEXTURE_BINDING_CUBE_MAP_ARB = $00008514;
  GL_TEXTURE_BINDING_CUBE_MAP_EXT = $00008514;
  GL_TEXTURE_BINDING_CUBE_MAP_OES = $00008514;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X = $00008515;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = $00008515;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = $00008515;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = $00008515;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X = $00008516;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = $00008516;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = $00008516;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = $00008516;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y = $00008517;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = $00008517;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = $00008517;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = $00008517;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = $00008518;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = $00008518;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = $00008518;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = $00008518;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z = $00008519;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = $00008519;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = $00008519;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = $00008519;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = $0000851A;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = $0000851A;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = $0000851A;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = $0000851A;
  GL_PROXY_TEXTURE_CUBE_MAP = $0000851B;
  GL_PROXY_TEXTURE_CUBE_MAP_ARB = $0000851B;
  GL_PROXY_TEXTURE_CUBE_MAP_EXT = $0000851B;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE = $0000851C;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = $0000851C;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = $0000851C;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = $0000851C;
  GL_VERTEX_ARRAY_RANGE_APPLE = $0000851D;
  GL_VERTEX_ARRAY_RANGE_NV = $0000851D;
  GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = $0000851E;
  GL_VERTEX_ARRAY_RANGE_LENGTH_NV = $0000851E;
  GL_VERTEX_ARRAY_RANGE_VALID_NV = $0000851F;
  GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = $0000851F;
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = $00008520;
  GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = $00008521;
  GL_VERTEX_ARRAY_RANGE_POINTER_NV = $00008521;
  GL_REGISTER_COMBINERS_NV = $00008522;
  GL_VARIABLE_A_NV = $00008523;
  GL_VARIABLE_B_NV = $00008524;
  GL_VARIABLE_C_NV = $00008525;
  GL_VARIABLE_D_NV = $00008526;
  GL_VARIABLE_E_NV = $00008527;
  GL_VARIABLE_F_NV = $00008528;
  GL_VARIABLE_G_NV = $00008529;
  GL_CONSTANT_COLOR0_NV = $0000852A;
  GL_CONSTANT_COLOR1_NV = $0000852B;
  GL_PRIMARY_COLOR_NV = $0000852C;
  GL_SECONDARY_COLOR_NV = $0000852D;
  GL_SPARE0_NV = $0000852E;
  GL_SPARE1_NV = $0000852F;
  GL_DISCARD_NV = $00008530;
  GL_E_TIMES_F_NV = $00008531;
  GL_SPARE0_PLUS_SECONDARY_COLOR_NV = $00008532;
  GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = $00008533;
  GL_MULTISAMPLE_FILTER_HINT_NV = $00008534;
  GL_PER_STAGE_CONSTANTS_NV = $00008535;
  GL_UNSIGNED_IDENTITY_NV = $00008536;
  GL_UNSIGNED_INVERT_NV = $00008537;
  GL_EXPAND_NORMAL_NV = $00008538;
  GL_EXPAND_NEGATE_NV = $00008539;
  GL_HALF_BIAS_NORMAL_NV = $0000853A;
  GL_HALF_BIAS_NEGATE_NV = $0000853B;
  GL_SIGNED_IDENTITY_NV = $0000853C;
  GL_SIGNED_NEGATE_NV = $0000853D;
  GL_SCALE_BY_TWO_NV = $0000853E;
  GL_SCALE_BY_FOUR_NV = $0000853F;
  GL_SCALE_BY_ONE_HALF_NV = $00008540;
  GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = $00008541;
  GL_COMBINER_INPUT_NV = $00008542;
  GL_COMBINER_MAPPING_NV = $00008543;
  GL_COMBINER_COMPONENT_USAGE_NV = $00008544;
  GL_COMBINER_AB_DOT_PRODUCT_NV = $00008545;
  GL_COMBINER_CD_DOT_PRODUCT_NV = $00008546;
  GL_COMBINER_MUX_SUM_NV = $00008547;
  GL_COMBINER_SCALE_NV = $00008548;
  GL_COMBINER_BIAS_NV = $00008549;
  GL_COMBINER_AB_OUTPUT_NV = $0000854A;
  GL_COMBINER_CD_OUTPUT_NV = $0000854B;
  GL_COMBINER_SUM_OUTPUT_NV = $0000854C;
  GL_MAX_GENERAL_COMBINERS_NV = $0000854D;
  GL_NUM_GENERAL_COMBINERS_NV = $0000854E;
  GL_COLOR_SUM_CLAMP_NV = $0000854F;
  GL_COMBINER0_NV = $00008550;
  GL_COMBINER1_NV = $00008551;
  GL_COMBINER2_NV = $00008552;
  GL_COMBINER3_NV = $00008553;
  GL_COMBINER4_NV = $00008554;
  GL_COMBINER5_NV = $00008555;
  GL_COMBINER6_NV = $00008556;
  GL_COMBINER7_NV = $00008557;
  GL_PRIMITIVE_RESTART_NV = $00008558;
  GL_PRIMITIVE_RESTART_INDEX_NV = $00008559;
  GL_FOG_DISTANCE_MODE_NV = $0000855A;
  GL_EYE_RADIAL_NV = $0000855B;
  GL_EYE_PLANE_ABSOLUTE_NV = $0000855C;
  GL_EMBOSS_LIGHT_NV = $0000855D;
  GL_EMBOSS_CONSTANT_NV = $0000855E;
  GL_EMBOSS_MAP_NV = $0000855F;
  GL_RED_MIN_CLAMP_INGR = $00008560;
  GL_GREEN_MIN_CLAMP_INGR = $00008561;
  GL_BLUE_MIN_CLAMP_INGR = $00008562;
  GL_ALPHA_MIN_CLAMP_INGR = $00008563;
  GL_RED_MAX_CLAMP_INGR = $00008564;
  GL_GREEN_MAX_CLAMP_INGR = $00008565;
  GL_BLUE_MAX_CLAMP_INGR = $00008566;
  GL_ALPHA_MAX_CLAMP_INGR = $00008567;
  GL_INTERLACE_READ_INGR = $00008568;
  GL_COMBINE = $00008570;
  GL_COMBINE_ARB = $00008570;
  GL_COMBINE_EXT = $00008570;
  GL_COMBINE_RGB = $00008571;
  GL_COMBINE_RGB_ARB = $00008571;
  GL_COMBINE_RGB_EXT = $00008571;
  GL_COMBINE_ALPHA = $00008572;
  GL_COMBINE_ALPHA_ARB = $00008572;
  GL_COMBINE_ALPHA_EXT = $00008572;
  GL_RGB_SCALE = $00008573;
  GL_RGB_SCALE_ARB = $00008573;
  GL_RGB_SCALE_EXT = $00008573;
  GL_ADD_SIGNED = $00008574;
  GL_ADD_SIGNED_ARB = $00008574;
  GL_ADD_SIGNED_EXT = $00008574;
  GL_INTERPOLATE = $00008575;
  GL_INTERPOLATE_ARB = $00008575;
  GL_INTERPOLATE_EXT = $00008575;
  GL_CONSTANT = $00008576;
  GL_CONSTANT_ARB = $00008576;
  GL_CONSTANT_EXT = $00008576;
  GL_CONSTANT_NV = $00008576;
  GL_PRIMARY_COLOR = $00008577;
  GL_PRIMARY_COLOR_ARB = $00008577;
  GL_PRIMARY_COLOR_EXT = $00008577;
  GL_PREVIOUS = $00008578;
  GL_PREVIOUS_ARB = $00008578;
  GL_PREVIOUS_EXT = $00008578;
  GL_SOURCE0_RGB = $00008580;
  GL_SOURCE0_RGB_ARB = $00008580;
  GL_SOURCE0_RGB_EXT = $00008580;
  GL_SRC0_RGB = GL_SOURCE0_RGB;
  GL_SOURCE1_RGB = $00008581;
  GL_SOURCE1_RGB_ARB = $00008581;
  GL_SOURCE1_RGB_EXT = $00008581;
  GL_SRC1_RGB = GL_SOURCE1_RGB;
  GL_SOURCE2_RGB = $00008582;
  GL_SOURCE2_RGB_ARB = $00008582;
  GL_SOURCE2_RGB_EXT = $00008582;
  GL_SRC2_RGB = GL_SOURCE2_RGB;
  GL_SOURCE3_RGB_NV = $00008583;
  GL_SOURCE0_ALPHA = $00008588;
  GL_SOURCE0_ALPHA_ARB = $00008588;
  GL_SOURCE0_ALPHA_EXT = $00008588;
  GL_SRC0_ALPHA = GL_SOURCE0_ALPHA;
  GL_SOURCE1_ALPHA = $00008589;
  GL_SOURCE1_ALPHA_ARB = $00008589;
  GL_SOURCE1_ALPHA_EXT = $00008589;
  GL_SRC1_ALPHA = GL_SOURCE1_ALPHA;
  GL_SRC1_ALPHA_EXT = $00008589;
  GL_SOURCE2_ALPHA = $0000858A;
  GL_SOURCE2_ALPHA_ARB = $0000858A;
  GL_SOURCE2_ALPHA_EXT = $0000858A;
  GL_SRC2_ALPHA = GL_SOURCE2_ALPHA;
  GL_SOURCE3_ALPHA_NV = $0000858B;
  GL_OPERAND0_RGB = $00008590;
  GL_OPERAND0_RGB_ARB = $00008590;
  GL_OPERAND0_RGB_EXT = $00008590;
  GL_OPERAND1_RGB = $00008591;
  GL_OPERAND1_RGB_ARB = $00008591;
  GL_OPERAND1_RGB_EXT = $00008591;
  GL_OPERAND2_RGB = $00008592;
  GL_OPERAND2_RGB_ARB = $00008592;
  GL_OPERAND2_RGB_EXT = $00008592;
  GL_OPERAND3_RGB_NV = $00008593;
  GL_OPERAND0_ALPHA = $00008598;
  GL_OPERAND0_ALPHA_ARB = $00008598;
  GL_OPERAND0_ALPHA_EXT = $00008598;
  GL_OPERAND1_ALPHA = $00008599;
  GL_OPERAND1_ALPHA_ARB = $00008599;
  GL_OPERAND1_ALPHA_EXT = $00008599;
  GL_OPERAND2_ALPHA = $0000859A;
  GL_OPERAND2_ALPHA_ARB = $0000859A;
  GL_OPERAND2_ALPHA_EXT = $0000859A;
  GL_OPERAND3_ALPHA_NV = $0000859B;
  GL_PACK_SUBSAMPLE_RATE_SGIX = $000085A0;
  GL_UNPACK_SUBSAMPLE_RATE_SGIX = $000085A1;
  GL_PIXEL_SUBSAMPLE_4444_SGIX = $000085A2;
  GL_PIXEL_SUBSAMPLE_2424_SGIX = $000085A3;
  GL_PIXEL_SUBSAMPLE_4242_SGIX = $000085A4;
  GL_PERTURB_EXT = $000085AE;
  GL_TEXTURE_NORMAL_EXT = $000085AF;
  GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = $000085B0;
  GL_TRANSFORM_HINT_APPLE = $000085B1;
  GL_UNPACK_CLIENT_STORAGE_APPLE = $000085B2;
  GL_BUFFER_OBJECT_APPLE = $000085B3;
  GL_STORAGE_CLIENT_APPLE = $000085B4;
  GL_VERTEX_ARRAY_BINDING = $000085B5;
  GL_VERTEX_ARRAY_BINDING_APPLE = $000085B5;
  GL_VERTEX_ARRAY_BINDING_OES = $000085B5;
  GL_TEXTURE_RANGE_LENGTH_APPLE = $000085B7;
  GL_TEXTURE_RANGE_POINTER_APPLE = $000085B8;
  GL_YCBCR_422_APPLE = $000085B9;
  GL_UNSIGNED_SHORT_8_8_APPLE = $000085BA;
  GL_UNSIGNED_SHORT_8_8_MESA = $000085BA;
  GL_UNSIGNED_SHORT_8_8_REV_APPLE = $000085BB;
  GL_UNSIGNED_SHORT_8_8_REV_MESA = $000085BB;
  GL_TEXTURE_STORAGE_HINT_APPLE = $000085BC;
  GL_STORAGE_PRIVATE_APPLE = $000085BD;
  GL_STORAGE_CACHED_APPLE = $000085BE;
  GL_STORAGE_SHARED_APPLE = $000085BF;
  GL_REPLACEMENT_CODE_ARRAY_SUN = $000085C0;
  GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = $000085C1;
  GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = $000085C2;
  GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = $000085C3;
  GL_R1UI_V3F_SUN = $000085C4;
  GL_R1UI_C4UB_V3F_SUN = $000085C5;
  GL_R1UI_C3F_V3F_SUN = $000085C6;
  GL_R1UI_N3F_V3F_SUN = $000085C7;
  GL_R1UI_C4F_N3F_V3F_SUN = $000085C8;
  GL_R1UI_T2F_V3F_SUN = $000085C9;
  GL_R1UI_T2F_N3F_V3F_SUN = $000085CA;
  GL_R1UI_T2F_C4F_N3F_V3F_SUN = $000085CB;
  GL_SLICE_ACCUM_SUN = $000085CC;
  GL_QUAD_MESH_SUN = $00008614;
  GL_TRIANGLE_MESH_SUN = $00008615;
  GL_VERTEX_PROGRAM_ARB = $00008620;
  GL_VERTEX_PROGRAM_NV = $00008620;
  GL_VERTEX_STATE_PROGRAM_NV = $00008621;
  GL_VERTEX_ATTRIB_ARRAY_ENABLED = $00008622;
  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = $00008622;
  GL_ATTRIB_ARRAY_SIZE_NV = $00008623;
  GL_VERTEX_ATTRIB_ARRAY_SIZE = $00008623;
  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = $00008623;
  GL_ATTRIB_ARRAY_STRIDE_NV = $00008624;
  GL_VERTEX_ATTRIB_ARRAY_STRIDE = $00008624;
  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = $00008624;
  GL_ATTRIB_ARRAY_TYPE_NV = $00008625;
  GL_VERTEX_ATTRIB_ARRAY_TYPE = $00008625;
  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = $00008625;
  GL_CURRENT_ATTRIB_NV = $00008626;
  GL_CURRENT_VERTEX_ATTRIB = $00008626;
  GL_CURRENT_VERTEX_ATTRIB_ARB = $00008626;
  GL_PROGRAM_LENGTH_ARB = $00008627;
  GL_PROGRAM_LENGTH_NV = $00008627;
  GL_PROGRAM_STRING_ARB = $00008628;
  GL_PROGRAM_STRING_NV = $00008628;
  GL_MODELVIEW_PROJECTION_NV = $00008629;
  GL_IDENTITY_NV = $0000862A;
  GL_INVERSE_NV = $0000862B;
  GL_TRANSPOSE_NV = $0000862C;
  GL_INVERSE_TRANSPOSE_NV = $0000862D;
  GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = $0000862E;
  GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = $0000862E;
  GL_MAX_PROGRAM_MATRICES_ARB = $0000862F;
  GL_MAX_TRACK_MATRICES_NV = $0000862F;
  GL_MATRIX0_NV = $00008630;
  GL_MATRIX1_NV = $00008631;
  GL_MATRIX2_NV = $00008632;
  GL_MATRIX3_NV = $00008633;
  GL_MATRIX4_NV = $00008634;
  GL_MATRIX5_NV = $00008635;
  GL_MATRIX6_NV = $00008636;
  GL_MATRIX7_NV = $00008637;
  GL_CURRENT_MATRIX_STACK_DEPTH_ARB = $00008640;
  GL_CURRENT_MATRIX_STACK_DEPTH_NV = $00008640;
  GL_CURRENT_MATRIX_ARB = $00008641;
  GL_CURRENT_MATRIX_NV = $00008641;
  GL_VERTEX_PROGRAM_POINT_SIZE = $00008642;
  GL_VERTEX_PROGRAM_POINT_SIZE_ARB = $00008642;
  GL_VERTEX_PROGRAM_POINT_SIZE_NV = $00008642;
  GL_PROGRAM_POINT_SIZE = GL_VERTEX_PROGRAM_POINT_SIZE;
  GL_PROGRAM_POINT_SIZE_ARB = $00008642;
  GL_PROGRAM_POINT_SIZE_EXT = $00008642;
  GL_VERTEX_PROGRAM_TWO_SIDE = $00008643;
  GL_VERTEX_PROGRAM_TWO_SIDE_ARB = $00008643;
  GL_VERTEX_PROGRAM_TWO_SIDE_NV = $00008643;
  GL_PROGRAM_PARAMETER_NV = $00008644;
  GL_ATTRIB_ARRAY_POINTER_NV = $00008645;
  GL_VERTEX_ATTRIB_ARRAY_POINTER = $00008645;
  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = $00008645;
  GL_PROGRAM_TARGET_NV = $00008646;
  GL_PROGRAM_RESIDENT_NV = $00008647;
  GL_TRACK_MATRIX_NV = $00008648;
  GL_TRACK_MATRIX_TRANSFORM_NV = $00008649;
  GL_VERTEX_PROGRAM_BINDING_NV = $0000864A;
  GL_PROGRAM_ERROR_POSITION_ARB = $0000864B;
  GL_PROGRAM_ERROR_POSITION_NV = $0000864B;
  GL_OFFSET_TEXTURE_RECTANGLE_NV = $0000864C;
  GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = $0000864D;
  GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = $0000864E;
  GL_DEPTH_CLAMP = $0000864F;
  GL_DEPTH_CLAMP_NV = $0000864F;
  GL_DEPTH_CLAMP_EXT = $0000864F;
  GL_VERTEX_ATTRIB_ARRAY0_NV = $00008650;
  GL_VERTEX_ATTRIB_ARRAY1_NV = $00008651;
  GL_VERTEX_ATTRIB_ARRAY2_NV = $00008652;
  GL_VERTEX_ATTRIB_ARRAY3_NV = $00008653;
  GL_VERTEX_ATTRIB_ARRAY4_NV = $00008654;
  GL_VERTEX_ATTRIB_ARRAY5_NV = $00008655;
  GL_VERTEX_ATTRIB_ARRAY6_NV = $00008656;
  GL_VERTEX_ATTRIB_ARRAY7_NV = $00008657;
  GL_VERTEX_ATTRIB_ARRAY8_NV = $00008658;
  GL_VERTEX_ATTRIB_ARRAY9_NV = $00008659;
  GL_VERTEX_ATTRIB_ARRAY10_NV = $0000865A;
  GL_VERTEX_ATTRIB_ARRAY11_NV = $0000865B;
  GL_VERTEX_ATTRIB_ARRAY12_NV = $0000865C;
  GL_VERTEX_ATTRIB_ARRAY13_NV = $0000865D;
  GL_VERTEX_ATTRIB_ARRAY14_NV = $0000865E;
  GL_VERTEX_ATTRIB_ARRAY15_NV = $0000865F;
  GL_MAP1_VERTEX_ATTRIB0_4_NV = $00008660;
  GL_MAP1_VERTEX_ATTRIB1_4_NV = $00008661;
  GL_MAP1_VERTEX_ATTRIB2_4_NV = $00008662;
  GL_MAP1_VERTEX_ATTRIB3_4_NV = $00008663;
  GL_MAP1_VERTEX_ATTRIB4_4_NV = $00008664;
  GL_MAP1_VERTEX_ATTRIB5_4_NV = $00008665;
  GL_MAP1_VERTEX_ATTRIB6_4_NV = $00008666;
  GL_MAP1_VERTEX_ATTRIB7_4_NV = $00008667;
  GL_MAP1_VERTEX_ATTRIB8_4_NV = $00008668;
  GL_MAP1_VERTEX_ATTRIB9_4_NV = $00008669;
  GL_MAP1_VERTEX_ATTRIB10_4_NV = $0000866A;
  GL_MAP1_VERTEX_ATTRIB11_4_NV = $0000866B;
  GL_MAP1_VERTEX_ATTRIB12_4_NV = $0000866C;
  GL_MAP1_VERTEX_ATTRIB13_4_NV = $0000866D;
  GL_MAP1_VERTEX_ATTRIB14_4_NV = $0000866E;
  GL_MAP1_VERTEX_ATTRIB15_4_NV = $0000866F;
  GL_MAP2_VERTEX_ATTRIB0_4_NV = $00008670;
  GL_MAP2_VERTEX_ATTRIB1_4_NV = $00008671;
  GL_MAP2_VERTEX_ATTRIB2_4_NV = $00008672;
  GL_MAP2_VERTEX_ATTRIB3_4_NV = $00008673;
  GL_MAP2_VERTEX_ATTRIB4_4_NV = $00008674;
  GL_MAP2_VERTEX_ATTRIB5_4_NV = $00008675;
  GL_MAP2_VERTEX_ATTRIB6_4_NV = $00008676;
  GL_MAP2_VERTEX_ATTRIB7_4_NV = $00008677;
  GL_PROGRAM_BINDING_ARB = $00008677;
  GL_MAP2_VERTEX_ATTRIB8_4_NV = $00008678;
  GL_MAP2_VERTEX_ATTRIB9_4_NV = $00008679;
  GL_MAP2_VERTEX_ATTRIB10_4_NV = $0000867A;
  GL_MAP2_VERTEX_ATTRIB11_4_NV = $0000867B;
  GL_MAP2_VERTEX_ATTRIB12_4_NV = $0000867C;
  GL_MAP2_VERTEX_ATTRIB13_4_NV = $0000867D;
  GL_MAP2_VERTEX_ATTRIB14_4_NV = $0000867E;
  GL_MAP2_VERTEX_ATTRIB15_4_NV = $0000867F;
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE = $000086A0;
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = $000086A0;
  GL_TEXTURE_COMPRESSED = $000086A1;
  GL_TEXTURE_COMPRESSED_ARB = $000086A1;
  GL_NUM_COMPRESSED_TEXTURE_FORMATS = $000086A2;
  GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = $000086A2;
  GL_COMPRESSED_TEXTURE_FORMATS = $000086A3;
  GL_COMPRESSED_TEXTURE_FORMATS_ARB = $000086A3;
  GL_MAX_VERTEX_UNITS_ARB = $000086A4;
  GL_MAX_VERTEX_UNITS_OES = $000086A4;
  GL_ACTIVE_VERTEX_UNITS_ARB = $000086A5;
  GL_WEIGHT_SUM_UNITY_ARB = $000086A6;
  GL_VERTEX_BLEND_ARB = $000086A7;
  GL_CURRENT_WEIGHT_ARB = $000086A8;
  GL_WEIGHT_ARRAY_TYPE_ARB = $000086A9;
  GL_WEIGHT_ARRAY_TYPE_OES = $000086A9;
  GL_WEIGHT_ARRAY_STRIDE_ARB = $000086AA;
  GL_WEIGHT_ARRAY_STRIDE_OES = $000086AA;
  GL_WEIGHT_ARRAY_SIZE_ARB = $000086AB;
  GL_WEIGHT_ARRAY_SIZE_OES = $000086AB;
  GL_WEIGHT_ARRAY_POINTER_ARB = $000086AC;
  GL_WEIGHT_ARRAY_POINTER_OES = $000086AC;
  GL_WEIGHT_ARRAY_ARB = $000086AD;
  GL_WEIGHT_ARRAY_OES = $000086AD;
  GL_DOT3_RGB = $000086AE;
  GL_DOT3_RGB_ARB = $000086AE;
  GL_DOT3_RGBA = $000086AF;
  GL_DOT3_RGBA_ARB = $000086AF;
  GL_DOT3_RGBA_IMG = $000086AF;
  GL_COMPRESSED_RGB_FXT1_3DFX = $000086B0;
  GL_COMPRESSED_RGBA_FXT1_3DFX = $000086B1;
  GL_MULTISAMPLE_3DFX = $000086B2;
  GL_SAMPLE_BUFFERS_3DFX = $000086B3;
  GL_SAMPLES_3DFX = $000086B4;
  GL_EVAL_2D_NV = $000086C0;
  GL_EVAL_TRIANGULAR_2D_NV = $000086C1;
  GL_MAP_TESSELLATION_NV = $000086C2;
  GL_MAP_ATTRIB_U_ORDER_NV = $000086C3;
  GL_MAP_ATTRIB_V_ORDER_NV = $000086C4;
  GL_EVAL_FRACTIONAL_TESSELLATION_NV = $000086C5;
  GL_EVAL_VERTEX_ATTRIB0_NV = $000086C6;
  GL_EVAL_VERTEX_ATTRIB1_NV = $000086C7;
  GL_EVAL_VERTEX_ATTRIB2_NV = $000086C8;
  GL_EVAL_VERTEX_ATTRIB3_NV = $000086C9;
  GL_EVAL_VERTEX_ATTRIB4_NV = $000086CA;
  GL_EVAL_VERTEX_ATTRIB5_NV = $000086CB;
  GL_EVAL_VERTEX_ATTRIB6_NV = $000086CC;
  GL_EVAL_VERTEX_ATTRIB7_NV = $000086CD;
  GL_EVAL_VERTEX_ATTRIB8_NV = $000086CE;
  GL_EVAL_VERTEX_ATTRIB9_NV = $000086CF;
  GL_EVAL_VERTEX_ATTRIB10_NV = $000086D0;
  GL_EVAL_VERTEX_ATTRIB11_NV = $000086D1;
  GL_EVAL_VERTEX_ATTRIB12_NV = $000086D2;
  GL_EVAL_VERTEX_ATTRIB13_NV = $000086D3;
  GL_EVAL_VERTEX_ATTRIB14_NV = $000086D4;
  GL_EVAL_VERTEX_ATTRIB15_NV = $000086D5;
  GL_MAX_MAP_TESSELLATION_NV = $000086D6;
  GL_MAX_RATIONAL_EVAL_ORDER_NV = $000086D7;
  GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = $000086D8;
  GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = $000086D9;
  GL_UNSIGNED_INT_S8_S8_8_8_NV = $000086DA;
  GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = $000086DB;
  GL_DSDT_MAG_INTENSITY_NV = $000086DC;
  GL_SHADER_CONSISTENT_NV = $000086DD;
  GL_TEXTURE_SHADER_NV = $000086DE;
  GL_SHADER_OPERATION_NV = $000086DF;
  GL_CULL_MODES_NV = $000086E0;
  GL_OFFSET_TEXTURE_MATRIX_NV = $000086E1;
  GL_OFFSET_TEXTURE_2D_MATRIX_NV = GL_OFFSET_TEXTURE_MATRIX_NV;
  GL_OFFSET_TEXTURE_SCALE_NV = $000086E2;
  GL_OFFSET_TEXTURE_2D_SCALE_NV = GL_OFFSET_TEXTURE_SCALE_NV;
  GL_OFFSET_TEXTURE_BIAS_NV = $000086E3;
  GL_OFFSET_TEXTURE_2D_BIAS_NV = GL_OFFSET_TEXTURE_BIAS_NV;
  GL_PREVIOUS_TEXTURE_INPUT_NV = $000086E4;
  GL_CONST_EYE_NV = $000086E5;
  GL_PASS_THROUGH_NV = $000086E6;
  GL_CULL_FRAGMENT_NV = $000086E7;
  GL_OFFSET_TEXTURE_2D_NV = $000086E8;
  GL_DEPENDENT_AR_TEXTURE_2D_NV = $000086E9;
  GL_DEPENDENT_GB_TEXTURE_2D_NV = $000086EA;
  GL_SURFACE_STATE_NV = $000086EB;
  GL_DOT_PRODUCT_NV = $000086EC;
  GL_DOT_PRODUCT_DEPTH_REPLACE_NV = $000086ED;
  GL_DOT_PRODUCT_TEXTURE_2D_NV = $000086EE;
  GL_DOT_PRODUCT_TEXTURE_3D_NV = $000086EF;
  GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = $000086F0;
  GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = $000086F1;
  GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = $000086F2;
  GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = $000086F3;
  GL_HILO_NV = $000086F4;
  GL_DSDT_NV = $000086F5;
  GL_DSDT_MAG_NV = $000086F6;
  GL_DSDT_MAG_VIB_NV = $000086F7;
  GL_HILO16_NV = $000086F8;
  GL_SIGNED_HILO_NV = $000086F9;
  GL_SIGNED_HILO16_NV = $000086FA;
  GL_SIGNED_RGBA_NV = $000086FB;
  GL_SIGNED_RGBA8_NV = $000086FC;
  GL_SURFACE_REGISTERED_NV = $000086FD;
  GL_SIGNED_RGB_NV = $000086FE;
  GL_SIGNED_RGB8_NV = $000086FF;
  GL_SURFACE_MAPPED_NV = $00008700;
  GL_SIGNED_LUMINANCE_NV = $00008701;
  GL_SIGNED_LUMINANCE8_NV = $00008702;
  GL_SIGNED_LUMINANCE_ALPHA_NV = $00008703;
  GL_SIGNED_LUMINANCE8_ALPHA8_NV = $00008704;
  GL_SIGNED_ALPHA_NV = $00008705;
  GL_SIGNED_ALPHA8_NV = $00008706;
  GL_SIGNED_INTENSITY_NV = $00008707;
  GL_SIGNED_INTENSITY8_NV = $00008708;
  GL_DSDT8_NV = $00008709;
  GL_DSDT8_MAG8_NV = $0000870A;
  GL_DSDT8_MAG8_INTENSITY8_NV = $0000870B;
  GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = $0000870C;
  GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = $0000870D;
  GL_HI_SCALE_NV = $0000870E;
  GL_LO_SCALE_NV = $0000870F;
  GL_DS_SCALE_NV = $00008710;
  GL_DT_SCALE_NV = $00008711;
  GL_MAGNITUDE_SCALE_NV = $00008712;
  GL_VIBRANCE_SCALE_NV = $00008713;
  GL_HI_BIAS_NV = $00008714;
  GL_LO_BIAS_NV = $00008715;
  GL_DS_BIAS_NV = $00008716;
  GL_DT_BIAS_NV = $00008717;
  GL_MAGNITUDE_BIAS_NV = $00008718;
  GL_VIBRANCE_BIAS_NV = $00008719;
  GL_TEXTURE_BORDER_VALUES_NV = $0000871A;
  GL_TEXTURE_HI_SIZE_NV = $0000871B;
  GL_TEXTURE_LO_SIZE_NV = $0000871C;
  GL_TEXTURE_DS_SIZE_NV = $0000871D;
  GL_TEXTURE_DT_SIZE_NV = $0000871E;
  GL_TEXTURE_MAG_SIZE_NV = $0000871F;
  GL_MODELVIEW2_ARB = $00008722;
  GL_MODELVIEW3_ARB = $00008723;
  GL_MODELVIEW4_ARB = $00008724;
  GL_MODELVIEW5_ARB = $00008725;
  GL_MODELVIEW6_ARB = $00008726;
  GL_MODELVIEW7_ARB = $00008727;
  GL_MODELVIEW8_ARB = $00008728;
  GL_MODELVIEW9_ARB = $00008729;
  GL_MODELVIEW10_ARB = $0000872A;
  GL_MODELVIEW11_ARB = $0000872B;
  GL_MODELVIEW12_ARB = $0000872C;
  GL_MODELVIEW13_ARB = $0000872D;
  GL_MODELVIEW14_ARB = $0000872E;
  GL_MODELVIEW15_ARB = $0000872F;
  GL_MODELVIEW16_ARB = $00008730;
  GL_MODELVIEW17_ARB = $00008731;
  GL_MODELVIEW18_ARB = $00008732;
  GL_MODELVIEW19_ARB = $00008733;
  GL_MODELVIEW20_ARB = $00008734;
  GL_MODELVIEW21_ARB = $00008735;
  GL_MODELVIEW22_ARB = $00008736;
  GL_MODELVIEW23_ARB = $00008737;
  GL_MODELVIEW24_ARB = $00008738;
  GL_MODELVIEW25_ARB = $00008739;
  GL_MODELVIEW26_ARB = $0000873A;
  GL_MODELVIEW27_ARB = $0000873B;
  GL_MODELVIEW28_ARB = $0000873C;
  GL_MODELVIEW29_ARB = $0000873D;
  GL_MODELVIEW30_ARB = $0000873E;
  GL_MODELVIEW31_ARB = $0000873F;
  GL_DOT3_RGB_EXT = $00008740;
  GL_Z400_BINARY_AMD = $00008740;
  GL_DOT3_RGBA_EXT = $00008741;
  GL_PROGRAM_BINARY_LENGTH_OES = $00008741;
  GL_PROGRAM_BINARY_LENGTH = $00008741;
  GL_MIRROR_CLAMP_ATI = $00008742;
  GL_MIRROR_CLAMP_EXT = $00008742;
  GL_MIRROR_CLAMP_TO_EDGE = $00008743;
  GL_MIRROR_CLAMP_TO_EDGE_ATI = $00008743;
  GL_MIRROR_CLAMP_TO_EDGE_EXT = $00008743;
  GL_MODULATE_ADD_ATI = $00008744;
  GL_MODULATE_SIGNED_ADD_ATI = $00008745;
  GL_MODULATE_SUBTRACT_ATI = $00008746;
  GL_SET_AMD = $0000874A;
  GL_REPLACE_VALUE_AMD = $0000874B;
  GL_STENCIL_OP_VALUE_AMD = $0000874C;
  GL_STENCIL_BACK_OP_VALUE_AMD = $0000874D;
  GL_VERTEX_ATTRIB_ARRAY_LONG = $0000874E;
  GL_OCCLUSION_QUERY_EVENT_MASK_AMD = $0000874F;
  GL_DEPTH_STENCIL_MESA = $00008750;
  GL_UNSIGNED_INT_24_8_MESA = $00008751;
  GL_UNSIGNED_INT_8_24_REV_MESA = $00008752;
  GL_UNSIGNED_SHORT_15_1_MESA = $00008753;
  GL_UNSIGNED_SHORT_1_15_REV_MESA = $00008754;
  GL_TRACE_MASK_MESA = $00008755;
  GL_TRACE_NAME_MESA = $00008756;
  GL_YCBCR_MESA = $00008757;
  GL_PACK_INVERT_MESA = $00008758;
  GL_DEBUG_OBJECT_MESA = $00008759;
  GL_TEXTURE_1D_STACK_MESAX = $00008759;
  GL_DEBUG_PRINT_MESA = $0000875A;
  GL_TEXTURE_2D_STACK_MESAX = $0000875A;
  GL_DEBUG_ASSERT_MESA = $0000875B;
  GL_PROXY_TEXTURE_1D_STACK_MESAX = $0000875B;
  GL_PROXY_TEXTURE_2D_STACK_MESAX = $0000875C;
  GL_TEXTURE_1D_STACK_BINDING_MESAX = $0000875D;
  GL_TEXTURE_2D_STACK_BINDING_MESAX = $0000875E;
  GL_PROGRAM_BINARY_FORMAT_MESA = $0000875F;
  GL_STATIC_ATI = $00008760;
  GL_DYNAMIC_ATI = $00008761;
  GL_PRESERVE_ATI = $00008762;
  GL_DISCARD_ATI = $00008763;
  GL_BUFFER_SIZE = $00008764;
  GL_BUFFER_SIZE_ARB = $00008764;
  GL_OBJECT_BUFFER_SIZE_ATI = $00008764;
  GL_BUFFER_USAGE = $00008765;
  GL_BUFFER_USAGE_ARB = $00008765;
  GL_OBJECT_BUFFER_USAGE_ATI = $00008765;
  GL_ARRAY_OBJECT_BUFFER_ATI = $00008766;
  GL_ARRAY_OBJECT_OFFSET_ATI = $00008767;
  GL_ELEMENT_ARRAY_ATI = $00008768;
  GL_ELEMENT_ARRAY_TYPE_ATI = $00008769;
  GL_ELEMENT_ARRAY_POINTER_ATI = $0000876A;
  GL_MAX_VERTEX_STREAMS_ATI = $0000876B;
  GL_VERTEX_STREAM0_ATI = $0000876C;
  GL_VERTEX_STREAM1_ATI = $0000876D;
  GL_VERTEX_STREAM2_ATI = $0000876E;
  GL_VERTEX_STREAM3_ATI = $0000876F;
  GL_VERTEX_STREAM4_ATI = $00008770;
  GL_VERTEX_STREAM5_ATI = $00008771;
  GL_VERTEX_STREAM6_ATI = $00008772;
  GL_VERTEX_STREAM7_ATI = $00008773;
  GL_VERTEX_SOURCE_ATI = $00008774;
  GL_BUMP_ROT_MATRIX_ATI = $00008775;
  GL_BUMP_ROT_MATRIX_SIZE_ATI = $00008776;
  GL_BUMP_NUM_TEX_UNITS_ATI = $00008777;
  GL_BUMP_TEX_UNITS_ATI = $00008778;
  GL_DUDV_ATI = $00008779;
  GL_DU8DV8_ATI = $0000877A;
  GL_BUMP_ENVMAP_ATI = $0000877B;
  GL_BUMP_TARGET_ATI = $0000877C;
  GL_VERTEX_SHADER_EXT = $00008780;
  GL_VERTEX_SHADER_BINDING_EXT = $00008781;
  GL_OP_INDEX_EXT = $00008782;
  GL_OP_NEGATE_EXT = $00008783;
  GL_OP_DOT3_EXT = $00008784;
  GL_OP_DOT4_EXT = $00008785;
  GL_OP_MUL_EXT = $00008786;
  GL_OP_ADD_EXT = $00008787;
  GL_OP_MADD_EXT = $00008788;
  GL_OP_FRAC_EXT = $00008789;
  GL_OP_MAX_EXT = $0000878A;
  GL_OP_MIN_EXT = $0000878B;
  GL_OP_SET_GE_EXT = $0000878C;
  GL_OP_SET_LT_EXT = $0000878D;
  GL_OP_CLAMP_EXT = $0000878E;
  GL_OP_FLOOR_EXT = $0000878F;
  GL_OP_ROUND_EXT = $00008790;
  GL_OP_EXP_BASE_2_EXT = $00008791;
  GL_OP_LOG_BASE_2_EXT = $00008792;
  GL_OP_POWER_EXT = $00008793;
  GL_OP_RECIP_EXT = $00008794;
  GL_OP_RECIP_SQRT_EXT = $00008795;
  GL_OP_SUB_EXT = $00008796;
  GL_OP_CROSS_PRODUCT_EXT = $00008797;
  GL_OP_MULTIPLY_MATRIX_EXT = $00008798;
  GL_OP_MOV_EXT = $00008799;
  GL_OUTPUT_VERTEX_EXT = $0000879A;
  GL_OUTPUT_COLOR0_EXT = $0000879B;
  GL_OUTPUT_COLOR1_EXT = $0000879C;
  GL_OUTPUT_TEXTURE_COORD0_EXT = $0000879D;
  GL_OUTPUT_TEXTURE_COORD1_EXT = $0000879E;
  GL_OUTPUT_TEXTURE_COORD2_EXT = $0000879F;
  GL_OUTPUT_TEXTURE_COORD3_EXT = $000087A0;
  GL_OUTPUT_TEXTURE_COORD4_EXT = $000087A1;
  GL_OUTPUT_TEXTURE_COORD5_EXT = $000087A2;
  GL_OUTPUT_TEXTURE_COORD6_EXT = $000087A3;
  GL_OUTPUT_TEXTURE_COORD7_EXT = $000087A4;
  GL_OUTPUT_TEXTURE_COORD8_EXT = $000087A5;
  GL_OUTPUT_TEXTURE_COORD9_EXT = $000087A6;
  GL_OUTPUT_TEXTURE_COORD10_EXT = $000087A7;
  GL_OUTPUT_TEXTURE_COORD11_EXT = $000087A8;
  GL_OUTPUT_TEXTURE_COORD12_EXT = $000087A9;
  GL_OUTPUT_TEXTURE_COORD13_EXT = $000087AA;
  GL_OUTPUT_TEXTURE_COORD14_EXT = $000087AB;
  GL_OUTPUT_TEXTURE_COORD15_EXT = $000087AC;
  GL_OUTPUT_TEXTURE_COORD16_EXT = $000087AD;
  GL_OUTPUT_TEXTURE_COORD17_EXT = $000087AE;
  GL_OUTPUT_TEXTURE_COORD18_EXT = $000087AF;
  GL_OUTPUT_TEXTURE_COORD19_EXT = $000087B0;
  GL_OUTPUT_TEXTURE_COORD20_EXT = $000087B1;
  GL_OUTPUT_TEXTURE_COORD21_EXT = $000087B2;
  GL_OUTPUT_TEXTURE_COORD22_EXT = $000087B3;
  GL_OUTPUT_TEXTURE_COORD23_EXT = $000087B4;
  GL_OUTPUT_TEXTURE_COORD24_EXT = $000087B5;
  GL_OUTPUT_TEXTURE_COORD25_EXT = $000087B6;
  GL_OUTPUT_TEXTURE_COORD26_EXT = $000087B7;
  GL_OUTPUT_TEXTURE_COORD27_EXT = $000087B8;
  GL_OUTPUT_TEXTURE_COORD28_EXT = $000087B9;
  GL_OUTPUT_TEXTURE_COORD29_EXT = $000087BA;
  GL_OUTPUT_TEXTURE_COORD30_EXT = $000087BB;
  GL_OUTPUT_TEXTURE_COORD31_EXT = $000087BC;
  GL_OUTPUT_FOG_EXT = $000087BD;
  GL_SCALAR_EXT = $000087BE;
  GL_VECTOR_EXT = $000087BF;
  GL_MATRIX_EXT = $000087C0;
  GL_VARIANT_EXT = $000087C1;
  GL_INVARIANT_EXT = $000087C2;
  GL_LOCAL_CONSTANT_EXT = $000087C3;
  GL_LOCAL_EXT = $000087C4;
  GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = $000087C5;
  GL_MAX_VERTEX_SHADER_VARIANTS_EXT = $000087C6;
  GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = $000087C7;
  GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = $000087C8;
  GL_MAX_VERTEX_SHADER_LOCALS_EXT = $000087C9;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = $000087CA;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = $000087CB;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = $000087CC;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = $000087CD;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = $000087CE;
  GL_VERTEX_SHADER_INSTRUCTIONS_EXT = $000087CF;
  GL_VERTEX_SHADER_VARIANTS_EXT = $000087D0;
  GL_VERTEX_SHADER_INVARIANTS_EXT = $000087D1;
  GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = $000087D2;
  GL_VERTEX_SHADER_LOCALS_EXT = $000087D3;
  GL_VERTEX_SHADER_OPTIMIZED_EXT = $000087D4;
  GL_X_EXT = $000087D5;
  GL_Y_EXT = $000087D6;
  GL_Z_EXT = $000087D7;
  GL_W_EXT = $000087D8;
  GL_NEGATIVE_X_EXT = $000087D9;
  GL_NEGATIVE_Y_EXT = $000087DA;
  GL_NEGATIVE_Z_EXT = $000087DB;
  GL_NEGATIVE_W_EXT = $000087DC;
  GL_ZERO_EXT = $000087DD;
  GL_ONE_EXT = $000087DE;
  GL_NEGATIVE_ONE_EXT = $000087DF;
  GL_NORMALIZED_RANGE_EXT = $000087E0;
  GL_FULL_RANGE_EXT = $000087E1;
  GL_CURRENT_VERTEX_EXT = $000087E2;
  GL_MVP_MATRIX_EXT = $000087E3;
  GL_VARIANT_VALUE_EXT = $000087E4;
  GL_VARIANT_DATATYPE_EXT = $000087E5;
  GL_VARIANT_ARRAY_STRIDE_EXT = $000087E6;
  GL_VARIANT_ARRAY_TYPE_EXT = $000087E7;
  GL_VARIANT_ARRAY_EXT = $000087E8;
  GL_VARIANT_ARRAY_POINTER_EXT = $000087E9;
  GL_INVARIANT_VALUE_EXT = $000087EA;
  GL_INVARIANT_DATATYPE_EXT = $000087EB;
  GL_LOCAL_CONSTANT_VALUE_EXT = $000087EC;
  GL_LOCAL_CONSTANT_DATATYPE_EXT = $000087ED;
  GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = $000087EE;
  GL_PN_TRIANGLES_ATI = $000087F0;
  GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = $000087F1;
  GL_PN_TRIANGLES_POINT_MODE_ATI = $000087F2;
  GL_PN_TRIANGLES_NORMAL_MODE_ATI = $000087F3;
  GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = $000087F4;
  GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = $000087F5;
  GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = $000087F6;
  GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = $000087F7;
  GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = $000087F8;
  GL_3DC_X_AMD = $000087F9;
  GL_3DC_XY_AMD = $000087FA;
  GL_VBO_FREE_MEMORY_ATI = $000087FB;
  GL_TEXTURE_FREE_MEMORY_ATI = $000087FC;
  GL_RENDERBUFFER_FREE_MEMORY_ATI = $000087FD;
  GL_NUM_PROGRAM_BINARY_FORMATS = $000087FE;
  GL_NUM_PROGRAM_BINARY_FORMATS_OES = $000087FE;
  GL_PROGRAM_BINARY_FORMATS = $000087FF;
  GL_PROGRAM_BINARY_FORMATS_OES = $000087FF;
  GL_STENCIL_BACK_FUNC = $00008800;
  GL_STENCIL_BACK_FUNC_ATI = $00008800;
  GL_STENCIL_BACK_FAIL = $00008801;
  GL_STENCIL_BACK_FAIL_ATI = $00008801;
  GL_STENCIL_BACK_PASS_DEPTH_FAIL = $00008802;
  GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = $00008802;
  GL_STENCIL_BACK_PASS_DEPTH_PASS = $00008803;
  GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = $00008803;
  GL_FRAGMENT_PROGRAM_ARB = $00008804;
  GL_PROGRAM_ALU_INSTRUCTIONS_ARB = $00008805;
  GL_PROGRAM_TEX_INSTRUCTIONS_ARB = $00008806;
  GL_PROGRAM_TEX_INDIRECTIONS_ARB = $00008807;
  GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = $00008808;
  GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = $00008809;
  GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = $0000880A;
  GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = $0000880B;
  GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = $0000880C;
  GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = $0000880D;
  GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = $0000880E;
  GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = $0000880F;
  GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = $00008810;
  GL_RGBA32F = $00008814;
  GL_RGBA32F_ARB = $00008814;
  GL_RGBA32F_EXT = $00008814;
  GL_RGBA_FLOAT32_APPLE = $00008814;
  GL_RGBA_FLOAT32_ATI = $00008814;
  GL_RGB32F = $00008815;
  GL_RGB32F_ARB = $00008815;
  GL_RGB32F_EXT = $00008815;
  GL_RGB_FLOAT32_APPLE = $00008815;
  GL_RGB_FLOAT32_ATI = $00008815;
  GL_ALPHA32F_ARB = $00008816;
  GL_ALPHA32F_EXT = $00008816;
  GL_ALPHA_FLOAT32_APPLE = $00008816;
  GL_ALPHA_FLOAT32_ATI = $00008816;
  GL_INTENSITY32F_ARB = $00008817;
  GL_INTENSITY_FLOAT32_APPLE = $00008817;
  GL_INTENSITY_FLOAT32_ATI = $00008817;
  GL_LUMINANCE32F_ARB = $00008818;
  GL_LUMINANCE32F_EXT = $00008818;
  GL_LUMINANCE_FLOAT32_APPLE = $00008818;
  GL_LUMINANCE_FLOAT32_ATI = $00008818;
  GL_LUMINANCE_ALPHA32F_ARB = $00008819;
  GL_LUMINANCE_ALPHA32F_EXT = $00008819;
  GL_LUMINANCE_ALPHA_FLOAT32_APPLE = $00008819;
  GL_LUMINANCE_ALPHA_FLOAT32_ATI = $00008819;
  GL_RGBA16F = $0000881A;
  GL_RGBA16F_ARB = $0000881A;
  GL_RGBA16F_EXT = $0000881A;
  GL_RGBA_FLOAT16_APPLE = $0000881A;
  GL_RGBA_FLOAT16_ATI = $0000881A;
  GL_RGB16F = $0000881B;
  GL_RGB16F_ARB = $0000881B;
  GL_RGB16F_EXT = $0000881B;
  GL_RGB_FLOAT16_APPLE = $0000881B;
  GL_RGB_FLOAT16_ATI = $0000881B;
  GL_ALPHA16F_ARB = $0000881C;
  GL_ALPHA16F_EXT = $0000881C;
  GL_ALPHA_FLOAT16_APPLE = $0000881C;
  GL_ALPHA_FLOAT16_ATI = $0000881C;
  GL_INTENSITY16F_ARB = $0000881D;
  GL_INTENSITY_FLOAT16_APPLE = $0000881D;
  GL_INTENSITY_FLOAT16_ATI = $0000881D;
  GL_LUMINANCE16F_ARB = $0000881E;
  GL_LUMINANCE16F_EXT = $0000881E;
  GL_LUMINANCE_FLOAT16_APPLE = $0000881E;
  GL_LUMINANCE_FLOAT16_ATI = $0000881E;
  GL_LUMINANCE_ALPHA16F_ARB = $0000881F;
  GL_LUMINANCE_ALPHA16F_EXT = $0000881F;
  GL_LUMINANCE_ALPHA_FLOAT16_APPLE = $0000881F;
  GL_LUMINANCE_ALPHA_FLOAT16_ATI = $0000881F;
  GL_RGBA_FLOAT_MODE_ARB = $00008820;
  GL_RGBA_FLOAT_MODE_ATI = $00008820;
  GL_WRITEONLY_RENDERING_QCOM = $00008823;
  GL_MAX_DRAW_BUFFERS = $00008824;
  GL_MAX_DRAW_BUFFERS_ARB = $00008824;
  GL_MAX_DRAW_BUFFERS_ATI = $00008824;
  GL_MAX_DRAW_BUFFERS_EXT = $00008824;
  GL_MAX_DRAW_BUFFERS_NV = $00008824;
  GL_DRAW_BUFFER0 = $00008825;
  GL_DRAW_BUFFER0_ARB = $00008825;
  GL_DRAW_BUFFER0_ATI = $00008825;
  GL_DRAW_BUFFER0_EXT = $00008825;
  GL_DRAW_BUFFER0_NV = $00008825;
  GL_DRAW_BUFFER1 = $00008826;
  GL_DRAW_BUFFER1_ARB = $00008826;
  GL_DRAW_BUFFER1_ATI = $00008826;
  GL_DRAW_BUFFER1_EXT = $00008826;
  GL_DRAW_BUFFER1_NV = $00008826;
  GL_DRAW_BUFFER2 = $00008827;
  GL_DRAW_BUFFER2_ARB = $00008827;
  GL_DRAW_BUFFER2_ATI = $00008827;
  GL_DRAW_BUFFER2_EXT = $00008827;
  GL_DRAW_BUFFER2_NV = $00008827;
  GL_DRAW_BUFFER3 = $00008828;
  GL_DRAW_BUFFER3_ARB = $00008828;
  GL_DRAW_BUFFER3_ATI = $00008828;
  GL_DRAW_BUFFER3_EXT = $00008828;
  GL_DRAW_BUFFER3_NV = $00008828;
  GL_DRAW_BUFFER4 = $00008829;
  GL_DRAW_BUFFER4_ARB = $00008829;
  GL_DRAW_BUFFER4_ATI = $00008829;
  GL_DRAW_BUFFER4_EXT = $00008829;
  GL_DRAW_BUFFER4_NV = $00008829;
  GL_DRAW_BUFFER5 = $0000882A;
  GL_DRAW_BUFFER5_ARB = $0000882A;
  GL_DRAW_BUFFER5_ATI = $0000882A;
  GL_DRAW_BUFFER5_EXT = $0000882A;
  GL_DRAW_BUFFER5_NV = $0000882A;
  GL_DRAW_BUFFER6 = $0000882B;
  GL_DRAW_BUFFER6_ARB = $0000882B;
  GL_DRAW_BUFFER6_ATI = $0000882B;
  GL_DRAW_BUFFER6_EXT = $0000882B;
  GL_DRAW_BUFFER6_NV = $0000882B;
  GL_DRAW_BUFFER7 = $0000882C;
  GL_DRAW_BUFFER7_ARB = $0000882C;
  GL_DRAW_BUFFER7_ATI = $0000882C;
  GL_DRAW_BUFFER7_EXT = $0000882C;
  GL_DRAW_BUFFER7_NV = $0000882C;
  GL_DRAW_BUFFER8 = $0000882D;
  GL_DRAW_BUFFER8_ARB = $0000882D;
  GL_DRAW_BUFFER8_ATI = $0000882D;
  GL_DRAW_BUFFER8_EXT = $0000882D;
  GL_DRAW_BUFFER8_NV = $0000882D;
  GL_DRAW_BUFFER9 = $0000882E;
  GL_DRAW_BUFFER9_ARB = $0000882E;
  GL_DRAW_BUFFER9_ATI = $0000882E;
  GL_DRAW_BUFFER9_EXT = $0000882E;
  GL_DRAW_BUFFER9_NV = $0000882E;
  GL_DRAW_BUFFER10 = $0000882F;
  GL_DRAW_BUFFER10_ARB = $0000882F;
  GL_DRAW_BUFFER10_ATI = $0000882F;
  GL_DRAW_BUFFER10_EXT = $0000882F;
  GL_DRAW_BUFFER10_NV = $0000882F;
  GL_DRAW_BUFFER11 = $00008830;
  GL_DRAW_BUFFER11_ARB = $00008830;
  GL_DRAW_BUFFER11_ATI = $00008830;
  GL_DRAW_BUFFER11_EXT = $00008830;
  GL_DRAW_BUFFER11_NV = $00008830;
  GL_DRAW_BUFFER12 = $00008831;
  GL_DRAW_BUFFER12_ARB = $00008831;
  GL_DRAW_BUFFER12_ATI = $00008831;
  GL_DRAW_BUFFER12_EXT = $00008831;
  GL_DRAW_BUFFER12_NV = $00008831;
  GL_DRAW_BUFFER13 = $00008832;
  GL_DRAW_BUFFER13_ARB = $00008832;
  GL_DRAW_BUFFER13_ATI = $00008832;
  GL_DRAW_BUFFER13_EXT = $00008832;
  GL_DRAW_BUFFER13_NV = $00008832;
  GL_DRAW_BUFFER14 = $00008833;
  GL_DRAW_BUFFER14_ARB = $00008833;
  GL_DRAW_BUFFER14_ATI = $00008833;
  GL_DRAW_BUFFER14_EXT = $00008833;
  GL_DRAW_BUFFER14_NV = $00008833;
  GL_DRAW_BUFFER15 = $00008834;
  GL_DRAW_BUFFER15_ARB = $00008834;
  GL_DRAW_BUFFER15_ATI = $00008834;
  GL_DRAW_BUFFER15_EXT = $00008834;
  GL_DRAW_BUFFER15_NV = $00008834;
  GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = $00008835;
  GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI = $00008837;
  GL_BLEND_EQUATION_ALPHA = $0000883D;
  GL_BLEND_EQUATION_ALPHA_EXT = $0000883D;
  GL_BLEND_EQUATION_ALPHA_OES = $0000883D;
  GL_SUBSAMPLE_DISTANCE_AMD = $0000883F;
  GL_MATRIX_PALETTE_ARB = $00008840;
  GL_MATRIX_PALETTE_OES = $00008840;
  GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = $00008841;
  GL_MAX_PALETTE_MATRICES_ARB = $00008842;
  GL_MAX_PALETTE_MATRICES_OES = $00008842;
  GL_CURRENT_PALETTE_MATRIX_ARB = $00008843;
  GL_CURRENT_PALETTE_MATRIX_OES = $00008843;
  GL_MATRIX_INDEX_ARRAY_ARB = $00008844;
  GL_MATRIX_INDEX_ARRAY_OES = $00008844;
  GL_CURRENT_MATRIX_INDEX_ARB = $00008845;
  GL_MATRIX_INDEX_ARRAY_SIZE_ARB = $00008846;
  GL_MATRIX_INDEX_ARRAY_SIZE_OES = $00008846;
  GL_MATRIX_INDEX_ARRAY_TYPE_ARB = $00008847;
  GL_MATRIX_INDEX_ARRAY_TYPE_OES = $00008847;
  GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = $00008848;
  GL_MATRIX_INDEX_ARRAY_STRIDE_OES = $00008848;
  GL_MATRIX_INDEX_ARRAY_POINTER_ARB = $00008849;
  GL_MATRIX_INDEX_ARRAY_POINTER_OES = $00008849;
  GL_TEXTURE_DEPTH_SIZE = $0000884A;
  GL_TEXTURE_DEPTH_SIZE_ARB = $0000884A;
  GL_DEPTH_TEXTURE_MODE = $0000884B;
  GL_DEPTH_TEXTURE_MODE_ARB = $0000884B;
  GL_TEXTURE_COMPARE_MODE = $0000884C;
  GL_TEXTURE_COMPARE_MODE_ARB = $0000884C;
  GL_TEXTURE_COMPARE_MODE_EXT = $0000884C;
  GL_TEXTURE_COMPARE_FUNC = $0000884D;
  GL_TEXTURE_COMPARE_FUNC_ARB = $0000884D;
  GL_TEXTURE_COMPARE_FUNC_EXT = $0000884D;
  GL_COMPARE_R_TO_TEXTURE = $0000884E;
  GL_COMPARE_R_TO_TEXTURE_ARB = $0000884E;
  GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = $0000884E;
  GL_COMPARE_REF_TO_TEXTURE = GL_COMPARE_R_TO_TEXTURE;
  GL_COMPARE_REF_TO_TEXTURE_EXT = $0000884E;
  GL_TEXTURE_CUBE_MAP_SEAMLESS = $0000884F;
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = $00008850;
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = $00008851;
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = $00008852;
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = $00008853;
  GL_OFFSET_HILO_TEXTURE_2D_NV = $00008854;
  GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = $00008855;
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = $00008856;
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = $00008857;
  GL_DEPENDENT_HILO_TEXTURE_2D_NV = $00008858;
  GL_DEPENDENT_RGB_TEXTURE_3D_NV = $00008859;
  GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = $0000885A;
  GL_DOT_PRODUCT_PASS_THROUGH_NV = $0000885B;
  GL_DOT_PRODUCT_TEXTURE_1D_NV = $0000885C;
  GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = $0000885D;
  GL_HILO8_NV = $0000885E;
  GL_SIGNED_HILO8_NV = $0000885F;
  GL_FORCE_BLUE_TO_ONE_NV = $00008860;
  GL_POINT_SPRITE = $00008861;
  GL_POINT_SPRITE_ARB = $00008861;
  GL_POINT_SPRITE_NV = $00008861;
  GL_POINT_SPRITE_OES = $00008861;
  GL_COORD_REPLACE = $00008862;
  GL_COORD_REPLACE_ARB = $00008862;
  GL_COORD_REPLACE_NV = $00008862;
  GL_COORD_REPLACE_OES = $00008862;
  GL_POINT_SPRITE_R_MODE_NV = $00008863;
  GL_PIXEL_COUNTER_BITS_NV = $00008864;
  GL_QUERY_COUNTER_BITS = $00008864;
  GL_QUERY_COUNTER_BITS_ARB = $00008864;
  GL_QUERY_COUNTER_BITS_EXT = $00008864;
  GL_CURRENT_OCCLUSION_QUERY_ID_NV = $00008865;
  GL_CURRENT_QUERY = $00008865;
  GL_CURRENT_QUERY_ARB = $00008865;
  GL_CURRENT_QUERY_EXT = $00008865;
  GL_PIXEL_COUNT_NV = $00008866;
  GL_QUERY_RESULT = $00008866;
  GL_QUERY_RESULT_ARB = $00008866;
  GL_QUERY_RESULT_EXT = $00008866;
  GL_PIXEL_COUNT_AVAILABLE_NV = $00008867;
  GL_QUERY_RESULT_AVAILABLE = $00008867;
  GL_QUERY_RESULT_AVAILABLE_ARB = $00008867;
  GL_QUERY_RESULT_AVAILABLE_EXT = $00008867;
  GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = $00008868;
  GL_MAX_VERTEX_ATTRIBS = $00008869;
  GL_MAX_VERTEX_ATTRIBS_ARB = $00008869;
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = $0000886A;
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = $0000886A;
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = $0000886C;
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = $0000886C;
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES = $0000886C;
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = $0000886D;
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = $0000886D;
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES = $0000886D;
  GL_DEPTH_STENCIL_TO_RGBA_NV = $0000886E;
  GL_DEPTH_STENCIL_TO_BGRA_NV = $0000886F;
  GL_FRAGMENT_PROGRAM_NV = $00008870;
  GL_MAX_TEXTURE_COORDS = $00008871;
  GL_MAX_TEXTURE_COORDS_ARB = $00008871;
  GL_MAX_TEXTURE_COORDS_NV = $00008871;
  GL_MAX_TEXTURE_IMAGE_UNITS = $00008872;
  GL_MAX_TEXTURE_IMAGE_UNITS_ARB = $00008872;
  GL_MAX_TEXTURE_IMAGE_UNITS_NV = $00008872;
  GL_FRAGMENT_PROGRAM_BINDING_NV = $00008873;
  GL_PROGRAM_ERROR_STRING_ARB = $00008874;
  GL_PROGRAM_ERROR_STRING_NV = $00008874;
  GL_PROGRAM_FORMAT_ASCII_ARB = $00008875;
  GL_PROGRAM_FORMAT_ARB = $00008876;
  GL_WRITE_PIXEL_DATA_RANGE_NV = $00008878;
  GL_READ_PIXEL_DATA_RANGE_NV = $00008879;
  GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = $0000887A;
  GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = $0000887B;
  GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = $0000887C;
  GL_READ_PIXEL_DATA_RANGE_POINTER_NV = $0000887D;
  GL_GEOMETRY_SHADER_INVOCATIONS = $0000887F;
  GL_GEOMETRY_SHADER_INVOCATIONS_EXT = $0000887F;
  GL_GEOMETRY_SHADER_INVOCATIONS_OES = $0000887F;
  GL_FLOAT_R_NV = $00008880;
  GL_FLOAT_RG_NV = $00008881;
  GL_FLOAT_RGB_NV = $00008882;
  GL_FLOAT_RGBA_NV = $00008883;
  GL_FLOAT_R16_NV = $00008884;
  GL_FLOAT_R32_NV = $00008885;
  GL_FLOAT_RG16_NV = $00008886;
  GL_FLOAT_RG32_NV = $00008887;
  GL_FLOAT_RGB16_NV = $00008888;
  GL_FLOAT_RGB32_NV = $00008889;
  GL_FLOAT_RGBA16_NV = $0000888A;
  GL_FLOAT_RGBA32_NV = $0000888B;
  GL_TEXTURE_FLOAT_COMPONENTS_NV = $0000888C;
  GL_FLOAT_CLEAR_COLOR_VALUE_NV = $0000888D;
  GL_FLOAT_RGBA_MODE_NV = $0000888E;
  GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = $0000888F;
  GL_DEPTH_BOUNDS_TEST_EXT = $00008890;
  GL_DEPTH_BOUNDS_EXT = $00008891;
  GL_ARRAY_BUFFER = $00008892;
  GL_ARRAY_BUFFER_ARB = $00008892;
  GL_ELEMENT_ARRAY_BUFFER = $00008893;
  GL_ELEMENT_ARRAY_BUFFER_ARB = $00008893;
  GL_ARRAY_BUFFER_BINDING = $00008894;
  GL_ARRAY_BUFFER_BINDING_ARB = $00008894;
  GL_ELEMENT_ARRAY_BUFFER_BINDING = $00008895;
  GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = $00008895;
  GL_VERTEX_ARRAY_BUFFER_BINDING = $00008896;
  GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = $00008896;
  GL_NORMAL_ARRAY_BUFFER_BINDING = $00008897;
  GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = $00008897;
  GL_COLOR_ARRAY_BUFFER_BINDING = $00008898;
  GL_COLOR_ARRAY_BUFFER_BINDING_ARB = $00008898;
  GL_INDEX_ARRAY_BUFFER_BINDING = $00008899;
  GL_INDEX_ARRAY_BUFFER_BINDING_ARB = $00008899;
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = $0000889A;
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = $0000889A;
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = $0000889B;
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = $0000889B;
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = $0000889C;
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = $0000889C;
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = $0000889D;
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = $0000889D;
  GL_FOG_COORD_ARRAY_BUFFER_BINDING = GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING;
  GL_WEIGHT_ARRAY_BUFFER_BINDING = $0000889E;
  GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = $0000889E;
  GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = $0000889E;
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = $0000889F;
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = $0000889F;
  GL_PROGRAM_INSTRUCTIONS_ARB = $000088A0;
  GL_MAX_PROGRAM_INSTRUCTIONS_ARB = $000088A1;
  GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = $000088A2;
  GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = $000088A3;
  GL_PROGRAM_TEMPORARIES_ARB = $000088A4;
  GL_MAX_PROGRAM_TEMPORARIES_ARB = $000088A5;
  GL_PROGRAM_NATIVE_TEMPORARIES_ARB = $000088A6;
  GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = $000088A7;
  GL_PROGRAM_PARAMETERS_ARB = $000088A8;
  GL_MAX_PROGRAM_PARAMETERS_ARB = $000088A9;
  GL_PROGRAM_NATIVE_PARAMETERS_ARB = $000088AA;
  GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = $000088AB;
  GL_PROGRAM_ATTRIBS_ARB = $000088AC;
  GL_MAX_PROGRAM_ATTRIBS_ARB = $000088AD;
  GL_PROGRAM_NATIVE_ATTRIBS_ARB = $000088AE;
  GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = $000088AF;
  GL_PROGRAM_ADDRESS_REGISTERS_ARB = $000088B0;
  GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = $000088B1;
  GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = $000088B2;
  GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = $000088B3;
  GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = $000088B4;
  GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = $000088B5;
  GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = $000088B6;
  GL_TRANSPOSE_CURRENT_MATRIX_ARB = $000088B7;
  GL_READ_ONLY = $000088B8;
  GL_READ_ONLY_ARB = $000088B8;
  GL_WRITE_ONLY = $000088B9;
  GL_WRITE_ONLY_ARB = $000088B9;
  GL_WRITE_ONLY_OES = $000088B9;
  GL_READ_WRITE = $000088BA;
  GL_READ_WRITE_ARB = $000088BA;
  GL_BUFFER_ACCESS = $000088BB;
  GL_BUFFER_ACCESS_ARB = $000088BB;
  GL_BUFFER_ACCESS_OES = $000088BB;
  GL_BUFFER_MAPPED = $000088BC;
  GL_BUFFER_MAPPED_ARB = $000088BC;
  GL_BUFFER_MAPPED_OES = $000088BC;
  GL_BUFFER_MAP_POINTER = $000088BD;
  GL_BUFFER_MAP_POINTER_ARB = $000088BD;
  GL_BUFFER_MAP_POINTER_OES = $000088BD;
  GL_WRITE_DISCARD_NV = $000088BE;
  GL_TIME_ELAPSED = $000088BF;
  GL_TIME_ELAPSED_EXT = $000088BF;
  GL_MATRIX0_ARB = $000088C0;
  GL_MATRIX1_ARB = $000088C1;
  GL_MATRIX2_ARB = $000088C2;
  GL_MATRIX3_ARB = $000088C3;
  GL_MATRIX4_ARB = $000088C4;
  GL_MATRIX5_ARB = $000088C5;
  GL_MATRIX6_ARB = $000088C6;
  GL_MATRIX7_ARB = $000088C7;
  GL_MATRIX8_ARB = $000088C8;
  GL_MATRIX9_ARB = $000088C9;
  GL_MATRIX10_ARB = $000088CA;
  GL_MATRIX11_ARB = $000088CB;
  GL_MATRIX12_ARB = $000088CC;
  GL_MATRIX13_ARB = $000088CD;
  GL_MATRIX14_ARB = $000088CE;
  GL_MATRIX15_ARB = $000088CF;
  GL_MATRIX16_ARB = $000088D0;
  GL_MATRIX17_ARB = $000088D1;
  GL_MATRIX18_ARB = $000088D2;
  GL_MATRIX19_ARB = $000088D3;
  GL_MATRIX20_ARB = $000088D4;
  GL_MATRIX21_ARB = $000088D5;
  GL_MATRIX22_ARB = $000088D6;
  GL_MATRIX23_ARB = $000088D7;
  GL_MATRIX24_ARB = $000088D8;
  GL_MATRIX25_ARB = $000088D9;
  GL_MATRIX26_ARB = $000088DA;
  GL_MATRIX27_ARB = $000088DB;
  GL_MATRIX28_ARB = $000088DC;
  GL_MATRIX29_ARB = $000088DD;
  GL_MATRIX30_ARB = $000088DE;
  GL_MATRIX31_ARB = $000088DF;
  GL_STREAM_DRAW = $000088E0;
  GL_STREAM_DRAW_ARB = $000088E0;
  GL_STREAM_READ = $000088E1;
  GL_STREAM_READ_ARB = $000088E1;
  GL_STREAM_COPY = $000088E2;
  GL_STREAM_COPY_ARB = $000088E2;
  GL_STATIC_DRAW = $000088E4;
  GL_STATIC_DRAW_ARB = $000088E4;
  GL_STATIC_READ = $000088E5;
  GL_STATIC_READ_ARB = $000088E5;
  GL_STATIC_COPY = $000088E6;
  GL_STATIC_COPY_ARB = $000088E6;
  GL_DYNAMIC_DRAW = $000088E8;
  GL_DYNAMIC_DRAW_ARB = $000088E8;
  GL_DYNAMIC_READ = $000088E9;
  GL_DYNAMIC_READ_ARB = $000088E9;
  GL_DYNAMIC_COPY = $000088EA;
  GL_DYNAMIC_COPY_ARB = $000088EA;
  GL_PIXEL_PACK_BUFFER = $000088EB;
  GL_PIXEL_PACK_BUFFER_ARB = $000088EB;
  GL_PIXEL_PACK_BUFFER_EXT = $000088EB;
  GL_PIXEL_PACK_BUFFER_NV = $000088EB;
  GL_PIXEL_UNPACK_BUFFER = $000088EC;
  GL_PIXEL_UNPACK_BUFFER_ARB = $000088EC;
  GL_PIXEL_UNPACK_BUFFER_EXT = $000088EC;
  GL_PIXEL_UNPACK_BUFFER_NV = $000088EC;
  GL_PIXEL_PACK_BUFFER_BINDING = $000088ED;
  GL_PIXEL_PACK_BUFFER_BINDING_ARB = $000088ED;
  GL_PIXEL_PACK_BUFFER_BINDING_EXT = $000088ED;
  GL_PIXEL_PACK_BUFFER_BINDING_NV = $000088ED;
  GL_ETC1_SRGB8_NV = $000088EE;
  GL_PIXEL_UNPACK_BUFFER_BINDING = $000088EF;
  GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = $000088EF;
  GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = $000088EF;
  GL_PIXEL_UNPACK_BUFFER_BINDING_NV = $000088EF;
  GL_DEPTH24_STENCIL8 = $000088F0;
  GL_DEPTH24_STENCIL8_EXT = $000088F0;
  GL_DEPTH24_STENCIL8_OES = $000088F0;
  GL_TEXTURE_STENCIL_SIZE = $000088F1;
  GL_TEXTURE_STENCIL_SIZE_EXT = $000088F1;
  GL_STENCIL_TAG_BITS_EXT = $000088F2;
  GL_STENCIL_CLEAR_TAG_VALUE_EXT = $000088F3;
  GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = $000088F4;
  GL_MAX_PROGRAM_CALL_DEPTH_NV = $000088F5;
  GL_MAX_PROGRAM_IF_DEPTH_NV = $000088F6;
  GL_MAX_PROGRAM_LOOP_DEPTH_NV = $000088F7;
  GL_MAX_PROGRAM_LOOP_COUNT_NV = $000088F8;
  GL_SRC1_COLOR = $000088F9;
  GL_SRC1_COLOR_EXT = $000088F9;
  GL_ONE_MINUS_SRC1_COLOR = $000088FA;
  GL_ONE_MINUS_SRC1_COLOR_EXT = $000088FA;
  GL_ONE_MINUS_SRC1_ALPHA = $000088FB;
  GL_ONE_MINUS_SRC1_ALPHA_EXT = $000088FB;
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = $000088FC;
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = $000088FC;
  GL_VERTEX_ATTRIB_ARRAY_INTEGER = $000088FD;
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = $000088FD;
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = $000088FD;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV = $000088FE;
  GL_MAX_ARRAY_TEXTURE_LAYERS = $000088FF;
  GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = $000088FF;
  GL_MIN_PROGRAM_TEXEL_OFFSET = $00008904;
  GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = $00008904;
  GL_MIN_PROGRAM_TEXEL_OFFSET_NV = $00008904;
  GL_MAX_PROGRAM_TEXEL_OFFSET = $00008905;
  GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = $00008905;
  GL_MAX_PROGRAM_TEXEL_OFFSET_NV = $00008905;
  GL_PROGRAM_ATTRIB_COMPONENTS_NV = $00008906;
  GL_PROGRAM_RESULT_COMPONENTS_NV = $00008907;
  GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = $00008908;
  GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = $00008909;
  GL_STENCIL_TEST_TWO_SIDE_EXT = $00008910;
  GL_ACTIVE_STENCIL_FACE_EXT = $00008911;
  GL_MIRROR_CLAMP_TO_BORDER_EXT = $00008912;
  GL_SAMPLES_PASSED = $00008914;
  GL_SAMPLES_PASSED_ARB = $00008914;
  GL_GEOMETRY_VERTICES_OUT = $00008916;
  GL_GEOMETRY_LINKED_VERTICES_OUT_EXT = $00008916;
  GL_GEOMETRY_LINKED_VERTICES_OUT_OES = $00008916;
  GL_GEOMETRY_INPUT_TYPE = $00008917;
  GL_GEOMETRY_LINKED_INPUT_TYPE_EXT = $00008917;
  GL_GEOMETRY_LINKED_INPUT_TYPE_OES = $00008917;
  GL_GEOMETRY_OUTPUT_TYPE = $00008918;
  GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = $00008918;
  GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES = $00008918;
  GL_SAMPLER_BINDING = $00008919;
  GL_CLAMP_VERTEX_COLOR = $0000891A;
  GL_CLAMP_VERTEX_COLOR_ARB = $0000891A;
  GL_CLAMP_FRAGMENT_COLOR = $0000891B;
  GL_CLAMP_FRAGMENT_COLOR_ARB = $0000891B;
  GL_CLAMP_READ_COLOR = $0000891C;
  GL_CLAMP_READ_COLOR_ARB = $0000891C;
  GL_FIXED_ONLY = $0000891D;
  GL_FIXED_ONLY_ARB = $0000891D;
  GL_TESS_CONTROL_PROGRAM_NV = $0000891E;
  GL_TESS_EVALUATION_PROGRAM_NV = $0000891F;
  GL_FRAGMENT_SHADER_ATI = $00008920;
  GL_REG_0_ATI = $00008921;
  GL_REG_1_ATI = $00008922;
  GL_REG_2_ATI = $00008923;
  GL_REG_3_ATI = $00008924;
  GL_REG_4_ATI = $00008925;
  GL_REG_5_ATI = $00008926;
  GL_REG_6_ATI = $00008927;
  GL_REG_7_ATI = $00008928;
  GL_REG_8_ATI = $00008929;
  GL_REG_9_ATI = $0000892A;
  GL_REG_10_ATI = $0000892B;
  GL_REG_11_ATI = $0000892C;
  GL_REG_12_ATI = $0000892D;
  GL_REG_13_ATI = $0000892E;
  GL_REG_14_ATI = $0000892F;
  GL_REG_15_ATI = $00008930;
  GL_REG_16_ATI = $00008931;
  GL_REG_17_ATI = $00008932;
  GL_REG_18_ATI = $00008933;
  GL_REG_19_ATI = $00008934;
  GL_REG_20_ATI = $00008935;
  GL_REG_21_ATI = $00008936;
  GL_REG_22_ATI = $00008937;
  GL_REG_23_ATI = $00008938;
  GL_REG_24_ATI = $00008939;
  GL_REG_25_ATI = $0000893A;
  GL_REG_26_ATI = $0000893B;
  GL_REG_27_ATI = $0000893C;
  GL_REG_28_ATI = $0000893D;
  GL_REG_29_ATI = $0000893E;
  GL_REG_30_ATI = $0000893F;
  GL_REG_31_ATI = $00008940;
  GL_CON_0_ATI = $00008941;
  GL_CON_1_ATI = $00008942;
  GL_CON_2_ATI = $00008943;
  GL_CON_3_ATI = $00008944;
  GL_CON_4_ATI = $00008945;
  GL_CON_5_ATI = $00008946;
  GL_CON_6_ATI = $00008947;
  GL_CON_7_ATI = $00008948;
  GL_CON_8_ATI = $00008949;
  GL_CON_9_ATI = $0000894A;
  GL_CON_10_ATI = $0000894B;
  GL_CON_11_ATI = $0000894C;
  GL_CON_12_ATI = $0000894D;
  GL_CON_13_ATI = $0000894E;
  GL_CON_14_ATI = $0000894F;
  GL_CON_15_ATI = $00008950;
  GL_CON_16_ATI = $00008951;
  GL_CON_17_ATI = $00008952;
  GL_CON_18_ATI = $00008953;
  GL_CON_19_ATI = $00008954;
  GL_CON_20_ATI = $00008955;
  GL_CON_21_ATI = $00008956;
  GL_CON_22_ATI = $00008957;
  GL_CON_23_ATI = $00008958;
  GL_CON_24_ATI = $00008959;
  GL_CON_25_ATI = $0000895A;
  GL_CON_26_ATI = $0000895B;
  GL_CON_27_ATI = $0000895C;
  GL_CON_28_ATI = $0000895D;
  GL_CON_29_ATI = $0000895E;
  GL_CON_30_ATI = $0000895F;
  GL_CON_31_ATI = $00008960;
  GL_MOV_ATI = $00008961;
  GL_ADD_ATI = $00008963;
  GL_MUL_ATI = $00008964;
  GL_SUB_ATI = $00008965;
  GL_DOT3_ATI = $00008966;
  GL_DOT4_ATI = $00008967;
  GL_MAD_ATI = $00008968;
  GL_LERP_ATI = $00008969;
  GL_CND_ATI = $0000896A;
  GL_CND0_ATI = $0000896B;
  GL_DOT2_ADD_ATI = $0000896C;
  GL_SECONDARY_INTERPOLATOR_ATI = $0000896D;
  GL_NUM_FRAGMENT_REGISTERS_ATI = $0000896E;
  GL_NUM_FRAGMENT_CONSTANTS_ATI = $0000896F;
  GL_NUM_PASSES_ATI = $00008970;
  GL_NUM_INSTRUCTIONS_PER_PASS_ATI = $00008971;
  GL_NUM_INSTRUCTIONS_TOTAL_ATI = $00008972;
  GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = $00008973;
  GL_NUM_LOOPBACK_COMPONENTS_ATI = $00008974;
  GL_COLOR_ALPHA_PAIRING_ATI = $00008975;
  GL_SWIZZLE_STR_ATI = $00008976;
  GL_SWIZZLE_STQ_ATI = $00008977;
  GL_SWIZZLE_STR_DR_ATI = $00008978;
  GL_SWIZZLE_STQ_DQ_ATI = $00008979;
  GL_SWIZZLE_STRQ_ATI = $0000897A;
  GL_SWIZZLE_STRQ_DQ_ATI = $0000897B;
  GL_INTERLACE_OML = $00008980;
  GL_INTERLACE_READ_OML = $00008981;
  GL_FORMAT_SUBSAMPLE_24_24_OML = $00008982;
  GL_FORMAT_SUBSAMPLE_244_244_OML = $00008983;
  GL_PACK_RESAMPLE_OML = $00008984;
  GL_UNPACK_RESAMPLE_OML = $00008985;
  GL_RESAMPLE_REPLICATE_OML = $00008986;
  GL_RESAMPLE_ZERO_FILL_OML = $00008987;
  GL_RESAMPLE_AVERAGE_OML = $00008988;
  GL_RESAMPLE_DECIMATE_OML = $00008989;
  GL_POINT_SIZE_ARRAY_TYPE_OES = $0000898A;
  GL_POINT_SIZE_ARRAY_STRIDE_OES = $0000898B;
  GL_POINT_SIZE_ARRAY_POINTER_OES = $0000898C;
  GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = $0000898D;
  GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = $0000898E;
  GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = $0000898F;
  GL_VERTEX_ATTRIB_MAP1_APPLE = $00008A00;
  GL_VERTEX_ATTRIB_MAP2_APPLE = $00008A01;
  GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = $00008A02;
  GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = $00008A03;
  GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = $00008A04;
  GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = $00008A05;
  GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = $00008A06;
  GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = $00008A07;
  GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = $00008A08;
  GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = $00008A09;
  GL_DRAW_PIXELS_APPLE = $00008A0A;
  GL_FENCE_APPLE = $00008A0B;
  GL_ELEMENT_ARRAY_APPLE = $00008A0C;
  GL_ELEMENT_ARRAY_TYPE_APPLE = $00008A0D;
  GL_ELEMENT_ARRAY_POINTER_APPLE = $00008A0E;
  GL_COLOR_FLOAT_APPLE = $00008A0F;
  GL_UNIFORM_BUFFER = $00008A11;
  GL_BUFFER_SERIALIZED_MODIFY_APPLE = $00008A12;
  GL_BUFFER_FLUSHING_UNMAP_APPLE = $00008A13;
  GL_AUX_DEPTH_STENCIL_APPLE = $00008A14;
  GL_PACK_ROW_BYTES_APPLE = $00008A15;
  GL_UNPACK_ROW_BYTES_APPLE = $00008A16;
  GL_RELEASED_APPLE = $00008A19;
  GL_VOLATILE_APPLE = $00008A1A;
  GL_RETAINED_APPLE = $00008A1B;
  GL_UNDEFINED_APPLE = $00008A1C;
  GL_PURGEABLE_APPLE = $00008A1D;
  GL_RGB_422_APPLE = $00008A1F;
  GL_UNIFORM_BUFFER_BINDING = $00008A28;
  GL_UNIFORM_BUFFER_START = $00008A29;
  GL_UNIFORM_BUFFER_SIZE = $00008A2A;
  GL_MAX_VERTEX_UNIFORM_BLOCKS = $00008A2B;
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS = $00008A2C;
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = $00008A2C;
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES = $00008A2C;
  GL_MAX_FRAGMENT_UNIFORM_BLOCKS = $00008A2D;
  GL_MAX_COMBINED_UNIFORM_BLOCKS = $00008A2E;
  GL_MAX_UNIFORM_BUFFER_BINDINGS = $00008A2F;
  GL_MAX_UNIFORM_BLOCK_SIZE = $00008A30;
  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = $00008A31;
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = $00008A32;
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = $00008A32;
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES = $00008A32;
  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = $00008A33;
  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = $00008A34;
  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = $00008A35;
  GL_ACTIVE_UNIFORM_BLOCKS = $00008A36;
  GL_UNIFORM_TYPE = $00008A37;
  GL_UNIFORM_SIZE = $00008A38;
  GL_UNIFORM_NAME_LENGTH = $00008A39;
  GL_UNIFORM_BLOCK_INDEX = $00008A3A;
  GL_UNIFORM_OFFSET = $00008A3B;
  GL_UNIFORM_ARRAY_STRIDE = $00008A3C;
  GL_UNIFORM_MATRIX_STRIDE = $00008A3D;
  GL_UNIFORM_IS_ROW_MAJOR = $00008A3E;
  GL_UNIFORM_BLOCK_BINDING = $00008A3F;
  GL_UNIFORM_BLOCK_DATA_SIZE = $00008A40;
  GL_UNIFORM_BLOCK_NAME_LENGTH = $00008A41;
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = $00008A42;
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = $00008A43;
  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = $00008A44;
  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = $00008A45;
  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = $00008A46;
  GL_TEXTURE_SRGB_DECODE_EXT = $00008A48;
  GL_DECODE_EXT = $00008A49;
  GL_SKIP_DECODE_EXT = $00008A4A;
  GL_PROGRAM_PIPELINE_OBJECT_EXT = $00008A4F;
  GL_RGB_RAW_422_APPLE = $00008A51;
  GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = $00008A52;
  GL_SYNC_OBJECT_APPLE = $00008A53;
  GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = $00008A54;
  GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = $00008A55;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = $00008A56;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = $00008A57;
  GL_FRAGMENT_SHADER = $00008B30;
  GL_FRAGMENT_SHADER_ARB = $00008B30;
  GL_VERTEX_SHADER = $00008B31;
  GL_VERTEX_SHADER_ARB = $00008B31;
  GL_PROGRAM_OBJECT_ARB = $00008B40;
  GL_PROGRAM_OBJECT_EXT = $00008B40;
  GL_SHADER_OBJECT_ARB = $00008B48;
  GL_SHADER_OBJECT_EXT = $00008B48;
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = $00008B49;
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = $00008B49;
  GL_MAX_VERTEX_UNIFORM_COMPONENTS = $00008B4A;
  GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = $00008B4A;
  GL_MAX_VARYING_FLOATS = $00008B4B;
  GL_MAX_VARYING_COMPONENTS = GL_MAX_VARYING_FLOATS;
  GL_MAX_VARYING_COMPONENTS_EXT = $00008B4B;
  GL_MAX_VARYING_FLOATS_ARB = $00008B4B;
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = $00008B4C;
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = $00008B4C;
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = $00008B4D;
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = $00008B4D;
  GL_OBJECT_TYPE_ARB = $00008B4E;
  GL_SHADER_TYPE = $00008B4F;
  GL_OBJECT_SUBTYPE_ARB = $00008B4F;
  GL_FLOAT_VEC2 = $00008B50;
  GL_FLOAT_VEC2_ARB = $00008B50;
  GL_FLOAT_VEC3 = $00008B51;
  GL_FLOAT_VEC3_ARB = $00008B51;
  GL_FLOAT_VEC4 = $00008B52;
  GL_FLOAT_VEC4_ARB = $00008B52;
  GL_INT_VEC2 = $00008B53;
  GL_INT_VEC2_ARB = $00008B53;
  GL_INT_VEC3 = $00008B54;
  GL_INT_VEC3_ARB = $00008B54;
  GL_INT_VEC4 = $00008B55;
  GL_INT_VEC4_ARB = $00008B55;
  GL_BOOL = $00008B56;
  GL_BOOL_ARB = $00008B56;
  GL_BOOL_VEC2 = $00008B57;
  GL_BOOL_VEC2_ARB = $00008B57;
  GL_BOOL_VEC3 = $00008B58;
  GL_BOOL_VEC3_ARB = $00008B58;
  GL_BOOL_VEC4 = $00008B59;
  GL_BOOL_VEC4_ARB = $00008B59;
  GL_FLOAT_MAT2 = $00008B5A;
  GL_FLOAT_MAT2_ARB = $00008B5A;
  GL_FLOAT_MAT3 = $00008B5B;
  GL_FLOAT_MAT3_ARB = $00008B5B;
  GL_FLOAT_MAT4 = $00008B5C;
  GL_FLOAT_MAT4_ARB = $00008B5C;
  GL_SAMPLER_1D = $00008B5D;
  GL_SAMPLER_1D_ARB = $00008B5D;
  GL_SAMPLER_2D = $00008B5E;
  GL_SAMPLER_2D_ARB = $00008B5E;
  GL_SAMPLER_3D = $00008B5F;
  GL_SAMPLER_3D_ARB = $00008B5F;
  GL_SAMPLER_3D_OES = $00008B5F;
  GL_SAMPLER_CUBE = $00008B60;
  GL_SAMPLER_CUBE_ARB = $00008B60;
  GL_SAMPLER_1D_SHADOW = $00008B61;
  GL_SAMPLER_1D_SHADOW_ARB = $00008B61;
  GL_SAMPLER_2D_SHADOW = $00008B62;
  GL_SAMPLER_2D_SHADOW_ARB = $00008B62;
  GL_SAMPLER_2D_SHADOW_EXT = $00008B62;
  GL_SAMPLER_2D_RECT = $00008B63;
  GL_SAMPLER_2D_RECT_ARB = $00008B63;
  GL_SAMPLER_2D_RECT_SHADOW = $00008B64;
  GL_SAMPLER_2D_RECT_SHADOW_ARB = $00008B64;
  GL_FLOAT_MAT2x3 = $00008B65;
  GL_FLOAT_MAT2x3_NV = $00008B65;
  GL_FLOAT_MAT2x4 = $00008B66;
  GL_FLOAT_MAT2x4_NV = $00008B66;
  GL_FLOAT_MAT3x2 = $00008B67;
  GL_FLOAT_MAT3x2_NV = $00008B67;
  GL_FLOAT_MAT3x4 = $00008B68;
  GL_FLOAT_MAT3x4_NV = $00008B68;
  GL_FLOAT_MAT4x2 = $00008B69;
  GL_FLOAT_MAT4x2_NV = $00008B69;
  GL_FLOAT_MAT4x3 = $00008B6A;
  GL_FLOAT_MAT4x3_NV = $00008B6A;
  GL_DELETE_STATUS = $00008B80;
  GL_OBJECT_DELETE_STATUS_ARB = $00008B80;
  GL_COMPILE_STATUS = $00008B81;
  GL_OBJECT_COMPILE_STATUS_ARB = $00008B81;
  GL_LINK_STATUS = $00008B82;
  GL_OBJECT_LINK_STATUS_ARB = $00008B82;
  GL_VALIDATE_STATUS = $00008B83;
  GL_OBJECT_VALIDATE_STATUS_ARB = $00008B83;
  GL_INFO_LOG_LENGTH = $00008B84;
  GL_OBJECT_INFO_LOG_LENGTH_ARB = $00008B84;
  GL_ATTACHED_SHADERS = $00008B85;
  GL_OBJECT_ATTACHED_OBJECTS_ARB = $00008B85;
  GL_ACTIVE_UNIFORMS = $00008B86;
  GL_OBJECT_ACTIVE_UNIFORMS_ARB = $00008B86;
  GL_ACTIVE_UNIFORM_MAX_LENGTH = $00008B87;
  GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = $00008B87;
  GL_SHADER_SOURCE_LENGTH = $00008B88;
  GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = $00008B88;
  GL_ACTIVE_ATTRIBUTES = $00008B89;
  GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = $00008B89;
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = $00008B8A;
  GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = $00008B8A;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT = $00008B8B;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = $00008B8B;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = $00008B8B;
  GL_SHADING_LANGUAGE_VERSION = $00008B8C;
  GL_SHADING_LANGUAGE_VERSION_ARB = $00008B8C;
  GL_CURRENT_PROGRAM = $00008B8D;
  GL_ACTIVE_PROGRAM_EXT = GL_CURRENT_PROGRAM;
  GL_PALETTE4_RGB8_OES = $00008B90;
  GL_PALETTE4_RGBA8_OES = $00008B91;
  GL_PALETTE4_R5_G6_B5_OES = $00008B92;
  GL_PALETTE4_RGBA4_OES = $00008B93;
  GL_PALETTE4_RGB5_A1_OES = $00008B94;
  GL_PALETTE8_RGB8_OES = $00008B95;
  GL_PALETTE8_RGBA8_OES = $00008B96;
  GL_PALETTE8_R5_G6_B5_OES = $00008B97;
  GL_PALETTE8_RGBA4_OES = $00008B98;
  GL_PALETTE8_RGB5_A1_OES = $00008B99;
  GL_IMPLEMENTATION_COLOR_READ_TYPE = $00008B9A;
  GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = $00008B9A;
  GL_IMPLEMENTATION_COLOR_READ_FORMAT = $00008B9B;
  GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = $00008B9B;
  GL_POINT_SIZE_ARRAY_OES = $00008B9C;
  GL_TEXTURE_CROP_RECT_OES = $00008B9D;
  GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = $00008B9E;
  GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = $00008B9F;
  GL_FRAGMENT_PROGRAM_POSITION_MESA = $00008BB0;
  GL_FRAGMENT_PROGRAM_CALLBACK_MESA = $00008BB1;
  GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA = $00008BB2;
  GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA = $00008BB3;
  GL_VERTEX_PROGRAM_POSITION_MESA = $00008BB4;
  GL_VERTEX_PROGRAM_CALLBACK_MESA = $00008BB5;
  GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA = $00008BB6;
  GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA = $00008BB7;
  GL_TILE_RASTER_ORDER_FIXED_MESA = $00008BB8;
  GL_TILE_RASTER_ORDER_INCREASING_X_MESA = $00008BB9;
  GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = $00008BBA;
  GL_FRAMEBUFFER_FLIP_Y_MESA = $00008BBB;
  GL_FRAMEBUFFER_FLIP_X_MESA = $00008BBC;
  GL_FRAMEBUFFER_SWAP_XY_MESA = $00008BBD;
  GL_COUNTER_TYPE_AMD = $00008BC0;
  GL_COUNTER_RANGE_AMD = $00008BC1;
  GL_UNSIGNED_INT64_AMD = $00008BC2;
  GL_PERCENTAGE_AMD = $00008BC3;
  GL_PERFMON_RESULT_AVAILABLE_AMD = $00008BC4;
  GL_PERFMON_RESULT_SIZE_AMD = $00008BC5;
  GL_PERFMON_RESULT_AMD = $00008BC6;
  GL_TEXTURE_WIDTH_QCOM = $00008BD2;
  GL_TEXTURE_HEIGHT_QCOM = $00008BD3;
  GL_TEXTURE_DEPTH_QCOM = $00008BD4;
  GL_TEXTURE_INTERNAL_FORMAT_QCOM = $00008BD5;
  GL_TEXTURE_FORMAT_QCOM = $00008BD6;
  GL_TEXTURE_TYPE_QCOM = $00008BD7;
  GL_TEXTURE_IMAGE_VALID_QCOM = $00008BD8;
  GL_TEXTURE_NUM_LEVELS_QCOM = $00008BD9;
  GL_TEXTURE_TARGET_QCOM = $00008BDA;
  GL_TEXTURE_OBJECT_VALID_QCOM = $00008BDB;
  GL_STATE_RESTORE = $00008BDC;
  GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT = $00008BE7;
  GL_TEXTURE_PROTECTED_EXT = $00008BFA;
  GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM = $00008BFB;
  GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM = $00008BFC;
  GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM = $00008BFD;
  GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM = $00008BFE;
  GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM = $00008BFF;
  GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = $00008C00;
  GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = $00008C01;
  GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = $00008C02;
  GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = $00008C03;
  GL_MODULATE_COLOR_IMG = $00008C04;
  GL_RECIP_ADD_SIGNED_ALPHA_IMG = $00008C05;
  GL_TEXTURE_ALPHA_MODULATE_IMG = $00008C06;
  GL_FACTOR_ALPHA_MODULATE_IMG = $00008C07;
  GL_FRAGMENT_ALPHA_MODULATE_IMG = $00008C08;
  GL_ADD_BLEND_IMG = $00008C09;
  GL_SGX_BINARY_IMG = $00008C0A;
  GL_TEXTURE_RED_TYPE = $00008C10;
  GL_TEXTURE_RED_TYPE_ARB = $00008C10;
  GL_TEXTURE_GREEN_TYPE = $00008C11;
  GL_TEXTURE_GREEN_TYPE_ARB = $00008C11;
  GL_TEXTURE_BLUE_TYPE = $00008C12;
  GL_TEXTURE_BLUE_TYPE_ARB = $00008C12;
  GL_TEXTURE_ALPHA_TYPE = $00008C13;
  GL_TEXTURE_ALPHA_TYPE_ARB = $00008C13;
  GL_TEXTURE_LUMINANCE_TYPE = $00008C14;
  GL_TEXTURE_LUMINANCE_TYPE_ARB = $00008C14;
  GL_TEXTURE_INTENSITY_TYPE = $00008C15;
  GL_TEXTURE_INTENSITY_TYPE_ARB = $00008C15;
  GL_TEXTURE_DEPTH_TYPE = $00008C16;
  GL_TEXTURE_DEPTH_TYPE_ARB = $00008C16;
  GL_UNSIGNED_NORMALIZED = $00008C17;
  GL_UNSIGNED_NORMALIZED_ARB = $00008C17;
  GL_UNSIGNED_NORMALIZED_EXT = $00008C17;
  GL_TEXTURE_1D_ARRAY = $00008C18;
  GL_TEXTURE_1D_ARRAY_EXT = $00008C18;
  GL_PROXY_TEXTURE_1D_ARRAY = $00008C19;
  GL_PROXY_TEXTURE_1D_ARRAY_EXT = $00008C19;
  GL_TEXTURE_2D_ARRAY = $00008C1A;
  GL_TEXTURE_2D_ARRAY_EXT = $00008C1A;
  GL_PROXY_TEXTURE_2D_ARRAY = $00008C1B;
  GL_PROXY_TEXTURE_2D_ARRAY_EXT = $00008C1B;
  GL_TEXTURE_BINDING_1D_ARRAY = $00008C1C;
  GL_TEXTURE_BINDING_1D_ARRAY_EXT = $00008C1C;
  GL_TEXTURE_BINDING_2D_ARRAY = $00008C1D;
  GL_TEXTURE_BINDING_2D_ARRAY_EXT = $00008C1D;
  GL_GEOMETRY_PROGRAM_NV = $00008C26;
  GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = $00008C27;
  GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = $00008C28;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = $00008C29;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = $00008C29;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = $00008C29;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES = $00008C29;
  GL_TEXTURE_BUFFER = $00008C2A;
  GL_TEXTURE_BUFFER_ARB = $00008C2A;
  GL_TEXTURE_BUFFER_EXT = $00008C2A;
  GL_TEXTURE_BUFFER_OES = $00008C2A;
  GL_TEXTURE_BUFFER_BINDING = $00008C2A;
  GL_TEXTURE_BUFFER_BINDING_EXT = $00008C2A;
  GL_TEXTURE_BUFFER_BINDING_OES = $00008C2A;
  GL_MAX_TEXTURE_BUFFER_SIZE = $00008C2B;
  GL_MAX_TEXTURE_BUFFER_SIZE_ARB = $00008C2B;
  GL_MAX_TEXTURE_BUFFER_SIZE_EXT = $00008C2B;
  GL_MAX_TEXTURE_BUFFER_SIZE_OES = $00008C2B;
  GL_TEXTURE_BINDING_BUFFER = $00008C2C;
  GL_TEXTURE_BINDING_BUFFER_ARB = $00008C2C;
  GL_TEXTURE_BINDING_BUFFER_EXT = $00008C2C;
  GL_TEXTURE_BINDING_BUFFER_OES = $00008C2C;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING = $00008C2D;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = $00008C2D;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = $00008C2D;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES = $00008C2D;
  GL_TEXTURE_BUFFER_FORMAT_ARB = $00008C2E;
  GL_TEXTURE_BUFFER_FORMAT_EXT = $00008C2E;
  GL_ANY_SAMPLES_PASSED = $00008C2F;
  GL_ANY_SAMPLES_PASSED_EXT = $00008C2F;
  GL_SAMPLE_SHADING = $00008C36;
  GL_SAMPLE_SHADING_ARB = $00008C36;
  GL_SAMPLE_SHADING_OES = $00008C36;
  GL_MIN_SAMPLE_SHADING_VALUE = $00008C37;
  GL_MIN_SAMPLE_SHADING_VALUE_ARB = $00008C37;
  GL_MIN_SAMPLE_SHADING_VALUE_OES = $00008C37;
  GL_R11F_G11F_B10F = $00008C3A;
  GL_R11F_G11F_B10F_APPLE = $00008C3A;
  GL_R11F_G11F_B10F_EXT = $00008C3A;
  GL_UNSIGNED_INT_10F_11F_11F_REV = $00008C3B;
  GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE = $00008C3B;
  GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = $00008C3B;
  GL_RGBA_SIGNED_COMPONENTS_EXT = $00008C3C;
  GL_RGB9_E5 = $00008C3D;
  GL_RGB9_E5_APPLE = $00008C3D;
  GL_RGB9_E5_EXT = $00008C3D;
  GL_UNSIGNED_INT_5_9_9_9_REV = $00008C3E;
  GL_UNSIGNED_INT_5_9_9_9_REV_APPLE = $00008C3E;
  GL_UNSIGNED_INT_5_9_9_9_REV_EXT = $00008C3E;
  GL_TEXTURE_SHARED_SIZE = $00008C3F;
  GL_TEXTURE_SHARED_SIZE_EXT = $00008C3F;
  GL_SRGB = $00008C40;
  GL_SRGB_EXT = $00008C40;
  GL_SRGB8 = $00008C41;
  GL_SRGB8_EXT = $00008C41;
  GL_SRGB8_NV = $00008C41;
  GL_SRGB_ALPHA = $00008C42;
  GL_SRGB_ALPHA_EXT = $00008C42;
  GL_SRGB8_ALPHA8 = $00008C43;
  GL_SRGB8_ALPHA8_EXT = $00008C43;
  GL_SLUMINANCE_ALPHA = $00008C44;
  GL_SLUMINANCE_ALPHA_EXT = $00008C44;
  GL_SLUMINANCE_ALPHA_NV = $00008C44;
  GL_SLUMINANCE8_ALPHA8 = $00008C45;
  GL_SLUMINANCE8_ALPHA8_EXT = $00008C45;
  GL_SLUMINANCE8_ALPHA8_NV = $00008C45;
  GL_SLUMINANCE = $00008C46;
  GL_SLUMINANCE_EXT = $00008C46;
  GL_SLUMINANCE_NV = $00008C46;
  GL_SLUMINANCE8 = $00008C47;
  GL_SLUMINANCE8_EXT = $00008C47;
  GL_SLUMINANCE8_NV = $00008C47;
  GL_COMPRESSED_SRGB = $00008C48;
  GL_COMPRESSED_SRGB_EXT = $00008C48;
  GL_COMPRESSED_SRGB_ALPHA = $00008C49;
  GL_COMPRESSED_SRGB_ALPHA_EXT = $00008C49;
  GL_COMPRESSED_SLUMINANCE = $00008C4A;
  GL_COMPRESSED_SLUMINANCE_EXT = $00008C4A;
  GL_COMPRESSED_SLUMINANCE_ALPHA = $00008C4B;
  GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = $00008C4B;
  GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = $00008C4C;
  GL_COMPRESSED_SRGB_S3TC_DXT1_NV = $00008C4C;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = $00008C4D;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV = $00008C4D;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = $00008C4E;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV = $00008C4E;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = $00008C4F;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV = $00008C4F;
  GL_COMPRESSED_LUMINANCE_LATC1_EXT = $00008C70;
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = $00008C71;
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = $00008C72;
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = $00008C73;
  GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = $00008C74;
  GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = $00008C75;
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = $00008C76;
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = $00008C76;
  GL_BACK_PRIMARY_COLOR_NV = $00008C77;
  GL_BACK_SECONDARY_COLOR_NV = $00008C78;
  GL_TEXTURE_COORD_NV = $00008C79;
  GL_CLIP_DISTANCE_NV = $00008C7A;
  GL_VERTEX_ID_NV = $00008C7B;
  GL_PRIMITIVE_ID_NV = $00008C7C;
  GL_GENERIC_ATTRIB_NV = $00008C7D;
  GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = $00008C7E;
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE = $00008C7F;
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = $00008C7F;
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = $00008C7F;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = $00008C80;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = $00008C80;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = $00008C80;
  GL_ACTIVE_VARYINGS_NV = $00008C81;
  GL_ACTIVE_VARYING_MAX_LENGTH_NV = $00008C82;
  GL_TRANSFORM_FEEDBACK_VARYINGS = $00008C83;
  GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = $00008C83;
  GL_TRANSFORM_FEEDBACK_VARYINGS_NV = $00008C83;
  GL_TRANSFORM_FEEDBACK_BUFFER_START = $00008C84;
  GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = $00008C84;
  GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = $00008C84;
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = $00008C85;
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = $00008C85;
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = $00008C85;
  GL_TRANSFORM_FEEDBACK_RECORD_NV = $00008C86;
  GL_PRIMITIVES_GENERATED = $00008C87;
  GL_PRIMITIVES_GENERATED_EXT = $00008C87;
  GL_PRIMITIVES_GENERATED_NV = $00008C87;
  GL_PRIMITIVES_GENERATED_OES = $00008C87;
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = $00008C88;
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = $00008C88;
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = $00008C88;
  GL_RASTERIZER_DISCARD = $00008C89;
  GL_RASTERIZER_DISCARD_EXT = $00008C89;
  GL_RASTERIZER_DISCARD_NV = $00008C89;
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = $00008C8A;
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = $00008C8A;
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = $00008C8A;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = $00008C8B;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = $00008C8B;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = $00008C8B;
  GL_INTERLEAVED_ATTRIBS = $00008C8C;
  GL_INTERLEAVED_ATTRIBS_EXT = $00008C8C;
  GL_INTERLEAVED_ATTRIBS_NV = $00008C8C;
  GL_SEPARATE_ATTRIBS = $00008C8D;
  GL_SEPARATE_ATTRIBS_EXT = $00008C8D;
  GL_SEPARATE_ATTRIBS_NV = $00008C8D;
  GL_TRANSFORM_FEEDBACK_BUFFER = $00008C8E;
  GL_TRANSFORM_FEEDBACK_BUFFER_EXT = $00008C8E;
  GL_TRANSFORM_FEEDBACK_BUFFER_NV = $00008C8E;
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = $00008C8F;
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = $00008C8F;
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = $00008C8F;
  GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM = $00008C90;
  GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM = $00008C91;
  GL_ATC_RGB_AMD = $00008C92;
  GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = $00008C93;
  GL_POINT_SPRITE_COORD_ORIGIN = $00008CA0;
  GL_LOWER_LEFT = $00008CA1;
  GL_LOWER_LEFT_EXT = GL_LOWER_LEFT;
  GL_UPPER_LEFT = $00008CA2;
  GL_UPPER_LEFT_EXT = GL_UPPER_LEFT;
  GL_STENCIL_BACK_REF = $00008CA3;
  GL_STENCIL_BACK_VALUE_MASK = $00008CA4;
  GL_STENCIL_BACK_WRITEMASK = $00008CA5;
  GL_DRAW_FRAMEBUFFER_BINDING = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_ANGLE = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_APPLE = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_EXT = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_NV = $00008CA6;
  GL_FRAMEBUFFER_BINDING = $00008CA6;
  GL_FRAMEBUFFER_BINDING_ANGLE = $00008CA6;
  GL_FRAMEBUFFER_BINDING_EXT = $00008CA6;
  GL_FRAMEBUFFER_BINDING_OES = $00008CA6;
  GL_RENDERBUFFER_BINDING = $00008CA7;
  GL_RENDERBUFFER_BINDING_ANGLE = $00008CA7;
  GL_RENDERBUFFER_BINDING_EXT = $00008CA7;
  GL_RENDERBUFFER_BINDING_OES = $00008CA7;
  GL_READ_FRAMEBUFFER = $00008CA8;
  GL_READ_FRAMEBUFFER_ANGLE = $00008CA8;
  GL_READ_FRAMEBUFFER_APPLE = $00008CA8;
  GL_READ_FRAMEBUFFER_EXT = $00008CA8;
  GL_READ_FRAMEBUFFER_NV = $00008CA8;
  GL_DRAW_FRAMEBUFFER = $00008CA9;
  GL_DRAW_FRAMEBUFFER_ANGLE = $00008CA9;
  GL_DRAW_FRAMEBUFFER_APPLE = $00008CA9;
  GL_DRAW_FRAMEBUFFER_EXT = $00008CA9;
  GL_DRAW_FRAMEBUFFER_NV = $00008CA9;
  GL_READ_FRAMEBUFFER_BINDING = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_ANGLE = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_APPLE = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_EXT = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_NV = $00008CAA;
  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = $00008CAB;
  GL_RENDERBUFFER_SAMPLES = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_ANGLE = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_APPLE = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_EXT = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_NV = $00008CAB;
  GL_DEPTH_COMPONENT32F = $00008CAC;
  GL_DEPTH32F_STENCIL8 = $00008CAD;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = $00008CD0;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = $00008CD0;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = $00008CD0;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = $00008CD1;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = $00008CD1;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = $00008CD1;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = $00008CD2;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = $00008CD2;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = $00008CD2;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = $00008CD3;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = $00008CD3;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = $00008CD3;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = $00008CD4;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = $00008CD4;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = $00008CD4;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = $00008CD4;
  GL_FRAMEBUFFER_COMPLETE = $00008CD5;
  GL_FRAMEBUFFER_COMPLETE_EXT = $00008CD5;
  GL_FRAMEBUFFER_COMPLETE_OES = $00008CD5;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = $00008CD6;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = $00008CD6;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = $00008CD6;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = $00008CD7;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = $00008CD7;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = $00008CD7;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = $00008CD9;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = $00008CD9;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = $00008CD9;
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = $00008CDA;
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = $00008CDA;
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = $00008CDB;
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = $00008CDB;
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES = $00008CDB;
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = $00008CDC;
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = $00008CDC;
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES = $00008CDC;
  GL_FRAMEBUFFER_UNSUPPORTED = $00008CDD;
  GL_FRAMEBUFFER_UNSUPPORTED_EXT = $00008CDD;
  GL_FRAMEBUFFER_UNSUPPORTED_OES = $00008CDD;
  GL_MAX_COLOR_ATTACHMENTS = $00008CDF;
  GL_MAX_COLOR_ATTACHMENTS_EXT = $00008CDF;
  GL_MAX_COLOR_ATTACHMENTS_NV = $00008CDF;
  GL_COLOR_ATTACHMENT0 = $00008CE0;
  GL_COLOR_ATTACHMENT0_EXT = $00008CE0;
  GL_COLOR_ATTACHMENT0_NV = $00008CE0;
  GL_COLOR_ATTACHMENT0_OES = $00008CE0;
  GL_COLOR_ATTACHMENT1 = $00008CE1;
  GL_COLOR_ATTACHMENT1_EXT = $00008CE1;
  GL_COLOR_ATTACHMENT1_NV = $00008CE1;
  GL_COLOR_ATTACHMENT2 = $00008CE2;
  GL_COLOR_ATTACHMENT2_EXT = $00008CE2;
  GL_COLOR_ATTACHMENT2_NV = $00008CE2;
  GL_COLOR_ATTACHMENT3 = $00008CE3;
  GL_COLOR_ATTACHMENT3_EXT = $00008CE3;
  GL_COLOR_ATTACHMENT3_NV = $00008CE3;
  GL_COLOR_ATTACHMENT4 = $00008CE4;
  GL_COLOR_ATTACHMENT4_EXT = $00008CE4;
  GL_COLOR_ATTACHMENT4_NV = $00008CE4;
  GL_COLOR_ATTACHMENT5 = $00008CE5;
  GL_COLOR_ATTACHMENT5_EXT = $00008CE5;
  GL_COLOR_ATTACHMENT5_NV = $00008CE5;
  GL_COLOR_ATTACHMENT6 = $00008CE6;
  GL_COLOR_ATTACHMENT6_EXT = $00008CE6;
  GL_COLOR_ATTACHMENT6_NV = $00008CE6;
  GL_COLOR_ATTACHMENT7 = $00008CE7;
  GL_COLOR_ATTACHMENT7_EXT = $00008CE7;
  GL_COLOR_ATTACHMENT7_NV = $00008CE7;
  GL_COLOR_ATTACHMENT8 = $00008CE8;
  GL_COLOR_ATTACHMENT8_EXT = $00008CE8;
  GL_COLOR_ATTACHMENT8_NV = $00008CE8;
  GL_COLOR_ATTACHMENT9 = $00008CE9;
  GL_COLOR_ATTACHMENT9_EXT = $00008CE9;
  GL_COLOR_ATTACHMENT9_NV = $00008CE9;
  GL_COLOR_ATTACHMENT10 = $00008CEA;
  GL_COLOR_ATTACHMENT10_EXT = $00008CEA;
  GL_COLOR_ATTACHMENT10_NV = $00008CEA;
  GL_COLOR_ATTACHMENT11 = $00008CEB;
  GL_COLOR_ATTACHMENT11_EXT = $00008CEB;
  GL_COLOR_ATTACHMENT11_NV = $00008CEB;
  GL_COLOR_ATTACHMENT12 = $00008CEC;
  GL_COLOR_ATTACHMENT12_EXT = $00008CEC;
  GL_COLOR_ATTACHMENT12_NV = $00008CEC;
  GL_COLOR_ATTACHMENT13 = $00008CED;
  GL_COLOR_ATTACHMENT13_EXT = $00008CED;
  GL_COLOR_ATTACHMENT13_NV = $00008CED;
  GL_COLOR_ATTACHMENT14 = $00008CEE;
  GL_COLOR_ATTACHMENT14_EXT = $00008CEE;
  GL_COLOR_ATTACHMENT14_NV = $00008CEE;
  GL_COLOR_ATTACHMENT15 = $00008CEF;
  GL_COLOR_ATTACHMENT15_EXT = $00008CEF;
  GL_COLOR_ATTACHMENT15_NV = $00008CEF;
  GL_COLOR_ATTACHMENT16 = $00008CF0;
  GL_COLOR_ATTACHMENT17 = $00008CF1;
  GL_COLOR_ATTACHMENT18 = $00008CF2;
  GL_COLOR_ATTACHMENT19 = $00008CF3;
  GL_COLOR_ATTACHMENT20 = $00008CF4;
  GL_COLOR_ATTACHMENT21 = $00008CF5;
  GL_COLOR_ATTACHMENT22 = $00008CF6;
  GL_COLOR_ATTACHMENT23 = $00008CF7;
  GL_COLOR_ATTACHMENT24 = $00008CF8;
  GL_COLOR_ATTACHMENT25 = $00008CF9;
  GL_COLOR_ATTACHMENT26 = $00008CFA;
  GL_COLOR_ATTACHMENT27 = $00008CFB;
  GL_COLOR_ATTACHMENT28 = $00008CFC;
  GL_COLOR_ATTACHMENT29 = $00008CFD;
  GL_COLOR_ATTACHMENT30 = $00008CFE;
  GL_COLOR_ATTACHMENT31 = $00008CFF;
  GL_DEPTH_ATTACHMENT = $00008D00;
  GL_DEPTH_ATTACHMENT_EXT = $00008D00;
  GL_DEPTH_ATTACHMENT_OES = $00008D00;
  GL_STENCIL_ATTACHMENT = $00008D20;
  GL_STENCIL_ATTACHMENT_EXT = $00008D20;
  GL_STENCIL_ATTACHMENT_OES = $00008D20;
  GL_FRAMEBUFFER = $00008D40;
  GL_FRAMEBUFFER_EXT = $00008D40;
  GL_FRAMEBUFFER_OES = $00008D40;
  GL_RENDERBUFFER = $00008D41;
  GL_RENDERBUFFER_EXT = $00008D41;
  GL_RENDERBUFFER_OES = $00008D41;
  GL_RENDERBUFFER_WIDTH = $00008D42;
  GL_RENDERBUFFER_WIDTH_EXT = $00008D42;
  GL_RENDERBUFFER_WIDTH_OES = $00008D42;
  GL_RENDERBUFFER_HEIGHT = $00008D43;
  GL_RENDERBUFFER_HEIGHT_EXT = $00008D43;
  GL_RENDERBUFFER_HEIGHT_OES = $00008D43;
  GL_RENDERBUFFER_INTERNAL_FORMAT = $00008D44;
  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = $00008D44;
  GL_RENDERBUFFER_INTERNAL_FORMAT_OES = $00008D44;
  GL_STENCIL_INDEX1 = $00008D46;
  GL_STENCIL_INDEX1_EXT = $00008D46;
  GL_STENCIL_INDEX1_OES = $00008D46;
  GL_STENCIL_INDEX4 = $00008D47;
  GL_STENCIL_INDEX4_EXT = $00008D47;
  GL_STENCIL_INDEX4_OES = $00008D47;
  GL_STENCIL_INDEX8 = $00008D48;
  GL_STENCIL_INDEX8_EXT = $00008D48;
  GL_STENCIL_INDEX8_OES = $00008D48;
  GL_STENCIL_INDEX16 = $00008D49;
  GL_STENCIL_INDEX16_EXT = $00008D49;
  GL_RENDERBUFFER_RED_SIZE = $00008D50;
  GL_RENDERBUFFER_RED_SIZE_EXT = $00008D50;
  GL_RENDERBUFFER_RED_SIZE_OES = $00008D50;
  GL_RENDERBUFFER_GREEN_SIZE = $00008D51;
  GL_RENDERBUFFER_GREEN_SIZE_EXT = $00008D51;
  GL_RENDERBUFFER_GREEN_SIZE_OES = $00008D51;
  GL_RENDERBUFFER_BLUE_SIZE = $00008D52;
  GL_RENDERBUFFER_BLUE_SIZE_EXT = $00008D52;
  GL_RENDERBUFFER_BLUE_SIZE_OES = $00008D52;
  GL_RENDERBUFFER_ALPHA_SIZE = $00008D53;
  GL_RENDERBUFFER_ALPHA_SIZE_EXT = $00008D53;
  GL_RENDERBUFFER_ALPHA_SIZE_OES = $00008D53;
  GL_RENDERBUFFER_DEPTH_SIZE = $00008D54;
  GL_RENDERBUFFER_DEPTH_SIZE_EXT = $00008D54;
  GL_RENDERBUFFER_DEPTH_SIZE_OES = $00008D54;
  GL_RENDERBUFFER_STENCIL_SIZE = $00008D55;
  GL_RENDERBUFFER_STENCIL_SIZE_EXT = $00008D55;
  GL_RENDERBUFFER_STENCIL_SIZE_OES = $00008D55;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV = $00008D56;
  GL_MAX_SAMPLES = $00008D57;
  GL_MAX_SAMPLES_ANGLE = $00008D57;
  GL_MAX_SAMPLES_APPLE = $00008D57;
  GL_MAX_SAMPLES_EXT = $00008D57;
  GL_MAX_SAMPLES_NV = $00008D57;
  GL_TEXTURE_GEN_STR_OES = $00008D60;
  GL_HALF_FLOAT_OES = $00008D61;
  GL_RGB565_OES = $00008D62;
  GL_RGB565 = $00008D62;
  GL_ETC1_RGB8_OES = $00008D64;
  GL_TEXTURE_EXTERNAL_OES = $00008D65;
  GL_SAMPLER_EXTERNAL_OES = $00008D66;
  GL_TEXTURE_BINDING_EXTERNAL_OES = $00008D67;
  GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = $00008D68;
  GL_PRIMITIVE_RESTART_FIXED_INDEX = $00008D69;
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE = $00008D6A;
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = $00008D6A;
  GL_MAX_ELEMENT_INDEX = $00008D6B;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = $00008D6C;
  GL_RGBA32UI = $00008D70;
  GL_RGBA32UI_EXT = $00008D70;
  GL_RGB32UI = $00008D71;
  GL_RGB32UI_EXT = $00008D71;
  GL_ALPHA32UI_EXT = $00008D72;
  GL_INTENSITY32UI_EXT = $00008D73;
  GL_LUMINANCE32UI_EXT = $00008D74;
  GL_LUMINANCE_ALPHA32UI_EXT = $00008D75;
  GL_RGBA16UI = $00008D76;
  GL_RGBA16UI_EXT = $00008D76;
  GL_RGB16UI = $00008D77;
  GL_RGB16UI_EXT = $00008D77;
  GL_ALPHA16UI_EXT = $00008D78;
  GL_INTENSITY16UI_EXT = $00008D79;
  GL_LUMINANCE16UI_EXT = $00008D7A;
  GL_LUMINANCE_ALPHA16UI_EXT = $00008D7B;
  GL_RGBA8UI = $00008D7C;
  GL_RGBA8UI_EXT = $00008D7C;
  GL_RGB8UI = $00008D7D;
  GL_RGB8UI_EXT = $00008D7D;
  GL_ALPHA8UI_EXT = $00008D7E;
  GL_INTENSITY8UI_EXT = $00008D7F;
  GL_LUMINANCE8UI_EXT = $00008D80;
  GL_LUMINANCE_ALPHA8UI_EXT = $00008D81;
  GL_RGBA32I = $00008D82;
  GL_RGBA32I_EXT = $00008D82;
  GL_RGB32I = $00008D83;
  GL_RGB32I_EXT = $00008D83;
  GL_ALPHA32I_EXT = $00008D84;
  GL_INTENSITY32I_EXT = $00008D85;
  GL_LUMINANCE32I_EXT = $00008D86;
  GL_LUMINANCE_ALPHA32I_EXT = $00008D87;
  GL_RGBA16I = $00008D88;
  GL_RGBA16I_EXT = $00008D88;
  GL_RGB16I = $00008D89;
  GL_RGB16I_EXT = $00008D89;
  GL_ALPHA16I_EXT = $00008D8A;
  GL_INTENSITY16I_EXT = $00008D8B;
  GL_LUMINANCE16I_EXT = $00008D8C;
  GL_LUMINANCE_ALPHA16I_EXT = $00008D8D;
  GL_RGBA8I = $00008D8E;
  GL_RGBA8I_EXT = $00008D8E;
  GL_RGB8I = $00008D8F;
  GL_RGB8I_EXT = $00008D8F;
  GL_ALPHA8I_EXT = $00008D90;
  GL_INTENSITY8I_EXT = $00008D91;
  GL_LUMINANCE8I_EXT = $00008D92;
  GL_LUMINANCE_ALPHA8I_EXT = $00008D93;
  GL_RED_INTEGER = $00008D94;
  GL_RED_INTEGER_EXT = $00008D94;
  GL_GREEN_INTEGER = $00008D95;
  GL_GREEN_INTEGER_EXT = $00008D95;
  GL_BLUE_INTEGER = $00008D96;
  GL_BLUE_INTEGER_EXT = $00008D96;
  GL_ALPHA_INTEGER = $00008D97;
  GL_ALPHA_INTEGER_EXT = $00008D97;
  GL_RGB_INTEGER = $00008D98;
  GL_RGB_INTEGER_EXT = $00008D98;
  GL_RGBA_INTEGER = $00008D99;
  GL_RGBA_INTEGER_EXT = $00008D99;
  GL_BGR_INTEGER = $00008D9A;
  GL_BGR_INTEGER_EXT = $00008D9A;
  GL_BGRA_INTEGER = $00008D9B;
  GL_BGRA_INTEGER_EXT = $00008D9B;
  GL_LUMINANCE_INTEGER_EXT = $00008D9C;
  GL_LUMINANCE_ALPHA_INTEGER_EXT = $00008D9D;
  GL_RGBA_INTEGER_MODE_EXT = $00008D9E;
  GL_INT_2_10_10_10_REV = $00008D9F;
  GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = $00008DA0;
  GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = $00008DA1;
  GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = $00008DA2;
  GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = $00008DA3;
  GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = $00008DA4;
  GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = $00008DA5;
  GL_MAX_PROGRAM_GENERIC_RESULTS_NV = $00008DA6;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED = $00008DA7;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = $00008DA7;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = $00008DA7;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES = $00008DA7;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = $00008DA9;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = $00008DA9;
  GL_LAYER_NV = $00008DAA;
  GL_DEPTH_COMPONENT32F_NV = $00008DAB;
  GL_DEPTH32F_STENCIL8_NV = $00008DAC;
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV = $00008DAD;
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = $00008DAD;
  GL_SHADER_INCLUDE_ARB = $00008DAE;
  GL_DEPTH_BUFFER_FLOAT_MODE_NV = $00008DAF;
  GL_FRAMEBUFFER_SRGB = $00008DB9;
  GL_FRAMEBUFFER_SRGB_EXT = $00008DB9;
  GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = $00008DBA;
  GL_COMPRESSED_RED_RGTC1 = $00008DBB;
  GL_COMPRESSED_RED_RGTC1_EXT = $00008DBB;
  GL_COMPRESSED_SIGNED_RED_RGTC1 = $00008DBC;
  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = $00008DBC;
  GL_COMPRESSED_RED_GREEN_RGTC2_EXT = $00008DBD;
  GL_COMPRESSED_RG_RGTC2 = $00008DBD;
  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = $00008DBE;
  GL_COMPRESSED_SIGNED_RG_RGTC2 = $00008DBE;
  GL_SAMPLER_1D_ARRAY = $00008DC0;
  GL_SAMPLER_1D_ARRAY_EXT = $00008DC0;
  GL_SAMPLER_2D_ARRAY = $00008DC1;
  GL_SAMPLER_2D_ARRAY_EXT = $00008DC1;
  GL_SAMPLER_BUFFER = $00008DC2;
  GL_SAMPLER_BUFFER_EXT = $00008DC2;
  GL_SAMPLER_BUFFER_OES = $00008DC2;
  GL_SAMPLER_1D_ARRAY_SHADOW = $00008DC3;
  GL_SAMPLER_1D_ARRAY_SHADOW_EXT = $00008DC3;
  GL_SAMPLER_2D_ARRAY_SHADOW = $00008DC4;
  GL_SAMPLER_2D_ARRAY_SHADOW_EXT = $00008DC4;
  GL_SAMPLER_2D_ARRAY_SHADOW_NV = $00008DC4;
  GL_SAMPLER_CUBE_SHADOW = $00008DC5;
  GL_SAMPLER_CUBE_SHADOW_EXT = $00008DC5;
  GL_SAMPLER_CUBE_SHADOW_NV = $00008DC5;
  GL_UNSIGNED_INT_VEC2 = $00008DC6;
  GL_UNSIGNED_INT_VEC2_EXT = $00008DC6;
  GL_UNSIGNED_INT_VEC3 = $00008DC7;
  GL_UNSIGNED_INT_VEC3_EXT = $00008DC7;
  GL_UNSIGNED_INT_VEC4 = $00008DC8;
  GL_UNSIGNED_INT_VEC4_EXT = $00008DC8;
  GL_INT_SAMPLER_1D = $00008DC9;
  GL_INT_SAMPLER_1D_EXT = $00008DC9;
  GL_INT_SAMPLER_2D = $00008DCA;
  GL_INT_SAMPLER_2D_EXT = $00008DCA;
  GL_INT_SAMPLER_3D = $00008DCB;
  GL_INT_SAMPLER_3D_EXT = $00008DCB;
  GL_INT_SAMPLER_CUBE = $00008DCC;
  GL_INT_SAMPLER_CUBE_EXT = $00008DCC;
  GL_INT_SAMPLER_2D_RECT = $00008DCD;
  GL_INT_SAMPLER_2D_RECT_EXT = $00008DCD;
  GL_INT_SAMPLER_1D_ARRAY = $00008DCE;
  GL_INT_SAMPLER_1D_ARRAY_EXT = $00008DCE;
  GL_INT_SAMPLER_2D_ARRAY = $00008DCF;
  GL_INT_SAMPLER_2D_ARRAY_EXT = $00008DCF;
  GL_INT_SAMPLER_BUFFER = $00008DD0;
  GL_INT_SAMPLER_BUFFER_EXT = $00008DD0;
  GL_INT_SAMPLER_BUFFER_OES = $00008DD0;
  GL_UNSIGNED_INT_SAMPLER_1D = $00008DD1;
  GL_UNSIGNED_INT_SAMPLER_1D_EXT = $00008DD1;
  GL_UNSIGNED_INT_SAMPLER_2D = $00008DD2;
  GL_UNSIGNED_INT_SAMPLER_2D_EXT = $00008DD2;
  GL_UNSIGNED_INT_SAMPLER_3D = $00008DD3;
  GL_UNSIGNED_INT_SAMPLER_3D_EXT = $00008DD3;
  GL_UNSIGNED_INT_SAMPLER_CUBE = $00008DD4;
  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = $00008DD4;
  GL_UNSIGNED_INT_SAMPLER_2D_RECT = $00008DD5;
  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = $00008DD5;
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = $00008DD6;
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = $00008DD6;
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = $00008DD7;
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = $00008DD7;
  GL_UNSIGNED_INT_SAMPLER_BUFFER = $00008DD8;
  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = $00008DD8;
  GL_UNSIGNED_INT_SAMPLER_BUFFER_OES = $00008DD8;
  GL_GEOMETRY_SHADER = $00008DD9;
  GL_GEOMETRY_SHADER_ARB = $00008DD9;
  GL_GEOMETRY_SHADER_EXT = $00008DD9;
  GL_GEOMETRY_SHADER_OES = $00008DD9;
  GL_GEOMETRY_VERTICES_OUT_ARB = $00008DDA;
  GL_GEOMETRY_VERTICES_OUT_EXT = $00008DDA;
  GL_GEOMETRY_INPUT_TYPE_ARB = $00008DDB;
  GL_GEOMETRY_INPUT_TYPE_EXT = $00008DDB;
  GL_GEOMETRY_OUTPUT_TYPE_ARB = $00008DDC;
  GL_GEOMETRY_OUTPUT_TYPE_EXT = $00008DDC;
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = $00008DDD;
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = $00008DDD;
  GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = $00008DDE;
  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = $00008DDE;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = $00008DDF;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = $00008DDF;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = $00008DDF;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES = $00008DDF;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES = $00008DE0;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = $00008DE0;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = $00008DE0;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES = $00008DE0;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = $00008DE1;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = $00008DE1;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = $00008DE1;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES = $00008DE1;
  GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = $00008DE2;
  GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = $00008DE3;
  GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = $00008DE4;
  GL_ACTIVE_SUBROUTINES = $00008DE5;
  GL_ACTIVE_SUBROUTINE_UNIFORMS = $00008DE6;
  GL_MAX_SUBROUTINES = $00008DE7;
  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = $00008DE8;
  GL_NAMED_STRING_LENGTH_ARB = $00008DE9;
  GL_NAMED_STRING_TYPE_ARB = $00008DEA;
  GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = $00008DED;
  GL_UNIFORM_BUFFER_EXT = $00008DEE;
  GL_UNIFORM_BUFFER_BINDING_EXT = $00008DEF;
  GL_LOW_FLOAT = $00008DF0;
  GL_MEDIUM_FLOAT = $00008DF1;
  GL_HIGH_FLOAT = $00008DF2;
  GL_LOW_INT = $00008DF3;
  GL_MEDIUM_INT = $00008DF4;
  GL_HIGH_INT = $00008DF5;
  GL_UNSIGNED_INT_10_10_10_2_OES = $00008DF6;
  GL_INT_10_10_10_2_OES = $00008DF7;
  GL_SHADER_BINARY_FORMATS = $00008DF8;
  GL_NUM_SHADER_BINARY_FORMATS = $00008DF9;
  GL_SHADER_COMPILER = $00008DFA;
  GL_MAX_VERTEX_UNIFORM_VECTORS = $00008DFB;
  GL_MAX_VARYING_VECTORS = $00008DFC;
  GL_MAX_FRAGMENT_UNIFORM_VECTORS = $00008DFD;
  GL_RENDERBUFFER_COLOR_SAMPLES_NV = $00008E10;
  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = $00008E11;
  GL_MULTISAMPLE_COVERAGE_MODES_NV = $00008E12;
  GL_QUERY_WAIT = $00008E13;
  GL_QUERY_WAIT_NV = $00008E13;
  GL_QUERY_NO_WAIT = $00008E14;
  GL_QUERY_NO_WAIT_NV = $00008E14;
  GL_QUERY_BY_REGION_WAIT = $00008E15;
  GL_QUERY_BY_REGION_WAIT_NV = $00008E15;
  GL_QUERY_BY_REGION_NO_WAIT = $00008E16;
  GL_QUERY_BY_REGION_NO_WAIT_NV = $00008E16;
  GL_QUERY_WAIT_INVERTED = $00008E17;
  GL_QUERY_NO_WAIT_INVERTED = $00008E18;
  GL_QUERY_BY_REGION_WAIT_INVERTED = $00008E19;
  GL_QUERY_BY_REGION_NO_WAIT_INVERTED = $00008E1A;
  GL_POLYGON_OFFSET_CLAMP = $00008E1B;
  GL_POLYGON_OFFSET_CLAMP_EXT = GL_POLYGON_OFFSET_CLAMP;
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = $00008E1E;
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = $00008E1E;
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES = $00008E1E;
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = $00008E1F;
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = $00008E1F;
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = $00008E1F;
  GL_COLOR_SAMPLES_NV = $00008E20;
  GL_TRANSFORM_FEEDBACK = $00008E22;
  GL_TRANSFORM_FEEDBACK_NV = $00008E22;
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = $00008E23;
  GL_TRANSFORM_FEEDBACK_PAUSED = GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED;
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = $00008E23;
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = $00008E24;
  GL_TRANSFORM_FEEDBACK_ACTIVE = GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE;
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = $00008E24;
  GL_TRANSFORM_FEEDBACK_BINDING = $00008E25;
  GL_TRANSFORM_FEEDBACK_BINDING_NV = $00008E25;
  GL_FRAME_NV = $00008E26;
  GL_FIELDS_NV = $00008E27;
  GL_CURRENT_TIME_NV = $00008E28;
  GL_TIMESTAMP = $00008E28;
  GL_TIMESTAMP_EXT = $00008E28;
  GL_NUM_FILL_STREAMS_NV = $00008E29;
  GL_PRESENT_TIME_NV = $00008E2A;
  GL_PRESENT_DURATION_NV = $00008E2B;
  GL_DEPTH_COMPONENT16_NONLINEAR_NV = $00008E2C;
  GL_PROGRAM_MATRIX_EXT = $00008E2D;
  GL_TRANSPOSE_PROGRAM_MATRIX_EXT = $00008E2E;
  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = $00008E2F;
  GL_TEXTURE_SWIZZLE_R = $00008E42;
  GL_TEXTURE_SWIZZLE_R_EXT = $00008E42;
  GL_TEXTURE_SWIZZLE_G = $00008E43;
  GL_TEXTURE_SWIZZLE_G_EXT = $00008E43;
  GL_TEXTURE_SWIZZLE_B = $00008E44;
  GL_TEXTURE_SWIZZLE_B_EXT = $00008E44;
  GL_TEXTURE_SWIZZLE_A = $00008E45;
  GL_TEXTURE_SWIZZLE_A_EXT = $00008E45;
  GL_TEXTURE_SWIZZLE_RGBA = $00008E46;
  GL_TEXTURE_SWIZZLE_RGBA_EXT = $00008E46;
  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = $00008E47;
  GL_ACTIVE_SUBROUTINE_MAX_LENGTH = $00008E48;
  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = $00008E49;
  GL_NUM_COMPATIBLE_SUBROUTINES = $00008E4A;
  GL_COMPATIBLE_SUBROUTINES = $00008E4B;
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = $00008E4C;
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = $00008E4C;
  GL_FIRST_VERTEX_CONVENTION = $00008E4D;
  GL_FIRST_VERTEX_CONVENTION_EXT = $00008E4D;
  GL_FIRST_VERTEX_CONVENTION_OES = $00008E4D;
  GL_LAST_VERTEX_CONVENTION = $00008E4E;
  GL_LAST_VERTEX_CONVENTION_EXT = $00008E4E;
  GL_LAST_VERTEX_CONVENTION_OES = $00008E4E;
  GL_PROVOKING_VERTEX = $00008E4F;
  GL_PROVOKING_VERTEX_EXT = $00008E4F;
  GL_SAMPLE_POSITION = $00008E50;
  GL_SAMPLE_POSITION_NV = $00008E50;
  GL_SAMPLE_LOCATION_ARB = GL_SAMPLE_POSITION;
  GL_SAMPLE_LOCATION_NV = GL_SAMPLE_POSITION_NV;
  GL_SAMPLE_MASK = $00008E51;
  GL_SAMPLE_MASK_NV = $00008E51;
  GL_SAMPLE_MASK_VALUE = $00008E52;
  GL_SAMPLE_MASK_VALUE_NV = $00008E52;
  GL_TEXTURE_BINDING_RENDERBUFFER_NV = $00008E53;
  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = $00008E54;
  GL_TEXTURE_RENDERBUFFER_NV = $00008E55;
  GL_SAMPLER_RENDERBUFFER_NV = $00008E56;
  GL_INT_SAMPLER_RENDERBUFFER_NV = $00008E57;
  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = $00008E58;
  GL_MAX_SAMPLE_MASK_WORDS = $00008E59;
  GL_MAX_SAMPLE_MASK_WORDS_NV = $00008E59;
  GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = $00008E5A;
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS = $00008E5A;
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT = $00008E5A;
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES = $00008E5A;
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = $00008E5B;
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = $00008E5B;
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = $00008E5B;
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = $00008E5C;
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = $00008E5C;
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = $00008E5C;
  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = $00008E5D;
  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = $00008E5D;
  GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = $00008E5D;
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = $00008E5E;
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = $00008E5E;
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = $00008E5E;
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = $00008E5F;
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = $00008E5F;
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = $00008E5F;
  GL_MAX_MESH_UNIFORM_BLOCKS_NV = $00008E60;
  GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = $00008E61;
  GL_MAX_MESH_IMAGE_UNIFORMS_NV = $00008E62;
  GL_MAX_MESH_UNIFORM_COMPONENTS_NV = $00008E63;
  GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = $00008E64;
  GL_MAX_MESH_ATOMIC_COUNTERS_NV = $00008E65;
  GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = $00008E66;
  GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = $00008E67;
  GL_MAX_TASK_UNIFORM_BLOCKS_NV = $00008E68;
  GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = $00008E69;
  GL_MAX_TASK_IMAGE_UNIFORMS_NV = $00008E6A;
  GL_MAX_TASK_UNIFORM_COMPONENTS_NV = $00008E6B;
  GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = $00008E6C;
  GL_MAX_TASK_ATOMIC_COUNTERS_NV = $00008E6D;
  GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = $00008E6E;
  GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = $00008E6F;
  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = $00008E70;
  GL_MAX_VERTEX_STREAMS = $00008E71;
  GL_PATCH_VERTICES = $00008E72;
  GL_PATCH_VERTICES_EXT = $00008E72;
  GL_PATCH_VERTICES_OES = $00008E72;
  GL_PATCH_DEFAULT_INNER_LEVEL = $00008E73;
  GL_PATCH_DEFAULT_INNER_LEVEL_EXT = $00008E73;
  GL_PATCH_DEFAULT_OUTER_LEVEL = $00008E74;
  GL_PATCH_DEFAULT_OUTER_LEVEL_EXT = $00008E74;
  GL_TESS_CONTROL_OUTPUT_VERTICES = $00008E75;
  GL_TESS_CONTROL_OUTPUT_VERTICES_EXT = $00008E75;
  GL_TESS_CONTROL_OUTPUT_VERTICES_OES = $00008E75;
  GL_TESS_GEN_MODE = $00008E76;
  GL_TESS_GEN_MODE_EXT = $00008E76;
  GL_TESS_GEN_MODE_OES = $00008E76;
  GL_TESS_GEN_SPACING = $00008E77;
  GL_TESS_GEN_SPACING_EXT = $00008E77;
  GL_TESS_GEN_SPACING_OES = $00008E77;
  GL_TESS_GEN_VERTEX_ORDER = $00008E78;
  GL_TESS_GEN_VERTEX_ORDER_EXT = $00008E78;
  GL_TESS_GEN_VERTEX_ORDER_OES = $00008E78;
  GL_TESS_GEN_POINT_MODE = $00008E79;
  GL_TESS_GEN_POINT_MODE_EXT = $00008E79;
  GL_TESS_GEN_POINT_MODE_OES = $00008E79;
  GL_ISOLINES = $00008E7A;
  GL_ISOLINES_EXT = $00008E7A;
  GL_ISOLINES_OES = $00008E7A;
  GL_FRACTIONAL_ODD = $00008E7B;
  GL_FRACTIONAL_ODD_EXT = $00008E7B;
  GL_FRACTIONAL_ODD_OES = $00008E7B;
  GL_FRACTIONAL_EVEN = $00008E7C;
  GL_FRACTIONAL_EVEN_EXT = $00008E7C;
  GL_FRACTIONAL_EVEN_OES = $00008E7C;
  GL_MAX_PATCH_VERTICES = $00008E7D;
  GL_MAX_PATCH_VERTICES_EXT = $00008E7D;
  GL_MAX_PATCH_VERTICES_OES = $00008E7D;
  GL_MAX_TESS_GEN_LEVEL = $00008E7E;
  GL_MAX_TESS_GEN_LEVEL_EXT = $00008E7E;
  GL_MAX_TESS_GEN_LEVEL_OES = $00008E7E;
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = $00008E7F;
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = $00008E7F;
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES = $00008E7F;
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = $00008E80;
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = $00008E80;
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = $00008E80;
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = $00008E81;
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = $00008E81;
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES = $00008E81;
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = $00008E82;
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = $00008E82;
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES = $00008E82;
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = $00008E83;
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = $00008E83;
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES = $00008E83;
  GL_MAX_TESS_PATCH_COMPONENTS = $00008E84;
  GL_MAX_TESS_PATCH_COMPONENTS_EXT = $00008E84;
  GL_MAX_TESS_PATCH_COMPONENTS_OES = $00008E84;
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = $00008E85;
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = $00008E85;
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES = $00008E85;
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = $00008E86;
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = $00008E86;
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES = $00008E86;
  GL_TESS_EVALUATION_SHADER = $00008E87;
  GL_TESS_EVALUATION_SHADER_EXT = $00008E87;
  GL_TESS_EVALUATION_SHADER_OES = $00008E87;
  GL_TESS_CONTROL_SHADER = $00008E88;
  GL_TESS_CONTROL_SHADER_EXT = $00008E88;
  GL_TESS_CONTROL_SHADER_OES = $00008E88;
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = $00008E89;
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = $00008E89;
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES = $00008E89;
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = $00008E8A;
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = $00008E8A;
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES = $00008E8A;
  GL_COMPRESSED_RGBA_BPTC_UNORM = $00008E8C;
  GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = $00008E8C;
  GL_COMPRESSED_RGBA_BPTC_UNORM_EXT = $00008E8C;
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = $00008E8D;
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = $00008E8D;
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = $00008E8D;
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = $00008E8E;
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = $00008E8E;
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = $00008E8E;
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = $00008E8F;
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = $00008E8F;
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = $00008E8F;
  GL_TRP_IMG = $00008EA0;
  GL_TRP_ERROR_CONTEXT_RESET_IMG = $00008EA1;
  GL_TRP_UNSUPPORTED_CONTEXT_IMG = $00008EA2;
  GL_PVRIC_SIGNATURE_MISMATCH_IMG = $00008EA3;
  GL_COVERAGE_COMPONENT_NV = $00008ED0;
  GL_COVERAGE_COMPONENT4_NV = $00008ED1;
  GL_COVERAGE_ATTACHMENT_NV = $00008ED2;
  GL_COVERAGE_BUFFERS_NV = $00008ED3;
  GL_COVERAGE_SAMPLES_NV = $00008ED4;
  GL_COVERAGE_ALL_FRAGMENTS_NV = $00008ED5;
  GL_COVERAGE_EDGE_FRAGMENTS_NV = $00008ED6;
  GL_COVERAGE_AUTOMATIC_NV = $00008ED7;
  GL_INCLUSIVE_EXT = $00008F10;
  GL_EXCLUSIVE_EXT = $00008F11;
  GL_WINDOW_RECTANGLE_EXT = $00008F12;
  GL_WINDOW_RECTANGLE_MODE_EXT = $00008F13;
  GL_MAX_WINDOW_RECTANGLES_EXT = $00008F14;
  GL_NUM_WINDOW_RECTANGLES_EXT = $00008F15;
  GL_BUFFER_GPU_ADDRESS_NV = $00008F1D;
  GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = $00008F1E;
  GL_ELEMENT_ARRAY_UNIFIED_NV = $00008F1F;
  GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = $00008F20;
  GL_VERTEX_ARRAY_ADDRESS_NV = $00008F21;
  GL_NORMAL_ARRAY_ADDRESS_NV = $00008F22;
  GL_COLOR_ARRAY_ADDRESS_NV = $00008F23;
  GL_INDEX_ARRAY_ADDRESS_NV = $00008F24;
  GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = $00008F25;
  GL_EDGE_FLAG_ARRAY_ADDRESS_NV = $00008F26;
  GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = $00008F27;
  GL_FOG_COORD_ARRAY_ADDRESS_NV = $00008F28;
  GL_ELEMENT_ARRAY_ADDRESS_NV = $00008F29;
  GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = $00008F2A;
  GL_VERTEX_ARRAY_LENGTH_NV = $00008F2B;
  GL_NORMAL_ARRAY_LENGTH_NV = $00008F2C;
  GL_COLOR_ARRAY_LENGTH_NV = $00008F2D;
  GL_INDEX_ARRAY_LENGTH_NV = $00008F2E;
  GL_TEXTURE_COORD_ARRAY_LENGTH_NV = $00008F2F;
  GL_EDGE_FLAG_ARRAY_LENGTH_NV = $00008F30;
  GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = $00008F31;
  GL_FOG_COORD_ARRAY_LENGTH_NV = $00008F32;
  GL_ELEMENT_ARRAY_LENGTH_NV = $00008F33;
  GL_GPU_ADDRESS_NV = $00008F34;
  GL_MAX_SHADER_BUFFER_ADDRESS_NV = $00008F35;
  GL_COPY_READ_BUFFER = $00008F36;
  GL_COPY_READ_BUFFER_NV = $00008F36;
  GL_COPY_READ_BUFFER_BINDING = GL_COPY_READ_BUFFER;
  GL_COPY_WRITE_BUFFER = $00008F37;
  GL_COPY_WRITE_BUFFER_NV = $00008F37;
  GL_COPY_WRITE_BUFFER_BINDING = GL_COPY_WRITE_BUFFER;
  GL_MAX_IMAGE_UNITS = $00008F38;
  GL_MAX_IMAGE_UNITS_EXT = $00008F38;
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = $00008F39;
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = $00008F39;
  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS;
  GL_IMAGE_BINDING_NAME = $00008F3A;
  GL_IMAGE_BINDING_NAME_EXT = $00008F3A;
  GL_IMAGE_BINDING_LEVEL = $00008F3B;
  GL_IMAGE_BINDING_LEVEL_EXT = $00008F3B;
  GL_IMAGE_BINDING_LAYERED = $00008F3C;
  GL_IMAGE_BINDING_LAYERED_EXT = $00008F3C;
  GL_IMAGE_BINDING_LAYER = $00008F3D;
  GL_IMAGE_BINDING_LAYER_EXT = $00008F3D;
  GL_IMAGE_BINDING_ACCESS = $00008F3E;
  GL_IMAGE_BINDING_ACCESS_EXT = $00008F3E;
  GL_DRAW_INDIRECT_BUFFER = $00008F3F;
  GL_DRAW_INDIRECT_UNIFIED_NV = $00008F40;
  GL_DRAW_INDIRECT_ADDRESS_NV = $00008F41;
  GL_DRAW_INDIRECT_LENGTH_NV = $00008F42;
  GL_DRAW_INDIRECT_BUFFER_BINDING = $00008F43;
  GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = $00008F44;
  GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = $00008F45;
  GL_DOUBLE_MAT2 = $00008F46;
  GL_DOUBLE_MAT2_EXT = $00008F46;
  GL_DOUBLE_MAT3 = $00008F47;
  GL_DOUBLE_MAT3_EXT = $00008F47;
  GL_DOUBLE_MAT4 = $00008F48;
  GL_DOUBLE_MAT4_EXT = $00008F48;
  GL_DOUBLE_MAT2x3 = $00008F49;
  GL_DOUBLE_MAT2x3_EXT = $00008F49;
  GL_DOUBLE_MAT2x4 = $00008F4A;
  GL_DOUBLE_MAT2x4_EXT = $00008F4A;
  GL_DOUBLE_MAT3x2 = $00008F4B;
  GL_DOUBLE_MAT3x2_EXT = $00008F4B;
  GL_DOUBLE_MAT3x4 = $00008F4C;
  GL_DOUBLE_MAT3x4_EXT = $00008F4C;
  GL_DOUBLE_MAT4x2 = $00008F4D;
  GL_DOUBLE_MAT4x2_EXT = $00008F4D;
  GL_DOUBLE_MAT4x3 = $00008F4E;
  GL_DOUBLE_MAT4x3_EXT = $00008F4E;
  GL_VERTEX_BINDING_BUFFER = $00008F4F;
  GL_MALI_SHADER_BINARY_ARM = $00008F60;
  GL_MALI_PROGRAM_BINARY_ARM = $00008F61;
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = $00008F63;
  GL_SHADER_PIXEL_LOCAL_STORAGE_EXT = $00008F64;
  GL_FETCH_PER_SAMPLE_ARM = $00008F65;
  GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = $00008F66;
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = $00008F67;
  GL_TEXTURE_ASTC_DECODE_PRECISION_EXT = $00008F69;
  GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM = $00008F6A;
  GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT = $00008F6E;
  GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT = $00008F6F;
  GL_RED_SNORM = $00008F90;
  GL_RG_SNORM = $00008F91;
  GL_RGB_SNORM = $00008F92;
  GL_RGBA_SNORM = $00008F93;
  GL_R8_SNORM = $00008F94;
  GL_RG8_SNORM = $00008F95;
  GL_RGB8_SNORM = $00008F96;
  GL_RGBA8_SNORM = $00008F97;
  GL_R16_SNORM = $00008F98;
  GL_R16_SNORM_EXT = $00008F98;
  GL_RG16_SNORM = $00008F99;
  GL_RG16_SNORM_EXT = $00008F99;
  GL_RGB16_SNORM = $00008F9A;
  GL_RGB16_SNORM_EXT = $00008F9A;
  GL_RGBA16_SNORM = $00008F9B;
  GL_RGBA16_SNORM_EXT = $00008F9B;
  GL_SIGNED_NORMALIZED = $00008F9C;
  GL_PRIMITIVE_RESTART = $00008F9D;
  GL_PRIMITIVE_RESTART_INDEX = $00008F9E;
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = $00008F9F;
  GL_PERFMON_GLOBAL_MODE_QCOM = $00008FA0;
  GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM = $00008FA1;
  GL_BINNING_CONTROL_HINT_QCOM = $00008FB0;
  GL_CPU_OPTIMIZED_QCOM = $00008FB1;
  GL_GPU_OPTIMIZED_QCOM = $00008FB2;
  GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = $00008FB3;
  GL_GPU_DISJOINT_EXT = $00008FBB;
  GL_SR8_EXT = $00008FBD;
  GL_SRG8_EXT = $00008FBE;
  GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT = $00008FBF;
  GL_SHADER_BINARY_VIV = $00008FC4;
  GL_INT8_NV = $00008FE0;
  GL_INT8_VEC2_NV = $00008FE1;
  GL_INT8_VEC3_NV = $00008FE2;
  GL_INT8_VEC4_NV = $00008FE3;
  GL_INT16_NV = $00008FE4;
  GL_INT16_VEC2_NV = $00008FE5;
  GL_INT16_VEC3_NV = $00008FE6;
  GL_INT16_VEC4_NV = $00008FE7;
  GL_INT64_VEC2_ARB = $00008FE9;
  GL_INT64_VEC2_NV = $00008FE9;
  GL_INT64_VEC3_ARB = $00008FEA;
  GL_INT64_VEC3_NV = $00008FEA;
  GL_INT64_VEC4_ARB = $00008FEB;
  GL_INT64_VEC4_NV = $00008FEB;
  GL_UNSIGNED_INT8_NV = $00008FEC;
  GL_UNSIGNED_INT8_VEC2_NV = $00008FED;
  GL_UNSIGNED_INT8_VEC3_NV = $00008FEE;
  GL_UNSIGNED_INT8_VEC4_NV = $00008FEF;
  GL_UNSIGNED_INT16_NV = $00008FF0;
  GL_UNSIGNED_INT16_VEC2_NV = $00008FF1;
  GL_UNSIGNED_INT16_VEC3_NV = $00008FF2;
  GL_UNSIGNED_INT16_VEC4_NV = $00008FF3;
  GL_UNSIGNED_INT64_VEC2_ARB = $00008FF5;
  GL_UNSIGNED_INT64_VEC2_NV = $00008FF5;
  GL_UNSIGNED_INT64_VEC3_ARB = $00008FF6;
  GL_UNSIGNED_INT64_VEC3_NV = $00008FF6;
  GL_UNSIGNED_INT64_VEC4_ARB = $00008FF7;
  GL_UNSIGNED_INT64_VEC4_NV = $00008FF7;
  GL_FLOAT16_NV = $00008FF8;
  GL_FLOAT16_VEC2_NV = $00008FF9;
  GL_FLOAT16_VEC3_NV = $00008FFA;
  GL_FLOAT16_VEC4_NV = $00008FFB;
  GL_DOUBLE_VEC2 = $00008FFC;
  GL_DOUBLE_VEC2_EXT = $00008FFC;
  GL_DOUBLE_VEC3 = $00008FFD;
  GL_DOUBLE_VEC3_EXT = $00008FFD;
  GL_DOUBLE_VEC4 = $00008FFE;
  GL_DOUBLE_VEC4_EXT = $00008FFE;
  GL_SAMPLER_BUFFER_AMD = $00009001;
  GL_INT_SAMPLER_BUFFER_AMD = $00009002;
  GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = $00009003;
  GL_TESSELLATION_MODE_AMD = $00009004;
  GL_TESSELLATION_FACTOR_AMD = $00009005;
  GL_DISCRETE_AMD = $00009006;
  GL_CONTINUOUS_AMD = $00009007;
  GL_TEXTURE_CUBE_MAP_ARRAY = $00009009;
  GL_TEXTURE_CUBE_MAP_ARRAY_ARB = $00009009;
  GL_TEXTURE_CUBE_MAP_ARRAY_EXT = $00009009;
  GL_TEXTURE_CUBE_MAP_ARRAY_OES = $00009009;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = $0000900A;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = $0000900A;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = $0000900A;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES = $0000900A;
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = $0000900B;
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = $0000900B;
  GL_SAMPLER_CUBE_MAP_ARRAY = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_ARB = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_EXT = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_OES = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = $0000900D;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = $0000900D;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = $0000900D;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES = $0000900D;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY = $0000900E;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = $0000900E;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = $0000900E;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES = $0000900E;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = $0000900F;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = $0000900F;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = $0000900F;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES = $0000900F;
  GL_ALPHA_SNORM = $00009010;
  GL_LUMINANCE_SNORM = $00009011;
  GL_LUMINANCE_ALPHA_SNORM = $00009012;
  GL_INTENSITY_SNORM = $00009013;
  GL_ALPHA8_SNORM = $00009014;
  GL_LUMINANCE8_SNORM = $00009015;
  GL_LUMINANCE8_ALPHA8_SNORM = $00009016;
  GL_INTENSITY8_SNORM = $00009017;
  GL_ALPHA16_SNORM = $00009018;
  GL_LUMINANCE16_SNORM = $00009019;
  GL_LUMINANCE16_ALPHA16_SNORM = $0000901A;
  GL_INTENSITY16_SNORM = $0000901B;
  GL_FACTOR_MIN_AMD = $0000901C;
  GL_FACTOR_MAX_AMD = $0000901D;
  GL_DEPTH_CLAMP_NEAR_AMD = $0000901E;
  GL_DEPTH_CLAMP_FAR_AMD = $0000901F;
  GL_VIDEO_BUFFER_NV = $00009020;
  GL_VIDEO_BUFFER_BINDING_NV = $00009021;
  GL_FIELD_UPPER_NV = $00009022;
  GL_FIELD_LOWER_NV = $00009023;
  GL_NUM_VIDEO_CAPTURE_STREAMS_NV = $00009024;
  GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = $00009025;
  GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = $00009026;
  GL_LAST_VIDEO_CAPTURE_STATUS_NV = $00009027;
  GL_VIDEO_BUFFER_PITCH_NV = $00009028;
  GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = $00009029;
  GL_VIDEO_COLOR_CONVERSION_MAX_NV = $0000902A;
  GL_VIDEO_COLOR_CONVERSION_MIN_NV = $0000902B;
  GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = $0000902C;
  GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = $0000902D;
  GL_PARTIAL_SUCCESS_NV = $0000902E;
  GL_SUCCESS_NV = $0000902F;
  GL_FAILURE_NV = $00009030;
  GL_YCBYCR8_422_NV = $00009031;
  GL_YCBAYCR8A_4224_NV = $00009032;
  GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = $00009033;
  GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = $00009034;
  GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = $00009035;
  GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = $00009036;
  GL_Z4Y12Z4CB12Z4CR12_444_NV = $00009037;
  GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = $00009038;
  GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = $00009039;
  GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = $0000903A;
  GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = $0000903B;
  GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = $0000903C;
  GL_TEXTURE_COVERAGE_SAMPLES_NV = $00009045;
  GL_TEXTURE_COLOR_SAMPLES_NV = $00009046;
  GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = $00009047;
  GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = $00009048;
  GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = $00009049;
  GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = $0000904A;
  GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = $0000904B;
  GL_IMAGE_1D = $0000904C;
  GL_IMAGE_1D_EXT = $0000904C;
  GL_IMAGE_2D = $0000904D;
  GL_IMAGE_2D_EXT = $0000904D;
  GL_IMAGE_3D = $0000904E;
  GL_IMAGE_3D_EXT = $0000904E;
  GL_IMAGE_2D_RECT = $0000904F;
  GL_IMAGE_2D_RECT_EXT = $0000904F;
  GL_IMAGE_CUBE = $00009050;
  GL_IMAGE_CUBE_EXT = $00009050;
  GL_IMAGE_BUFFER = $00009051;
  GL_IMAGE_BUFFER_EXT = $00009051;
  GL_IMAGE_BUFFER_OES = $00009051;
  GL_IMAGE_1D_ARRAY = $00009052;
  GL_IMAGE_1D_ARRAY_EXT = $00009052;
  GL_IMAGE_2D_ARRAY = $00009053;
  GL_IMAGE_2D_ARRAY_EXT = $00009053;
  GL_IMAGE_CUBE_MAP_ARRAY = $00009054;
  GL_IMAGE_CUBE_MAP_ARRAY_EXT = $00009054;
  GL_IMAGE_CUBE_MAP_ARRAY_OES = $00009054;
  GL_IMAGE_2D_MULTISAMPLE = $00009055;
  GL_IMAGE_2D_MULTISAMPLE_EXT = $00009055;
  GL_IMAGE_2D_MULTISAMPLE_ARRAY = $00009056;
  GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = $00009056;
  GL_INT_IMAGE_1D = $00009057;
  GL_INT_IMAGE_1D_EXT = $00009057;
  GL_INT_IMAGE_2D = $00009058;
  GL_INT_IMAGE_2D_EXT = $00009058;
  GL_INT_IMAGE_3D = $00009059;
  GL_INT_IMAGE_3D_EXT = $00009059;
  GL_INT_IMAGE_2D_RECT = $0000905A;
  GL_INT_IMAGE_2D_RECT_EXT = $0000905A;
  GL_INT_IMAGE_CUBE = $0000905B;
  GL_INT_IMAGE_CUBE_EXT = $0000905B;
  GL_INT_IMAGE_BUFFER = $0000905C;
  GL_INT_IMAGE_BUFFER_EXT = $0000905C;
  GL_INT_IMAGE_BUFFER_OES = $0000905C;
  GL_INT_IMAGE_1D_ARRAY = $0000905D;
  GL_INT_IMAGE_1D_ARRAY_EXT = $0000905D;
  GL_INT_IMAGE_2D_ARRAY = $0000905E;
  GL_INT_IMAGE_2D_ARRAY_EXT = $0000905E;
  GL_INT_IMAGE_CUBE_MAP_ARRAY = $0000905F;
  GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = $0000905F;
  GL_INT_IMAGE_CUBE_MAP_ARRAY_OES = $0000905F;
  GL_INT_IMAGE_2D_MULTISAMPLE = $00009060;
  GL_INT_IMAGE_2D_MULTISAMPLE_EXT = $00009060;
  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = $00009061;
  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = $00009061;
  GL_UNSIGNED_INT_IMAGE_1D = $00009062;
  GL_UNSIGNED_INT_IMAGE_1D_EXT = $00009062;
  GL_UNSIGNED_INT_IMAGE_2D = $00009063;
  GL_UNSIGNED_INT_IMAGE_2D_EXT = $00009063;
  GL_UNSIGNED_INT_IMAGE_3D = $00009064;
  GL_UNSIGNED_INT_IMAGE_3D_EXT = $00009064;
  GL_UNSIGNED_INT_IMAGE_2D_RECT = $00009065;
  GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = $00009065;
  GL_UNSIGNED_INT_IMAGE_CUBE = $00009066;
  GL_UNSIGNED_INT_IMAGE_CUBE_EXT = $00009066;
  GL_UNSIGNED_INT_IMAGE_BUFFER = $00009067;
  GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = $00009067;
  GL_UNSIGNED_INT_IMAGE_BUFFER_OES = $00009067;
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY = $00009068;
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = $00009068;
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY = $00009069;
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = $00009069;
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = $0000906A;
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = $0000906A;
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES = $0000906A;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = $0000906B;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = $0000906B;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = $0000906C;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = $0000906C;
  GL_MAX_IMAGE_SAMPLES = $0000906D;
  GL_MAX_IMAGE_SAMPLES_EXT = $0000906D;
  GL_IMAGE_BINDING_FORMAT = $0000906E;
  GL_IMAGE_BINDING_FORMAT_EXT = $0000906E;
  GL_RGB10_A2UI = $0000906F;
  GL_PATH_FORMAT_SVG_NV = $00009070;
  GL_PATH_FORMAT_PS_NV = $00009071;
  GL_STANDARD_FONT_NAME_NV = $00009072;
  GL_SYSTEM_FONT_NAME_NV = $00009073;
  GL_FILE_NAME_NV = $00009074;
  GL_PATH_STROKE_WIDTH_NV = $00009075;
  GL_PATH_END_CAPS_NV = $00009076;
  GL_PATH_INITIAL_END_CAP_NV = $00009077;
  GL_PATH_TERMINAL_END_CAP_NV = $00009078;
  GL_PATH_JOIN_STYLE_NV = $00009079;
  GL_PATH_MITER_LIMIT_NV = $0000907A;
  GL_PATH_DASH_CAPS_NV = $0000907B;
  GL_PATH_INITIAL_DASH_CAP_NV = $0000907C;
  GL_PATH_TERMINAL_DASH_CAP_NV = $0000907D;
  GL_PATH_DASH_OFFSET_NV = $0000907E;
  GL_PATH_CLIENT_LENGTH_NV = $0000907F;
  GL_PATH_FILL_MODE_NV = $00009080;
  GL_PATH_FILL_MASK_NV = $00009081;
  GL_PATH_FILL_COVER_MODE_NV = $00009082;
  GL_PATH_STROKE_COVER_MODE_NV = $00009083;
  GL_PATH_STROKE_MASK_NV = $00009084;
  GL_COUNT_UP_NV = $00009088;
  GL_COUNT_DOWN_NV = $00009089;
  GL_PATH_OBJECT_BOUNDING_BOX_NV = $0000908A;
  GL_CONVEX_HULL_NV = $0000908B;
  GL_BOUNDING_BOX_NV = $0000908D;
  GL_TRANSLATE_X_NV = $0000908E;
  GL_TRANSLATE_Y_NV = $0000908F;
  GL_TRANSLATE_2D_NV = $00009090;
  GL_TRANSLATE_3D_NV = $00009091;
  GL_AFFINE_2D_NV = $00009092;
  GL_AFFINE_3D_NV = $00009094;
  GL_TRANSPOSE_AFFINE_2D_NV = $00009096;
  GL_TRANSPOSE_AFFINE_3D_NV = $00009098;
  GL_UTF8_NV = $0000909A;
  GL_UTF16_NV = $0000909B;
  GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = $0000909C;
  GL_PATH_COMMAND_COUNT_NV = $0000909D;
  GL_PATH_COORD_COUNT_NV = $0000909E;
  GL_PATH_DASH_ARRAY_COUNT_NV = $0000909F;
  GL_PATH_COMPUTED_LENGTH_NV = $000090A0;
  GL_PATH_FILL_BOUNDING_BOX_NV = $000090A1;
  GL_PATH_STROKE_BOUNDING_BOX_NV = $000090A2;
  GL_SQUARE_NV = $000090A3;
  GL_ROUND_NV = $000090A4;
  GL_TRIANGULAR_NV = $000090A5;
  GL_BEVEL_NV = $000090A6;
  GL_MITER_REVERT_NV = $000090A7;
  GL_MITER_TRUNCATE_NV = $000090A8;
  GL_SKIP_MISSING_GLYPH_NV = $000090A9;
  GL_USE_MISSING_GLYPH_NV = $000090AA;
  GL_PATH_ERROR_POSITION_NV = $000090AB;
  GL_PATH_FOG_GEN_MODE_NV = $000090AC;
  GL_ACCUM_ADJACENT_PAIRS_NV = $000090AD;
  GL_ADJACENT_PAIRS_NV = $000090AE;
  GL_FIRST_TO_REST_NV = $000090AF;
  GL_PATH_GEN_MODE_NV = $000090B0;
  GL_PATH_GEN_COEFF_NV = $000090B1;
  GL_PATH_GEN_COLOR_FORMAT_NV = $000090B2;
  GL_PATH_GEN_COMPONENTS_NV = $000090B3;
  GL_PATH_DASH_OFFSET_RESET_NV = $000090B4;
  GL_MOVE_TO_RESETS_NV = $000090B5;
  GL_MOVE_TO_CONTINUES_NV = $000090B6;
  GL_PATH_STENCIL_FUNC_NV = $000090B7;
  GL_PATH_STENCIL_REF_NV = $000090B8;
  GL_PATH_STENCIL_VALUE_MASK_NV = $000090B9;
  GL_SCALED_RESOLVE_FASTEST_EXT = $000090BA;
  GL_SCALED_RESOLVE_NICEST_EXT = $000090BB;
  GL_MIN_MAP_BUFFER_ALIGNMENT = $000090BC;
  GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = $000090BD;
  GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = $000090BE;
  GL_PATH_COVER_DEPTH_FUNC_NV = $000090BF;
  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = $000090C7;
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = $000090C8;
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = $000090C9;
  GL_MAX_VERTEX_IMAGE_UNIFORMS = $000090CA;
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = $000090CB;
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = $000090CB;
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES = $000090CB;
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = $000090CC;
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = $000090CC;
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES = $000090CC;
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS = $000090CD;
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = $000090CD;
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES = $000090CD;
  GL_MAX_FRAGMENT_IMAGE_UNIFORMS = $000090CE;
  GL_MAX_COMBINED_IMAGE_UNIFORMS = $000090CF;
  GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = $000090D0;
  GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = $000090D1;
  GL_SHADER_STORAGE_BUFFER = $000090D2;
  GL_SHADER_STORAGE_BUFFER_BINDING = $000090D3;
  GL_SHADER_STORAGE_BUFFER_START = $000090D4;
  GL_SHADER_STORAGE_BUFFER_SIZE = $000090D5;
  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = $000090D6;
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = $000090D7;
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = $000090D7;
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES = $000090D7;
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = $000090D8;
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = $000090D8;
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES = $000090D8;
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = $000090D9;
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = $000090D9;
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES = $000090D9;
  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = $000090DA;
  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = $000090DB;
  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = $000090DC;
  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = $000090DD;
  GL_MAX_SHADER_STORAGE_BLOCK_SIZE = $000090DE;
  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = $000090DF;
  GL_SYNC_X11_FENCE_EXT = $000090E1;
  GL_DEPTH_STENCIL_TEXTURE_MODE = $000090EA;
  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = $000090EB;
  GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS;
  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = $000090EC;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = $000090ED;
  GL_DISPATCH_INDIRECT_BUFFER = $000090EE;
  GL_DISPATCH_INDIRECT_BUFFER_BINDING = $000090EF;
  GL_COLOR_ATTACHMENT_EXT = $000090F0;
  GL_MULTIVIEW_EXT = $000090F1;
  GL_MAX_MULTIVIEW_BUFFERS_EXT = $000090F2;
  GL_CONTEXT_ROBUST_ACCESS = $000090F3;
  GL_CONTEXT_ROBUST_ACCESS_EXT = $000090F3;
  GL_CONTEXT_ROBUST_ACCESS_KHR = $000090F3;
  GL_COMPUTE_PROGRAM_NV = $000090FB;
  GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = $000090FC;
  GL_TEXTURE_2D_MULTISAMPLE = $00009100;
  GL_PROXY_TEXTURE_2D_MULTISAMPLE = $00009101;
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY = $00009102;
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = $00009102;
  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = $00009103;
  GL_TEXTURE_BINDING_2D_MULTISAMPLE = $00009104;
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = $00009105;
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = $00009105;
  GL_TEXTURE_SAMPLES = $00009106;
  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = $00009107;
  GL_SAMPLER_2D_MULTISAMPLE = $00009108;
  GL_INT_SAMPLER_2D_MULTISAMPLE = $00009109;
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = $0000910A;
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY = $0000910B;
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = $0000910B;
  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = $0000910C;
  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = $0000910C;
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = $0000910D;
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = $0000910D;
  GL_MAX_COLOR_TEXTURE_SAMPLES = $0000910E;
  GL_MAX_DEPTH_TEXTURE_SAMPLES = $0000910F;
  GL_MAX_INTEGER_SAMPLES = $00009110;
  GL_MAX_SERVER_WAIT_TIMEOUT = $00009111;
  GL_MAX_SERVER_WAIT_TIMEOUT_APPLE = $00009111;
  GL_OBJECT_TYPE = $00009112;
  GL_OBJECT_TYPE_APPLE = $00009112;
  GL_SYNC_CONDITION = $00009113;
  GL_SYNC_CONDITION_APPLE = $00009113;
  GL_SYNC_STATUS = $00009114;
  GL_SYNC_STATUS_APPLE = $00009114;
  GL_SYNC_FLAGS = $00009115;
  GL_SYNC_FLAGS_APPLE = $00009115;
  GL_SYNC_FENCE = $00009116;
  GL_SYNC_FENCE_APPLE = $00009116;
  GL_SYNC_GPU_COMMANDS_COMPLETE = $00009117;
  GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE = $00009117;
  GL_UNSIGNALED = $00009118;
  GL_UNSIGNALED_APPLE = $00009118;
  GL_SIGNALED = $00009119;
  GL_SIGNALED_APPLE = $00009119;
  GL_ALREADY_SIGNALED = $0000911A;
  GL_ALREADY_SIGNALED_APPLE = $0000911A;
  GL_TIMEOUT_EXPIRED = $0000911B;
  GL_TIMEOUT_EXPIRED_APPLE = $0000911B;
  GL_CONDITION_SATISFIED = $0000911C;
  GL_CONDITION_SATISFIED_APPLE = $0000911C;
  GL_WAIT_FAILED = $0000911D;
  GL_WAIT_FAILED_APPLE = $0000911D;
  GL_BUFFER_ACCESS_FLAGS = $0000911F;
  GL_BUFFER_MAP_LENGTH = $00009120;
  GL_BUFFER_MAP_OFFSET = $00009121;
  GL_MAX_VERTEX_OUTPUT_COMPONENTS = $00009122;
  GL_MAX_GEOMETRY_INPUT_COMPONENTS = $00009123;
  GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = $00009123;
  GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES = $00009123;
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = $00009124;
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = $00009124;
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES = $00009124;
  GL_MAX_FRAGMENT_INPUT_COMPONENTS = $00009125;
  GL_CONTEXT_PROFILE_MASK = $00009126;
  GL_UNPACK_COMPRESSED_BLOCK_WIDTH = $00009127;
  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = $00009128;
  GL_UNPACK_COMPRESSED_BLOCK_DEPTH = $00009129;
  GL_UNPACK_COMPRESSED_BLOCK_SIZE = $0000912A;
  GL_PACK_COMPRESSED_BLOCK_WIDTH = $0000912B;
  GL_PACK_COMPRESSED_BLOCK_HEIGHT = $0000912C;
  GL_PACK_COMPRESSED_BLOCK_DEPTH = $0000912D;
  GL_PACK_COMPRESSED_BLOCK_SIZE = $0000912E;
  GL_TEXTURE_IMMUTABLE_FORMAT = $0000912F;
  GL_TEXTURE_IMMUTABLE_FORMAT_EXT = $0000912F;
  GL_SGX_PROGRAM_BINARY_IMG = $00009130;
  GL_RENDERBUFFER_SAMPLES_IMG = $00009133;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = $00009134;
  GL_MAX_SAMPLES_IMG = $00009135;
  GL_TEXTURE_SAMPLES_IMG = $00009136;
  GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = $00009137;
  GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = $00009138;
  GL_CUBIC_IMG = $00009139;
  GL_CUBIC_MIPMAP_NEAREST_IMG = $0000913A;
  GL_CUBIC_MIPMAP_LINEAR_IMG = $0000913B;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG = $0000913C;
  GL_NUM_DOWNSAMPLE_SCALES_IMG = $0000913D;
  GL_DOWNSAMPLE_SCALES_IMG = $0000913E;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG = $0000913F;
  GL_MAX_DEBUG_MESSAGE_LENGTH = $00009143;
  GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = $00009143;
  GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = $00009143;
  GL_MAX_DEBUG_MESSAGE_LENGTH_KHR = $00009143;
  GL_MAX_DEBUG_LOGGED_MESSAGES = $00009144;
  GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = $00009144;
  GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = $00009144;
  GL_MAX_DEBUG_LOGGED_MESSAGES_KHR = $00009144;
  GL_DEBUG_LOGGED_MESSAGES = $00009145;
  GL_DEBUG_LOGGED_MESSAGES_AMD = $00009145;
  GL_DEBUG_LOGGED_MESSAGES_ARB = $00009145;
  GL_DEBUG_LOGGED_MESSAGES_KHR = $00009145;
  GL_DEBUG_SEVERITY_HIGH = $00009146;
  GL_DEBUG_SEVERITY_HIGH_AMD = $00009146;
  GL_DEBUG_SEVERITY_HIGH_ARB = $00009146;
  GL_DEBUG_SEVERITY_HIGH_KHR = $00009146;
  GL_DEBUG_SEVERITY_MEDIUM = $00009147;
  GL_DEBUG_SEVERITY_MEDIUM_AMD = $00009147;
  GL_DEBUG_SEVERITY_MEDIUM_ARB = $00009147;
  GL_DEBUG_SEVERITY_MEDIUM_KHR = $00009147;
  GL_DEBUG_SEVERITY_LOW = $00009148;
  GL_DEBUG_SEVERITY_LOW_AMD = $00009148;
  GL_DEBUG_SEVERITY_LOW_ARB = $00009148;
  GL_DEBUG_SEVERITY_LOW_KHR = $00009148;
  GL_DEBUG_CATEGORY_API_ERROR_AMD = $00009149;
  GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = $0000914A;
  GL_DEBUG_CATEGORY_DEPRECATION_AMD = $0000914B;
  GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = $0000914C;
  GL_DEBUG_CATEGORY_PERFORMANCE_AMD = $0000914D;
  GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = $0000914E;
  GL_DEBUG_CATEGORY_APPLICATION_AMD = $0000914F;
  GL_DEBUG_CATEGORY_OTHER_AMD = $00009150;
  GL_BUFFER_OBJECT_EXT = $00009151;
  GL_DATA_BUFFER_AMD = $00009151;
  GL_PERFORMANCE_MONITOR_AMD = $00009152;
  GL_QUERY_OBJECT_AMD = $00009153;
  GL_QUERY_OBJECT_EXT = $00009153;
  GL_VERTEX_ARRAY_OBJECT_AMD = $00009154;
  GL_VERTEX_ARRAY_OBJECT_EXT = $00009154;
  GL_SAMPLER_OBJECT_AMD = $00009155;
  GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = $00009160;
  GL_QUERY_BUFFER = $00009192;
  GL_QUERY_BUFFER_AMD = $00009192;
  GL_QUERY_BUFFER_BINDING = $00009193;
  GL_QUERY_BUFFER_BINDING_AMD = $00009193;
  GL_QUERY_RESULT_NO_WAIT = $00009194;
  GL_QUERY_RESULT_NO_WAIT_AMD = $00009194;
  GL_VIRTUAL_PAGE_SIZE_X_ARB = $00009195;
  GL_VIRTUAL_PAGE_SIZE_X_EXT = $00009195;
  GL_VIRTUAL_PAGE_SIZE_X_AMD = $00009195;
  GL_VIRTUAL_PAGE_SIZE_Y_ARB = $00009196;
  GL_VIRTUAL_PAGE_SIZE_Y_EXT = $00009196;
  GL_VIRTUAL_PAGE_SIZE_Y_AMD = $00009196;
  GL_VIRTUAL_PAGE_SIZE_Z_ARB = $00009197;
  GL_VIRTUAL_PAGE_SIZE_Z_EXT = $00009197;
  GL_VIRTUAL_PAGE_SIZE_Z_AMD = $00009197;
  GL_MAX_SPARSE_TEXTURE_SIZE_ARB = $00009198;
  GL_MAX_SPARSE_TEXTURE_SIZE_EXT = $00009198;
  GL_MAX_SPARSE_TEXTURE_SIZE_AMD = $00009198;
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = $00009199;
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = $00009199;
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = $00009199;
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = $0000919A;
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = $0000919A;
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = $0000919A;
  GL_MIN_SPARSE_LEVEL_AMD = $0000919B;
  GL_MIN_LOD_WARNING_AMD = $0000919C;
  GL_TEXTURE_BUFFER_OFFSET = $0000919D;
  GL_TEXTURE_BUFFER_OFFSET_EXT = $0000919D;
  GL_TEXTURE_BUFFER_OFFSET_OES = $0000919D;
  GL_TEXTURE_BUFFER_SIZE = $0000919E;
  GL_TEXTURE_BUFFER_SIZE_EXT = $0000919E;
  GL_TEXTURE_BUFFER_SIZE_OES = $0000919E;
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = $0000919F;
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = $0000919F;
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES = $0000919F;
  GL_STREAM_RASTERIZATION_AMD = $000091A0;
  GL_VERTEX_ELEMENT_SWIZZLE_AMD = $000091A4;
  GL_VERTEX_ID_SWIZZLE_AMD = $000091A5;
  GL_TEXTURE_SPARSE_ARB = $000091A6;
  GL_TEXTURE_SPARSE_EXT = $000091A6;
  GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = $000091A7;
  GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = $000091A7;
  GL_NUM_VIRTUAL_PAGE_SIZES_ARB = $000091A8;
  GL_NUM_VIRTUAL_PAGE_SIZES_EXT = $000091A8;
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = $000091A9;
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = $000091A9;
  GL_NUM_SPARSE_LEVELS_ARB = $000091AA;
  GL_NUM_SPARSE_LEVELS_EXT = $000091AA;
  GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = $000091AE;
  GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = $000091AF;
  GL_MAX_SHADER_COMPILER_THREADS_KHR = $000091B0;
  GL_MAX_SHADER_COMPILER_THREADS_ARB = GL_MAX_SHADER_COMPILER_THREADS_KHR;
  GL_COMPLETION_STATUS_KHR = $000091B1;
  GL_COMPLETION_STATUS_ARB = GL_COMPLETION_STATUS_KHR;
  GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = $000091B2;
  GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = $000091B3;
  GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = $000091B4;
  GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = $000091B5;
  GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = $000091B6;
  GL_SUPPORTED_MULTISAMPLE_MODES_AMD = $000091B7;
  GL_COMPUTE_SHADER = $000091B9;
  GL_MAX_COMPUTE_UNIFORM_BLOCKS = $000091BB;
  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = $000091BC;
  GL_MAX_COMPUTE_IMAGE_UNIFORMS = $000091BD;
  GL_MAX_COMPUTE_WORK_GROUP_COUNT = $000091BE;
  GL_MAX_COMPUTE_WORK_GROUP_SIZE = $000091BF;
  GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = GL_MAX_COMPUTE_WORK_GROUP_SIZE;
  GL_FLOAT16_MAT2_AMD = $000091C5;
  GL_FLOAT16_MAT3_AMD = $000091C6;
  GL_FLOAT16_MAT4_AMD = $000091C7;
  GL_FLOAT16_MAT2x3_AMD = $000091C8;
  GL_FLOAT16_MAT2x4_AMD = $000091C9;
  GL_FLOAT16_MAT3x2_AMD = $000091CA;
  GL_FLOAT16_MAT3x4_AMD = $000091CB;
  GL_FLOAT16_MAT4x2_AMD = $000091CC;
  GL_FLOAT16_MAT4x3_AMD = $000091CD;
  GL_UNPACK_FLIP_Y_WEBGL = $00009240;
  GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = $00009241;
  GL_CONTEXT_LOST_WEBGL = $00009242;
  GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = $00009243;
  GL_BROWSER_DEFAULT_WEBGL = $00009244;
  GL_UNMASKED_VENDOR_WEBGL = $00009245;
  GL_UNMASKED_RENDERER_WEBGL = $00009246;
  GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL = $00009247;
  GL_TEXTURE_VIDEO_IMAGE_WEBGL = $00009248;
  GL_SAMPLER_VIDEO_IMAGE_WEBGL = $00009249;
  GL_SHADER_BINARY_DMP = $00009250;
  GL_SMAPHS30_PROGRAM_BINARY_DMP = $00009251;
  GL_SMAPHS_PROGRAM_BINARY_DMP = $00009252;
  GL_DMP_PROGRAM_BINARY_DMP = $00009253;
  GL_GCCSO_SHADER_BINARY_FJ = $00009260;
  GL_COMPRESSED_R11_EAC = $00009270;
  GL_COMPRESSED_R11_EAC_OES = $00009270;
  GL_COMPRESSED_SIGNED_R11_EAC = $00009271;
  GL_COMPRESSED_SIGNED_R11_EAC_OES = $00009271;
  GL_COMPRESSED_RG11_EAC = $00009272;
  GL_COMPRESSED_RG11_EAC_OES = $00009272;
  GL_COMPRESSED_SIGNED_RG11_EAC = $00009273;
  GL_COMPRESSED_SIGNED_RG11_EAC_OES = $00009273;
  GL_COMPRESSED_RGB8_ETC2 = $00009274;
  GL_COMPRESSED_RGB8_ETC2_OES = $00009274;
  GL_COMPRESSED_SRGB8_ETC2 = $00009275;
  GL_COMPRESSED_SRGB8_ETC2_OES = $00009275;
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = $00009276;
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = $00009276;
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = $00009277;
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = $00009277;
  GL_COMPRESSED_RGBA8_ETC2_EAC = $00009278;
  GL_COMPRESSED_RGBA8_ETC2_EAC_OES = $00009278;
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = $00009279;
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES = $00009279;
  GL_BLEND_PREMULTIPLIED_SRC_NV = $00009280;
  GL_BLEND_OVERLAP_NV = $00009281;
  GL_UNCORRELATED_NV = $00009282;
  GL_DISJOINT_NV = $00009283;
  GL_CONJOINT_NV = $00009284;
  GL_BLEND_ADVANCED_COHERENT_KHR = $00009285;
  GL_BLEND_ADVANCED_COHERENT_NV = $00009285;
  GL_SRC_NV = $00009286;
  GL_DST_NV = $00009287;
  GL_SRC_OVER_NV = $00009288;
  GL_DST_OVER_NV = $00009289;
  GL_SRC_IN_NV = $0000928A;
  GL_DST_IN_NV = $0000928B;
  GL_SRC_OUT_NV = $0000928C;
  GL_DST_OUT_NV = $0000928D;
  GL_SRC_ATOP_NV = $0000928E;
  GL_DST_ATOP_NV = $0000928F;
  GL_PLUS_NV = $00009291;
  GL_PLUS_DARKER_NV = $00009292;
  GL_MULTIPLY = $00009294;
  GL_MULTIPLY_KHR = $00009294;
  GL_MULTIPLY_NV = $00009294;
  GL_SCREEN = $00009295;
  GL_SCREEN_KHR = $00009295;
  GL_SCREEN_NV = $00009295;
  GL_OVERLAY = $00009296;
  GL_OVERLAY_KHR = $00009296;
  GL_OVERLAY_NV = $00009296;
  GL_DARKEN = $00009297;
  GL_DARKEN_KHR = $00009297;
  GL_DARKEN_NV = $00009297;
  GL_LIGHTEN = $00009298;
  GL_LIGHTEN_KHR = $00009298;
  GL_LIGHTEN_NV = $00009298;
  GL_COLORDODGE = $00009299;
  GL_COLORDODGE_KHR = $00009299;
  GL_COLORDODGE_NV = $00009299;
  GL_COLORBURN = $0000929A;
  GL_COLORBURN_KHR = $0000929A;
  GL_COLORBURN_NV = $0000929A;
  GL_HARDLIGHT = $0000929B;
  GL_HARDLIGHT_KHR = $0000929B;
  GL_HARDLIGHT_NV = $0000929B;
  GL_SOFTLIGHT = $0000929C;
  GL_SOFTLIGHT_KHR = $0000929C;
  GL_SOFTLIGHT_NV = $0000929C;
  GL_DIFFERENCE = $0000929E;
  GL_DIFFERENCE_KHR = $0000929E;
  GL_DIFFERENCE_NV = $0000929E;
  GL_MINUS_NV = $0000929F;
  GL_EXCLUSION = $000092A0;
  GL_EXCLUSION_KHR = $000092A0;
  GL_EXCLUSION_NV = $000092A0;
  GL_CONTRAST_NV = $000092A1;
  GL_INVERT_RGB_NV = $000092A3;
  GL_LINEARDODGE_NV = $000092A4;
  GL_LINEARBURN_NV = $000092A5;
  GL_VIVIDLIGHT_NV = $000092A6;
  GL_LINEARLIGHT_NV = $000092A7;
  GL_PINLIGHT_NV = $000092A8;
  GL_HARDMIX_NV = $000092A9;
  GL_HSL_HUE = $000092AD;
  GL_HSL_HUE_KHR = $000092AD;
  GL_HSL_HUE_NV = $000092AD;
  GL_HSL_SATURATION = $000092AE;
  GL_HSL_SATURATION_KHR = $000092AE;
  GL_HSL_SATURATION_NV = $000092AE;
  GL_HSL_COLOR = $000092AF;
  GL_HSL_COLOR_KHR = $000092AF;
  GL_HSL_COLOR_NV = $000092AF;
  GL_HSL_LUMINOSITY = $000092B0;
  GL_HSL_LUMINOSITY_KHR = $000092B0;
  GL_HSL_LUMINOSITY_NV = $000092B0;
  GL_PLUS_CLAMPED_NV = $000092B1;
  GL_PLUS_CLAMPED_ALPHA_NV = $000092B2;
  GL_MINUS_CLAMPED_NV = $000092B3;
  GL_INVERT_OVG_NV = $000092B4;
  GL_MAX_LGPU_GPUS_NVX = $000092BA;
  GL_MULTICAST_GPUS_NV = $000092BA;
  GL_PURGED_CONTEXT_RESET_NV = $000092BB;
  GL_PRIMITIVE_BOUNDING_BOX_ARB = $000092BE;
  GL_PRIMITIVE_BOUNDING_BOX = $000092BE;
  GL_PRIMITIVE_BOUNDING_BOX_EXT = $000092BE;
  GL_PRIMITIVE_BOUNDING_BOX_OES = $000092BE;
  GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = $000092BF;
  GL_ATOMIC_COUNTER_BUFFER = $000092C0;
  GL_ATOMIC_COUNTER_BUFFER_BINDING = $000092C1;
  GL_ATOMIC_COUNTER_BUFFER_START = $000092C2;
  GL_ATOMIC_COUNTER_BUFFER_SIZE = $000092C3;
  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = $000092C4;
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = $000092C5;
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = $000092C6;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = $000092C7;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = $000092C8;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = $000092C9;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = $000092CA;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = $000092CB;
  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = $000092CC;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = $000092CD;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = $000092CD;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES = $000092CD;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = $000092CE;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = $000092CE;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES = $000092CE;
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = $000092CF;
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = $000092CF;
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES = $000092CF;
  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = $000092D0;
  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = $000092D1;
  GL_MAX_VERTEX_ATOMIC_COUNTERS = $000092D2;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = $000092D3;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = $000092D3;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES = $000092D3;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = $000092D4;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = $000092D4;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES = $000092D4;
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS = $000092D5;
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = $000092D5;
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES = $000092D5;
  GL_MAX_FRAGMENT_ATOMIC_COUNTERS = $000092D6;
  GL_MAX_COMBINED_ATOMIC_COUNTERS = $000092D7;
  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = $000092D8;
  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = $000092D9;
  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = $000092DA;
  GL_UNSIGNED_INT_ATOMIC_COUNTER = $000092DB;
  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = $000092DC;
  GL_FRAGMENT_COVERAGE_TO_COLOR_NV = $000092DD;
  GL_FRAGMENT_COVERAGE_COLOR_NV = $000092DE;
  GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = $000092DF;
  GL_DEBUG_OUTPUT = $000092E0;
  GL_DEBUG_OUTPUT_KHR = $000092E0;
  GL_UNIFORM = $000092E1;
  GL_UNIFORM_BLOCK = $000092E2;
  GL_PROGRAM_INPUT = $000092E3;
  GL_PROGRAM_OUTPUT = $000092E4;
  GL_BUFFER_VARIABLE = $000092E5;
  GL_SHADER_STORAGE_BLOCK = $000092E6;
  GL_IS_PER_PATCH = $000092E7;
  GL_IS_PER_PATCH_EXT = $000092E7;
  GL_IS_PER_PATCH_OES = $000092E7;
  GL_VERTEX_SUBROUTINE = $000092E8;
  GL_TESS_CONTROL_SUBROUTINE = $000092E9;
  GL_TESS_EVALUATION_SUBROUTINE = $000092EA;
  GL_GEOMETRY_SUBROUTINE = $000092EB;
  GL_FRAGMENT_SUBROUTINE = $000092EC;
  GL_COMPUTE_SUBROUTINE = $000092ED;
  GL_VERTEX_SUBROUTINE_UNIFORM = $000092EE;
  GL_TESS_CONTROL_SUBROUTINE_UNIFORM = $000092EF;
  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = $000092F0;
  GL_GEOMETRY_SUBROUTINE_UNIFORM = $000092F1;
  GL_FRAGMENT_SUBROUTINE_UNIFORM = $000092F2;
  GL_COMPUTE_SUBROUTINE_UNIFORM = $000092F3;
  GL_TRANSFORM_FEEDBACK_VARYING = $000092F4;
  GL_ACTIVE_RESOURCES = $000092F5;
  GL_MAX_NAME_LENGTH = $000092F6;
  GL_MAX_NUM_ACTIVE_VARIABLES = $000092F7;
  GL_MAX_NUM_COMPATIBLE_SUBROUTINES = $000092F8;
  GL_NAME_LENGTH = $000092F9;
  GL_TYPE = $000092FA;
  GL_ARRAY_SIZE = $000092FB;
  GL_OFFSET = $000092FC;
  GL_BLOCK_INDEX = $000092FD;
  GL_ARRAY_STRIDE = $000092FE;
  GL_MATRIX_STRIDE = $000092FF;
  GL_IS_ROW_MAJOR = $00009300;
  GL_ATOMIC_COUNTER_BUFFER_INDEX = $00009301;
  GL_BUFFER_BINDING = $00009302;
  GL_BUFFER_DATA_SIZE = $00009303;
  GL_NUM_ACTIVE_VARIABLES = $00009304;
  GL_ACTIVE_VARIABLES = $00009305;
  GL_REFERENCED_BY_VERTEX_SHADER = $00009306;
  GL_REFERENCED_BY_TESS_CONTROL_SHADER = $00009307;
  GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = $00009307;
  GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES = $00009307;
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER = $00009308;
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = $00009308;
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES = $00009308;
  GL_REFERENCED_BY_GEOMETRY_SHADER = $00009309;
  GL_REFERENCED_BY_GEOMETRY_SHADER_EXT = $00009309;
  GL_REFERENCED_BY_GEOMETRY_SHADER_OES = $00009309;
  GL_REFERENCED_BY_FRAGMENT_SHADER = $0000930A;
  GL_REFERENCED_BY_COMPUTE_SHADER = $0000930B;
  GL_TOP_LEVEL_ARRAY_SIZE = $0000930C;
  GL_TOP_LEVEL_ARRAY_STRIDE = $0000930D;
  GL_LOCATION = $0000930E;
  GL_LOCATION_INDEX = $0000930F;
  GL_LOCATION_INDEX_EXT = $0000930F;
  GL_FRAMEBUFFER_DEFAULT_WIDTH = $00009310;
  GL_FRAMEBUFFER_DEFAULT_HEIGHT = $00009311;
  GL_FRAMEBUFFER_DEFAULT_LAYERS = $00009312;
  GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT = $00009312;
  GL_FRAMEBUFFER_DEFAULT_LAYERS_OES = $00009312;
  GL_FRAMEBUFFER_DEFAULT_SAMPLES = $00009313;
  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = $00009314;
  GL_MAX_FRAMEBUFFER_WIDTH = $00009315;
  GL_MAX_FRAMEBUFFER_HEIGHT = $00009316;
  GL_MAX_FRAMEBUFFER_LAYERS = $00009317;
  GL_MAX_FRAMEBUFFER_LAYERS_EXT = $00009317;
  GL_MAX_FRAMEBUFFER_LAYERS_OES = $00009317;
  GL_MAX_FRAMEBUFFER_SAMPLES = $00009318;
  GL_RASTER_MULTISAMPLE_EXT = $00009327;
  GL_RASTER_SAMPLES_EXT = $00009328;
  GL_MAX_RASTER_SAMPLES_EXT = $00009329;
  GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = $0000932A;
  GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = $0000932B;
  GL_EFFECTIVE_RASTER_SAMPLES_EXT = $0000932C;
  GL_DEPTH_SAMPLES_NV = $0000932D;
  GL_STENCIL_SAMPLES_NV = $0000932E;
  GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = $0000932F;
  GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = $00009330;
  GL_COVERAGE_MODULATION_TABLE_NV = $00009331;
  GL_COVERAGE_MODULATION_NV = $00009332;
  GL_COVERAGE_MODULATION_TABLE_SIZE_NV = $00009333;
  GL_WARP_SIZE_NV = $00009339;
  GL_WARPS_PER_SM_NV = $0000933A;
  GL_SM_COUNT_NV = $0000933B;
  GL_FILL_RECTANGLE_NV = $0000933C;
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = $0000933D;
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = $0000933D;
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = $0000933E;
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = $0000933E;
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = $0000933F;
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = $0000933F;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = $00009340;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = $00009340;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = $00009341;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = $00009341;
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = $00009342;
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = $00009342;
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = $00009343;
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = $00009343;
  GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = $00009344;
  GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = $00009345;
  GL_CONSERVATIVE_RASTERIZATION_NV = $00009346;
  GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = $00009347;
  GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = $00009348;
  GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = $00009349;
  GL_LOCATION_COMPONENT = $0000934A;
  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = $0000934B;
  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = $0000934C;
  GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = $0000934D;
  GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV = $0000934E;
  GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV = $0000934F;
  GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = $00009350;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = $00009351;
  GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = $00009352;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = $00009353;
  GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = $00009354;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = $00009355;
  GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = $00009356;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = $00009357;
  GL_VIEWPORT_SWIZZLE_X_NV = $00009358;
  GL_VIEWPORT_SWIZZLE_Y_NV = $00009359;
  GL_VIEWPORT_SWIZZLE_Z_NV = $0000935A;
  GL_VIEWPORT_SWIZZLE_W_NV = $0000935B;
  GL_CLIP_ORIGIN = $0000935C;
  GL_CLIP_ORIGIN_EXT = GL_CLIP_ORIGIN;
  GL_CLIP_DEPTH_MODE = $0000935D;
  GL_CLIP_DEPTH_MODE_EXT = GL_CLIP_DEPTH_MODE;
  GL_NEGATIVE_ONE_TO_ONE = $0000935E;
  GL_NEGATIVE_ONE_TO_ONE_EXT = GL_NEGATIVE_ONE_TO_ONE;
  GL_ZERO_TO_ONE = $0000935F;
  GL_ZERO_TO_ONE_EXT = GL_ZERO_TO_ONE;
  GL_CLEAR_TEXTURE = $00009365;
  GL_TEXTURE_REDUCTION_MODE_ARB = $00009366;
  GL_TEXTURE_REDUCTION_MODE_EXT = GL_TEXTURE_REDUCTION_MODE_ARB;
  GL_WEIGHTED_AVERAGE_ARB = $00009367;
  GL_WEIGHTED_AVERAGE_EXT = GL_WEIGHTED_AVERAGE_ARB;
  GL_FONT_GLYPHS_AVAILABLE_NV = $00009368;
  GL_FONT_TARGET_UNAVAILABLE_NV = $00009369;
  GL_FONT_UNAVAILABLE_NV = $0000936A;
  GL_FONT_UNINTELLIGIBLE_NV = $0000936B;
  GL_STANDARD_FONT_FORMAT_NV = $0000936C;
  GL_FRAGMENT_INPUT_NV = $0000936D;
  GL_UNIFORM_BUFFER_UNIFIED_NV = $0000936E;
  GL_UNIFORM_BUFFER_ADDRESS_NV = $0000936F;
  GL_UNIFORM_BUFFER_LENGTH_NV = $00009370;
  GL_MULTISAMPLES_NV = $00009371;
  GL_SUPERSAMPLE_SCALE_X_NV = $00009372;
  GL_SUPERSAMPLE_SCALE_Y_NV = $00009373;
  GL_CONFORMANT_NV = $00009374;
  GL_CONSERVATIVE_RASTER_DILATE_NV = $00009379;
  GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = $0000937A;
  GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = $0000937B;
  GL_VIEWPORT_POSITION_W_SCALE_NV = $0000937C;
  GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = $0000937D;
  GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = $0000937E;
  GL_REPRESENTATIVE_FRAGMENT_TEST_NV = $0000937F;
  GL_NUM_SAMPLE_COUNTS = $00009380;
  GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = $00009381;
  GL_MULTISAMPLE_LINE_WIDTH_RANGE = $00009381;
  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = $00009382;
  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = $00009382;
  GL_VIEW_CLASS_EAC_R11 = $00009383;
  GL_VIEW_CLASS_EAC_RG11 = $00009384;
  GL_VIEW_CLASS_ETC2_RGB = $00009385;
  GL_VIEW_CLASS_ETC2_RGBA = $00009386;
  GL_VIEW_CLASS_ETC2_EAC_RGBA = $00009387;
  GL_VIEW_CLASS_ASTC_4x4_RGBA = $00009388;
  GL_VIEW_CLASS_ASTC_5x4_RGBA = $00009389;
  GL_VIEW_CLASS_ASTC_5x5_RGBA = $0000938A;
  GL_VIEW_CLASS_ASTC_6x5_RGBA = $0000938B;
  GL_VIEW_CLASS_ASTC_6x6_RGBA = $0000938C;
  GL_VIEW_CLASS_ASTC_8x5_RGBA = $0000938D;
  GL_VIEW_CLASS_ASTC_8x6_RGBA = $0000938E;
  GL_VIEW_CLASS_ASTC_8x8_RGBA = $0000938F;
  GL_VIEW_CLASS_ASTC_10x5_RGBA = $00009390;
  GL_VIEW_CLASS_ASTC_10x6_RGBA = $00009391;
  GL_VIEW_CLASS_ASTC_10x8_RGBA = $00009392;
  GL_VIEW_CLASS_ASTC_10x10_RGBA = $00009393;
  GL_VIEW_CLASS_ASTC_12x10_RGBA = $00009394;
  GL_VIEW_CLASS_ASTC_12x12_RGBA = $00009395;
  GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = $000093A0;
  GL_BGRA8_EXT = $000093A1;
  GL_TEXTURE_USAGE_ANGLE = $000093A2;
  GL_FRAMEBUFFER_ATTACHMENT_ANGLE = $000093A3;
  GL_PACK_REVERSE_ROW_ORDER_ANGLE = $000093A4;
  GL_PROGRAM_BINARY_ANGLE = $000093A6;
  GL_COMPRESSED_RGBA_ASTC_4x4 = $000093B0;
  GL_COMPRESSED_RGBA_ASTC_4x4_KHR = $000093B0;
  GL_COMPRESSED_RGBA_ASTC_5x4 = $000093B1;
  GL_COMPRESSED_RGBA_ASTC_5x4_KHR = $000093B1;
  GL_COMPRESSED_RGBA_ASTC_5x5 = $000093B2;
  GL_COMPRESSED_RGBA_ASTC_5x5_KHR = $000093B2;
  GL_COMPRESSED_RGBA_ASTC_6x5 = $000093B3;
  GL_COMPRESSED_RGBA_ASTC_6x5_KHR = $000093B3;
  GL_COMPRESSED_RGBA_ASTC_6x6 = $000093B4;
  GL_COMPRESSED_RGBA_ASTC_6x6_KHR = $000093B4;
  GL_COMPRESSED_RGBA_ASTC_8x5 = $000093B5;
  GL_COMPRESSED_RGBA_ASTC_8x5_KHR = $000093B5;
  GL_COMPRESSED_RGBA_ASTC_8x6 = $000093B6;
  GL_COMPRESSED_RGBA_ASTC_8x6_KHR = $000093B6;
  GL_COMPRESSED_RGBA_ASTC_8x8 = $000093B7;
  GL_COMPRESSED_RGBA_ASTC_8x8_KHR = $000093B7;
  GL_COMPRESSED_RGBA_ASTC_10x5 = $000093B8;
  GL_COMPRESSED_RGBA_ASTC_10x5_KHR = $000093B8;
  GL_COMPRESSED_RGBA_ASTC_10x6 = $000093B9;
  GL_COMPRESSED_RGBA_ASTC_10x6_KHR = $000093B9;
  GL_COMPRESSED_RGBA_ASTC_10x8 = $000093BA;
  GL_COMPRESSED_RGBA_ASTC_10x8_KHR = $000093BA;
  GL_COMPRESSED_RGBA_ASTC_10x10 = $000093BB;
  GL_COMPRESSED_RGBA_ASTC_10x10_KHR = $000093BB;
  GL_COMPRESSED_RGBA_ASTC_12x10 = $000093BC;
  GL_COMPRESSED_RGBA_ASTC_12x10_KHR = $000093BC;
  GL_COMPRESSED_RGBA_ASTC_12x12 = $000093BD;
  GL_COMPRESSED_RGBA_ASTC_12x12_KHR = $000093BD;
  GL_COMPRESSED_RGBA_ASTC_3x3x3_OES = $000093C0;
  GL_COMPRESSED_RGBA_ASTC_4x3x3_OES = $000093C1;
  GL_COMPRESSED_RGBA_ASTC_4x4x3_OES = $000093C2;
  GL_COMPRESSED_RGBA_ASTC_4x4x4_OES = $000093C3;
  GL_COMPRESSED_RGBA_ASTC_5x4x4_OES = $000093C4;
  GL_COMPRESSED_RGBA_ASTC_5x5x4_OES = $000093C5;
  GL_COMPRESSED_RGBA_ASTC_5x5x5_OES = $000093C6;
  GL_COMPRESSED_RGBA_ASTC_6x5x5_OES = $000093C7;
  GL_COMPRESSED_RGBA_ASTC_6x6x5_OES = $000093C8;
  GL_COMPRESSED_RGBA_ASTC_6x6x6_OES = $000093C9;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = $000093D0;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = $000093D0;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = $000093D1;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = $000093D1;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = $000093D2;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = $000093D2;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = $000093D3;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = $000093D3;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = $000093D4;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = $000093D4;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = $000093D5;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = $000093D5;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = $000093D6;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = $000093D6;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = $000093D7;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = $000093D7;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 = $000093D8;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = $000093D8;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 = $000093D9;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = $000093D9;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 = $000093DA;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = $000093DA;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 = $000093DB;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = $000093DB;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = $000093DC;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = $000093DC;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = $000093DD;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = $000093DD;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES = $000093E0;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES = $000093E1;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES = $000093E2;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES = $000093E3;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES = $000093E4;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES = $000093E5;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES = $000093E6;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES = $000093E7;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES = $000093E8;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES = $000093E9;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = $000093F0;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = $000093F1;
  GL_PERFQUERY_COUNTER_EVENT_INTEL = $000094F0;
  GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = $000094F1;
  GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = $000094F2;
  GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = $000094F3;
  GL_PERFQUERY_COUNTER_RAW_INTEL = $000094F4;
  GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = $000094F5;
  GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = $000094F8;
  GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = $000094F9;
  GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = $000094FA;
  GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = $000094FB;
  GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = $000094FC;
  GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = $000094FD;
  GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = $000094FE;
  GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = $000094FF;
  GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = $00009500;
  GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = $00009530;
  GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = $00009531;
  GL_SUBGROUP_SIZE_KHR = $00009532;
  GL_SUBGROUP_SUPPORTED_STAGES_KHR = $00009533;
  GL_SUBGROUP_SUPPORTED_FEATURES_KHR = $00009534;
  GL_SUBGROUP_QUAD_ALL_STAGES_KHR = $00009535;
  GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = $00009536;
  GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = $00009537;
  GL_MAX_MESH_OUTPUT_VERTICES_NV = $00009538;
  GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = $00009539;
  GL_MAX_TASK_OUTPUT_COUNT_NV = $0000953A;
  GL_MAX_MESH_WORK_GROUP_SIZE_NV = $0000953B;
  GL_MAX_TASK_WORK_GROUP_SIZE_NV = $0000953C;
  GL_MAX_DRAW_MESH_TASKS_COUNT_NV = $0000953D;
  GL_MESH_WORK_GROUP_SIZE_NV = $0000953E;
  GL_TASK_WORK_GROUP_SIZE_NV = $0000953F;
  GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = $00009540;
  GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV = $00009542;
  GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = $00009543;
  GL_QUERY_RESOURCE_SYS_RESERVED_NV = $00009544;
  GL_QUERY_RESOURCE_TEXTURE_NV = $00009545;
  GL_QUERY_RESOURCE_RENDERBUFFER_NV = $00009546;
  GL_QUERY_RESOURCE_BUFFEROBJECT_NV = $00009547;
  GL_PER_GPU_STORAGE_NV = $00009548;
  GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = $00009549;
  GL_UPLOAD_GPU_MASK_NVX = $0000954A;
  GL_CONSERVATIVE_RASTER_MODE_NV = $0000954D;
  GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = $0000954E;
  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = $0000954F;
  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = $00009550;
  GL_SHADER_BINARY_FORMAT_SPIR_V = $00009551;
  GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = GL_SHADER_BINARY_FORMAT_SPIR_V;
  GL_SPIR_V_BINARY = $00009552;
  GL_SPIR_V_BINARY_ARB = GL_SPIR_V_BINARY;
  GL_SPIR_V_EXTENSIONS = $00009553;
  GL_NUM_SPIR_V_EXTENSIONS = $00009554;
  GL_SCISSOR_TEST_EXCLUSIVE_NV = $00009555;
  GL_SCISSOR_BOX_EXCLUSIVE_NV = $00009556;
  GL_MAX_MESH_VIEWS_NV = $00009557;
  GL_RENDER_GPU_MASK_NV = $00009558;
  GL_MESH_SHADER_NV = $00009559;
  GL_TASK_SHADER_NV = $0000955A;
  GL_SHADING_RATE_IMAGE_BINDING_NV = $0000955B;
  GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = $0000955C;
  GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = $0000955D;
  GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = $0000955E;
  GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = $0000955F;
  GL_SHADING_RATE_IMAGE_NV = $00009563;
  GL_SHADING_RATE_NO_INVOCATIONS_NV = $00009564;
  GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = $00009565;
  GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = $00009566;
  GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = $00009567;
  GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = $00009568;
  GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = $00009569;
  GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = $0000956A;
  GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = $0000956B;
  GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = $0000956C;
  GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = $0000956D;
  GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = $0000956E;
  GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = $0000956F;
  GL_MESH_VERTICES_OUT_NV = $00009579;
  GL_MESH_PRIMITIVES_OUT_NV = $0000957A;
  GL_MESH_OUTPUT_TYPE_NV = $0000957B;
  GL_MESH_SUBROUTINE_NV = $0000957C;
  GL_TASK_SUBROUTINE_NV = $0000957D;
  GL_MESH_SUBROUTINE_UNIFORM_NV = $0000957E;
  GL_TASK_SUBROUTINE_UNIFORM_NV = $0000957F;
  GL_TEXTURE_TILING_EXT = $00009580;
  GL_DEDICATED_MEMORY_OBJECT_EXT = $00009581;
  GL_NUM_TILING_TYPES_EXT = $00009582;
  GL_TILING_TYPES_EXT = $00009583;
  GL_OPTIMAL_TILING_EXT = $00009584;
  GL_LINEAR_TILING_EXT = $00009585;
  GL_HANDLE_TYPE_OPAQUE_FD_EXT = $00009586;
  GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = $00009587;
  GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = $00009588;
  GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = $00009589;
  GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = $0000958A;
  GL_HANDLE_TYPE_D3D11_IMAGE_EXT = $0000958B;
  GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = $0000958C;
  GL_LAYOUT_GENERAL_EXT = $0000958D;
  GL_LAYOUT_COLOR_ATTACHMENT_EXT = $0000958E;
  GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = $0000958F;
  GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = $00009590;
  GL_LAYOUT_SHADER_READ_ONLY_EXT = $00009591;
  GL_LAYOUT_TRANSFER_SRC_EXT = $00009592;
  GL_LAYOUT_TRANSFER_DST_EXT = $00009593;
  GL_HANDLE_TYPE_D3D12_FENCE_EXT = $00009594;
  GL_D3D12_FENCE_VALUE_EXT = $00009595;
  GL_TIMELINE_SEMAPHORE_VALUE_NV = $00009595;
  GL_NUM_DEVICE_UUIDS_EXT = $00009596;
  GL_DEVICE_UUID_EXT = $00009597;
  GL_DRIVER_UUID_EXT = $00009598;
  GL_DEVICE_LUID_EXT = $00009599;
  GL_DEVICE_NODE_MASK_EXT = $0000959A;
  GL_PROTECTED_MEMORY_OBJECT_EXT = $0000959B;
  GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = $0000959C;
  GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = $0000959D;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = $0000959E;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = $0000959F;
  GL_REFERENCED_BY_MESH_SHADER_NV = $000095A0;
  GL_REFERENCED_BY_TASK_SHADER_NV = $000095A1;
  GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = $000095A2;
  GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = $000095A3;
  GL_ATTACHED_MEMORY_OBJECT_NV = $000095A4;
  GL_ATTACHED_MEMORY_OFFSET_NV = $000095A5;
  GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = $000095A6;
  GL_MEMORY_ATTACHABLE_SIZE_NV = $000095A7;
  GL_MEMORY_ATTACHABLE_NV = $000095A8;
  GL_DETACHED_MEMORY_INCARNATION_NV = $000095A9;
  GL_DETACHED_TEXTURES_NV = $000095AA;
  GL_DETACHED_BUFFERS_NV = $000095AB;
  GL_MAX_DETACHED_TEXTURES_NV = $000095AC;
  GL_MAX_DETACHED_BUFFERS_NV = $000095AD;
  GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = $000095AE;
  GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = $000095AF;
  GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = $000095B0;
  GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV = $000095B1;
  GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV = $000095B2;
  GL_SEMAPHORE_TYPE_NV = $000095B3;
  GL_SEMAPHORE_TYPE_BINARY_NV = $000095B4;
  GL_SEMAPHORE_TYPE_TIMELINE_NV = $000095B5;
  GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV = $000095B6;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = $00009630;
  GL_MAX_VIEWS_OVR = $00009631;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = $00009632;
  GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = $00009633;
  GL_GS_SHADER_BINARY_MTK = $00009640;
  GL_GS_PROGRAM_BINARY_MTK = $00009641;
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT = $00009650;
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT = $00009651;
  GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT = $00009652;
  GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM = $000096A0;
  GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM = $000096A2;
  GL_VALIDATE_SHADER_BINARY_QCOM = $000096A3;
  GL_SHADING_RATE_QCOM = $000096A4;
  GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM = $000096A5;
  GL_SHADING_RATE_1X1_PIXELS_QCOM = $000096A6;
  GL_SHADING_RATE_1X2_PIXELS_QCOM = $000096A7;
  GL_SHADING_RATE_2X1_PIXELS_QCOM = $000096A8;
  GL_SHADING_RATE_2X2_PIXELS_QCOM = $000096A9;
  GL_SHADING_RATE_1X4_PIXELS_QCOM = $000096AA;
  GL_SHADING_RATE_4X1_PIXELS_QCOM = $000096AB;
  GL_SHADING_RATE_4X2_PIXELS_QCOM = $000096AC;
  GL_SHADING_RATE_2X4_PIXELS_QCOM = $000096AD;
  GL_SHADING_RATE_4X4_PIXELS_QCOM = $000096AE;
  GL_SHADING_RATE_1X1_PIXELS_EXT = GL_SHADING_RATE_1X1_PIXELS_QCOM;
  GL_SHADING_RATE_1X2_PIXELS_EXT = GL_SHADING_RATE_1X2_PIXELS_QCOM;
  GL_SHADING_RATE_2X1_PIXELS_EXT = GL_SHADING_RATE_2X1_PIXELS_QCOM;
  GL_SHADING_RATE_2X2_PIXELS_EXT = GL_SHADING_RATE_2X2_PIXELS_QCOM;
  GL_SHADING_RATE_1X4_PIXELS_EXT = GL_SHADING_RATE_1X4_PIXELS_QCOM;
  GL_SHADING_RATE_4X1_PIXELS_EXT = GL_SHADING_RATE_4X1_PIXELS_QCOM;
  GL_SHADING_RATE_4X2_PIXELS_EXT = GL_SHADING_RATE_4X2_PIXELS_QCOM;
  GL_SHADING_RATE_2X4_PIXELS_EXT = GL_SHADING_RATE_2X4_PIXELS_QCOM;
  GL_SHADING_RATE_4X4_PIXELS_EXT = GL_SHADING_RATE_4X4_PIXELS_QCOM;
  GL_SURFACE_COMPRESSION_EXT = $000096C0;
  GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT = $000096C1;
  GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT = $000096C2;
  GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT = $000096C4;
  GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT = $000096C5;
  GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT = $000096C6;
  GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT = $000096C7;
  GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT = $000096C8;
  GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT = $000096C9;
  GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT = $000096CA;
  GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT = $000096CB;
  GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT = $000096CC;
  GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT = $000096CD;
  GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT = $000096CE;
  GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT = $000096CF;
  GL_SHADING_RATE_EXT = $000096D0;
  GL_SHADING_RATE_ATTACHMENT_EXT = $000096D1;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT = $000096D2;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT = $000096D3;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT = $000096D4;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT = $000096D5;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT = $000096D6;
  GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = $000096D7;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = $000096D8;
  GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = $000096D9;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = $000096DA;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT = $000096DB;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT = $000096DC;
  GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT = $000096DD;
  GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT = $000096DE;
  GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT = $000096DF;
  GL_RASTER_POSITION_UNCLIPPED_IBM = $00019262;
  GL_CULL_VERTEX_IBM = $0001928A;
  GL_ALL_STATIC_DATA_IBM = $00019294;
  GL_STATIC_VERTEX_ARRAY_IBM = $00019295;
  GL_VERTEX_ARRAY_LIST_IBM = $0001929E;
  GL_NORMAL_ARRAY_LIST_IBM = $0001929F;
  GL_COLOR_ARRAY_LIST_IBM = $000192A0;
  GL_INDEX_ARRAY_LIST_IBM = $000192A1;
  GL_TEXTURE_COORD_ARRAY_LIST_IBM = $000192A2;
  GL_EDGE_FLAG_ARRAY_LIST_IBM = $000192A3;
  GL_FOG_COORDINATE_ARRAY_LIST_IBM = $000192A4;
  GL_SECONDARY_COLOR_ARRAY_LIST_IBM = $000192A5;
  GL_VERTEX_ARRAY_LIST_STRIDE_IBM = $000192A8;
  GL_NORMAL_ARRAY_LIST_STRIDE_IBM = $000192A9;
  GL_COLOR_ARRAY_LIST_STRIDE_IBM = $000192AA;
  GL_INDEX_ARRAY_LIST_STRIDE_IBM = $000192AB;
  GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = $000192AC;
  GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = $000192AD;
  GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = $000192AE;
  GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = $000192AF;
  GL_PREFER_DOUBLEBUFFER_HINT_PGI = $0001A1F8;
  GL_CONSERVE_MEMORY_HINT_PGI = $0001A1FD;
  GL_RECLAIM_MEMORY_HINT_PGI = $0001A1FE;
  GL_NATIVE_GRAPHICS_HANDLE_PGI = $0001A202;
  GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = $0001A203;
  GL_NATIVE_GRAPHICS_END_HINT_PGI = $0001A204;
  GL_ALWAYS_FAST_HINT_PGI = $0001A20C;
  GL_ALWAYS_SOFT_HINT_PGI = $0001A20D;
  GL_ALLOW_DRAW_OBJ_HINT_PGI = $0001A20E;
  GL_ALLOW_DRAW_WIN_HINT_PGI = $0001A20F;
  GL_ALLOW_DRAW_FRG_HINT_PGI = $0001A210;
  GL_ALLOW_DRAW_MEM_HINT_PGI = $0001A211;
  GL_STRICT_DEPTHFUNC_HINT_PGI = $0001A216;
  GL_STRICT_LIGHTING_HINT_PGI = $0001A217;
  GL_STRICT_SCISSOR_HINT_PGI = $0001A218;
  GL_FULL_STIPPLE_HINT_PGI = $0001A219;
  GL_CLIP_NEAR_HINT_PGI = $0001A220;
  GL_CLIP_FAR_HINT_PGI = $0001A221;
  GL_WIDE_LINE_HINT_PGI = $0001A222;
  GL_BACK_NORMALS_HINT_PGI = $0001A223;
  GL_VERTEX_DATA_HINT_PGI = $0001A22A;
  GL_VERTEX_CONSISTENT_HINT_PGI = $0001A22B;
  GL_MATERIAL_SIDE_HINT_PGI = $0001A22C;
  GL_MAX_VERTEX_HINT_PGI = $0001A22D;
{$if defined(WINDOWS)}
  WGL_SWAP_MAIN_PLANE = $00000001;
  WGL_SWAP_OVERLAY1 = $00000002;
  WGL_SWAP_OVERLAY2 = $00000004;
  WGL_SWAP_OVERLAY3 = $00000008;
  WGL_SWAP_OVERLAY4 = $00000010;
  WGL_SWAP_OVERLAY5 = $00000020;
  WGL_SWAP_OVERLAY6 = $00000040;
  WGL_SWAP_OVERLAY7 = $00000080;
  WGL_SWAP_OVERLAY8 = $00000100;
  WGL_SWAP_OVERLAY9 = $00000200;
  WGL_SWAP_OVERLAY10 = $00000400;
  WGL_SWAP_OVERLAY11 = $00000800;
  WGL_SWAP_OVERLAY12 = $00001000;
  WGL_SWAP_OVERLAY13 = $00002000;
  WGL_SWAP_OVERLAY14 = $00004000;
  WGL_SWAP_OVERLAY15 = $00008000;
  WGL_SWAP_UNDERLAY1 = $00010000;
  WGL_SWAP_UNDERLAY2 = $00020000;
  WGL_SWAP_UNDERLAY3 = $00040000;
  WGL_SWAP_UNDERLAY4 = $00080000;
  WGL_SWAP_UNDERLAY5 = $00100000;
  WGL_SWAP_UNDERLAY6 = $00200000;
  WGL_SWAP_UNDERLAY7 = $00400000;
  WGL_SWAP_UNDERLAY8 = $00800000;
  WGL_SWAP_UNDERLAY9 = $01000000;
  WGL_SWAP_UNDERLAY10 = $02000000;
  WGL_SWAP_UNDERLAY11 = $04000000;
  WGL_SWAP_UNDERLAY12 = $08000000;
  WGL_SWAP_UNDERLAY13 = $10000000;
  WGL_SWAP_UNDERLAY14 = $20000000;
  WGL_SWAP_UNDERLAY15 = $40000000;
  WGL_FRONT_COLOR_BUFFER_BIT_ARB = $00000001;
  WGL_BACK_COLOR_BUFFER_BIT_ARB = $00000002;
  WGL_DEPTH_BUFFER_BIT_ARB = $00000004;
  WGL_STENCIL_BUFFER_BIT_ARB = $00000008;
  WGL_CONTEXT_DEBUG_BIT_ARB = $00000001;
  WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = $00000002;
  WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = $00000004;
  WGL_CONTEXT_RESET_ISOLATION_BIT_ARB = $00000008;
  WGL_CONTEXT_CORE_PROFILE_BIT_ARB = $00000001;
  WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = $00000002;
  WGL_CONTEXT_ES_PROFILE_BIT_EXT = $00000004;
  WGL_CONTEXT_ES2_PROFILE_BIT_EXT = WGL_CONTEXT_ES_PROFILE_BIT_EXT;
  WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = $00000001;
  WGL_IMAGE_BUFFER_LOCK_I3D = $00000002;
  WGL_ACCESS_READ_ONLY_NV = $00000000;
  WGL_ACCESS_READ_WRITE_NV = $00000001;
  WGL_ACCESS_WRITE_DISCARD_NV = $00000002;
  WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = $00000000;
  WGL_FONT_LINES = $00000000;
  WGL_FONT_POLYGONS = $00000001;
  WGL_GPU_VENDOR_AMD = $00001F00;
  WGL_GPU_RENDERER_STRING_AMD = $00001F01;
  WGL_GPU_OPENGL_VERSION_STRING_AMD = $00001F02;
  WGL_NUMBER_PIXEL_FORMATS_ARB = $00002000;
  WGL_NUMBER_PIXEL_FORMATS_EXT = $00002000;
  WGL_DRAW_TO_WINDOW_ARB = $00002001;
  WGL_DRAW_TO_WINDOW_EXT = $00002001;
  WGL_DRAW_TO_BITMAP_ARB = $00002002;
  WGL_DRAW_TO_BITMAP_EXT = $00002002;
  WGL_ACCELERATION_ARB = $00002003;
  WGL_ACCELERATION_EXT = $00002003;
  WGL_NEED_PALETTE_ARB = $00002004;
  WGL_NEED_PALETTE_EXT = $00002004;
  WGL_NEED_SYSTEM_PALETTE_ARB = $00002005;
  WGL_NEED_SYSTEM_PALETTE_EXT = $00002005;
  WGL_SWAP_LAYER_BUFFERS_ARB = $00002006;
  WGL_SWAP_LAYER_BUFFERS_EXT = $00002006;
  WGL_SWAP_METHOD_ARB = $00002007;
  WGL_SWAP_METHOD_EXT = $00002007;
  WGL_NUMBER_OVERLAYS_ARB = $00002008;
  WGL_NUMBER_OVERLAYS_EXT = $00002008;
  WGL_NUMBER_UNDERLAYS_ARB = $00002009;
  WGL_NUMBER_UNDERLAYS_EXT = $00002009;
  WGL_TRANSPARENT_ARB = $0000200A;
  WGL_TRANSPARENT_EXT = $0000200A;
  WGL_TRANSPARENT_VALUE_EXT = $0000200B;
  WGL_SHARE_DEPTH_ARB = $0000200C;
  WGL_SHARE_DEPTH_EXT = $0000200C;
  WGL_SHARE_STENCIL_ARB = $0000200D;
  WGL_SHARE_STENCIL_EXT = $0000200D;
  WGL_SHARE_ACCUM_ARB = $0000200E;
  WGL_SHARE_ACCUM_EXT = $0000200E;
  WGL_SUPPORT_GDI_ARB = $0000200F;
  WGL_SUPPORT_GDI_EXT = $0000200F;
  WGL_SUPPORT_OPENGL_ARB = $00002010;
  WGL_SUPPORT_OPENGL_EXT = $00002010;
  WGL_DOUBLE_BUFFER_ARB = $00002011;
  WGL_DOUBLE_BUFFER_EXT = $00002011;
  WGL_STEREO_ARB = $00002012;
  WGL_STEREO_EXT = $00002012;
  WGL_PIXEL_TYPE_ARB = $00002013;
  WGL_PIXEL_TYPE_EXT = $00002013;
  WGL_COLOR_BITS_ARB = $00002014;
  WGL_COLOR_BITS_EXT = $00002014;
  WGL_RED_BITS_ARB = $00002015;
  WGL_RED_BITS_EXT = $00002015;
  WGL_RED_SHIFT_ARB = $00002016;
  WGL_RED_SHIFT_EXT = $00002016;
  WGL_GREEN_BITS_ARB = $00002017;
  WGL_GREEN_BITS_EXT = $00002017;
  WGL_GREEN_SHIFT_ARB = $00002018;
  WGL_GREEN_SHIFT_EXT = $00002018;
  WGL_BLUE_BITS_ARB = $00002019;
  WGL_BLUE_BITS_EXT = $00002019;
  WGL_BLUE_SHIFT_ARB = $0000201A;
  WGL_BLUE_SHIFT_EXT = $0000201A;
  WGL_ALPHA_BITS_ARB = $0000201B;
  WGL_ALPHA_BITS_EXT = $0000201B;
  WGL_ALPHA_SHIFT_ARB = $0000201C;
  WGL_ALPHA_SHIFT_EXT = $0000201C;
  WGL_ACCUM_BITS_ARB = $0000201D;
  WGL_ACCUM_BITS_EXT = $0000201D;
  WGL_ACCUM_RED_BITS_ARB = $0000201E;
  WGL_ACCUM_RED_BITS_EXT = $0000201E;
  WGL_ACCUM_GREEN_BITS_ARB = $0000201F;
  WGL_ACCUM_GREEN_BITS_EXT = $0000201F;
  WGL_ACCUM_BLUE_BITS_ARB = $00002020;
  WGL_ACCUM_BLUE_BITS_EXT = $00002020;
  WGL_ACCUM_ALPHA_BITS_ARB = $00002021;
  WGL_ACCUM_ALPHA_BITS_EXT = $00002021;
  WGL_DEPTH_BITS_ARB = $00002022;
  WGL_DEPTH_BITS_EXT = $00002022;
  WGL_STENCIL_BITS_ARB = $00002023;
  WGL_STENCIL_BITS_EXT = $00002023;
  WGL_AUX_BUFFERS_ARB = $00002024;
  WGL_AUX_BUFFERS_EXT = $00002024;
  WGL_NO_ACCELERATION_ARB = $00002025;
  WGL_NO_ACCELERATION_EXT = $00002025;
  WGL_GENERIC_ACCELERATION_ARB = $00002026;
  WGL_GENERIC_ACCELERATION_EXT = $00002026;
  WGL_FULL_ACCELERATION_ARB = $00002027;
  WGL_FULL_ACCELERATION_EXT = $00002027;
  WGL_SWAP_EXCHANGE_ARB = $00002028;
  WGL_SWAP_EXCHANGE_EXT = $00002028;
  WGL_SWAP_COPY_ARB = $00002029;
  WGL_SWAP_COPY_EXT = $00002029;
  WGL_SWAP_UNDEFINED_ARB = $0000202A;
  WGL_SWAP_UNDEFINED_EXT = $0000202A;
  WGL_TYPE_RGBA_ARB = $0000202B;
  WGL_TYPE_RGBA_EXT = $0000202B;
  WGL_TYPE_COLORINDEX_ARB = $0000202C;
  WGL_TYPE_COLORINDEX_EXT = $0000202C;
  WGL_DRAW_TO_PBUFFER_ARB = $0000202D;
  WGL_DRAW_TO_PBUFFER_EXT = $0000202D;
  WGL_MAX_PBUFFER_PIXELS_ARB = $0000202E;
  WGL_MAX_PBUFFER_PIXELS_EXT = $0000202E;
  WGL_MAX_PBUFFER_WIDTH_ARB = $0000202F;
  WGL_MAX_PBUFFER_WIDTH_EXT = $0000202F;
  WGL_MAX_PBUFFER_HEIGHT_ARB = $00002030;
  WGL_MAX_PBUFFER_HEIGHT_EXT = $00002030;
  WGL_OPTIMAL_PBUFFER_WIDTH_EXT = $00002031;
  WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = $00002032;
  WGL_PBUFFER_LARGEST_ARB = $00002033;
  WGL_PBUFFER_LARGEST_EXT = $00002033;
  WGL_PBUFFER_WIDTH_ARB = $00002034;
  WGL_PBUFFER_WIDTH_EXT = $00002034;
  WGL_PBUFFER_HEIGHT_ARB = $00002035;
  WGL_PBUFFER_HEIGHT_EXT = $00002035;
  WGL_PBUFFER_LOST_ARB = $00002036;
  WGL_TRANSPARENT_RED_VALUE_ARB = $00002037;
  WGL_TRANSPARENT_GREEN_VALUE_ARB = $00002038;
  WGL_TRANSPARENT_BLUE_VALUE_ARB = $00002039;
  WGL_TRANSPARENT_ALPHA_VALUE_ARB = $0000203A;
  WGL_TRANSPARENT_INDEX_VALUE_ARB = $0000203B;
  WGL_DEPTH_FLOAT_EXT = $00002040;
  WGL_SAMPLE_BUFFERS_ARB = $00002041;
  WGL_SAMPLE_BUFFERS_EXT = $00002041;
  WGL_COVERAGE_SAMPLES_NV = $00002042;
  WGL_SAMPLES_ARB = $00002042;
  WGL_SAMPLES_EXT = $00002042;
  ERROR_INVALID_PIXEL_TYPE_ARB = $00002043;
  ERROR_INVALID_PIXEL_TYPE_EXT = $00002043;
  WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = $00002044;
  WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D = $00002045;
  WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D = $00002046;
  WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D = $00002047;
  WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = $00002048;
  WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = $00002049;
  WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = $0000204A;
  WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = $0000204B;
  WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = $0000204C;
  WGL_GAMMA_TABLE_SIZE_I3D = $0000204E;
  WGL_GAMMA_EXCLUDE_DESKTOP_I3D = $0000204F;
  WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = $00002050;
  WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = $00002051;
  WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = $00002052;
  WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = $00002053;
  ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = $00002054;
  WGL_STEREO_EMITTER_ENABLE_3DL = $00002055;
  WGL_STEREO_EMITTER_DISABLE_3DL = $00002056;
  WGL_STEREO_POLARITY_NORMAL_3DL = $00002057;
  WGL_STEREO_POLARITY_INVERT_3DL = $00002058;
  WGL_SAMPLE_BUFFERS_3DFX = $00002060;
  WGL_SAMPLES_3DFX = $00002061;
  WGL_BIND_TO_TEXTURE_RGB_ARB = $00002070;
  WGL_BIND_TO_TEXTURE_RGBA_ARB = $00002071;
  WGL_TEXTURE_FORMAT_ARB = $00002072;
  WGL_TEXTURE_TARGET_ARB = $00002073;
  WGL_MIPMAP_TEXTURE_ARB = $00002074;
  WGL_TEXTURE_RGB_ARB = $00002075;
  WGL_TEXTURE_RGBA_ARB = $00002076;
  WGL_NO_TEXTURE_ARB = $00002077;
  WGL_TEXTURE_CUBE_MAP_ARB = $00002078;
  WGL_TEXTURE_1D_ARB = $00002079;
  WGL_TEXTURE_2D_ARB = $0000207A;
  WGL_MIPMAP_LEVEL_ARB = $0000207B;
  WGL_CUBE_MAP_FACE_ARB = $0000207C;
  WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = $0000207D;
  WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = $0000207E;
  WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = $0000207F;
  WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = $00002080;
  WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = $00002081;
  WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = $00002082;
  WGL_FRONT_LEFT_ARB = $00002083;
  WGL_FRONT_RIGHT_ARB = $00002084;
  WGL_BACK_LEFT_ARB = $00002085;
  WGL_BACK_RIGHT_ARB = $00002086;
  WGL_AUX0_ARB = $00002087;
  WGL_AUX1_ARB = $00002088;
  WGL_AUX2_ARB = $00002089;
  WGL_AUX3_ARB = $0000208A;
  WGL_AUX4_ARB = $0000208B;
  WGL_AUX5_ARB = $0000208C;
  WGL_AUX6_ARB = $0000208D;
  WGL_AUX7_ARB = $0000208E;
  WGL_AUX8_ARB = $0000208F;
  WGL_AUX9_ARB = $00002090;
  WGL_CONTEXT_MAJOR_VERSION_ARB = $00002091;
  WGL_CONTEXT_MINOR_VERSION_ARB = $00002092;
  WGL_CONTEXT_LAYER_PLANE_ARB = $00002093;
  WGL_CONTEXT_FLAGS_ARB = $00002094;
  ERROR_INVALID_VERSION_ARB = $00002095;
  ERROR_INVALID_PROFILE_ARB = $00002096;
  WGL_CONTEXT_RELEASE_BEHAVIOR_ARB = $00002097;
  WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = $00002098;
  WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = $000020A0;
  WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = $000020A1;
  WGL_TEXTURE_RECTANGLE_NV = $000020A2;
  WGL_BIND_TO_TEXTURE_DEPTH_NV = $000020A3;
  WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = $000020A4;
  WGL_DEPTH_TEXTURE_FORMAT_NV = $000020A5;
  WGL_TEXTURE_DEPTH_COMPONENT_NV = $000020A6;
  WGL_DEPTH_COMPONENT_NV = $000020A7;
  WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT = $000020A8;
  WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB = $000020A9;
  WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT = $000020A9;
  WGL_CONTEXT_MULTIGPU_ATTRIB_NV = $000020AA;
  WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV = $000020AB;
  WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV = $000020AC;
  WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV = $000020AD;
  WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV = $000020AE;
  WGL_FLOAT_COMPONENTS_NV = $000020B0;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = $000020B1;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = $000020B2;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = $000020B3;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = $000020B4;
  WGL_TEXTURE_FLOAT_R_NV = $000020B5;
  WGL_TEXTURE_FLOAT_RG_NV = $000020B6;
  WGL_TEXTURE_FLOAT_RGB_NV = $000020B7;
  WGL_TEXTURE_FLOAT_RGBA_NV = $000020B8;
  WGL_COLOR_SAMPLES_NV = $000020B9;
  WGL_BIND_TO_VIDEO_RGB_NV = $000020C0;
  WGL_BIND_TO_VIDEO_RGBA_NV = $000020C1;
  WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV = $000020C2;
  WGL_VIDEO_OUT_COLOR_NV = $000020C3;
  WGL_VIDEO_OUT_ALPHA_NV = $000020C4;
  WGL_VIDEO_OUT_DEPTH_NV = $000020C5;
  WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV = $000020C6;
  WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV = $000020C7;
  WGL_VIDEO_OUT_FRAME = $000020C8;
  WGL_VIDEO_OUT_FIELD_1 = $000020C9;
  WGL_VIDEO_OUT_FIELD_2 = $000020CA;
  WGL_VIDEO_OUT_STACKED_FIELDS_1_2 = $000020CB;
  WGL_VIDEO_OUT_STACKED_FIELDS_2_1 = $000020CC;
  WGL_UNIQUE_ID_NV = $000020CE;
  WGL_NUM_VIDEO_CAPTURE_SLOTS_NV = $000020CF;
  ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV = $000020D0;
  ERROR_MISSING_AFFINITY_MASK_NV = $000020D1;
  WGL_NUM_VIDEO_SLOTS_NV = $000020F0;
  WGL_TYPE_RGBA_FLOAT_ARB = $000021A0;
  WGL_TYPE_RGBA_FLOAT_ATI = $000021A0;
  WGL_GPU_FASTEST_TARGET_GPUS_AMD = $000021A2;
  WGL_GPU_RAM_AMD = $000021A3;
  WGL_GPU_CLOCK_AMD = $000021A4;
  WGL_GPU_NUM_PIPES_AMD = $000021A5;
  WGL_TEXTURE_RECTANGLE_ATI = $000021A5;
  WGL_GPU_NUM_SIMD_AMD = $000021A6;
  WGL_GPU_NUM_RB_AMD = $000021A7;
  WGL_GPU_NUM_SPI_AMD = $000021A8;
  WGL_COLORSPACE_EXT = $0000309D;
  WGL_COLORSPACE_SRGB_EXT = $00003089;
  WGL_COLORSPACE_LINEAR_EXT = $0000308A;
  WGL_CONTEXT_OPENGL_NO_ERROR_ARB = $000031B3;
  WGL_LOSE_CONTEXT_ON_RESET_ARB = $00008252;
  WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = $00008256;
  WGL_NO_RESET_NOTIFICATION_ARB = $00008261;
  WGL_CONTEXT_PROFILE_MASK_ARB = $00009126;
{$endif}
{$if defined(LINUX)}
  GLX_EXTENSION_NAME = $00000000;
  GLX_VENDOR = $00000001;
  GLX_VERSION = $00000002;
  GLX_EXTENSIONS = $00000003;
  GLX_3DFX_WINDOW_MODE_MESA = $00000001;
  GLX_3DFX_FULLSCREEN_MODE_MESA = $00000002;
  GLX_PbufferClobber = $00000000;
  GLX_BufferSwapComplete = $00000001;
  __GLX_NUMBER_EVENTS = $00000011;
  GLX_BAD_SCREEN = $00000001;
  GLX_BAD_ATTRIBUTE = $00000002;
  GLX_NO_EXTENSION = $00000003;
  GLX_BAD_VISUAL = $00000004;
  GLX_BAD_CONTEXT = $00000005;
  GLX_BAD_VALUE = $00000006;
  GLX_BAD_ENUM = $00000007;
  GLX_BAD_HYPERPIPE_CONFIG_SGIX = $0000005B;
  GLX_BAD_HYPERPIPE_SGIX = $0000005C;
  GLX_STEREO_NOTIFY_EXT = $00000000;
  GLX_WINDOW_BIT = $00000001;
  GLX_WINDOW_BIT_SGIX = $00000001;
  GLX_PIXMAP_BIT = $00000002;
  GLX_PIXMAP_BIT_SGIX = $00000002;
  GLX_PBUFFER_BIT = $00000004;
  GLX_PBUFFER_BIT_SGIX = $00000004;
  GLX_RGBA_BIT = $00000001;
  GLX_RGBA_BIT_SGIX = $00000001;
  GLX_COLOR_INDEX_BIT = $00000002;
  GLX_COLOR_INDEX_BIT_SGIX = $00000002;
  GLX_RGBA_FLOAT_BIT_ARB = $00000004;
  GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = $00000008;
  GLX_SYNC_FRAME_SGIX = $00000000;
  GLX_SYNC_SWAP_SGIX = $00000001;
  GLX_STEREO_NOTIFY_MASK_EXT = $00000001;
  GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK = $04000000;
  GLX_PBUFFER_CLOBBER_MASK = $08000000;
  GLX_BUFFER_CLOBBER_MASK_SGIX = $08000000;
  GLX_FRONT_LEFT_BUFFER_BIT = $00000001;
  GLX_FRONT_LEFT_BUFFER_BIT_SGIX = $00000001;
  GLX_FRONT_RIGHT_BUFFER_BIT = $00000002;
  GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = $00000002;
  GLX_BACK_LEFT_BUFFER_BIT = $00000004;
  GLX_BACK_LEFT_BUFFER_BIT_SGIX = $00000004;
  GLX_BACK_RIGHT_BUFFER_BIT = $00000008;
  GLX_BACK_RIGHT_BUFFER_BIT_SGIX = $00000008;
  GLX_AUX_BUFFERS_BIT = $00000010;
  GLX_AUX_BUFFERS_BIT_SGIX = $00000010;
  GLX_DEPTH_BUFFER_BIT = $00000020;
  GLX_DEPTH_BUFFER_BIT_SGIX = $00000020;
  GLX_STENCIL_BUFFER_BIT = $00000040;
  GLX_STENCIL_BUFFER_BIT_SGIX = $00000040;
  GLX_ACCUM_BUFFER_BIT = $00000080;
  GLX_ACCUM_BUFFER_BIT_SGIX = $00000080;
  GLX_SAMPLE_BUFFERS_BIT_SGIX = $00000100;
  GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = $00000001;
  GLX_HYPERPIPE_RENDER_PIPE_SGIX = $00000002;
  GLX_PIPE_RECT_SGIX = $00000001;
  GLX_PIPE_RECT_LIMITS_SGIX = $00000002;
  GLX_HYPERPIPE_STEREO_SGIX = $00000003;
  GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = $00000004;
  GLX_TEXTURE_1D_BIT_EXT = $00000001;
  GLX_TEXTURE_2D_BIT_EXT = $00000002;
  GLX_TEXTURE_RECTANGLE_BIT_EXT = $00000004;
  GLX_CONTEXT_DEBUG_BIT_ARB = $00000001;
  GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = $00000002;
  GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB = $00000004;
  GLX_CONTEXT_RESET_ISOLATION_BIT_ARB = $00000008;
  GLX_CONTEXT_CORE_PROFILE_BIT_ARB = $00000001;
  GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = $00000002;
  GLX_CONTEXT_ES_PROFILE_BIT_EXT = $00000004;
  GLX_CONTEXT_ES2_PROFILE_BIT_EXT = GLX_CONTEXT_ES_PROFILE_BIT_EXT;
  GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = $00000050;
  GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = $00000000;
  GLX_DONT_CARE = $FFFFFFFF;
  GLX_USE_GL = $00000001;
  GLX_BUFFER_SIZE = $00000002;
  GLX_LEVEL = $00000003;
  GLX_RGBA = $00000004;
  GLX_DOUBLEBUFFER = $00000005;
  GLX_STEREO = $00000006;
  GLX_AUX_BUFFERS = $00000007;
  GLX_RED_SIZE = $00000008;
  GLX_GREEN_SIZE = $00000009;
  GLX_BLUE_SIZE = $0000000A;
  GLX_ALPHA_SIZE = $0000000B;
  GLX_DEPTH_SIZE = $0000000C;
  GLX_STENCIL_SIZE = $0000000D;
  GLX_ACCUM_RED_SIZE = $0000000E;
  GLX_ACCUM_GREEN_SIZE = $0000000F;
  GLX_ACCUM_BLUE_SIZE = $00000010;
  GLX_ACCUM_ALPHA_SIZE = $00000011;
  GLX_CONFIG_CAVEAT = $00000020;
  GLX_VISUAL_CAVEAT_EXT = $00000020;
  GLX_X_VISUAL_TYPE = $00000022;
  GLX_X_VISUAL_TYPE_EXT = $00000022;
  GLX_TRANSPARENT_TYPE = $00000023;
  GLX_TRANSPARENT_TYPE_EXT = $00000023;
  GLX_TRANSPARENT_INDEX_VALUE = $00000024;
  GLX_TRANSPARENT_INDEX_VALUE_EXT = $00000024;
  GLX_TRANSPARENT_RED_VALUE = $00000025;
  GLX_TRANSPARENT_RED_VALUE_EXT = $00000025;
  GLX_TRANSPARENT_GREEN_VALUE = $00000026;
  GLX_TRANSPARENT_GREEN_VALUE_EXT = $00000026;
  GLX_TRANSPARENT_BLUE_VALUE = $00000027;
  GLX_TRANSPARENT_BLUE_VALUE_EXT = $00000027;
  GLX_TRANSPARENT_ALPHA_VALUE = $00000028;
  GLX_TRANSPARENT_ALPHA_VALUE_EXT = $00000028;
  GLX_GPU_VENDOR_AMD = $00001F00;
  GLX_GPU_RENDERER_STRING_AMD = $00001F01;
  GLX_GPU_OPENGL_VERSION_STRING_AMD = $00001F02;
  GLX_CONTEXT_MAJOR_VERSION_ARB = $00002091;
  GLX_CONTEXT_MINOR_VERSION_ARB = $00002092;
  GLX_CONTEXT_FLAGS_ARB = $00002094;
  GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB = $00002095;
  GLX_CONTEXT_RELEASE_BEHAVIOR_ARB = $00002097;
  GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = $00002098;
  GLX_CONTEXT_MULTIGPU_ATTRIB_NV = $000020AA;
  GLX_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV = $000020AB;
  GLX_CONTEXT_MULTIGPU_ATTRIB_AFR_NV = $000020AC;
  GLX_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV = $000020AD;
  GLX_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV = $000020AE;
  GLX_FLOAT_COMPONENTS_NV = $000020B0;
  GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT = $000020B1;
  GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB = $000020B2;
  GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT = $000020B2;
  GLX_COLOR_SAMPLES_NV = $000020B3;
  GLX_RGBA_FLOAT_TYPE_ARB = $000020B9;
  GLX_VIDEO_OUT_COLOR_NV = $000020C3;
  GLX_VIDEO_OUT_ALPHA_NV = $000020C4;
  GLX_VIDEO_OUT_DEPTH_NV = $000020C5;
  GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV = $000020C6;
  GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV = $000020C7;
  GLX_VIDEO_OUT_FRAME_NV = $000020C8;
  GLX_VIDEO_OUT_FIELD_1_NV = $000020C9;
  GLX_VIDEO_OUT_FIELD_2_NV = $000020CA;
  GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV = $000020CB;
  GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV = $000020CC;
  GLX_DEVICE_ID_NV = $000020CD;
  GLX_UNIQUE_ID_NV = $000020CE;
  GLX_NUM_VIDEO_CAPTURE_SLOTS_NV = $000020CF;
  GLX_BIND_TO_TEXTURE_RGB_EXT = $000020D0;
  GLX_BIND_TO_TEXTURE_RGBA_EXT = $000020D1;
  GLX_BIND_TO_MIPMAP_TEXTURE_EXT = $000020D2;
  GLX_BIND_TO_TEXTURE_TARGETS_EXT = $000020D3;
  GLX_Y_INVERTED_EXT = $000020D4;
  GLX_TEXTURE_FORMAT_EXT = $000020D5;
  GLX_TEXTURE_TARGET_EXT = $000020D6;
  GLX_MIPMAP_TEXTURE_EXT = $000020D7;
  GLX_TEXTURE_FORMAT_NONE_EXT = $000020D8;
  GLX_TEXTURE_FORMAT_RGB_EXT = $000020D9;
  GLX_TEXTURE_FORMAT_RGBA_EXT = $000020DA;
  GLX_TEXTURE_1D_EXT = $000020DB;
  GLX_TEXTURE_2D_EXT = $000020DC;
  GLX_TEXTURE_RECTANGLE_EXT = $000020DD;
  GLX_FRONT_LEFT_EXT = $000020DE;
  GLX_FRONT_RIGHT_EXT = $000020DF;
  GLX_BACK_LEFT_EXT = $000020E0;
  GLX_BACK_RIGHT_EXT = $000020E1;
  GLX_FRONT_EXT = GLX_FRONT_LEFT_EXT;
  GLX_BACK_EXT = GLX_BACK_LEFT_EXT;
  GLX_AUX0_EXT = $000020E2;
  GLX_AUX1_EXT = $000020E3;
  GLX_AUX2_EXT = $000020E4;
  GLX_AUX3_EXT = $000020E5;
  GLX_AUX4_EXT = $000020E6;
  GLX_AUX5_EXT = $000020E7;
  GLX_AUX6_EXT = $000020E8;
  GLX_AUX7_EXT = $000020E9;
  GLX_AUX8_EXT = $000020EA;
  GLX_AUX9_EXT = $000020EB;
  GLX_NUM_VIDEO_SLOTS_NV = $000020F0;
  GLX_SWAP_INTERVAL_EXT = $000020F1;
  GLX_MAX_SWAP_INTERVAL_EXT = $000020F2;
  GLX_LATE_SWAPS_TEAR_EXT = $000020F3;
  GLX_BACK_BUFFER_AGE_EXT = $000020F4;
  GLX_STEREO_TREE_EXT = $000020F5;
  GLX_VENDOR_NAMES_EXT = $000020F6;
  GLX_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV = $000020F7;
  GLX_GPU_FASTEST_TARGET_GPUS_AMD = $000021A2;
  GLX_GPU_RAM_AMD = $000021A3;
  GLX_GPU_CLOCK_AMD = $000021A4;
  GLX_GPU_NUM_PIPES_AMD = $000021A5;
  GLX_GPU_NUM_SIMD_AMD = $000021A6;
  GLX_GPU_NUM_RB_AMD = $000021A7;
  GLX_GPU_NUM_SPI_AMD = $000021A8;
  GLX_CONTEXT_PRIORITY_LEVEL_EXT = $00003100;
  GLX_CONTEXT_PRIORITY_HIGH_EXT = $00003101;
  GLX_CONTEXT_PRIORITY_MEDIUM_EXT = $00003102;
  GLX_CONTEXT_PRIORITY_LOW_EXT = $00003103;
  GLX_CONTEXT_OPENGL_NO_ERROR_ARB = $000031B3;
  GLX_NONE = $00008000;
  GLX_SLOW_CONFIG = $00008001;
  GLX_TRUE_COLOR = $00008002;
  GLX_DIRECT_COLOR = $00008003;
  GLX_PSEUDO_COLOR = $00008004;
  GLX_STATIC_COLOR = $00008005;
  GLX_GRAY_SCALE = $00008006;
  GLX_STATIC_GRAY = $00008007;
  GLX_TRANSPARENT_RGB = $00008008;
  GLX_TRANSPARENT_INDEX = $00008009;
  GLX_VISUAL_ID = $0000800B;
  GLX_SCREEN = $0000800C;
  GLX_NON_CONFORMANT_CONFIG = $0000800D;
  GLX_DRAWABLE_TYPE = $00008010;
  GLX_RENDER_TYPE = $00008011;
  GLX_X_RENDERABLE = $00008012;
  GLX_FBCONFIG_ID = $00008013;
  GLX_RGBA_TYPE = $00008014;
  GLX_COLOR_INDEX_TYPE = $00008015;
  GLX_MAX_PBUFFER_WIDTH = $00008016;
  GLX_MAX_PBUFFER_HEIGHT = $00008017;
  GLX_MAX_PBUFFER_PIXELS = $00008018;
  GLX_PRESERVED_CONTENTS = $0000801B;
  GLX_LARGEST_PBUFFER = $0000801C;
  GLX_WIDTH = $0000801D;
  GLX_HEIGHT = $0000801E;
  GLX_EVENT_MASK = $0000801F;
  GLX_DAMAGED = $00008020;
  GLX_SAVED = $00008021;
  GLX_WINDOW = $00008022;
  GLX_PBUFFER = $00008023;
  GLX_NONE_EXT = $00008000;
  GLX_SLOW_VISUAL_EXT = $00008001;
  GLX_TRUE_COLOR_EXT = $00008002;
  GLX_DIRECT_COLOR_EXT = $00008003;
  GLX_PSEUDO_COLOR_EXT = $00008004;
  GLX_STATIC_COLOR_EXT = $00008005;
  GLX_GRAY_SCALE_EXT = $00008006;
  GLX_STATIC_GRAY_EXT = $00008007;
  GLX_TRANSPARENT_RGB_EXT = $00008008;
  GLX_TRANSPARENT_INDEX_EXT = $00008009;
  GLX_SHARE_CONTEXT_EXT = $0000800A;
  GLX_VISUAL_ID_EXT = $0000800B;
  GLX_SCREEN_EXT = $0000800C;
  GLX_NON_CONFORMANT_VISUAL_EXT = $0000800D;
  GLX_DRAWABLE_TYPE_SGIX = $00008010;
  GLX_RENDER_TYPE_SGIX = $00008011;
  GLX_X_RENDERABLE_SGIX = $00008012;
  GLX_FBCONFIG_ID_SGIX = $00008013;
  GLX_RGBA_TYPE_SGIX = $00008014;
  GLX_COLOR_INDEX_TYPE_SGIX = $00008015;
  GLX_MAX_PBUFFER_WIDTH_SGIX = $00008016;
  GLX_MAX_PBUFFER_HEIGHT_SGIX = $00008017;
  GLX_MAX_PBUFFER_PIXELS_SGIX = $00008018;
  GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = $00008019;
  GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = $0000801A;
  GLX_PRESERVED_CONTENTS_SGIX = $0000801B;
  GLX_LARGEST_PBUFFER_SGIX = $0000801C;
  GLX_WIDTH_SGIX = $0000801D;
  GLX_HEIGHT_SGIX = $0000801E;
  GLX_EVENT_MASK_SGIX = $0000801F;
  GLX_DAMAGED_SGIX = $00008020;
  GLX_SAVED_SGIX = $00008021;
  GLX_WINDOW_SGIX = $00008022;
  GLX_PBUFFER_SGIX = $00008023;
  GLX_DIGITAL_MEDIA_PBUFFER_SGIX = $00008024;
  GLX_BLENDED_RGBA_SGIS = $00008025;
  GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = $00008026;
  GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = $00008027;
  GLX_VISUAL_SELECT_GROUP_SGIX = $00008028;
  GLX_HYPERPIPE_ID_SGIX = $00008030;
  GLX_PBUFFER_HEIGHT = $00008040;
  GLX_PBUFFER_WIDTH = $00008041;
  GLX_SAMPLE_BUFFERS_3DFX = $00008050;
  GLX_SAMPLES_3DFX = $00008051;
  GLX_SWAP_METHOD_OML = $00008060;
  GLX_SWAP_EXCHANGE_OML = $00008061;
  GLX_SWAP_COPY_OML = $00008062;
  GLX_SWAP_UNDEFINED_OML = $00008063;
  GLX_EXCHANGE_COMPLETE_INTEL = $00008180;
  GLX_COPY_COMPLETE_INTEL = $00008181;
  GLX_FLIP_COMPLETE_INTEL = $00008182;
  GLX_RENDERER_VENDOR_ID_MESA = $00008183;
  GLX_RENDERER_DEVICE_ID_MESA = $00008184;
  GLX_RENDERER_VERSION_MESA = $00008185;
  GLX_RENDERER_ACCELERATED_MESA = $00008186;
  GLX_RENDERER_VIDEO_MEMORY_MESA = $00008187;
  GLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA = $00008188;
  GLX_RENDERER_PREFERRED_PROFILE_MESA = $00008189;
  GLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA = $0000818A;
  GLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA = $0000818B;
  GLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA = $0000818C;
  GLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA = $0000818D;
  GLX_LOSE_CONTEXT_ON_RESET_ARB = $00008252;
  GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = $00008256;
  GLX_NO_RESET_NOTIFICATION_ARB = $00008261;
  GLX_CONTEXT_PROFILE_MASK_ARB = $00009126;
  GLX_SAMPLE_BUFFERS = $000186A0;
  GLX_SAMPLE_BUFFERS_ARB = $000186A0;
  GLX_SAMPLE_BUFFERS_SGIS = $000186A0;
  GLX_SAMPLES = $000186A1;
  GLX_SAMPLES_ARB = $000186A1;
  GLX_SAMPLES_SGIS = $000186A1;
  GLX_COVERAGE_SAMPLES_NV = $000186A1;
{$endif}
type
  TglAccum = procedure (op: GLenum; value: GLfloat); libdecl;
  TglAccumxOES = procedure (op: GLenum; value: GLfixed); libdecl;
  TglActiveProgramEXT = procedure (_program: GLuint); libdecl;
  TglActiveShaderProgram = procedure (pipeline: GLuint; _program: GLuint); libdecl;
  TglActiveShaderProgramEXT = procedure (pipeline: GLuint; _program: GLuint); libdecl;
  TglActiveStencilFaceEXT = procedure (face: GLenum); libdecl;
  TglActiveTexture = procedure (texture: GLenum); libdecl;
  TglActiveTextureARB = procedure (texture: GLenum); libdecl;
  TglActiveVaryingNV = procedure (_program: GLuint; const name: PGLchar); libdecl;
  TglAlphaFragmentOp1ATI = procedure (op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint); libdecl;
  TglAlphaFragmentOp2ATI = procedure (op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint); libdecl;
  TglAlphaFragmentOp3ATI = procedure (op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint; arg3: GLuint; arg3Rep: GLuint; arg3Mod: GLuint); libdecl;
  TglAlphaFunc = procedure (func: GLenum; ref: GLfloat); libdecl;
  TglAlphaFuncQCOM = procedure (func: GLenum; ref: GLclampf); libdecl;
  TglAlphaFuncx = procedure (func: GLenum; ref: GLfixed); libdecl;
  TglAlphaFuncxOES = procedure (func: GLenum; ref: GLfixed); libdecl;
  TglAlphaToCoverageDitherControlNV = procedure (mode: GLenum); libdecl;
  TglApplyFramebufferAttachmentCMAAINTEL = procedure; libdecl;
  TglApplyTextureEXT = procedure (mode: GLenum); libdecl;
  TglAcquireKeyedMutexWin32EXT = function (memory: GLuint; key: GLuint64; timeout: GLuint): GLboolean; libdecl;
  TglAreProgramsResidentNV = function (n: GLsizei; const programs: PGLuint; residences: PGLboolean): GLboolean; libdecl;
  TglAreTexturesResident = function (n: GLsizei; const textures: PGLuint; residences: PGLboolean): GLboolean; libdecl;
  TglAreTexturesResidentEXT = function (n: GLsizei; const textures: PGLuint; residences: PGLboolean): GLboolean; libdecl;
  TglArrayElement = procedure (i: GLint); libdecl;
  TglArrayElementEXT = procedure (i: GLint); libdecl;
  TglArrayObjectATI = procedure (_array: GLenum; size: GLint; _type: GLenum; stride: GLsizei; buffer: GLuint; offset: GLuint); libdecl;
  TglAsyncCopyBufferSubDataNVX = function (waitSemaphoreCount: GLsizei; const waitSemaphoreArray: PGLuint; const fenceValueArray: PGLuint64; readGpu: GLuint; writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr; signalSemaphoreCount: GLsizei; const signalSemaphoreArray: PGLuint; const signalValueArray: PGLuint64): GLuint; libdecl;
  TglAsyncCopyImageSubDataNVX = function (waitSemaphoreCount: GLsizei; const waitSemaphoreArray: PGLuint; const waitValueArray: PGLuint64; srcGpu: GLuint; dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei; signalSemaphoreCount: GLsizei; const signalSemaphoreArray: PGLuint; const signalValueArray: PGLuint64): GLuint; libdecl;
  TglAsyncMarkerSGIX = procedure (marker: GLuint); libdecl;
  TglAttachObjectARB = procedure (containerObj: GLhandleARB; obj: GLhandleARB); libdecl;
  TglAttachShader = procedure (_program: GLuint; shader: GLuint); libdecl;
  TglBegin = procedure (mode: GLenum); libdecl;
  TglBeginConditionalRender = procedure (id: GLuint; mode: GLenum); libdecl;
  TglBeginConditionalRenderNV = procedure (id: GLuint; mode: GLenum); libdecl;
  TglBeginConditionalRenderNVX = procedure (id: GLuint); libdecl;
  TglBeginFragmentShaderATI = procedure; libdecl;
  TglBeginOcclusionQueryNV = procedure (id: GLuint); libdecl;
  TglBeginPerfMonitorAMD = procedure (monitor: GLuint); libdecl;
  TglBeginPerfQueryINTEL = procedure (queryHandle: GLuint); libdecl;
  TglBeginQuery = procedure (target: GLenum; id: GLuint); libdecl;
  TglBeginQueryARB = procedure (target: GLenum; id: GLuint); libdecl;
  TglBeginQueryEXT = procedure (target: GLenum; id: GLuint); libdecl;
  TglBeginQueryIndexed = procedure (target: GLenum; index: GLuint; id: GLuint); libdecl;
  TglBeginTransformFeedback = procedure (primitiveMode: GLenum); libdecl;
  TglBeginTransformFeedbackEXT = procedure (primitiveMode: GLenum); libdecl;
  TglBeginTransformFeedbackNV = procedure (primitiveMode: GLenum); libdecl;
  TglBeginVertexShaderEXT = procedure; libdecl;
  TglBeginVideoCaptureNV = procedure (video_capture_slot: GLuint); libdecl;
  TglBindAttribLocation = procedure (_program: GLuint; index: GLuint; const name: PGLchar); libdecl;
  TglBindAttribLocationARB = procedure (programObj: GLhandleARB; index: GLuint; const name: PGLcharARB); libdecl;
  TglBindBuffer = procedure (target: GLenum; buffer: GLuint); libdecl;
  TglBindBufferARB = procedure (target: GLenum; buffer: GLuint); libdecl;
  TglBindBufferBase = procedure (target: GLenum; index: GLuint; buffer: GLuint); libdecl;
  TglBindBufferBaseEXT = procedure (target: GLenum; index: GLuint; buffer: GLuint); libdecl;
  TglBindBufferBaseNV = procedure (target: GLenum; index: GLuint; buffer: GLuint); libdecl;
  TglBindBufferOffsetEXT = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr); libdecl;
  TglBindBufferOffsetNV = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr); libdecl;
  TglBindBufferRange = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglBindBufferRangeEXT = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglBindBufferRangeNV = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglBindBuffersBase = procedure (target: GLenum; first: GLuint; count: GLsizei; const buffers: PGLuint); libdecl;
  TglBindBuffersRange = procedure (target: GLenum; first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const sizes: PGLsizeiptr); libdecl;
  TglBindFragDataLocation = procedure (_program: GLuint; color: GLuint; const name: PGLchar); libdecl;
  TglBindFragDataLocationEXT = procedure (_program: GLuint; color: GLuint; const name: PGLchar); libdecl;
  TglBindFragDataLocationIndexed = procedure (_program: GLuint; colorNumber: GLuint; index: GLuint; const name: PGLchar); libdecl;
  TglBindFragDataLocationIndexedEXT = procedure (_program: GLuint; colorNumber: GLuint; index: GLuint; const name: PGLchar); libdecl;
  TglBindFragmentShaderATI = procedure (id: GLuint); libdecl;
  TglBindFramebuffer = procedure (target: GLenum; framebuffer: GLuint); libdecl;
  TglBindFramebufferEXT = procedure (target: GLenum; framebuffer: GLuint); libdecl;
  TglBindFramebufferOES = procedure (target: GLenum; framebuffer: GLuint); libdecl;
  TglBindImageTexture = procedure (_unit: GLuint; texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; access: GLenum; format: GLenum); libdecl;
  TglBindImageTextureEXT = procedure (index: GLuint; texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; access: GLenum; format: GLint); libdecl;
  TglBindImageTextures = procedure (first: GLuint; count: GLsizei; const textures: PGLuint); libdecl;
  TglBindLightParameterEXT = function (light: GLenum; value: GLenum): GLuint; libdecl;
  TglBindMaterialParameterEXT = function (face: GLenum; value: GLenum): GLuint; libdecl;
  TglBindMultiTextureEXT = procedure (texunit: GLenum; target: GLenum; texture: GLuint); libdecl;
  TglBindParameterEXT = function (value: GLenum): GLuint; libdecl;
  TglBindProgramARB = procedure (target: GLenum; _program: GLuint); libdecl;
  TglBindProgramNV = procedure (target: GLenum; id: GLuint); libdecl;
  TglBindProgramPipeline = procedure (pipeline: GLuint); libdecl;
  TglBindProgramPipelineEXT = procedure (pipeline: GLuint); libdecl;
  TglBindRenderbuffer = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglBindRenderbufferEXT = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglBindRenderbufferOES = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglBindSampler = procedure (_unit: GLuint; sampler: GLuint); libdecl;
  TglBindSamplers = procedure (first: GLuint; count: GLsizei; const samplers: PGLuint); libdecl;
  TglBindShadingRateImageNV = procedure (texture: GLuint); libdecl;
  TglBindTexGenParameterEXT = function (_unit: GLenum; coord: GLenum; value: GLenum): GLuint; libdecl;
  TglBindTexture = procedure (target: GLenum; texture: GLuint); libdecl;
  TglBindTextureEXT = procedure (target: GLenum; texture: GLuint); libdecl;
  TglBindTextureUnit = procedure (_unit: GLuint; texture: GLuint); libdecl;
  TglBindTextureUnitParameterEXT = function (_unit: GLenum; value: GLenum): GLuint; libdecl;
  TglBindTextures = procedure (first: GLuint; count: GLsizei; const textures: PGLuint); libdecl;
  TglBindTransformFeedback = procedure (target: GLenum; id: GLuint); libdecl;
  TglBindTransformFeedbackNV = procedure (target: GLenum; id: GLuint); libdecl;
  TglBindVertexArray = procedure (_array: GLuint); libdecl;
  TglBindVertexArrayAPPLE = procedure (_array: GLuint); libdecl;
  TglBindVertexArrayOES = procedure (_array: GLuint); libdecl;
  TglBindVertexBuffer = procedure (bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei); libdecl;
  TglBindVertexBuffers = procedure (first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const strides: PGLsizei); libdecl;
  TglBindVertexShaderEXT = procedure (id: GLuint); libdecl;
  TglBindVideoCaptureStreamBufferNV = procedure (video_capture_slot: GLuint; stream: GLuint; frame_region: GLenum; offset: GLintptrARB); libdecl;
  TglBindVideoCaptureStreamTextureNV = procedure (video_capture_slot: GLuint; stream: GLuint; frame_region: GLenum; target: GLenum; texture: GLuint); libdecl;
  TglBinormal3bEXT = procedure (bx: GLbyte; by: GLbyte; bz: GLbyte); libdecl;
  TglBinormal3bvEXT = procedure (const v: PGLbyte); libdecl;
  TglBinormal3dEXT = procedure (bx: GLdouble; by: GLdouble; bz: GLdouble); libdecl;
  TglBinormal3dvEXT = procedure (const v: PGLdouble); libdecl;
  TglBinormal3fEXT = procedure (bx: GLfloat; by: GLfloat; bz: GLfloat); libdecl;
  TglBinormal3fvEXT = procedure (const v: PGLfloat); libdecl;
  TglBinormal3iEXT = procedure (bx: GLint; by: GLint; bz: GLint); libdecl;
  TglBinormal3ivEXT = procedure (const v: PGLint); libdecl;
  TglBinormal3sEXT = procedure (bx: GLshort; by: GLshort; bz: GLshort); libdecl;
  TglBinormal3svEXT = procedure (const v: PGLshort); libdecl;
  TglBinormalPointerEXT = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglBitmap = procedure (width: GLsizei; height: GLsizei; xorig: GLfloat; yorig: GLfloat; xmove: GLfloat; ymove: GLfloat; const bitmap: PGLubyte); libdecl;
  TglBitmapxOES = procedure (width: GLsizei; height: GLsizei; xorig: GLfixed; yorig: GLfixed; xmove: GLfixed; ymove: GLfixed; const bitmap: PGLubyte); libdecl;
  TglBlendBarrier = procedure; libdecl;
  TglBlendBarrierKHR = procedure; libdecl;
  TglBlendBarrierNV = procedure; libdecl;
  TglBlendColor = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglBlendColorEXT = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglBlendColorxOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglBlendEquation = procedure (mode: GLenum); libdecl;
  TglBlendEquationEXT = procedure (mode: GLenum); libdecl;
  TglBlendEquationIndexedAMD = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationOES = procedure (mode: GLenum); libdecl;
  TglBlendEquationSeparate = procedure (modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateEXT = procedure (modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateIndexedAMD = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateOES = procedure (modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparatei = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateiARB = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateiEXT = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateiOES = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationi = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationiARB = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationiEXT = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationiOES = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendFunc = procedure (sfactor: GLenum; dfactor: GLenum); libdecl;
  TglBlendFuncIndexedAMD = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFuncSeparate = procedure (sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum); libdecl;
  TglBlendFuncSeparateEXT = procedure (sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum); libdecl;
  TglBlendFuncSeparateINGR = procedure (sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum); libdecl;
  TglBlendFuncSeparateIndexedAMD = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateOES = procedure (srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparatei = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateiARB = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateiEXT = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateiOES = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFunci = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFunciARB = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFunciEXT = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFunciOES = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendParameteriNV = procedure (pname: GLenum; value: GLint); libdecl;
  TglBlitFramebuffer = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferANGLE = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferEXT = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferLayerEXT = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; srcLayer: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; dstLayer: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferLayersEXT = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferNV = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitNamedFramebuffer = procedure (readFramebuffer: GLuint; drawFramebuffer: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBufferAddressRangeNV = procedure (pname: GLenum; index: GLuint; address: GLuint64EXT; length: GLsizeiptr); libdecl;
  TglBufferAttachMemoryNV = procedure (target: GLenum; memory: GLuint; offset: GLuint64); libdecl;
  TglBufferData = procedure (target: GLenum; size: GLsizeiptr; const data: Pointer; usage: GLenum); libdecl;
  TglBufferDataARB = procedure (target: GLenum; size: GLsizeiptrARB; const data: Pointer; usage: GLenum); libdecl;
  TglBufferPageCommitmentARB = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; commit: GLboolean); libdecl;
  TglBufferPageCommitmentMemNV = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; memory: GLuint; memOffset: GLuint64; commit: GLboolean); libdecl;
  TglBufferParameteriAPPLE = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglBufferStorage = procedure (target: GLenum; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglBufferStorageEXT = procedure (target: GLenum; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglBufferStorageExternalEXT = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield); libdecl;
  TglBufferStorageMemEXT = procedure (target: GLenum; size: GLsizeiptr; memory: GLuint; offset: GLuint64); libdecl;
  TglBufferSubData = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglBufferSubDataARB = procedure (target: GLenum; offset: GLintptrARB; size: GLsizeiptrARB; const data: Pointer); libdecl;
  TglCallCommandListNV = procedure (list: GLuint); libdecl;
  TglCallList = procedure (list: GLuint); libdecl;
  TglCallLists = procedure (n: GLsizei; _type: GLenum; const lists: Pointer); libdecl;
  TglCheckFramebufferStatus = function (target: GLenum): GLenum; libdecl;
  TglCheckFramebufferStatusEXT = function (target: GLenum): GLenum; libdecl;
  TglCheckFramebufferStatusOES = function (target: GLenum): GLenum; libdecl;
  TglCheckNamedFramebufferStatus = function (framebuffer: GLuint; target: GLenum): GLenum; libdecl;
  TglCheckNamedFramebufferStatusEXT = function (framebuffer: GLuint; target: GLenum): GLenum; libdecl;
  TglClampColor = procedure (target: GLenum; clamp: GLenum); libdecl;
  TglClampColorARB = procedure (target: GLenum; clamp: GLenum); libdecl;
  TglClear = procedure (mask: GLbitfield); libdecl;
  TglClearAccum = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglClearAccumxOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglClearBufferData = procedure (target: GLenum; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearBufferSubData = procedure (target: GLenum; internalformat: GLenum; offset: GLintptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearBufferfi = procedure (buffer: GLenum; drawbuffer: GLint; depth: GLfloat; stencil: GLint); libdecl;
  TglClearBufferfv = procedure (buffer: GLenum; drawbuffer: GLint; const value: PGLfloat); libdecl;
  TglClearBufferiv = procedure (buffer: GLenum; drawbuffer: GLint; const value: PGLint); libdecl;
  TglClearBufferuiv = procedure (buffer: GLenum; drawbuffer: GLint; const value: PGLuint); libdecl;
  TglClearColor = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglClearColorIiEXT = procedure (red: GLint; green: GLint; blue: GLint; alpha: GLint); libdecl;
  TglClearColorIuiEXT = procedure (red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint); libdecl;
  TglClearColorx = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglClearColorxOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglClearDepth = procedure (depth: GLdouble); libdecl;
  TglClearDepthdNV = procedure (depth: GLdouble); libdecl;
  TglClearDepthf = procedure (d: GLfloat); libdecl;
  TglClearDepthfOES = procedure (depth: GLclampf); libdecl;
  TglClearDepthx = procedure (depth: GLfixed); libdecl;
  TglClearDepthxOES = procedure (depth: GLfixed); libdecl;
  TglClearIndex = procedure (c: GLfloat); libdecl;
  TglClearNamedBufferData = procedure (buffer: GLuint; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedBufferDataEXT = procedure (buffer: GLuint; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedBufferSubData = procedure (buffer: GLuint; internalformat: GLenum; offset: GLintptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedBufferSubDataEXT = procedure (buffer: GLuint; internalformat: GLenum; offset: GLsizeiptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedFramebufferfi = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; depth: GLfloat; stencil: GLint); libdecl;
  TglClearNamedFramebufferfv = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLfloat); libdecl;
  TglClearNamedFramebufferiv = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLint); libdecl;
  TglClearNamedFramebufferuiv = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLuint); libdecl;
  TglClearPixelLocalStorageuiEXT = procedure (offset: GLsizei; n: GLsizei; const values: PGLuint); libdecl;
  TglClearStencil = procedure (s: GLint); libdecl;
  TglClearTexImage = procedure (texture: GLuint; level: GLint; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearTexImageEXT = procedure (texture: GLuint; level: GLint; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearTexSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearTexSubImageEXT = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClientActiveTexture = procedure (texture: GLenum); libdecl;
  TglClientActiveTextureARB = procedure (texture: GLenum); libdecl;
  TglClientActiveVertexStreamATI = procedure (stream: GLenum); libdecl;
  TglClientAttribDefaultEXT = procedure (mask: GLbitfield); libdecl;
  TglClientWaitSemaphoreui64NVX = procedure (fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64); libdecl;
  TglClientWaitSync = function (sync: GLsync; flags: GLbitfield; timeout: GLuint64): GLenum; libdecl;
  TglClientWaitSyncAPPLE = function (sync: GLsync; flags: GLbitfield; timeout: GLuint64): GLenum; libdecl;
  TglClipControl = procedure (origin: GLenum; depth: GLenum); libdecl;
  TglClipControlEXT = procedure (origin: GLenum; depth: GLenum); libdecl;
  TglClipPlane = procedure (plane: GLenum; const equation: PGLdouble); libdecl;
  TglClipPlanef = procedure (p: GLenum; const eqn: PGLfloat); libdecl;
  TglClipPlanefIMG = procedure (p: GLenum; const eqn: PGLfloat); libdecl;
  TglClipPlanefOES = procedure (plane: GLenum; const equation: PGLfloat); libdecl;
  TglClipPlanex = procedure (plane: GLenum; const equation: PGLfixed); libdecl;
  TglClipPlanexIMG = procedure (p: GLenum; const eqn: PGLfixed); libdecl;
  TglClipPlanexOES = procedure (plane: GLenum; const equation: PGLfixed); libdecl;
  TglColor3b = procedure (red: GLbyte; green: GLbyte; blue: GLbyte); libdecl;
  TglColor3bv = procedure (const v: PGLbyte); libdecl;
  TglColor3d = procedure (red: GLdouble; green: GLdouble; blue: GLdouble); libdecl;
  TglColor3dv = procedure (const v: PGLdouble); libdecl;
  TglColor3f = procedure (red: GLfloat; green: GLfloat; blue: GLfloat); libdecl;
  TglColor3fVertex3fSUN = procedure (r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglColor3fVertex3fvSUN = procedure (const c: PGLfloat; const v: PGLfloat); libdecl;
  TglColor3fv = procedure (const v: PGLfloat); libdecl;
  TglColor3hNV = procedure (red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV); libdecl;
  TglColor3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglColor3i = procedure (red: GLint; green: GLint; blue: GLint); libdecl;
  TglColor3iv = procedure (const v: PGLint); libdecl;
  TglColor3s = procedure (red: GLshort; green: GLshort; blue: GLshort); libdecl;
  TglColor3sv = procedure (const v: PGLshort); libdecl;
  TglColor3ub = procedure (red: GLubyte; green: GLubyte; blue: GLubyte); libdecl;
  TglColor3ubv = procedure (const v: PGLubyte); libdecl;
  TglColor3ui = procedure (red: GLuint; green: GLuint; blue: GLuint); libdecl;
  TglColor3uiv = procedure (const v: PGLuint); libdecl;
  TglColor3us = procedure (red: GLushort; green: GLushort; blue: GLushort); libdecl;
  TglColor3usv = procedure (const v: PGLushort); libdecl;
  TglColor3xOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed); libdecl;
  TglColor3xvOES = procedure (const components: PGLfixed); libdecl;
  TglColor4b = procedure (red: GLbyte; green: GLbyte; blue: GLbyte; alpha: GLbyte); libdecl;
  TglColor4bv = procedure (const v: PGLbyte); libdecl;
  TglColor4d = procedure (red: GLdouble; green: GLdouble; blue: GLdouble; alpha: GLdouble); libdecl;
  TglColor4dv = procedure (const v: PGLdouble); libdecl;
  TglColor4f = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglColor4fNormal3fVertex3fSUN = procedure (r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglColor4fNormal3fVertex3fvSUN = procedure (const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglColor4fv = procedure (const v: PGLfloat); libdecl;
  TglColor4hNV = procedure (red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV; alpha: GLhalfNV); libdecl;
  TglColor4hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglColor4i = procedure (red: GLint; green: GLint; blue: GLint; alpha: GLint); libdecl;
  TglColor4iv = procedure (const v: PGLint); libdecl;
  TglColor4s = procedure (red: GLshort; green: GLshort; blue: GLshort; alpha: GLshort); libdecl;
  TglColor4sv = procedure (const v: PGLshort); libdecl;
  TglColor4ub = procedure (red: GLubyte; green: GLubyte; blue: GLubyte; alpha: GLubyte); libdecl;
  TglColor4ubVertex2fSUN = procedure (r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat); libdecl;
  TglColor4ubVertex2fvSUN = procedure (const c: PGLubyte; const v: PGLfloat); libdecl;
  TglColor4ubVertex3fSUN = procedure (r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglColor4ubVertex3fvSUN = procedure (const c: PGLubyte; const v: PGLfloat); libdecl;
  TglColor4ubv = procedure (const v: PGLubyte); libdecl;
  TglColor4ui = procedure (red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint); libdecl;
  TglColor4uiv = procedure (const v: PGLuint); libdecl;
  TglColor4us = procedure (red: GLushort; green: GLushort; blue: GLushort; alpha: GLushort); libdecl;
  TglColor4usv = procedure (const v: PGLushort); libdecl;
  TglColor4x = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglColor4xOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglColor4xvOES = procedure (const components: PGLfixed); libdecl;
  TglColorFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglColorFragmentOp1ATI = procedure (op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint); libdecl;
  TglColorFragmentOp2ATI = procedure (op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint); libdecl;
  TglColorFragmentOp3ATI = procedure (op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint; arg3: GLuint; arg3Rep: GLuint; arg3Mod: GLuint); libdecl;
  TglColorMask = procedure (red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean); libdecl;
  TglColorMaskIndexedEXT = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaski = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaskiEXT = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaskiOES = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaterial = procedure (face: GLenum; mode: GLenum); libdecl;
  TglColorP3ui = procedure (_type: GLenum; color: GLuint); libdecl;
  TglColorP3uiv = procedure (_type: GLenum; const color: PGLuint); libdecl;
  TglColorP4ui = procedure (_type: GLenum; color: GLuint); libdecl;
  TglColorP4uiv = procedure (_type: GLenum; const color: PGLuint); libdecl;
  TglColorPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglColorPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglColorPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglColorPointervINTEL = procedure (size: GLint; _type: GLenum; const _pointer: PPointer); libdecl;
  TglColorSubTable = procedure (target: GLenum; start: GLsizei; count: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglColorSubTableEXT = procedure (target: GLenum; start: GLsizei; count: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglColorTable = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer); libdecl;
  TglColorTableEXT = procedure (target: GLenum; internalFormat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer); libdecl;
  TglColorTableParameterfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglColorTableParameterfvSGI = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglColorTableParameteriv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglColorTableParameterivSGI = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglColorTableSGI = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer); libdecl;
  TglCombinerInputNV = procedure (stage: GLenum; portion: GLenum; variable: GLenum; input: GLenum; mapping: GLenum; componentUsage: GLenum); libdecl;
  TglCombinerOutputNV = procedure (stage: GLenum; portion: GLenum; abOutput: GLenum; cdOutput: GLenum; sumOutput: GLenum; scale: GLenum; bias: GLenum; abDotProduct: GLboolean; cdDotProduct: GLboolean; muxSum: GLboolean); libdecl;
  TglCombinerParameterfNV = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglCombinerParameterfvNV = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglCombinerParameteriNV = procedure (pname: GLenum; param: GLint); libdecl;
  TglCombinerParameterivNV = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglCombinerStageParameterfvNV = procedure (stage: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglCommandListSegmentsNV = procedure (list: GLuint; segments: GLuint); libdecl;
  TglCompileCommandListNV = procedure (list: GLuint); libdecl;
  TglCompileShader = procedure (shader: GLuint); libdecl;
  TglCompileShaderARB = procedure (shaderObj: GLhandleARB); libdecl;
  TglCompileShaderIncludeARB = procedure (shader: GLuint; count: GLsizei; const path: PPGLchar; const length: PGLint); libdecl;
  TglCompressedMultiTexImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexSubImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexSubImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexSubImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTexImage1D = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage1DARB = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage2D = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage2DARB = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage3D = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage3DARB = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage3DOES = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage1D = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage1DARB = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage2D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage2DARB = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage3D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage3DARB = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage3DOES = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureSubImage1D = procedure (texture: GLuint; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureSubImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureSubImage2D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureSubImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureSubImage3D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureSubImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglConservativeRasterParameterfNV = procedure (pname: GLenum; value: GLfloat); libdecl;
  TglConservativeRasterParameteriNV = procedure (pname: GLenum; param: GLint); libdecl;
  TglConvolutionFilter1D = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionFilter1DEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionFilter2D = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionFilter2DEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionParameterf = procedure (target: GLenum; pname: GLenum; params: GLfloat); libdecl;
  TglConvolutionParameterfEXT = procedure (target: GLenum; pname: GLenum; params: GLfloat); libdecl;
  TglConvolutionParameterfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglConvolutionParameterfvEXT = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglConvolutionParameteri = procedure (target: GLenum; pname: GLenum; params: GLint); libdecl;
  TglConvolutionParameteriEXT = procedure (target: GLenum; pname: GLenum; params: GLint); libdecl;
  TglConvolutionParameteriv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglConvolutionParameterivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglConvolutionParameterxOES = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglConvolutionParameterxvOES = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglCopyBufferSubData = procedure (readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglCopyBufferSubDataNV = procedure (readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglCopyColorSubTable = procedure (target: GLenum; start: GLsizei; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyColorSubTableEXT = procedure (target: GLenum; start: GLsizei; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyColorTable = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyColorTableSGI = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyConvolutionFilter1D = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyConvolutionFilter1DEXT = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyConvolutionFilter2D = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyConvolutionFilter2DEXT = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyImageSubData = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglCopyImageSubDataEXT = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglCopyImageSubDataNV = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglCopyImageSubDataOES = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglCopyMultiTexImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyMultiTexImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyMultiTexSubImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyMultiTexSubImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyMultiTexSubImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyNamedBufferSubData = procedure (readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglCopyPathNV = procedure (resultPath: GLuint; srcPath: GLuint); libdecl;
  TglCopyPixels = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; _type: GLenum); libdecl;
  TglCopyTexImage1D = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyTexImage1DEXT = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyTexImage2D = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyTexImage2DEXT = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyTexSubImage1D = procedure (target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTexSubImage1DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTexSubImage2D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage2DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage3D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage3DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage3DOES = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyTextureImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyTextureLevelsAPPLE = procedure (destinationTexture: GLuint; sourceTexture: GLuint; sourceBaseLevel: GLint; sourceLevelCount: GLsizei); libdecl;
  TglCopyTextureSubImage1D = procedure (texture: GLuint; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTextureSubImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTextureSubImage2D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureSubImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureSubImage3D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureSubImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCoverFillPathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglCoverFillPathNV = procedure (path: GLuint; coverMode: GLenum); libdecl;
  TglCoverStrokePathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglCoverStrokePathNV = procedure (path: GLuint; coverMode: GLenum); libdecl;
  TglCoverageMaskNV = procedure (mask: GLboolean); libdecl;
  TglCoverageModulationNV = procedure (components: GLenum); libdecl;
  TglCoverageModulationTableNV = procedure (n: GLsizei; const v: PGLfloat); libdecl;
  TglCoverageOperationNV = procedure (operation: GLenum); libdecl;
  TglCreateBuffers = procedure (n: GLsizei; buffers: PGLuint); libdecl;
  TglCreateCommandListsNV = procedure (n: GLsizei; lists: PGLuint); libdecl;
  TglCreateFramebuffers = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglCreateMemoryObjectsEXT = procedure (n: GLsizei; memoryObjects: PGLuint); libdecl;
  TglCreatePerfQueryINTEL = procedure (queryId: GLuint; queryHandle: PGLuint); libdecl;
  TglCreateProgram = function: GLuint; libdecl;
  TglCreateProgramObjectARB = function: GLhandleARB; libdecl;
  TglCreateProgramPipelines = procedure (n: GLsizei; pipelines: PGLuint); libdecl;
  TglCreateProgressFenceNVX = function: GLuint; libdecl;
  TglCreateQueries = procedure (target: GLenum; n: GLsizei; ids: PGLuint); libdecl;
  TglCreateRenderbuffers = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglCreateSamplers = procedure (n: GLsizei; samplers: PGLuint); libdecl;
  TglCreateSemaphoresNV = procedure (n: GLsizei; semaphores: PGLuint); libdecl;
  TglCreateShader = function (_type: GLenum): GLuint; libdecl;
  TglCreateShaderObjectARB = function (shaderType: GLenum): GLhandleARB; libdecl;
  TglCreateShaderProgramEXT = function (_type: GLenum; const _string: PGLchar): GLuint; libdecl;
  TglCreateShaderProgramv = function (_type: GLenum; count: GLsizei; const strings: PPGLchar): GLuint; libdecl;
  TglCreateShaderProgramvEXT = function (_type: GLenum; count: GLsizei; const strings: PPGLchar): GLuint; libdecl;
  TglCreateStatesNV = procedure (n: GLsizei; states: PGLuint); libdecl;
  TglCreateSyncFromCLeventARB = function (context: P_cl_context; event: P_cl_event; flags: GLbitfield): GLsync; libdecl;
  TglCreateTextures = procedure (target: GLenum; n: GLsizei; textures: PGLuint); libdecl;
  TglCreateTransformFeedbacks = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglCreateVertexArrays = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglCullFace = procedure (mode: GLenum); libdecl;
  TglCullParameterdvEXT = procedure (pname: GLenum; params: PGLdouble); libdecl;
  TglCullParameterfvEXT = procedure (pname: GLenum; params: PGLfloat); libdecl;
  TglCurrentPaletteMatrixARB = procedure (index: GLint); libdecl;
  TglCurrentPaletteMatrixOES = procedure (matrixpaletteindex: GLuint); libdecl;
  TglDebugMessageCallback = procedure (callback: GLDEBUGPROC; const userParam: Pointer); libdecl;
  TglDebugMessageCallbackAMD = procedure (callback: GLDEBUGPROCAMD; userParam: Pointer); libdecl;
  TglDebugMessageCallbackARB = procedure (callback: GLDEBUGPROCARB; const userParam: Pointer); libdecl;
  TglDebugMessageCallbackKHR = procedure (callback: GLDEBUGPROCKHR; const userParam: Pointer); libdecl;
  TglDebugMessageControl = procedure (source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageControlARB = procedure (source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageControlKHR = procedure (source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageEnableAMD = procedure (category: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageInsert = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar); libdecl;
  TglDebugMessageInsertAMD = procedure (category: GLenum; severity: GLenum; id: GLuint; length: GLsizei; const buf: PGLchar); libdecl;
  TglDebugMessageInsertARB = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar); libdecl;
  TglDebugMessageInsertKHR = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar); libdecl;
  TglDeformSGIX = procedure (mask: GLbitfield); libdecl;
  TglDeformationMap3dSGIX = procedure (target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; w1: GLdouble; w2: GLdouble; wstride: GLint; worder: GLint; const points: PGLdouble); libdecl;
  TglDeformationMap3fSGIX = procedure (target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; w1: GLfloat; w2: GLfloat; wstride: GLint; worder: GLint; const points: PGLfloat); libdecl;
  TglDeleteAsyncMarkersSGIX = procedure (marker: GLuint; range: GLsizei); libdecl;
  TglDeleteBuffers = procedure (n: GLsizei; const buffers: PGLuint); libdecl;
  TglDeleteBuffersARB = procedure (n: GLsizei; const buffers: PGLuint); libdecl;
  TglDeleteCommandListsNV = procedure (n: GLsizei; const lists: PGLuint); libdecl;
  TglDeleteFencesAPPLE = procedure (n: GLsizei; const fences: PGLuint); libdecl;
  TglDeleteFencesNV = procedure (n: GLsizei; const fences: PGLuint); libdecl;
  TglDeleteFragmentShaderATI = procedure (id: GLuint); libdecl;
  TglDeleteFramebuffers = procedure (n: GLsizei; const framebuffers: PGLuint); libdecl;
  TglDeleteFramebuffersEXT = procedure (n: GLsizei; const framebuffers: PGLuint); libdecl;
  TglDeleteFramebuffersOES = procedure (n: GLsizei; const framebuffers: PGLuint); libdecl;
  TglDeleteLists = procedure (list: GLuint; range: GLsizei); libdecl;
  TglDeleteMemoryObjectsEXT = procedure (n: GLsizei; const memoryObjects: PGLuint); libdecl;
  TglDeleteNamedStringARB = procedure (namelen: GLint; const name: PGLchar); libdecl;
  TglDeleteNamesAMD = procedure (identifier: GLenum; num: GLuint; const names: PGLuint); libdecl;
  TglDeleteObjectARB = procedure (obj: GLhandleARB); libdecl;
  TglDeleteOcclusionQueriesNV = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeletePathsNV = procedure (path: GLuint; range: GLsizei); libdecl;
  TglDeletePerfMonitorsAMD = procedure (n: GLsizei; monitors: PGLuint); libdecl;
  TglDeletePerfQueryINTEL = procedure (queryHandle: GLuint); libdecl;
  TglDeleteProgram = procedure (_program: GLuint); libdecl;
  TglDeleteProgramPipelines = procedure (n: GLsizei; const pipelines: PGLuint); libdecl;
  TglDeleteProgramPipelinesEXT = procedure (n: GLsizei; const pipelines: PGLuint); libdecl;
  TglDeleteProgramsARB = procedure (n: GLsizei; const programs: PGLuint); libdecl;
  TglDeleteProgramsNV = procedure (n: GLsizei; const programs: PGLuint); libdecl;
  TglDeleteQueries = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteQueriesARB = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteQueriesEXT = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteQueryResourceTagNV = procedure (n: GLsizei; const tagIds: PGLint); libdecl;
  TglDeleteRenderbuffers = procedure (n: GLsizei; const renderbuffers: PGLuint); libdecl;
  TglDeleteRenderbuffersEXT = procedure (n: GLsizei; const renderbuffers: PGLuint); libdecl;
  TglDeleteRenderbuffersOES = procedure (n: GLsizei; const renderbuffers: PGLuint); libdecl;
  TglDeleteSamplers = procedure (count: GLsizei; const samplers: PGLuint); libdecl;
  TglDeleteSemaphoresEXT = procedure (n: GLsizei; const semaphores: PGLuint); libdecl;
  TglDeleteShader = procedure (shader: GLuint); libdecl;
  TglDeleteStatesNV = procedure (n: GLsizei; const states: PGLuint); libdecl;
  TglDeleteSync = procedure (sync: GLsync); libdecl;
  TglDeleteSyncAPPLE = procedure (sync: GLsync); libdecl;
  TglDeleteTextures = procedure (n: GLsizei; const textures: PGLuint); libdecl;
  TglDeleteTexturesEXT = procedure (n: GLsizei; const textures: PGLuint); libdecl;
  TglDeleteTransformFeedbacks = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteTransformFeedbacksNV = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteVertexArrays = procedure (n: GLsizei; const arrays: PGLuint); libdecl;
  TglDeleteVertexArraysAPPLE = procedure (n: GLsizei; const arrays: PGLuint); libdecl;
  TglDeleteVertexArraysOES = procedure (n: GLsizei; const arrays: PGLuint); libdecl;
  TglDeleteVertexShaderEXT = procedure (id: GLuint); libdecl;
  TglDepthBoundsEXT = procedure (zmin: GLclampd; zmax: GLclampd); libdecl;
  TglDepthBoundsdNV = procedure (zmin: GLdouble; zmax: GLdouble); libdecl;
  TglDepthFunc = procedure (func: GLenum); libdecl;
  TglDepthMask = procedure (flag: GLboolean); libdecl;
  TglDepthRange = procedure (n: GLdouble; f: GLdouble); libdecl;
  TglDepthRangeArraydvNV = procedure (first: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglDepthRangeArrayfvNV = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglDepthRangeArrayfvOES = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglDepthRangeArrayv = procedure (first: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglDepthRangeIndexed = procedure (index: GLuint; n: GLdouble; f: GLdouble); libdecl;
  TglDepthRangeIndexeddNV = procedure (index: GLuint; n: GLdouble; f: GLdouble); libdecl;
  TglDepthRangeIndexedfNV = procedure (index: GLuint; n: GLfloat; f: GLfloat); libdecl;
  TglDepthRangeIndexedfOES = procedure (index: GLuint; n: GLfloat; f: GLfloat); libdecl;
  TglDepthRangedNV = procedure (zNear: GLdouble; zFar: GLdouble); libdecl;
  TglDepthRangef = procedure (n: GLfloat; f: GLfloat); libdecl;
  TglDepthRangefOES = procedure (n: GLclampf; f: GLclampf); libdecl;
  TglDepthRangex = procedure (n: GLfixed; f: GLfixed); libdecl;
  TglDepthRangexOES = procedure (n: GLfixed; f: GLfixed); libdecl;
  TglDetachObjectARB = procedure (containerObj: GLhandleARB; attachedObj: GLhandleARB); libdecl;
  TglDetachShader = procedure (_program: GLuint; shader: GLuint); libdecl;
  TglDetailTexFuncSGIS = procedure (target: GLenum; n: GLsizei; const points: PGLfloat); libdecl;
  TglDisable = procedure (cap: GLenum); libdecl;
  TglDisableClientState = procedure (_array: GLenum); libdecl;
  TglDisableClientStateIndexedEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglDisableClientStateiEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglDisableDriverControlQCOM = procedure (driverControl: GLuint); libdecl;
  TglDisableIndexedEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableVariantClientStateEXT = procedure (id: GLuint); libdecl;
  TglDisableVertexArrayAttrib = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglDisableVertexArrayAttribEXT = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglDisableVertexArrayEXT = procedure (vaobj: GLuint; _array: GLenum); libdecl;
  TglDisableVertexAttribAPPLE = procedure (index: GLuint; pname: GLenum); libdecl;
  TglDisableVertexAttribArray = procedure (index: GLuint); libdecl;
  TglDisableVertexAttribArrayARB = procedure (index: GLuint); libdecl;
  TglDisablei = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableiEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableiNV = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableiOES = procedure (target: GLenum; index: GLuint); libdecl;
  TglDiscardFramebufferEXT = procedure (target: GLenum; numAttachments: GLsizei; const attachments: PGLenum); libdecl;
  TglDispatchCompute = procedure (num_groups_x: GLuint; num_groups_y: GLuint; num_groups_z: GLuint); libdecl;
  TglDispatchComputeGroupSizeARB = procedure (num_groups_x: GLuint; num_groups_y: GLuint; num_groups_z: GLuint; group_size_x: GLuint; group_size_y: GLuint; group_size_z: GLuint); libdecl;
  TglDispatchComputeIndirect = procedure (indirect: GLintptr); libdecl;
  TglDrawArrays = procedure (mode: GLenum; first: GLint; count: GLsizei); libdecl;
  TglDrawArraysEXT = procedure (mode: GLenum; first: GLint; count: GLsizei); libdecl;
  TglDrawArraysIndirect = procedure (mode: GLenum; const indirect: Pointer); libdecl;
  TglDrawArraysInstanced = procedure (mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei); libdecl;
  TglDrawArraysInstancedANGLE = procedure (mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawArraysInstancedARB = procedure (mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawArraysInstancedBaseInstance = procedure (mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawArraysInstancedBaseInstanceEXT = procedure (mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawArraysInstancedEXT = procedure (mode: GLenum; start: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawArraysInstancedNV = procedure (mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawBuffer = procedure (buf: GLenum); libdecl;
  TglDrawBuffers = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersARB = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersATI = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersEXT = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersIndexedEXT = procedure (n: GLint; const location: PGLenum; const indices: PGLint); libdecl;
  TglDrawBuffersNV = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawCommandsAddressNV = procedure (primitiveMode: GLenum; const indirects: PGLuint64; const sizes: PGLsizei; count: GLuint); libdecl;
  TglDrawCommandsNV = procedure (primitiveMode: GLenum; buffer: GLuint; const indirects: PGLintptr; const sizes: PGLsizei; count: GLuint); libdecl;
  TglDrawCommandsStatesAddressNV = procedure (const indirects: PGLuint64; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint); libdecl;
  TglDrawCommandsStatesNV = procedure (buffer: GLuint; const indirects: PGLintptr; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint); libdecl;
  TglDrawElementArrayAPPLE = procedure (mode: GLenum; first: GLint; count: GLsizei); libdecl;
  TglDrawElementArrayATI = procedure (mode: GLenum; count: GLsizei); libdecl;
  TglDrawElements = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer); libdecl;
  TglDrawElementsBaseVertex = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawElementsBaseVertexEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawElementsBaseVertexOES = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawElementsIndirect = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer); libdecl;
  TglDrawElementsInstanced = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei); libdecl;
  TglDrawElementsInstancedANGLE = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawElementsInstancedARB = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawElementsInstancedBaseInstance = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseInstanceEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseVertex = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint); libdecl;
  TglDrawElementsInstancedBaseVertexBaseInstance = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseVertexBaseInstanceEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseVertexEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint); libdecl;
  TglDrawElementsInstancedBaseVertexOES = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint); libdecl;
  TglDrawElementsInstancedEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawElementsInstancedNV = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawMeshArraysSUN = procedure (mode: GLenum; first: GLint; count: GLsizei; width: GLsizei); libdecl;
  TglDrawMeshTasksNV = procedure (first: GLuint; count: GLuint); libdecl;
  TglDrawMeshTasksIndirectNV = procedure (indirect: GLintptr); libdecl;
  TglDrawPixels = procedure (width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglDrawRangeElementArrayAPPLE = procedure (mode: GLenum; start: GLuint; _end: GLuint; first: GLint; count: GLsizei); libdecl;
  TglDrawRangeElementArrayATI = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei); libdecl;
  TglDrawRangeElements = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer); libdecl;
  TglDrawRangeElementsBaseVertex = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawRangeElementsBaseVertexEXT = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawRangeElementsBaseVertexOES = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawRangeElementsEXT = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer); libdecl;
  TglDrawTexfOES = procedure (x: GLfloat; y: GLfloat; z: GLfloat; width: GLfloat; height: GLfloat); libdecl;
  TglDrawTexfvOES = procedure (const coords: PGLfloat); libdecl;
  TglDrawTexiOES = procedure (x: GLint; y: GLint; z: GLint; width: GLint; height: GLint); libdecl;
  TglDrawTexivOES = procedure (const coords: PGLint); libdecl;
  TglDrawTexsOES = procedure (x: GLshort; y: GLshort; z: GLshort; width: GLshort; height: GLshort); libdecl;
  TglDrawTexsvOES = procedure (const coords: PGLshort); libdecl;
  TglDrawTextureNV = procedure (texture: GLuint; sampler: GLuint; x0: GLfloat; y0: GLfloat; x1: GLfloat; y1: GLfloat; z: GLfloat; s0: GLfloat; t0: GLfloat; s1: GLfloat; t1: GLfloat); libdecl;
  TglDrawTexxOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed; width: GLfixed; height: GLfixed); libdecl;
  TglDrawTexxvOES = procedure (const coords: PGLfixed); libdecl;
  TglDrawTransformFeedback = procedure (mode: GLenum; id: GLuint); libdecl;
  TglDrawTransformFeedbackEXT = procedure (mode: GLenum; id: GLuint); libdecl;
  TglDrawTransformFeedbackInstanced = procedure (mode: GLenum; id: GLuint; instancecount: GLsizei); libdecl;
  TglDrawTransformFeedbackInstancedEXT = procedure (mode: GLenum; id: GLuint; instancecount: GLsizei); libdecl;
  TglDrawTransformFeedbackNV = procedure (mode: GLenum; id: GLuint); libdecl;
  TglDrawTransformFeedbackStream = procedure (mode: GLenum; id: GLuint; stream: GLuint); libdecl;
  TglDrawTransformFeedbackStreamInstanced = procedure (mode: GLenum; id: GLuint; stream: GLuint; instancecount: GLsizei); libdecl;
  TglEGLImageTargetRenderbufferStorageOES = procedure (target: GLenum; image: GLeglImageOES); libdecl;
  TglEGLImageTargetTexStorageEXT = procedure (target: GLenum; image: GLeglImageOES; const attrib_list: PGLint); libdecl;
  TglEGLImageTargetTexture2DOES = procedure (target: GLenum; image: GLeglImageOES); libdecl;
  TglEGLImageTargetTextureStorageEXT = procedure (texture: GLuint; image: GLeglImageOES; const attrib_list: PGLint); libdecl;
  TglEdgeFlag = procedure (flag: GLboolean); libdecl;
  TglEdgeFlagFormatNV = procedure (stride: GLsizei); libdecl;
  TglEdgeFlagPointer = procedure (stride: GLsizei; const _pointer: Pointer); libdecl;
  TglEdgeFlagPointerEXT = procedure (stride: GLsizei; count: GLsizei; const _pointer: PGLboolean); libdecl;
  TglEdgeFlagPointerListIBM = procedure (stride: GLint; const _pointer: PPGLboolean; ptrstride: GLint); libdecl;
  TglEdgeFlagv = procedure (const flag: PGLboolean); libdecl;
  TglElementPointerAPPLE = procedure (_type: GLenum; const _pointer: Pointer); libdecl;
  TglElementPointerATI = procedure (_type: GLenum; const _pointer: Pointer); libdecl;
  TglEnable = procedure (cap: GLenum); libdecl;
  TglEnableClientState = procedure (_array: GLenum); libdecl;
  TglEnableClientStateIndexedEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglEnableClientStateiEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglEnableDriverControlQCOM = procedure (driverControl: GLuint); libdecl;
  TglEnableIndexedEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableVariantClientStateEXT = procedure (id: GLuint); libdecl;
  TglEnableVertexArrayAttrib = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglEnableVertexArrayAttribEXT = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglEnableVertexArrayEXT = procedure (vaobj: GLuint; _array: GLenum); libdecl;
  TglEnableVertexAttribAPPLE = procedure (index: GLuint; pname: GLenum); libdecl;
  TglEnableVertexAttribArray = procedure (index: GLuint); libdecl;
  TglEnableVertexAttribArrayARB = procedure (index: GLuint); libdecl;
  TglEnablei = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableiEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableiNV = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableiOES = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnd = procedure; libdecl;
  TglEndConditionalRender = procedure; libdecl;
  TglEndConditionalRenderNV = procedure; libdecl;
  TglEndConditionalRenderNVX = procedure; libdecl;
  TglEndFragmentShaderATI = procedure; libdecl;
  TglEndList = procedure; libdecl;
  TglEndOcclusionQueryNV = procedure; libdecl;
  TglEndPerfMonitorAMD = procedure (monitor: GLuint); libdecl;
  TglEndPerfQueryINTEL = procedure (queryHandle: GLuint); libdecl;
  TglEndQuery = procedure (target: GLenum); libdecl;
  TglEndQueryARB = procedure (target: GLenum); libdecl;
  TglEndQueryEXT = procedure (target: GLenum); libdecl;
  TglEndQueryIndexed = procedure (target: GLenum; index: GLuint); libdecl;
  TglEndTilingQCOM = procedure (preserveMask: GLbitfield); libdecl;
  TglEndTransformFeedback = procedure; libdecl;
  TglEndTransformFeedbackEXT = procedure; libdecl;
  TglEndTransformFeedbackNV = procedure; libdecl;
  TglEndVertexShaderEXT = procedure; libdecl;
  TglEndVideoCaptureNV = procedure (video_capture_slot: GLuint); libdecl;
  TglEvalCoord1d = procedure (u: GLdouble); libdecl;
  TglEvalCoord1dv = procedure (const u: PGLdouble); libdecl;
  TglEvalCoord1f = procedure (u: GLfloat); libdecl;
  TglEvalCoord1fv = procedure (const u: PGLfloat); libdecl;
  TglEvalCoord1xOES = procedure (u: GLfixed); libdecl;
  TglEvalCoord1xvOES = procedure (const coords: PGLfixed); libdecl;
  TglEvalCoord2d = procedure (u: GLdouble; v: GLdouble); libdecl;
  TglEvalCoord2dv = procedure (const u: PGLdouble); libdecl;
  TglEvalCoord2f = procedure (u: GLfloat; v: GLfloat); libdecl;
  TglEvalCoord2fv = procedure (const u: PGLfloat); libdecl;
  TglEvalCoord2xOES = procedure (u: GLfixed; v: GLfixed); libdecl;
  TglEvalCoord2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglEvalMapsNV = procedure (target: GLenum; mode: GLenum); libdecl;
  TglEvalMesh1 = procedure (mode: GLenum; i1: GLint; i2: GLint); libdecl;
  TglEvalMesh2 = procedure (mode: GLenum; i1: GLint; i2: GLint; j1: GLint; j2: GLint); libdecl;
  TglEvalPoint1 = procedure (i: GLint); libdecl;
  TglEvalPoint2 = procedure (i: GLint; j: GLint); libdecl;
  TglEvaluateDepthValuesARB = procedure; libdecl;
  TglExecuteProgramNV = procedure (target: GLenum; id: GLuint; const params: PGLfloat); libdecl;
  TglExtGetBufferPointervQCOM = procedure (target: GLenum; params: PPointer); libdecl;
  TglExtGetBuffersQCOM = procedure (buffers: PGLuint; maxBuffers: GLint; numBuffers: PGLint); libdecl;
  TglExtGetFramebuffersQCOM = procedure (framebuffers: PGLuint; maxFramebuffers: GLint; numFramebuffers: PGLint); libdecl;
  TglExtGetProgramBinarySourceQCOM = procedure (_program: GLuint; shadertype: GLenum; source: PGLchar; length: PGLint); libdecl;
  TglExtGetProgramsQCOM = procedure (programs: PGLuint; maxPrograms: GLint; numPrograms: PGLint); libdecl;
  TglExtGetRenderbuffersQCOM = procedure (renderbuffers: PGLuint; maxRenderbuffers: GLint; numRenderbuffers: PGLint); libdecl;
  TglExtGetShadersQCOM = procedure (shaders: PGLuint; maxShaders: GLint; numShaders: PGLint); libdecl;
  TglExtGetTexLevelParameterivQCOM = procedure (texture: GLuint; face: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglExtGetTexSubImageQCOM = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; texels: Pointer); libdecl;
  TglExtGetTexturesQCOM = procedure (textures: PGLuint; maxTextures: GLint; numTextures: PGLint); libdecl;
  TglExtIsProgramBinaryQCOM = function (_program: GLuint): GLboolean; libdecl;
  TglExtTexObjectStateOverrideiQCOM = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglExtractComponentEXT = procedure (res: GLuint; src: GLuint; num: GLuint); libdecl;
  TglFeedbackBuffer = procedure (size: GLsizei; _type: GLenum; buffer: PGLfloat); libdecl;
  TglFeedbackBufferxOES = procedure (n: GLsizei; _type: GLenum; const buffer: PGLfixed); libdecl;
  TglFenceSync = function (condition: GLenum; flags: GLbitfield): GLsync; libdecl;
  TglFenceSyncAPPLE = function (condition: GLenum; flags: GLbitfield): GLsync; libdecl;
  TglFinalCombinerInputNV = procedure (variable: GLenum; input: GLenum; mapping: GLenum; componentUsage: GLenum); libdecl;
  TglFinish = procedure; libdecl;
  TglFinishAsyncSGIX = function (markerp: PGLuint): GLint; libdecl;
  TglFinishFenceAPPLE = procedure (fence: GLuint); libdecl;
  TglFinishFenceNV = procedure (fence: GLuint); libdecl;
  TglFinishObjectAPPLE = procedure (_object: GLenum; name: GLint); libdecl;
  TglFinishTextureSUNX = procedure; libdecl;
  TglFlush = procedure; libdecl;
  TglFlushMappedBufferRange = procedure (target: GLenum; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushMappedBufferRangeAPPLE = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglFlushMappedBufferRangeEXT = procedure (target: GLenum; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushMappedNamedBufferRange = procedure (buffer: GLuint; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushMappedNamedBufferRangeEXT = procedure (buffer: GLuint; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushPixelDataRangeNV = procedure (target: GLenum); libdecl;
  TglFlushRasterSGIX = procedure; libdecl;
  TglFlushStaticDataIBM = procedure (target: GLenum); libdecl;
  TglFlushVertexArrayRangeAPPLE = procedure (length: GLsizei; _pointer: Pointer); libdecl;
  TglFlushVertexArrayRangeNV = procedure; libdecl;
  TglFogCoordFormatNV = procedure (_type: GLenum; stride: GLsizei); libdecl;
  TglFogCoordPointer = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglFogCoordPointerEXT = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglFogCoordPointerListIBM = procedure (_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglFogCoordd = procedure (coord: GLdouble); libdecl;
  TglFogCoorddEXT = procedure (coord: GLdouble); libdecl;
  TglFogCoorddv = procedure (const coord: PGLdouble); libdecl;
  TglFogCoorddvEXT = procedure (const coord: PGLdouble); libdecl;
  TglFogCoordf = procedure (coord: GLfloat); libdecl;
  TglFogCoordfEXT = procedure (coord: GLfloat); libdecl;
  TglFogCoordfv = procedure (const coord: PGLfloat); libdecl;
  TglFogCoordfvEXT = procedure (const coord: PGLfloat); libdecl;
  TglFogCoordhNV = procedure (fog: GLhalfNV); libdecl;
  TglFogCoordhvNV = procedure (const fog: PGLhalfNV); libdecl;
  TglFogFuncSGIS = procedure (n: GLsizei; const points: PGLfloat); libdecl;
  TglFogf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglFogfv = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglFogi = procedure (pname: GLenum; param: GLint); libdecl;
  TglFogiv = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglFogx = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglFogxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglFogxv = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglFogxvOES = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglFragmentColorMaterialSGIX = procedure (face: GLenum; mode: GLenum); libdecl;
  TglFragmentCoverageColorNV = procedure (color: GLuint); libdecl;
  TglFragmentLightModelfSGIX = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglFragmentLightModelfvSGIX = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglFragmentLightModeliSGIX = procedure (pname: GLenum; param: GLint); libdecl;
  TglFragmentLightModelivSGIX = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglFragmentLightfSGIX = procedure (light: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglFragmentLightfvSGIX = procedure (light: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglFragmentLightiSGIX = procedure (light: GLenum; pname: GLenum; param: GLint); libdecl;
  TglFragmentLightivSGIX = procedure (light: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglFragmentMaterialfSGIX = procedure (face: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglFragmentMaterialfvSGIX = procedure (face: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglFragmentMaterialiSGIX = procedure (face: GLenum; pname: GLenum; param: GLint); libdecl;
  TglFragmentMaterialivSGIX = procedure (face: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglFrameTerminatorGREMEDY = procedure; libdecl;
  TglFrameZoomSGIX = procedure (factor: GLint); libdecl;
  TglFramebufferDrawBufferEXT = procedure (framebuffer: GLuint; mode: GLenum); libdecl;
  TglFramebufferDrawBuffersEXT = procedure (framebuffer: GLuint; n: GLsizei; const bufs: PGLenum); libdecl;
  TglFramebufferFetchBarrierEXT = procedure; libdecl;
  TglFramebufferFetchBarrierQCOM = procedure; libdecl;
  TglFramebufferFoveationConfigQCOM = procedure (framebuffer: GLuint; numLayers: GLuint; focalPointsPerLayer: GLuint; requestedFeatures: GLuint; providedFeatures: PGLuint); libdecl;
  TglFramebufferFoveationParametersQCOM = procedure (framebuffer: GLuint; layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat; gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat); libdecl;
  TglFramebufferParameteri = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglFramebufferPixelLocalStorageSizeEXT = procedure (target: GLuint; size: GLsizei); libdecl;
  TglFramebufferReadBufferEXT = procedure (framebuffer: GLuint; mode: GLenum); libdecl;
  TglFramebufferRenderbuffer = procedure (target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglFramebufferRenderbufferEXT = procedure (target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglFramebufferRenderbufferOES = procedure (target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglFramebufferSampleLocationsfvARB = procedure (target: GLenum; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglFramebufferSampleLocationsfvNV = procedure (target: GLenum; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglFramebufferSamplePositionsfvAMD = procedure (target: GLenum; numsamples: GLuint; pixelindex: GLuint; const values: PGLfloat); libdecl;
  TglFramebufferShadingRateEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; baseLayer: GLint; numLayers: GLsizei; texelWidth: GLsizei; texelHeight: GLsizei); libdecl;
  TglFramebufferTexture = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture1D = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture1DEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture2D = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture2DEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture2DDownsampleIMG = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; xscale: GLint; yscale: GLint); libdecl;
  TglFramebufferTexture2DMultisampleEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; samples: GLsizei); libdecl;
  TglFramebufferTexture2DMultisampleIMG = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; samples: GLsizei); libdecl;
  TglFramebufferTexture2DOES = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture3D = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglFramebufferTexture3DEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglFramebufferTexture3DOES = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglFramebufferTextureARB = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTextureEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTextureFaceARB = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum); libdecl;
  TglFramebufferTextureFaceEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum); libdecl;
  TglFramebufferTextureLayer = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglFramebufferTextureLayerARB = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglFramebufferTextureLayerEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglFramebufferTextureLayerDownsampleIMG = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint; xscale: GLint; yscale: GLint); libdecl;
  TglFramebufferTextureMultisampleMultiviewOVR = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; samples: GLsizei; baseViewIndex: GLint; numViews: GLsizei); libdecl;
  TglFramebufferTextureMultiviewOVR = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; baseViewIndex: GLint; numViews: GLsizei); libdecl;
  TglFramebufferTextureOES = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFreeObjectBufferATI = procedure (buffer: GLuint); libdecl;
  TglFrontFace = procedure (mode: GLenum); libdecl;
  TglFrustum = procedure (left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglFrustumf = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglFrustumfOES = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglFrustumx = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglFrustumxOES = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglGenAsyncMarkersSGIX = function (range: GLsizei): GLuint; libdecl;
  TglGenBuffers = procedure (n: GLsizei; buffers: PGLuint); libdecl;
  TglGenBuffersARB = procedure (n: GLsizei; buffers: PGLuint); libdecl;
  TglGenFencesAPPLE = procedure (n: GLsizei; fences: PGLuint); libdecl;
  TglGenFencesNV = procedure (n: GLsizei; fences: PGLuint); libdecl;
  TglGenFragmentShadersATI = function (range: GLuint): GLuint; libdecl;
  TglGenFramebuffers = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglGenFramebuffersEXT = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglGenFramebuffersOES = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglGenLists = function (range: GLsizei): GLuint; libdecl;
  TglGenNamesAMD = procedure (identifier: GLenum; num: GLuint; names: PGLuint); libdecl;
  TglGenOcclusionQueriesNV = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenPathsNV = function (range: GLsizei): GLuint; libdecl;
  TglGenPerfMonitorsAMD = procedure (n: GLsizei; monitors: PGLuint); libdecl;
  TglGenProgramPipelines = procedure (n: GLsizei; pipelines: PGLuint); libdecl;
  TglGenProgramPipelinesEXT = procedure (n: GLsizei; pipelines: PGLuint); libdecl;
  TglGenProgramsARB = procedure (n: GLsizei; programs: PGLuint); libdecl;
  TglGenProgramsNV = procedure (n: GLsizei; programs: PGLuint); libdecl;
  TglGenQueries = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenQueriesARB = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenQueriesEXT = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenQueryResourceTagNV = procedure (n: GLsizei; tagIds: PGLint); libdecl;
  TglGenRenderbuffers = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglGenRenderbuffersEXT = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglGenRenderbuffersOES = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglGenSamplers = procedure (count: GLsizei; samplers: PGLuint); libdecl;
  TglGenSemaphoresEXT = procedure (n: GLsizei; semaphores: PGLuint); libdecl;
  TglGenSymbolsEXT = function (datatype: GLenum; storagetype: GLenum; range: GLenum; components: GLuint): GLuint; libdecl;
  TglGenTextures = procedure (n: GLsizei; textures: PGLuint); libdecl;
  TglGenTexturesEXT = procedure (n: GLsizei; textures: PGLuint); libdecl;
  TglGenTransformFeedbacks = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenTransformFeedbacksNV = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenVertexArrays = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglGenVertexArraysAPPLE = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglGenVertexArraysOES = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglGenVertexShadersEXT = function (range: GLuint): GLuint; libdecl;
  TglGenerateMipmap = procedure (target: GLenum); libdecl;
  TglGenerateMipmapEXT = procedure (target: GLenum); libdecl;
  TglGenerateMipmapOES = procedure (target: GLenum); libdecl;
  TglGenerateMultiTexMipmapEXT = procedure (texunit: GLenum; target: GLenum); libdecl;
  TglGenerateTextureMipmap = procedure (texture: GLuint); libdecl;
  TglGenerateTextureMipmapEXT = procedure (texture: GLuint; target: GLenum); libdecl;
  TglGetActiveAtomicCounterBufferiv = procedure (_program: GLuint; bufferIndex: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetActiveAttrib = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLchar); libdecl;
  TglGetActiveAttribARB = procedure (programObj: GLhandleARB; index: GLuint; maxLength: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLcharARB); libdecl;
  TglGetActiveSubroutineName = procedure (_program: GLuint; shadertype: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar); libdecl;
  TglGetActiveSubroutineUniformName = procedure (_program: GLuint; shadertype: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar); libdecl;
  TglGetActiveSubroutineUniformiv = procedure (_program: GLuint; shadertype: GLenum; index: GLuint; pname: GLenum; values: PGLint); libdecl;
  TglGetActiveUniform = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLchar); libdecl;
  TglGetActiveUniformARB = procedure (programObj: GLhandleARB; index: GLuint; maxLength: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLcharARB); libdecl;
  TglGetActiveUniformBlockName = procedure (_program: GLuint; uniformBlockIndex: GLuint; bufSize: GLsizei; length: PGLsizei; uniformBlockName: PGLchar); libdecl;
  TglGetActiveUniformBlockiv = procedure (_program: GLuint; uniformBlockIndex: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetActiveUniformName = procedure (_program: GLuint; uniformIndex: GLuint; bufSize: GLsizei; length: PGLsizei; uniformName: PGLchar); libdecl;
  TglGetActiveUniformsiv = procedure (_program: GLuint; uniformCount: GLsizei; const uniformIndices: PGLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetActiveVaryingNV = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar); libdecl;
  TglGetArrayObjectfvATI = procedure (_array: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetArrayObjectivATI = procedure (_array: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetAttachedObjectsARB = procedure (containerObj: GLhandleARB; maxCount: GLsizei; count: PGLsizei; obj: PGLhandleARB); libdecl;
  TglGetAttachedShaders = procedure (_program: GLuint; maxCount: GLsizei; count: PGLsizei; shaders: PGLuint); libdecl;
  TglGetAttribLocation = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetAttribLocationARB = function (programObj: GLhandleARB; const name: PGLcharARB): GLint; libdecl;
  TglGetBooleanIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLboolean); libdecl;
  TglGetBooleani_v = procedure (target: GLenum; index: GLuint; data: PGLboolean); libdecl;
  TglGetBooleanv = procedure (pname: GLenum; data: PGLboolean); libdecl;
  TglGetBufferParameteri64v = procedure (target: GLenum; pname: GLenum; params: PGLint64); libdecl;
  TglGetBufferParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetBufferParameterivARB = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetBufferParameterui64vNV = procedure (target: GLenum; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetBufferPointerv = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetBufferPointervARB = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetBufferPointervOES = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetBufferSubData = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; data: Pointer); libdecl;
  TglGetBufferSubDataARB = procedure (target: GLenum; offset: GLintptrARB; size: GLsizeiptrARB; data: Pointer); libdecl;
  TglGetClipPlane = procedure (plane: GLenum; equation: PGLdouble); libdecl;
  TglGetClipPlanef = procedure (plane: GLenum; equation: PGLfloat); libdecl;
  TglGetClipPlanefOES = procedure (plane: GLenum; equation: PGLfloat); libdecl;
  TglGetClipPlanex = procedure (plane: GLenum; equation: PGLfixed); libdecl;
  TglGetClipPlanexOES = procedure (plane: GLenum; equation: PGLfixed); libdecl;
  TglGetColorTable = procedure (target: GLenum; format: GLenum; _type: GLenum; table: Pointer); libdecl;
  TglGetColorTableEXT = procedure (target: GLenum; format: GLenum; _type: GLenum; data: Pointer); libdecl;
  TglGetColorTableParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetColorTableParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetColorTableParameterfvSGI = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetColorTableParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetColorTableParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetColorTableParameterivSGI = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetColorTableSGI = procedure (target: GLenum; format: GLenum; _type: GLenum; table: Pointer); libdecl;
  TglGetCombinerInputParameterfvNV = procedure (stage: GLenum; portion: GLenum; variable: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetCombinerInputParameterivNV = procedure (stage: GLenum; portion: GLenum; variable: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetCombinerOutputParameterfvNV = procedure (stage: GLenum; portion: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetCombinerOutputParameterivNV = procedure (stage: GLenum; portion: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetCombinerStageParameterfvNV = procedure (stage: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetCommandHeaderNV = function (tokenID: GLenum; size: GLuint): GLuint; libdecl;
  TglGetCompressedMultiTexImageEXT = procedure (texunit: GLenum; target: GLenum; lod: GLint; img: Pointer); libdecl;
  TglGetCompressedTexImage = procedure (target: GLenum; level: GLint; img: Pointer); libdecl;
  TglGetCompressedTexImageARB = procedure (target: GLenum; level: GLint; img: Pointer); libdecl;
  TglGetCompressedTextureImage = procedure (texture: GLuint; level: GLint; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetCompressedTextureImageEXT = procedure (texture: GLuint; target: GLenum; lod: GLint; img: Pointer); libdecl;
  TglGetCompressedTextureSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetConvolutionFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; image: Pointer); libdecl;
  TglGetConvolutionFilterEXT = procedure (target: GLenum; format: GLenum; _type: GLenum; image: Pointer); libdecl;
  TglGetConvolutionParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetConvolutionParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetConvolutionParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetConvolutionParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetConvolutionParameterxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetCoverageModulationTableNV = procedure (bufSize: GLsizei; v: PGLfloat); libdecl;
  TglGetDebugMessageLog = function (count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint; libdecl;
  TglGetDebugMessageLogAMD = function (count: GLuint; bufSize: GLsizei; categories: PGLenum; severities: PGLenum; ids: PGLuint; lengths: PGLsizei; _message: PGLchar): GLuint; libdecl;
  TglGetDebugMessageLogARB = function (count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint; libdecl;
  TglGetDebugMessageLogKHR = function (count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint; libdecl;
  TglGetDetailTexFuncSGIS = procedure (target: GLenum; points: PGLfloat); libdecl;
  TglGetDoubleIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLdouble); libdecl;
  TglGetDoublei_v = procedure (target: GLenum; index: GLuint; data: PGLdouble); libdecl;
  TglGetDoublei_vEXT = procedure (pname: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetDoublev = procedure (pname: GLenum; data: PGLdouble); libdecl;
  TglGetDriverControlStringQCOM = procedure (driverControl: GLuint; bufSize: GLsizei; length: PGLsizei; driverControlString: PGLchar); libdecl;
  TglGetDriverControlsQCOM = procedure (num: PGLint; size: GLsizei; driverControls: PGLuint); libdecl;
  TglGetError = function: GLenum; libdecl;
  TglGetFenceivNV = procedure (fence: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetFinalCombinerInputParameterfvNV = procedure (variable: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetFinalCombinerInputParameterivNV = procedure (variable: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFirstPerfQueryIdINTEL = procedure (queryId: PGLuint); libdecl;
  TglGetFixedv = procedure (pname: GLenum; params: PGLfixed); libdecl;
  TglGetFixedvOES = procedure (pname: GLenum; params: PGLfixed); libdecl;
  TglGetFloatIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloati_v = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloati_vEXT = procedure (pname: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetFloati_vNV = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloati_vOES = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloatv = procedure (pname: GLenum; data: PGLfloat); libdecl;
  TglGetFogFuncSGIS = procedure (points: PGLfloat); libdecl;
  TglGetFragDataIndex = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragDataIndexEXT = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragDataLocation = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragDataLocationEXT = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragmentLightfvSGIX = procedure (light: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetFragmentLightivSGIX = procedure (light: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFragmentMaterialfvSGIX = procedure (face: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetFragmentMaterialivSGIX = procedure (face: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFragmentShadingRatesEXT = procedure (samples: GLsizei; maxCount: GLsizei; count: PGLsizei; shadingRates: PGLenum); libdecl;
  TglGetFramebufferAttachmentParameteriv = procedure (target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferAttachmentParameterivEXT = procedure (target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferAttachmentParameterivOES = procedure (target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferParameterfvAMD = procedure (target: GLenum; pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: PGLfloat); libdecl;
  TglGetFramebufferParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferParameterivEXT = procedure (framebuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferPixelLocalStorageSizeEXT = function (target: GLuint): GLsizei; libdecl;
  TglGetGraphicsResetStatus = function: GLenum; libdecl;
  TglGetGraphicsResetStatusARB = function: GLenum; libdecl;
  TglGetGraphicsResetStatusEXT = function: GLenum; libdecl;
  TglGetGraphicsResetStatusKHR = function: GLenum; libdecl;
  TglGetHandleARB = function (pname: GLenum): GLhandleARB; libdecl;
  TglGetHistogram = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetHistogramEXT = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetHistogramParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetHistogramParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetHistogramParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetHistogramParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetHistogramParameterxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetImageHandleARB = function (texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; format: GLenum): GLuint64; libdecl;
  TglGetImageHandleNV = function (texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; format: GLenum): GLuint64; libdecl;
  TglGetImageTransformParameterfvHP = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetImageTransformParameterivHP = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetInfoLogARB = procedure (obj: GLhandleARB; maxLength: GLsizei; length: PGLsizei; infoLog: PGLcharARB); libdecl;
  TglGetInstrumentsSGIX = function: GLint; libdecl;
  TglGetInteger64i_v = procedure (target: GLenum; index: GLuint; data: PGLint64); libdecl;
  TglGetInteger64v = procedure (pname: GLenum; data: PGLint64); libdecl;
  TglGetInteger64vAPPLE = procedure (pname: GLenum; params: PGLint64); libdecl;
  TglGetInteger64vEXT = procedure (pname: GLenum; data: PGLint64); libdecl;
  TglGetIntegerIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLint); libdecl;
  TglGetIntegeri_v = procedure (target: GLenum; index: GLuint; data: PGLint); libdecl;
  TglGetIntegeri_vEXT = procedure (target: GLenum; index: GLuint; data: PGLint); libdecl;
  TglGetIntegerui64i_vNV = procedure (value: GLenum; index: GLuint; result: PGLuint64EXT); libdecl;
  TglGetIntegerui64vNV = procedure (value: GLenum; result: PGLuint64EXT); libdecl;
  TglGetIntegerv = procedure (pname: GLenum; data: PGLint); libdecl;
  TglGetInternalformatSampleivNV = procedure (target: GLenum; internalformat: GLenum; samples: GLsizei; pname: GLenum; count: GLsizei; params: PGLint); libdecl;
  TglGetInternalformati64v = procedure (target: GLenum; internalformat: GLenum; pname: GLenum; count: GLsizei; params: PGLint64); libdecl;
  TglGetInternalformativ = procedure (target: GLenum; internalformat: GLenum; pname: GLenum; count: GLsizei; params: PGLint); libdecl;
  TglGetInvariantBooleanvEXT = procedure (id: GLuint; value: GLenum; data: PGLboolean); libdecl;
  TglGetInvariantFloatvEXT = procedure (id: GLuint; value: GLenum; data: PGLfloat); libdecl;
  TglGetInvariantIntegervEXT = procedure (id: GLuint; value: GLenum; data: PGLint); libdecl;
  TglGetLightfv = procedure (light: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetLightiv = procedure (light: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetLightxOES = procedure (light: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetLightxv = procedure (light: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetLightxvOES = procedure (light: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetListParameterfvSGIX = procedure (list: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetListParameterivSGIX = procedure (list: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetLocalConstantBooleanvEXT = procedure (id: GLuint; value: GLenum; data: PGLboolean); libdecl;
  TglGetLocalConstantFloatvEXT = procedure (id: GLuint; value: GLenum; data: PGLfloat); libdecl;
  TglGetLocalConstantIntegervEXT = procedure (id: GLuint; value: GLenum; data: PGLint); libdecl;
  TglGetMapAttribParameterfvNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMapAttribParameterivNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetMapControlPointsNV = procedure (target: GLenum; index: GLuint; _type: GLenum; ustride: GLsizei; vstride: GLsizei; _packed: GLboolean; points: Pointer); libdecl;
  TglGetMapParameterfvNV = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMapParameterivNV = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMapdv = procedure (target: GLenum; query: GLenum; v: PGLdouble); libdecl;
  TglGetMapfv = procedure (target: GLenum; query: GLenum; v: PGLfloat); libdecl;
  TglGetMapiv = procedure (target: GLenum; query: GLenum; v: PGLint); libdecl;
  TglGetMapxvOES = procedure (target: GLenum; query: GLenum; v: PGLfixed); libdecl;
  TglGetMaterialfv = procedure (face: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMaterialiv = procedure (face: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMaterialxOES = procedure (face: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglGetMaterialxv = procedure (face: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetMaterialxvOES = procedure (face: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetMemoryObjectDetachedResourcesuivNV = procedure (memory: GLuint; pname: GLenum; first: GLint; count: GLsizei; params: PGLuint); libdecl;
  TglGetMemoryObjectParameterivEXT = procedure (memoryObject: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetMinmax = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetMinmaxEXT = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetMinmaxParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMinmaxParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMinmaxParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMinmaxParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexEnvfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexEnvivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexGendvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLdouble); libdecl;
  TglGetMultiTexGenfvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexGenivEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexImageEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglGetMultiTexLevelParameterfvEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexLevelParameterivEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexParameterIivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexParameterIuivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetMultiTexParameterfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexParameterivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultisamplefv = procedure (pname: GLenum; index: GLuint; val: PGLfloat); libdecl;
  TglGetMultisamplefvNV = procedure (pname: GLenum; index: GLuint; val: PGLfloat); libdecl;
  TglGetNamedBufferParameteri64v = procedure (buffer: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglGetNamedBufferParameteriv = procedure (buffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedBufferParameterivEXT = procedure (buffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedBufferParameterui64vNV = procedure (buffer: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetNamedBufferPointerv = procedure (buffer: GLuint; pname: GLenum; params: PPointer); libdecl;
  TglGetNamedBufferPointervEXT = procedure (buffer: GLuint; pname: GLenum; params: PPointer); libdecl;
  TglGetNamedBufferSubData = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: Pointer); libdecl;
  TglGetNamedBufferSubDataEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: Pointer); libdecl;
  TglGetNamedFramebufferParameterfvAMD = procedure (framebuffer: GLuint; pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: PGLfloat); libdecl;
  TglGetNamedFramebufferAttachmentParameteriv = procedure (framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedFramebufferAttachmentParameterivEXT = procedure (framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedFramebufferParameteriv = procedure (framebuffer: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetNamedFramebufferParameterivEXT = procedure (framebuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedProgramLocalParameterIivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLint); libdecl;
  TglGetNamedProgramLocalParameterIuivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLuint); libdecl;
  TglGetNamedProgramLocalParameterdvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetNamedProgramLocalParameterfvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetNamedProgramStringEXT = procedure (_program: GLuint; target: GLenum; pname: GLenum; _string: Pointer); libdecl;
  TglGetNamedProgramivEXT = procedure (_program: GLuint; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedRenderbufferParameteriv = procedure (renderbuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedRenderbufferParameterivEXT = procedure (renderbuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedStringARB = procedure (namelen: GLint; const name: PGLchar; bufSize: GLsizei; stringlen: PGLint; _string: PGLchar); libdecl;
  TglGetNamedStringivARB = procedure (namelen: GLint; const name: PGLchar; pname: GLenum; params: PGLint); libdecl;
  TglGetNextPerfQueryIdINTEL = procedure (queryId: GLuint; nextQueryId: PGLuint); libdecl;
  TglGetObjectBufferfvATI = procedure (buffer: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetObjectBufferivATI = procedure (buffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetObjectLabel = procedure (identifier: GLenum; name: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectLabelEXT = procedure (_type: GLenum; _object: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectLabelKHR = procedure (identifier: GLenum; name: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectParameterfvARB = procedure (obj: GLhandleARB; pname: GLenum; params: PGLfloat); libdecl;
  TglGetObjectParameterivAPPLE = procedure (objectType: GLenum; name: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetObjectParameterivARB = procedure (obj: GLhandleARB; pname: GLenum; params: PGLint); libdecl;
  TglGetObjectPtrLabel = procedure (const ptr: Pointer; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectPtrLabelKHR = procedure (const ptr: Pointer; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetOcclusionQueryivNV = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetOcclusionQueryuivNV = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetPathColorGenfvNV = procedure (color: GLenum; pname: GLenum; value: PGLfloat); libdecl;
  TglGetPathColorGenivNV = procedure (color: GLenum; pname: GLenum; value: PGLint); libdecl;
  TglGetPathCommandsNV = procedure (path: GLuint; commands: PGLubyte); libdecl;
  TglGetPathCoordsNV = procedure (path: GLuint; coords: PGLfloat); libdecl;
  TglGetPathDashArrayNV = procedure (path: GLuint; dashArray: PGLfloat); libdecl;
  TglGetPathLengthNV = function (path: GLuint; startSegment: GLsizei; numSegments: GLsizei): GLfloat; libdecl;
  TglGetPathMetricRangeNV = procedure (metricQueryMask: GLbitfield; firstPathName: GLuint; numPaths: GLsizei; stride: GLsizei; metrics: PGLfloat); libdecl;
  TglGetPathMetricsNV = procedure (metricQueryMask: GLbitfield; numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; stride: GLsizei; metrics: PGLfloat); libdecl;
  TglGetPathParameterfvNV = procedure (path: GLuint; pname: GLenum; value: PGLfloat); libdecl;
  TglGetPathParameterivNV = procedure (path: GLuint; pname: GLenum; value: PGLint); libdecl;
  TglGetPathSpacingNV = procedure (pathListMode: GLenum; numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; advanceScale: GLfloat; kerningScale: GLfloat; transformType: GLenum; returnedSpacing: PGLfloat); libdecl;
  TglGetPathTexGenfvNV = procedure (texCoordSet: GLenum; pname: GLenum; value: PGLfloat); libdecl;
  TglGetPathTexGenivNV = procedure (texCoordSet: GLenum; pname: GLenum; value: PGLint); libdecl;
  TglGetPerfCounterInfoINTEL = procedure (queryId: GLuint; counterId: GLuint; counterNameLength: GLuint; counterName: PGLchar; counterDescLength: GLuint; counterDesc: PGLchar; counterOffset: PGLuint; counterDataSize: PGLuint; counterTypeEnum: PGLuint; counterDataTypeEnum: PGLuint; rawCounterMaxValue: PGLuint64); libdecl;
  TglGetPerfMonitorCounterDataAMD = procedure (monitor: GLuint; pname: GLenum; dataSize: GLsizei; data: PGLuint; bytesWritten: PGLint); libdecl;
  TglGetPerfMonitorCounterInfoAMD = procedure (group: GLuint; counter: GLuint; pname: GLenum; data: Pointer); libdecl;
  TglGetPerfMonitorCounterStringAMD = procedure (group: GLuint; counter: GLuint; bufSize: GLsizei; length: PGLsizei; counterString: PGLchar); libdecl;
  TglGetPerfMonitorCountersAMD = procedure (group: GLuint; numCounters: PGLint; maxActiveCounters: PGLint; counterSize: GLsizei; counters: PGLuint); libdecl;
  TglGetPerfMonitorGroupStringAMD = procedure (group: GLuint; bufSize: GLsizei; length: PGLsizei; groupString: PGLchar); libdecl;
  TglGetPerfMonitorGroupsAMD = procedure (numGroups: PGLint; groupsSize: GLsizei; groups: PGLuint); libdecl;
  TglGetPerfQueryDataINTEL = procedure (queryHandle: GLuint; flags: GLuint; dataSize: GLsizei; data: Pointer; bytesWritten: PGLuint); libdecl;
  TglGetPerfQueryIdByNameINTEL = procedure (queryName: PGLchar; queryId: PGLuint); libdecl;
  TglGetPerfQueryInfoINTEL = procedure (queryId: GLuint; queryNameLength: GLuint; queryName: PGLchar; dataSize: PGLuint; noCounters: PGLuint; noInstances: PGLuint; capsMask: PGLuint); libdecl;
  TglGetPixelMapfv = procedure (map: GLenum; values: PGLfloat); libdecl;
  TglGetPixelMapuiv = procedure (map: GLenum; values: PGLuint); libdecl;
  TglGetPixelMapusv = procedure (map: GLenum; values: PGLushort); libdecl;
  TglGetPixelMapxv = procedure (map: GLenum; size: GLint; values: PGLfixed); libdecl;
  TglGetPixelTexGenParameterfvSGIS = procedure (pname: GLenum; params: PGLfloat); libdecl;
  TglGetPixelTexGenParameterivSGIS = procedure (pname: GLenum; params: PGLint); libdecl;
  TglGetPixelTransformParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetPixelTransformParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetPointerIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PPointer); libdecl;
  TglGetPointeri_vEXT = procedure (pname: GLenum; index: GLuint; params: PPointer); libdecl;
  TglGetPointerv = procedure (pname: GLenum; params: PPointer); libdecl;
  TglGetPointervEXT = procedure (pname: GLenum; params: PPointer); libdecl;
  TglGetPointervKHR = procedure (pname: GLenum; params: PPointer); libdecl;
  TglGetPolygonStipple = procedure (mask: PGLubyte); libdecl;
  TglGetProgramBinary = procedure (_program: GLuint; bufSize: GLsizei; length: PGLsizei; binaryFormat: PGLenum; binary: Pointer); libdecl;
  TglGetProgramBinaryOES = procedure (_program: GLuint; bufSize: GLsizei; length: PGLsizei; binaryFormat: PGLenum; binary: Pointer); libdecl;
  TglGetProgramEnvParameterIivNV = procedure (target: GLenum; index: GLuint; params: PGLint); libdecl;
  TglGetProgramEnvParameterIuivNV = procedure (target: GLenum; index: GLuint; params: PGLuint); libdecl;
  TglGetProgramEnvParameterdvARB = procedure (target: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetProgramEnvParameterfvARB = procedure (target: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetProgramInfoLog = procedure (_program: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetProgramInterfaceiv = procedure (_program: GLuint; programInterface: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramLocalParameterIivNV = procedure (target: GLenum; index: GLuint; params: PGLint); libdecl;
  TglGetProgramLocalParameterIuivNV = procedure (target: GLenum; index: GLuint; params: PGLuint); libdecl;
  TglGetProgramLocalParameterdvARB = procedure (target: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetProgramLocalParameterfvARB = procedure (target: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetProgramNamedParameterdvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; params: PGLdouble); libdecl;
  TglGetProgramNamedParameterfvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; params: PGLfloat); libdecl;
  TglGetProgramParameterdvNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetProgramParameterfvNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetProgramPipelineInfoLog = procedure (pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetProgramPipelineInfoLogEXT = procedure (pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetProgramPipelineiv = procedure (pipeline: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramPipelineivEXT = procedure (pipeline: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramResourceIndex = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLuint; libdecl;
  TglGetProgramResourceLocation = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetProgramResourceLocationIndex = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetProgramResourceLocationIndexEXT = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetProgramResourceName = procedure (_program: GLuint; programInterface: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar); libdecl;
  TglGetProgramResourcefvNV = procedure (_program: GLuint; programInterface: GLenum; index: GLuint; propCount: GLsizei; const props: PGLenum; count: GLsizei; length: PGLsizei; params: PGLfloat); libdecl;
  TglGetProgramResourceiv = procedure (_program: GLuint; programInterface: GLenum; index: GLuint; propCount: GLsizei; const props: PGLenum; count: GLsizei; length: PGLsizei; params: PGLint); libdecl;
  TglGetProgramStageiv = procedure (_program: GLuint; shadertype: GLenum; pname: GLenum; values: PGLint); libdecl;
  TglGetProgramStringARB = procedure (target: GLenum; pname: GLenum; _string: Pointer); libdecl;
  TglGetProgramStringNV = procedure (id: GLuint; pname: GLenum; _program: PGLubyte); libdecl;
  TglGetProgramSubroutineParameteruivNV = procedure (target: GLenum; index: GLuint; param: PGLuint); libdecl;
  TglGetProgramiv = procedure (_program: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramivARB = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramivNV = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryBufferObjecti64v = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryBufferObjectiv = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryBufferObjectui64v = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryBufferObjectuiv = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryIndexediv = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjecti64v = procedure (id: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglGetQueryObjecti64vEXT = procedure (id: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglGetQueryObjectiv = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjectivARB = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjectivEXT = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjectui64v = procedure (id: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglGetQueryObjectui64vEXT = procedure (id: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglGetQueryObjectuiv = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetQueryObjectuivARB = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetQueryObjectuivEXT = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetQueryiv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryivARB = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetRenderbufferParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetRenderbufferParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetRenderbufferParameterivOES = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIiv = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIivEXT = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIivOES = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIuiv = procedure (sampler: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetSamplerParameterIuivEXT = procedure (sampler: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetSamplerParameterIuivOES = procedure (sampler: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetSamplerParameterfv = procedure (sampler: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetSamplerParameteriv = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSemaphoreParameterivNV = procedure (semaphore: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSemaphoreParameterui64vEXT = procedure (semaphore: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglGetSeparableFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; row: Pointer; column: Pointer; span: Pointer); libdecl;
  TglGetSeparableFilterEXT = procedure (target: GLenum; format: GLenum; _type: GLenum; row: Pointer; column: Pointer; span: Pointer); libdecl;
  TglGetShaderInfoLog = procedure (shader: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetShaderPrecisionFormat = procedure (shadertype: GLenum; precisiontype: GLenum; range: PGLint; precision: PGLint); libdecl;
  TglGetShaderSource = procedure (shader: GLuint; bufSize: GLsizei; length: PGLsizei; source: PGLchar); libdecl;
  TglGetShaderSourceARB = procedure (obj: GLhandleARB; maxLength: GLsizei; length: PGLsizei; source: PGLcharARB); libdecl;
  TglGetShaderiv = procedure (shader: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetShadingRateImagePaletteNV = procedure (viewport: GLuint; entry: GLuint; rate: PGLenum); libdecl;
  TglGetShadingRateSampleLocationivNV = procedure (rate: GLenum; samples: GLuint; index: GLuint; location: PGLint); libdecl;
  TglGetSharpenTexFuncSGIS = procedure (target: GLenum; points: PGLfloat); libdecl;
  TglGetStageIndexNV = function (shadertype: GLenum): GLushort; libdecl;
  TglGetString = function (name: GLenum): PGLubyte; libdecl;
  TglGetStringi = function (name: GLenum; index: GLuint): PGLubyte; libdecl;
  TglGetSubroutineIndex = function (_program: GLuint; shadertype: GLenum; const name: PGLchar): GLuint; libdecl;
  TglGetSubroutineUniformLocation = function (_program: GLuint; shadertype: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetSynciv = procedure (sync: GLsync; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint); libdecl;
  TglGetSyncivAPPLE = procedure (sync: GLsync; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint); libdecl;
  TglGetTexBumpParameterfvATI = procedure (pname: GLenum; param: PGLfloat); libdecl;
  TglGetTexBumpParameterivATI = procedure (pname: GLenum; param: PGLint); libdecl;
  TglGetTexEnvfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexEnviv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexEnvxv = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexEnvxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexFilterFuncSGIS = procedure (target: GLenum; filter: GLenum; weights: PGLfloat); libdecl;
  TglGetTexGendv = procedure (coord: GLenum; pname: GLenum; params: PGLdouble); libdecl;
  TglGetTexGenfv = procedure (coord: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexGenfvOES = procedure (coord: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexGeniv = procedure (coord: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexGenivOES = procedure (coord: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexGenxvOES = procedure (coord: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexImage = procedure (target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglGetTexLevelParameterfv = procedure (target: GLenum; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexLevelParameteriv = procedure (target: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetTexLevelParameterxvOES = procedure (target: GLenum; level: GLint; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexParameterIiv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterIivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterIivOES = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterIuiv = procedure (target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTexParameterIuivEXT = procedure (target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTexParameterIuivOES = procedure (target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTexParameterPointervAPPLE = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetTexParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterxv = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexParameterxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTextureHandleARB = function (texture: GLuint): GLuint64; libdecl;
  TglGetTextureHandleIMG = function (texture: GLuint): GLuint64; libdecl;
  TglGetTextureHandleNV = function (texture: GLuint): GLuint64; libdecl;
  TglGetTextureImage = procedure (texture: GLuint; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetTextureImageEXT = procedure (texture: GLuint; target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglGetTextureLevelParameterfv = procedure (texture: GLuint; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureLevelParameterfvEXT = procedure (texture: GLuint; target: GLenum; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureLevelParameteriv = procedure (texture: GLuint; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureLevelParameterivEXT = procedure (texture: GLuint; target: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterIiv = procedure (texture: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterIivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterIuiv = procedure (texture: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetTextureParameterIuivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTextureParameterfv = procedure (texture: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureParameterfvEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureParameteriv = procedure (texture: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureSamplerHandleARB = function (texture: GLuint; sampler: GLuint): GLuint64; libdecl;
  TglGetTextureSamplerHandleIMG = function (texture: GLuint; sampler: GLuint): GLuint64; libdecl;
  TglGetTextureSamplerHandleNV = function (texture: GLuint; sampler: GLuint): GLuint64; libdecl;
  TglGetTextureSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetTrackMatrixivNV = procedure (target: GLenum; address: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetTransformFeedbackVarying = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar); libdecl;
  TglGetTransformFeedbackVaryingEXT = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar); libdecl;
  TglGetTransformFeedbackVaryingNV = procedure (_program: GLuint; index: GLuint; location: PGLint); libdecl;
  TglGetTransformFeedbacki64_v = procedure (xfb: GLuint; pname: GLenum; index: GLuint; param: PGLint64); libdecl;
  TglGetTransformFeedbacki_v = procedure (xfb: GLuint; pname: GLenum; index: GLuint; param: PGLint); libdecl;
  TglGetTransformFeedbackiv = procedure (xfb: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetTranslatedShaderSourceANGLE = procedure (shader: GLuint; bufSize: GLsizei; length: PGLsizei; source: PGLchar); libdecl;
  TglGetUniformBlockIndex = function (_program: GLuint; const uniformBlockName: PGLchar): GLuint; libdecl;
  TglGetUniformBufferSizeEXT = function (_program: GLuint; location: GLint): GLint; libdecl;
  TglGetUniformIndices = procedure (_program: GLuint; uniformCount: GLsizei; const uniformNames: PPGLchar; uniformIndices: PGLuint); libdecl;
  TglGetUniformLocation = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetUniformLocationARB = function (programObj: GLhandleARB; const name: PGLcharARB): GLint; libdecl;
  TglGetUniformOffsetEXT = function (_program: GLuint; location: GLint): GLintptr; libdecl;
  TglGetUniformSubroutineuiv = procedure (shadertype: GLenum; location: GLint; params: PGLuint); libdecl;
  TglGetUniformdv = procedure (_program: GLuint; location: GLint; params: PGLdouble); libdecl;
  TglGetUniformfv = procedure (_program: GLuint; location: GLint; params: PGLfloat); libdecl;
  TglGetUniformfvARB = procedure (programObj: GLhandleARB; location: GLint; params: PGLfloat); libdecl;
  TglGetUniformi64vARB = procedure (_program: GLuint; location: GLint; params: PGLint64); libdecl;
  TglGetUniformi64vNV = procedure (_program: GLuint; location: GLint; params: PGLint64EXT); libdecl;
  TglGetUniformiv = procedure (_program: GLuint; location: GLint; params: PGLint); libdecl;
  TglGetUniformivARB = procedure (programObj: GLhandleARB; location: GLint; params: PGLint); libdecl;
  TglGetUniformui64vARB = procedure (_program: GLuint; location: GLint; params: PGLuint64); libdecl;
  TglGetUniformui64vNV = procedure (_program: GLuint; location: GLint; params: PGLuint64EXT); libdecl;
  TglGetUniformuiv = procedure (_program: GLuint; location: GLint; params: PGLuint); libdecl;
  TglGetUniformuivEXT = procedure (_program: GLuint; location: GLint; params: PGLuint); libdecl;
  TglGetUnsignedBytevEXT = procedure (pname: GLenum; data: PGLubyte); libdecl;
  TglGetUnsignedBytei_vEXT = procedure (target: GLenum; index: GLuint; data: PGLubyte); libdecl;
  TglGetVariantArrayObjectfvATI = procedure (id: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVariantArrayObjectivATI = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVariantBooleanvEXT = procedure (id: GLuint; value: GLenum; data: PGLboolean); libdecl;
  TglGetVariantFloatvEXT = procedure (id: GLuint; value: GLenum; data: PGLfloat); libdecl;
  TglGetVariantIntegervEXT = procedure (id: GLuint; value: GLenum; data: PGLint); libdecl;
  TglGetVariantPointervEXT = procedure (id: GLuint; value: GLenum; data: PPointer); libdecl;
  TglGetVaryingLocationNV = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetVertexArrayIndexed64iv = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint64); libdecl;
  TglGetVertexArrayIndexediv = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexArrayIntegeri_vEXT = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexArrayIntegervEXT = procedure (vaobj: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexArrayPointeri_vEXT = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PPointer); libdecl;
  TglGetVertexArrayPointervEXT = procedure (vaobj: GLuint; pname: GLenum; param: PPointer); libdecl;
  TglGetVertexArrayiv = procedure (vaobj: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexAttribArrayObjectfvATI = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribArrayObjectivATI = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribIiv = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribIivEXT = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribIuiv = procedure (index: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetVertexAttribIuivEXT = procedure (index: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetVertexAttribLdv = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribLdvEXT = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribLi64vNV = procedure (index: GLuint; pname: GLenum; params: PGLint64EXT); libdecl;
  TglGetVertexAttribLui64vARB = procedure (index: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetVertexAttribLui64vNV = procedure (index: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetVertexAttribPointerv = procedure (index: GLuint; pname: GLenum; _pointer: PPointer); libdecl;
  TglGetVertexAttribPointervARB = procedure (index: GLuint; pname: GLenum; _pointer: PPointer); libdecl;
  TglGetVertexAttribPointervNV = procedure (index: GLuint; pname: GLenum; _pointer: PPointer); libdecl;
  TglGetVertexAttribdv = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribdvARB = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribdvNV = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribfv = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribfvARB = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribfvNV = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribiv = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribivARB = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribivNV = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoCaptureStreamdvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVideoCaptureStreamfvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVideoCaptureStreamivNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoCaptureivNV = procedure (video_capture_slot: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoi64vNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLint64EXT); libdecl;
  TglGetVideoivNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoui64vNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetVideouivNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetnColorTable = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; table: Pointer); libdecl;
  TglGetnColorTableARB = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; table: Pointer); libdecl;
  TglGetnCompressedTexImage = procedure (target: GLenum; lod: GLint; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetnCompressedTexImageARB = procedure (target: GLenum; lod: GLint; bufSize: GLsizei; img: Pointer); libdecl;
  TglGetnConvolutionFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; image: Pointer); libdecl;
  TglGetnConvolutionFilterARB = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; image: Pointer); libdecl;
  TglGetnHistogram = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnHistogramARB = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnMapdv = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLdouble); libdecl;
  TglGetnMapdvARB = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLdouble); libdecl;
  TglGetnMapfv = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLfloat); libdecl;
  TglGetnMapfvARB = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLfloat); libdecl;
  TglGetnMapiv = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLint); libdecl;
  TglGetnMapivARB = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLint); libdecl;
  TglGetnMinmax = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnMinmaxARB = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnPixelMapfv = procedure (map: GLenum; bufSize: GLsizei; values: PGLfloat); libdecl;
  TglGetnPixelMapfvARB = procedure (map: GLenum; bufSize: GLsizei; values: PGLfloat); libdecl;
  TglGetnPixelMapuiv = procedure (map: GLenum; bufSize: GLsizei; values: PGLuint); libdecl;
  TglGetnPixelMapuivARB = procedure (map: GLenum; bufSize: GLsizei; values: PGLuint); libdecl;
  TglGetnPixelMapusv = procedure (map: GLenum; bufSize: GLsizei; values: PGLushort); libdecl;
  TglGetnPixelMapusvARB = procedure (map: GLenum; bufSize: GLsizei; values: PGLushort); libdecl;
  TglGetnPolygonStipple = procedure (bufSize: GLsizei; pattern: PGLubyte); libdecl;
  TglGetnPolygonStippleARB = procedure (bufSize: GLsizei; pattern: PGLubyte); libdecl;
  TglGetnSeparableFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; rowBufSize: GLsizei; row: Pointer; columnBufSize: GLsizei; column: Pointer; span: Pointer); libdecl;
  TglGetnSeparableFilterARB = procedure (target: GLenum; format: GLenum; _type: GLenum; rowBufSize: GLsizei; row: Pointer; columnBufSize: GLsizei; column: Pointer; span: Pointer); libdecl;
  TglGetnTexImage = procedure (target: GLenum; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetnTexImageARB = procedure (target: GLenum; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; img: Pointer); libdecl;
  TglGetnUniformdv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLdouble); libdecl;
  TglGetnUniformdvARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLdouble); libdecl;
  TglGetnUniformfv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformfvARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformfvEXT = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformfvKHR = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformi64vARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint64); libdecl;
  TglGetnUniformiv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformivARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformivEXT = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformivKHR = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformui64vARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint64); libdecl;
  TglGetnUniformuiv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint); libdecl;
  TglGetnUniformuivARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint); libdecl;
  TglGetnUniformuivKHR = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint); libdecl;
  TglGlobalAlphaFactorbSUN = procedure (factor: GLbyte); libdecl;
  TglGlobalAlphaFactordSUN = procedure (factor: GLdouble); libdecl;
  TglGlobalAlphaFactorfSUN = procedure (factor: GLfloat); libdecl;
  TglGlobalAlphaFactoriSUN = procedure (factor: GLint); libdecl;
  TglGlobalAlphaFactorsSUN = procedure (factor: GLshort); libdecl;
  TglGlobalAlphaFactorubSUN = procedure (factor: GLubyte); libdecl;
  TglGlobalAlphaFactoruiSUN = procedure (factor: GLuint); libdecl;
  TglGlobalAlphaFactorusSUN = procedure (factor: GLushort); libdecl;
  TglHint = procedure (target: GLenum; mode: GLenum); libdecl;
  TglHintPGI = procedure (target: GLenum; mode: GLint); libdecl;
  TglHistogram = procedure (target: GLenum; width: GLsizei; internalformat: GLenum; sink: GLboolean); libdecl;
  TglHistogramEXT = procedure (target: GLenum; width: GLsizei; internalformat: GLenum; sink: GLboolean); libdecl;
  TglIglooInterfaceSGIX = procedure (pname: GLenum; const params: Pointer); libdecl;
  TglImageTransformParameterfHP = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglImageTransformParameterfvHP = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglImageTransformParameteriHP = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglImageTransformParameterivHP = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglImportMemoryFdEXT = procedure (memory: GLuint; size: GLuint64; handleType: GLenum; fd: GLint); libdecl;
  TglImportMemoryWin32HandleEXT = procedure (memory: GLuint; size: GLuint64; handleType: GLenum; handle: Pointer); libdecl;
  TglImportMemoryWin32NameEXT = procedure (memory: GLuint; size: GLuint64; handleType: GLenum; const name: Pointer); libdecl;
  TglImportSemaphoreFdEXT = procedure (semaphore: GLuint; handleType: GLenum; fd: GLint); libdecl;
  TglImportSemaphoreWin32HandleEXT = procedure (semaphore: GLuint; handleType: GLenum; handle: Pointer); libdecl;
  TglImportSemaphoreWin32NameEXT = procedure (semaphore: GLuint; handleType: GLenum; const name: Pointer); libdecl;
  TglImportSyncEXT = function (external_sync_type: GLenum; external_sync: GLintptr; flags: GLbitfield): GLsync; libdecl;
  TglIndexFormatNV = procedure (_type: GLenum; stride: GLsizei); libdecl;
  TglIndexFuncEXT = procedure (func: GLenum; ref: GLclampf); libdecl;
  TglIndexMask = procedure (mask: GLuint); libdecl;
  TglIndexMaterialEXT = procedure (face: GLenum; mode: GLenum); libdecl;
  TglIndexPointer = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglIndexPointerEXT = procedure (_type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglIndexPointerListIBM = procedure (_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglIndexd = procedure (c: GLdouble); libdecl;
  TglIndexdv = procedure (const c: PGLdouble); libdecl;
  TglIndexf = procedure (c: GLfloat); libdecl;
  TglIndexfv = procedure (const c: PGLfloat); libdecl;
  TglIndexi = procedure (c: GLint); libdecl;
  TglIndexiv = procedure (const c: PGLint); libdecl;
  TglIndexs = procedure (c: GLshort); libdecl;
  TglIndexsv = procedure (const c: PGLshort); libdecl;
  TglIndexub = procedure (c: GLubyte); libdecl;
  TglIndexubv = procedure (const c: PGLubyte); libdecl;
  TglIndexxOES = procedure (component: GLfixed); libdecl;
  TglIndexxvOES = procedure (const component: PGLfixed); libdecl;
  TglInitNames = procedure; libdecl;
  TglInsertComponentEXT = procedure (res: GLuint; src: GLuint; num: GLuint); libdecl;
  TglInsertEventMarkerEXT = procedure (length: GLsizei; const marker: PGLchar); libdecl;
  TglInstrumentsBufferSGIX = procedure (size: GLsizei; buffer: PGLint); libdecl;
  TglInterleavedArrays = procedure (format: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglInterpolatePathsNV = procedure (resultPath: GLuint; pathA: GLuint; pathB: GLuint; weight: GLfloat); libdecl;
  TglInvalidateBufferData = procedure (buffer: GLuint); libdecl;
  TglInvalidateBufferSubData = procedure (buffer: GLuint; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglInvalidateFramebuffer = procedure (target: GLenum; numAttachments: GLsizei; const attachments: PGLenum); libdecl;
  TglInvalidateNamedFramebufferData = procedure (framebuffer: GLuint; numAttachments: GLsizei; const attachments: PGLenum); libdecl;
  TglInvalidateNamedFramebufferSubData = procedure (framebuffer: GLuint; numAttachments: GLsizei; const attachments: PGLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglInvalidateSubFramebuffer = procedure (target: GLenum; numAttachments: GLsizei; const attachments: PGLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglInvalidateTexImage = procedure (texture: GLuint; level: GLint); libdecl;
  TglInvalidateTexSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglIsAsyncMarkerSGIX = function (marker: GLuint): GLboolean; libdecl;
  TglIsBuffer = function (buffer: GLuint): GLboolean; libdecl;
  TglIsBufferARB = function (buffer: GLuint): GLboolean; libdecl;
  TglIsBufferResidentNV = function (target: GLenum): GLboolean; libdecl;
  TglIsCommandListNV = function (list: GLuint): GLboolean; libdecl;
  TglIsEnabled = function (cap: GLenum): GLboolean; libdecl;
  TglIsEnabledIndexedEXT = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnabledi = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnablediEXT = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnablediNV = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnablediOES = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsFenceAPPLE = function (fence: GLuint): GLboolean; libdecl;
  TglIsFenceNV = function (fence: GLuint): GLboolean; libdecl;
  TglIsFramebuffer = function (framebuffer: GLuint): GLboolean; libdecl;
  TglIsFramebufferEXT = function (framebuffer: GLuint): GLboolean; libdecl;
  TglIsFramebufferOES = function (framebuffer: GLuint): GLboolean; libdecl;
  TglIsImageHandleResidentARB = function (handle: GLuint64): GLboolean; libdecl;
  TglIsImageHandleResidentNV = function (handle: GLuint64): GLboolean; libdecl;
  TglIsList = function (list: GLuint): GLboolean; libdecl;
  TglIsMemoryObjectEXT = function (memoryObject: GLuint): GLboolean; libdecl;
  TglIsNameAMD = function (identifier: GLenum; name: GLuint): GLboolean; libdecl;
  TglIsNamedBufferResidentNV = function (buffer: GLuint): GLboolean; libdecl;
  TglIsNamedStringARB = function (namelen: GLint; const name: PGLchar): GLboolean; libdecl;
  TglIsObjectBufferATI = function (buffer: GLuint): GLboolean; libdecl;
  TglIsOcclusionQueryNV = function (id: GLuint): GLboolean; libdecl;
  TglIsPathNV = function (path: GLuint): GLboolean; libdecl;
  TglIsPointInFillPathNV = function (path: GLuint; mask: GLuint; x: GLfloat; y: GLfloat): GLboolean; libdecl;
  TglIsPointInStrokePathNV = function (path: GLuint; x: GLfloat; y: GLfloat): GLboolean; libdecl;
  TglIsProgram = function (_program: GLuint): GLboolean; libdecl;
  TglIsProgramARB = function (_program: GLuint): GLboolean; libdecl;
  TglIsProgramNV = function (id: GLuint): GLboolean; libdecl;
  TglIsProgramPipeline = function (pipeline: GLuint): GLboolean; libdecl;
  TglIsProgramPipelineEXT = function (pipeline: GLuint): GLboolean; libdecl;
  TglIsQuery = function (id: GLuint): GLboolean; libdecl;
  TglIsQueryARB = function (id: GLuint): GLboolean; libdecl;
  TglIsQueryEXT = function (id: GLuint): GLboolean; libdecl;
  TglIsRenderbuffer = function (renderbuffer: GLuint): GLboolean; libdecl;
  TglIsRenderbufferEXT = function (renderbuffer: GLuint): GLboolean; libdecl;
  TglIsRenderbufferOES = function (renderbuffer: GLuint): GLboolean; libdecl;
  TglIsSemaphoreEXT = function (semaphore: GLuint): GLboolean; libdecl;
  TglIsSampler = function (sampler: GLuint): GLboolean; libdecl;
  TglIsShader = function (shader: GLuint): GLboolean; libdecl;
  TglIsStateNV = function (state: GLuint): GLboolean; libdecl;
  TglIsSync = function (sync: GLsync): GLboolean; libdecl;
  TglIsSyncAPPLE = function (sync: GLsync): GLboolean; libdecl;
  TglIsTexture = function (texture: GLuint): GLboolean; libdecl;
  TglIsTextureEXT = function (texture: GLuint): GLboolean; libdecl;
  TglIsTextureHandleResidentARB = function (handle: GLuint64): GLboolean; libdecl;
  TglIsTextureHandleResidentNV = function (handle: GLuint64): GLboolean; libdecl;
  TglIsTransformFeedback = function (id: GLuint): GLboolean; libdecl;
  TglIsTransformFeedbackNV = function (id: GLuint): GLboolean; libdecl;
  TglIsVariantEnabledEXT = function (id: GLuint; cap: GLenum): GLboolean; libdecl;
  TglIsVertexArray = function (_array: GLuint): GLboolean; libdecl;
  TglIsVertexArrayAPPLE = function (_array: GLuint): GLboolean; libdecl;
  TglIsVertexArrayOES = function (_array: GLuint): GLboolean; libdecl;
  TglIsVertexAttribEnabledAPPLE = function (index: GLuint; pname: GLenum): GLboolean; libdecl;
  TglLGPUCopyImageSubDataNVX = procedure (sourceGpu: GLuint; destinationGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srxY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglLGPUInterlockNVX = procedure; libdecl;
  TglLGPUNamedBufferSubDataNVX = procedure (gpuMask: GLbitfield; buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglLabelObjectEXT = procedure (_type: GLenum; _object: GLuint; length: GLsizei; const _label: PGLchar); libdecl;
  TglLightEnviSGIX = procedure (pname: GLenum; param: GLint); libdecl;
  TglLightModelf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglLightModelfv = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglLightModeli = procedure (pname: GLenum; param: GLint); libdecl;
  TglLightModeliv = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglLightModelx = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglLightModelxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglLightModelxv = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglLightModelxvOES = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglLightf = procedure (light: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglLightfv = procedure (light: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglLighti = procedure (light: GLenum; pname: GLenum; param: GLint); libdecl;
  TglLightiv = procedure (light: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglLightx = procedure (light: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglLightxOES = procedure (light: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglLightxv = procedure (light: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglLightxvOES = procedure (light: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglLineStipple = procedure (factor: GLint; pattern: GLushort); libdecl;
  TglLineWidth = procedure (width: GLfloat); libdecl;
  TglLineWidthx = procedure (width: GLfixed); libdecl;
  TglLineWidthxOES = procedure (width: GLfixed); libdecl;
  TglLinkProgram = procedure (_program: GLuint); libdecl;
  TglLinkProgramARB = procedure (programObj: GLhandleARB); libdecl;
  TglListBase = procedure (base: GLuint); libdecl;
  TglListDrawCommandsStatesClientNV = procedure (list: GLuint; segment: GLuint; const indirects: PPointer; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint); libdecl;
  TglListParameterfSGIX = procedure (list: GLuint; pname: GLenum; param: GLfloat); libdecl;
  TglListParameterfvSGIX = procedure (list: GLuint; pname: GLenum; const params: PGLfloat); libdecl;
  TglListParameteriSGIX = procedure (list: GLuint; pname: GLenum; param: GLint); libdecl;
  TglListParameterivSGIX = procedure (list: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglLoadIdentity = procedure; libdecl;
  TglLoadIdentityDeformationMapSGIX = procedure (mask: GLbitfield); libdecl;
  TglLoadMatrixd = procedure (const m: PGLdouble); libdecl;
  TglLoadMatrixf = procedure (const m: PGLfloat); libdecl;
  TglLoadMatrixx = procedure (const m: PGLfixed); libdecl;
  TglLoadMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglLoadName = procedure (name: GLuint); libdecl;
  TglLoadPaletteFromModelViewMatrixOES = procedure; libdecl;
  TglLoadProgramNV = procedure (target: GLenum; id: GLuint; len: GLsizei; const _program: PGLubyte); libdecl;
  TglLoadTransposeMatrixd = procedure (const m: PGLdouble); libdecl;
  TglLoadTransposeMatrixdARB = procedure (const m: PGLdouble); libdecl;
  TglLoadTransposeMatrixf = procedure (const m: PGLfloat); libdecl;
  TglLoadTransposeMatrixfARB = procedure (const m: PGLfloat); libdecl;
  TglLoadTransposeMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglLockArraysEXT = procedure (first: GLint; count: GLsizei); libdecl;
  TglLogicOp = procedure (opcode: GLenum); libdecl;
  TglMakeBufferNonResidentNV = procedure (target: GLenum); libdecl;
  TglMakeBufferResidentNV = procedure (target: GLenum; access: GLenum); libdecl;
  TglMakeImageHandleNonResidentARB = procedure (handle: GLuint64); libdecl;
  TglMakeImageHandleNonResidentNV = procedure (handle: GLuint64); libdecl;
  TglMakeImageHandleResidentARB = procedure (handle: GLuint64; access: GLenum); libdecl;
  TglMakeImageHandleResidentNV = procedure (handle: GLuint64; access: GLenum); libdecl;
  TglMakeNamedBufferNonResidentNV = procedure (buffer: GLuint); libdecl;
  TglMakeNamedBufferResidentNV = procedure (buffer: GLuint; access: GLenum); libdecl;
  TglMakeTextureHandleNonResidentARB = procedure (handle: GLuint64); libdecl;
  TglMakeTextureHandleNonResidentNV = procedure (handle: GLuint64); libdecl;
  TglMakeTextureHandleResidentARB = procedure (handle: GLuint64); libdecl;
  TglMakeTextureHandleResidentNV = procedure (handle: GLuint64); libdecl;
  TglMap1d = procedure (target: GLenum; u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint; const points: PGLdouble); libdecl;
  TglMap1f = procedure (target: GLenum; u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; const points: PGLfloat); libdecl;
  TglMap1xOES = procedure (target: GLenum; u1: GLfixed; u2: GLfixed; stride: GLint; order: GLint; points: GLfixed); libdecl;
  TglMap2d = procedure (target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; const points: PGLdouble); libdecl;
  TglMap2f = procedure (target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; const points: PGLfloat); libdecl;
  TglMap2xOES = procedure (target: GLenum; u1: GLfixed; u2: GLfixed; ustride: GLint; uorder: GLint; v1: GLfixed; v2: GLfixed; vstride: GLint; vorder: GLint; points: GLfixed); libdecl;
  TglMapBuffer = function (target: GLenum; access: GLenum): Pointer; libdecl;
  TglMapBufferARB = function (target: GLenum; access: GLenum): Pointer; libdecl;
  TglMapBufferOES = function (target: GLenum; access: GLenum): Pointer; libdecl;
  TglMapBufferRange = function (target: GLenum; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapBufferRangeEXT = function (target: GLenum; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapControlPointsNV = procedure (target: GLenum; index: GLuint; _type: GLenum; ustride: GLsizei; vstride: GLsizei; uorder: GLint; vorder: GLint; _packed: GLboolean; const points: Pointer); libdecl;
  TglMapGrid1d = procedure (un: GLint; u1: GLdouble; u2: GLdouble); libdecl;
  TglMapGrid1f = procedure (un: GLint; u1: GLfloat; u2: GLfloat); libdecl;
  TglMapGrid1xOES = procedure (n: GLint; u1: GLfixed; u2: GLfixed); libdecl;
  TglMapGrid2d = procedure (un: GLint; u1: GLdouble; u2: GLdouble; vn: GLint; v1: GLdouble; v2: GLdouble); libdecl;
  TglMapGrid2f = procedure (un: GLint; u1: GLfloat; u2: GLfloat; vn: GLint; v1: GLfloat; v2: GLfloat); libdecl;
  TglMapGrid2xOES = procedure (n: GLint; u1: GLfixed; u2: GLfixed; v1: GLfixed; v2: GLfixed); libdecl;
  TglMapNamedBuffer = function (buffer: GLuint; access: GLenum): Pointer; libdecl;
  TglMapNamedBufferEXT = function (buffer: GLuint; access: GLenum): Pointer; libdecl;
  TglMapNamedBufferRange = function (buffer: GLuint; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapNamedBufferRangeEXT = function (buffer: GLuint; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapObjectBufferATI = function (buffer: GLuint): Pointer; libdecl;
  TglMapParameterfvNV = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMapParameterivNV = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMapTexture2DINTEL = function (texture: GLuint; level: GLint; access: GLbitfield; stride: PGLint; layout: PGLenum): Pointer; libdecl;
  TglMapVertexAttrib1dAPPLE = procedure (index: GLuint; size: GLuint; u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint; const points: PGLdouble); libdecl;
  TglMapVertexAttrib1fAPPLE = procedure (index: GLuint; size: GLuint; u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; const points: PGLfloat); libdecl;
  TglMapVertexAttrib2dAPPLE = procedure (index: GLuint; size: GLuint; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; const points: PGLdouble); libdecl;
  TglMapVertexAttrib2fAPPLE = procedure (index: GLuint; size: GLuint; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; const points: PGLfloat); libdecl;
  TglMaterialf = procedure (face: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMaterialfv = procedure (face: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMateriali = procedure (face: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMaterialiv = procedure (face: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMaterialx = procedure (face: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglMaterialxOES = procedure (face: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglMaterialxv = procedure (face: GLenum; pname: GLenum; const param: PGLfixed); libdecl;
  TglMaterialxvOES = procedure (face: GLenum; pname: GLenum; const param: PGLfixed); libdecl;
  TglMatrixFrustumEXT = procedure (mode: GLenum; left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglMatrixIndexPointerARB = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglMatrixIndexPointerOES = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglMatrixIndexubvARB = procedure (size: GLint; const indices: PGLubyte); libdecl;
  TglMatrixIndexuivARB = procedure (size: GLint; const indices: PGLuint); libdecl;
  TglMatrixIndexusvARB = procedure (size: GLint; const indices: PGLushort); libdecl;
  TglMatrixLoad3x2fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoad3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoadIdentityEXT = procedure (mode: GLenum); libdecl;
  TglMatrixLoadTranspose3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoadTransposedEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixLoadTransposefEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoaddEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixLoadfEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMode = procedure (mode: GLenum); libdecl;
  TglMatrixMult3x2fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMult3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMultTranspose3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMultTransposedEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixMultTransposefEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMultdEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixMultfEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixOrthoEXT = procedure (mode: GLenum; left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglMatrixPopEXT = procedure (mode: GLenum); libdecl;
  TglMatrixPushEXT = procedure (mode: GLenum); libdecl;
  TglMatrixRotatedEXT = procedure (mode: GLenum; angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglMatrixRotatefEXT = procedure (mode: GLenum; angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglMatrixScaledEXT = procedure (mode: GLenum; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglMatrixScalefEXT = procedure (mode: GLenum; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglMatrixTranslatedEXT = procedure (mode: GLenum; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglMatrixTranslatefEXT = procedure (mode: GLenum; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglMaxShaderCompilerThreadsKHR = procedure (count: GLuint); libdecl;
  TglMaxShaderCompilerThreadsARB = procedure (count: GLuint); libdecl;
  TglMemoryBarrier = procedure (barriers: GLbitfield); libdecl;
  TglMemoryBarrierByRegion = procedure (barriers: GLbitfield); libdecl;
  TglMemoryBarrierEXT = procedure (barriers: GLbitfield); libdecl;
  TglMemoryObjectParameterivEXT = procedure (memoryObject: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglMinSampleShading = procedure (value: GLfloat); libdecl;
  TglMinSampleShadingARB = procedure (value: GLfloat); libdecl;
  TglMinSampleShadingOES = procedure (value: GLfloat); libdecl;
  TglMinmax = procedure (target: GLenum; internalformat: GLenum; sink: GLboolean); libdecl;
  TglMinmaxEXT = procedure (target: GLenum; internalformat: GLenum; sink: GLboolean); libdecl;
  TglMultMatrixd = procedure (const m: PGLdouble); libdecl;
  TglMultMatrixf = procedure (const m: PGLfloat); libdecl;
  TglMultMatrixx = procedure (const m: PGLfixed); libdecl;
  TglMultMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglMultTransposeMatrixd = procedure (const m: PGLdouble); libdecl;
  TglMultTransposeMatrixdARB = procedure (const m: PGLdouble); libdecl;
  TglMultTransposeMatrixf = procedure (const m: PGLfloat); libdecl;
  TglMultTransposeMatrixfARB = procedure (const m: PGLfloat); libdecl;
  TglMultTransposeMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglMultiDrawArrays = procedure (mode: GLenum; const first: PGLint; const count: PGLsizei; drawcount: GLsizei); libdecl;
  TglMultiDrawArraysEXT = procedure (mode: GLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei); libdecl;
  TglMultiDrawArraysIndirect = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectAMD = procedure (mode: GLenum; const indirect: Pointer; primcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectBindlessCountNV = procedure (mode: GLenum; const indirect: Pointer; drawCount: GLsizei; maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawArraysIndirectBindlessNV = procedure (mode: GLenum; const indirect: Pointer; drawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawArraysIndirectCount = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectCountARB = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectEXT = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementArrayAPPLE = procedure (mode: GLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei); libdecl;
  TglMultiDrawElements = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei); libdecl;
  TglMultiDrawElementsBaseVertex = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei; const basevertex: PGLint); libdecl;
  TglMultiDrawElementsBaseVertexEXT = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei; const basevertex: PGLint); libdecl;
  TglMultiDrawElementsEXT = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; primcount: GLsizei); libdecl;
  TglMultiDrawElementsIndirect = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectAMD = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; primcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectBindlessCountNV = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawCount: GLsizei; maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawElementsIndirectBindlessNV = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawElementsIndirectCount = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectCountARB = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectEXT = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawMeshTasksIndirectNV = procedure (indirect: GLintptr; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawMeshTasksIndirectCountNV = procedure (indirect: GLintptr; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawRangeElementArrayAPPLE = procedure (mode: GLenum; start: GLuint; _end: GLuint; const first: PGLint; const count: PGLsizei; primcount: GLsizei); libdecl;
  TglMultiModeDrawArraysIBM = procedure (const mode: PGLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei; modestride: GLint); libdecl;
  TglMultiModeDrawElementsIBM = procedure (const mode: PGLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; primcount: GLsizei; modestride: GLint); libdecl;
  TglMultiTexBufferEXT = procedure (texunit: GLenum; target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglMultiTexCoord1bOES = procedure (texture: GLenum; s: GLbyte); libdecl;
  TglMultiTexCoord1bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord1d = procedure (target: GLenum; s: GLdouble); libdecl;
  TglMultiTexCoord1dARB = procedure (target: GLenum; s: GLdouble); libdecl;
  TglMultiTexCoord1dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord1dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord1f = procedure (target: GLenum; s: GLfloat); libdecl;
  TglMultiTexCoord1fARB = procedure (target: GLenum; s: GLfloat); libdecl;
  TglMultiTexCoord1fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord1fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord1hNV = procedure (target: GLenum; s: GLhalfNV); libdecl;
  TglMultiTexCoord1hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord1i = procedure (target: GLenum; s: GLint); libdecl;
  TglMultiTexCoord1iARB = procedure (target: GLenum; s: GLint); libdecl;
  TglMultiTexCoord1iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord1ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord1s = procedure (target: GLenum; s: GLshort); libdecl;
  TglMultiTexCoord1sARB = procedure (target: GLenum; s: GLshort); libdecl;
  TglMultiTexCoord1sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord1svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord1xOES = procedure (texture: GLenum; s: GLfixed); libdecl;
  TglMultiTexCoord1xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoord2bOES = procedure (texture: GLenum; s: GLbyte; t: GLbyte); libdecl;
  TglMultiTexCoord2bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord2d = procedure (target: GLenum; s: GLdouble; t: GLdouble); libdecl;
  TglMultiTexCoord2dARB = procedure (target: GLenum; s: GLdouble; t: GLdouble); libdecl;
  TglMultiTexCoord2dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord2dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord2f = procedure (target: GLenum; s: GLfloat; t: GLfloat); libdecl;
  TglMultiTexCoord2fARB = procedure (target: GLenum; s: GLfloat; t: GLfloat); libdecl;
  TglMultiTexCoord2fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord2fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord2hNV = procedure (target: GLenum; s: GLhalfNV; t: GLhalfNV); libdecl;
  TglMultiTexCoord2hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord2i = procedure (target: GLenum; s: GLint; t: GLint); libdecl;
  TglMultiTexCoord2iARB = procedure (target: GLenum; s: GLint; t: GLint); libdecl;
  TglMultiTexCoord2iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord2ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord2s = procedure (target: GLenum; s: GLshort; t: GLshort); libdecl;
  TglMultiTexCoord2sARB = procedure (target: GLenum; s: GLshort; t: GLshort); libdecl;
  TglMultiTexCoord2sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord2svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord2xOES = procedure (texture: GLenum; s: GLfixed; t: GLfixed); libdecl;
  TglMultiTexCoord2xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoord3bOES = procedure (texture: GLenum; s: GLbyte; t: GLbyte; r: GLbyte); libdecl;
  TglMultiTexCoord3bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord3d = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble); libdecl;
  TglMultiTexCoord3dARB = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble); libdecl;
  TglMultiTexCoord3dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord3dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord3f = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat); libdecl;
  TglMultiTexCoord3fARB = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat); libdecl;
  TglMultiTexCoord3fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord3fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord3hNV = procedure (target: GLenum; s: GLhalfNV; t: GLhalfNV; r: GLhalfNV); libdecl;
  TglMultiTexCoord3hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord3i = procedure (target: GLenum; s: GLint; t: GLint; r: GLint); libdecl;
  TglMultiTexCoord3iARB = procedure (target: GLenum; s: GLint; t: GLint; r: GLint); libdecl;
  TglMultiTexCoord3iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord3ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord3s = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort); libdecl;
  TglMultiTexCoord3sARB = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort); libdecl;
  TglMultiTexCoord3sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord3svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord3xOES = procedure (texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed); libdecl;
  TglMultiTexCoord3xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoord4bOES = procedure (texture: GLenum; s: GLbyte; t: GLbyte; r: GLbyte; q: GLbyte); libdecl;
  TglMultiTexCoord4bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord4d = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble); libdecl;
  TglMultiTexCoord4dARB = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble); libdecl;
  TglMultiTexCoord4dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord4dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord4f = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); libdecl;
  TglMultiTexCoord4fARB = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); libdecl;
  TglMultiTexCoord4fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord4fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord4hNV = procedure (target: GLenum; s: GLhalfNV; t: GLhalfNV; r: GLhalfNV; q: GLhalfNV); libdecl;
  TglMultiTexCoord4hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord4i = procedure (target: GLenum; s: GLint; t: GLint; r: GLint; q: GLint); libdecl;
  TglMultiTexCoord4iARB = procedure (target: GLenum; s: GLint; t: GLint; r: GLint; q: GLint); libdecl;
  TglMultiTexCoord4iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord4ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord4s = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort; q: GLshort); libdecl;
  TglMultiTexCoord4sARB = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort; q: GLshort); libdecl;
  TglMultiTexCoord4sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord4svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord4x = procedure (texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); libdecl;
  TglMultiTexCoord4xOES = procedure (texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); libdecl;
  TglMultiTexCoord4xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoordP1ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP1uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordP2ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP2uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordP3ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP3uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordP4ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP4uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordPointerEXT = procedure (texunit: GLenum; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglMultiTexEnvfEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMultiTexEnvfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMultiTexEnviEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMultiTexEnvivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexGendEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; param: GLdouble); libdecl;
  TglMultiTexGendvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLdouble); libdecl;
  TglMultiTexGenfEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMultiTexGenfvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMultiTexGeniEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMultiTexGenivEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexParameterIivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexParameterIuivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglMultiTexParameterfEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMultiTexParameterfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMultiTexParameteriEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMultiTexParameterivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexRenderbufferEXT = procedure (texunit: GLenum; target: GLenum; renderbuffer: GLuint); libdecl;
  TglMultiTexSubImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexSubImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexSubImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMulticastBarrierNV = procedure; libdecl;
  TglMulticastBlitFramebufferNV = procedure (srcGpu: GLuint; dstGpu: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglMulticastBufferSubDataNV = procedure (gpuMask: GLbitfield; buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglMulticastCopyBufferSubDataNV = procedure (readGpu: GLuint; writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglMulticastCopyImageSubDataNV = procedure (srcGpu: GLuint; dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglMulticastFramebufferSampleLocationsfvNV = procedure (gpu: GLuint; framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglMulticastGetQueryObjecti64vNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglMulticastGetQueryObjectivNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglMulticastGetQueryObjectui64vNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglMulticastGetQueryObjectuivNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglMulticastScissorArrayvNVX = procedure (gpu: GLuint; first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglMulticastViewportArrayvNVX = procedure (gpu: GLuint; first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglMulticastViewportPositionWScaleNVX = procedure (gpu: GLuint; index: GLuint; xcoeff: GLfloat; ycoeff: GLfloat); libdecl;
  TglMulticastWaitSyncNV = procedure (signalGpu: GLuint; waitGpuMask: GLbitfield); libdecl;
  TglNamedBufferAttachMemoryNV = procedure (buffer: GLuint; memory: GLuint; offset: GLuint64); libdecl;
  TglNamedBufferData = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; usage: GLenum); libdecl;
  TglNamedBufferDataEXT = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; usage: GLenum); libdecl;
  TglNamedBufferPageCommitmentARB = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; commit: GLboolean); libdecl;
  TglNamedBufferPageCommitmentEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; commit: GLboolean); libdecl;
  TglNamedBufferPageCommitmentMemNV = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; memory: GLuint; memOffset: GLuint64; commit: GLboolean); libdecl;
  TglNamedBufferStorage = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglNamedBufferStorageExternalEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield); libdecl;
  TglNamedBufferStorageEXT = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglNamedBufferStorageMemEXT = procedure (buffer: GLuint; size: GLsizeiptr; memory: GLuint; offset: GLuint64); libdecl;
  TglNamedBufferSubData = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglNamedBufferSubDataEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglNamedCopyBufferSubDataEXT = procedure (readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglNamedFramebufferDrawBuffer = procedure (framebuffer: GLuint; buf: GLenum); libdecl;
  TglNamedFramebufferDrawBuffers = procedure (framebuffer: GLuint; n: GLsizei; const bufs: PGLenum); libdecl;
  TglNamedFramebufferParameteri = procedure (framebuffer: GLuint; pname: GLenum; param: GLint); libdecl;
  TglNamedFramebufferParameteriEXT = procedure (framebuffer: GLuint; pname: GLenum; param: GLint); libdecl;
  TglNamedFramebufferReadBuffer = procedure (framebuffer: GLuint; src: GLenum); libdecl;
  TglNamedFramebufferRenderbuffer = procedure (framebuffer: GLuint; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglNamedFramebufferRenderbufferEXT = procedure (framebuffer: GLuint; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglNamedFramebufferSampleLocationsfvARB = procedure (framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglNamedFramebufferSampleLocationsfvNV = procedure (framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglNamedFramebufferTexture = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferSamplePositionsfvAMD = procedure (framebuffer: GLuint; numsamples: GLuint; pixelindex: GLuint; const values: PGLfloat); libdecl;
  TglNamedFramebufferTexture1DEXT = procedure (framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferTexture2DEXT = procedure (framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferTexture3DEXT = procedure (framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglNamedFramebufferTextureEXT = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferTextureFaceEXT = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum); libdecl;
  TglNamedFramebufferTextureLayer = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglNamedFramebufferTextureLayerEXT = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglNamedProgramLocalParameter4dEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglNamedProgramLocalParameter4dvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLdouble); libdecl;
  TglNamedProgramLocalParameter4fEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglNamedProgramLocalParameter4fvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLfloat); libdecl;
  TglNamedProgramLocalParameterI4iEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglNamedProgramLocalParameterI4ivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLint); libdecl;
  TglNamedProgramLocalParameterI4uiEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglNamedProgramLocalParameterI4uivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLuint); libdecl;
  TglNamedProgramLocalParameters4fvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglNamedProgramLocalParametersI4ivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglNamedProgramLocalParametersI4uivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglNamedProgramStringEXT = procedure (_program: GLuint; target: GLenum; format: GLenum; len: GLsizei; const _string: Pointer); libdecl;
  TglNamedRenderbufferStorage = procedure (renderbuffer: GLuint; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageEXT = procedure (renderbuffer: GLuint; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisample = procedure (renderbuffer: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisampleAdvancedAMD = procedure (renderbuffer: GLuint; samples: GLsizei; storageSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisampleCoverageEXT = procedure (renderbuffer: GLuint; coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisampleEXT = procedure (renderbuffer: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedStringARB = procedure (_type: GLenum; namelen: GLint; const name: PGLchar; stringlen: GLint; const _string: PGLchar); libdecl;
  TglNewList = procedure (list: GLuint; mode: GLenum); libdecl;
  TglNewObjectBufferATI = function (size: GLsizei; const _pointer: Pointer; usage: GLenum): GLuint; libdecl;
  TglNormal3b = procedure (nx: GLbyte; ny: GLbyte; nz: GLbyte); libdecl;
  TglNormal3bv = procedure (const v: PGLbyte); libdecl;
  TglNormal3d = procedure (nx: GLdouble; ny: GLdouble; nz: GLdouble); libdecl;
  TglNormal3dv = procedure (const v: PGLdouble); libdecl;
  TglNormal3f = procedure (nx: GLfloat; ny: GLfloat; nz: GLfloat); libdecl;
  TglNormal3fVertex3fSUN = procedure (nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglNormal3fVertex3fvSUN = procedure (const n: PGLfloat; const v: PGLfloat); libdecl;
  TglNormal3fv = procedure (const v: PGLfloat); libdecl;
  TglNormal3hNV = procedure (nx: GLhalfNV; ny: GLhalfNV; nz: GLhalfNV); libdecl;
  TglNormal3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglNormal3i = procedure (nx: GLint; ny: GLint; nz: GLint); libdecl;
  TglNormal3iv = procedure (const v: PGLint); libdecl;
  TglNormal3s = procedure (nx: GLshort; ny: GLshort; nz: GLshort); libdecl;
  TglNormal3sv = procedure (const v: PGLshort); libdecl;
  TglNormal3x = procedure (nx: GLfixed; ny: GLfixed; nz: GLfixed); libdecl;
  TglNormal3xOES = procedure (nx: GLfixed; ny: GLfixed; nz: GLfixed); libdecl;
  TglNormal3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglNormalFormatNV = procedure (_type: GLenum; stride: GLsizei); libdecl;
  TglNormalP3ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglNormalP3uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglNormalPointer = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglNormalPointerEXT = procedure (_type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglNormalPointerListIBM = procedure (_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglNormalPointervINTEL = procedure (_type: GLenum; const _pointer: PPointer); libdecl;
  TglNormalStream3bATI = procedure (stream: GLenum; nx: GLbyte; ny: GLbyte; nz: GLbyte); libdecl;
  TglNormalStream3bvATI = procedure (stream: GLenum; const coords: PGLbyte); libdecl;
  TglNormalStream3dATI = procedure (stream: GLenum; nx: GLdouble; ny: GLdouble; nz: GLdouble); libdecl;
  TglNormalStream3dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglNormalStream3fATI = procedure (stream: GLenum; nx: GLfloat; ny: GLfloat; nz: GLfloat); libdecl;
  TglNormalStream3fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglNormalStream3iATI = procedure (stream: GLenum; nx: GLint; ny: GLint; nz: GLint); libdecl;
  TglNormalStream3ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglNormalStream3sATI = procedure (stream: GLenum; nx: GLshort; ny: GLshort; nz: GLshort); libdecl;
  TglNormalStream3svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglObjectLabel = procedure (identifier: GLenum; name: GLuint; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectLabelKHR = procedure (identifier: GLenum; name: GLuint; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectPtrLabel = procedure (const ptr: Pointer; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectPtrLabelKHR = procedure (const ptr: Pointer; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectPurgeableAPPLE = function (objectType: GLenum; name: GLuint; option: GLenum): GLenum; libdecl;
  TglObjectUnpurgeableAPPLE = function (objectType: GLenum; name: GLuint; option: GLenum): GLenum; libdecl;
  TglOrtho = procedure (left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglOrthof = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglOrthofOES = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglOrthox = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglOrthoxOES = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglPNTrianglesfATI = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPNTrianglesiATI = procedure (pname: GLenum; param: GLint); libdecl;
  TglPassTexCoordATI = procedure (dst: GLuint; coord: GLuint; swizzle: GLenum); libdecl;
  TglPassThrough = procedure (token: GLfloat); libdecl;
  TglPassThroughxOES = procedure (token: GLfixed); libdecl;
  TglPatchParameterfv = procedure (pname: GLenum; const values: PGLfloat); libdecl;
  TglPatchParameteri = procedure (pname: GLenum; value: GLint); libdecl;
  TglPatchParameteriEXT = procedure (pname: GLenum; value: GLint); libdecl;
  TglPatchParameteriOES = procedure (pname: GLenum; value: GLint); libdecl;
  TglPathColorGenNV = procedure (color: GLenum; genMode: GLenum; colorFormat: GLenum; const coeffs: PGLfloat); libdecl;
  TglPathCommandsNV = procedure (path: GLuint; numCommands: GLsizei; const commands: PGLubyte; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathCoordsNV = procedure (path: GLuint; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathCoverDepthFuncNV = procedure (func: GLenum); libdecl;
  TglPathDashArrayNV = procedure (path: GLuint; dashCount: GLsizei; const dashArray: PGLfloat); libdecl;
  TglPathFogGenNV = procedure (genMode: GLenum); libdecl;
  TglPathGlyphIndexArrayNV = function (firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; firstGlyphIndex: GLuint; numGlyphs: GLsizei; pathParameterTemplate: GLuint; emScale: GLfloat): GLenum; libdecl;
  TglPathGlyphIndexRangeNV = function (fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; pathParameterTemplate: GLuint; emScale: GLfloat; baseAndCount: PGLuint): GLenum; libdecl;
  TglPathGlyphRangeNV = procedure (firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; firstGlyph: GLuint; numGlyphs: GLsizei; handleMissingGlyphs: GLenum; pathParameterTemplate: GLuint; emScale: GLfloat); libdecl;
  TglPathGlyphsNV = procedure (firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; numGlyphs: GLsizei; _type: GLenum; const charcodes: Pointer; handleMissingGlyphs: GLenum; pathParameterTemplate: GLuint; emScale: GLfloat); libdecl;
  TglPathMemoryGlyphIndexArrayNV = function (firstPathName: GLuint; fontTarget: GLenum; fontSize: GLsizeiptr; const fontData: Pointer; faceIndex: GLsizei; firstGlyphIndex: GLuint; numGlyphs: GLsizei; pathParameterTemplate: GLuint; emScale: GLfloat): GLenum; libdecl;
  TglPathParameterfNV = procedure (path: GLuint; pname: GLenum; value: GLfloat); libdecl;
  TglPathParameterfvNV = procedure (path: GLuint; pname: GLenum; const value: PGLfloat); libdecl;
  TglPathParameteriNV = procedure (path: GLuint; pname: GLenum; value: GLint); libdecl;
  TglPathParameterivNV = procedure (path: GLuint; pname: GLenum; const value: PGLint); libdecl;
  TglPathStencilDepthOffsetNV = procedure (factor: GLfloat; units: GLfloat); libdecl;
  TglPathStencilFuncNV = procedure (func: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglPathStringNV = procedure (path: GLuint; format: GLenum; length: GLsizei; const pathString: Pointer); libdecl;
  TglPathSubCommandsNV = procedure (path: GLuint; commandStart: GLsizei; commandsToDelete: GLsizei; numCommands: GLsizei; const commands: PGLubyte; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathSubCoordsNV = procedure (path: GLuint; coordStart: GLsizei; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathTexGenNV = procedure (texCoordSet: GLenum; genMode: GLenum; components: GLint; const coeffs: PGLfloat); libdecl;
  TglPauseTransformFeedback = procedure; libdecl;
  TglPauseTransformFeedbackNV = procedure; libdecl;
  TglPixelDataRangeNV = procedure (target: GLenum; length: GLsizei; const _pointer: Pointer); libdecl;
  TglPixelMapfv = procedure (map: GLenum; mapsize: GLsizei; const values: PGLfloat); libdecl;
  TglPixelMapuiv = procedure (map: GLenum; mapsize: GLsizei; const values: PGLuint); libdecl;
  TglPixelMapusv = procedure (map: GLenum; mapsize: GLsizei; const values: PGLushort); libdecl;
  TglPixelMapx = procedure (map: GLenum; size: GLint; const values: PGLfixed); libdecl;
  TglPixelStoref = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPixelStorei = procedure (pname: GLenum; param: GLint); libdecl;
  TglPixelStorex = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPixelTexGenParameterfSGIS = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPixelTexGenParameterfvSGIS = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPixelTexGenParameteriSGIS = procedure (pname: GLenum; param: GLint); libdecl;
  TglPixelTexGenParameterivSGIS = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglPixelTexGenSGIX = procedure (mode: GLenum); libdecl;
  TglPixelTransferf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPixelTransferi = procedure (pname: GLenum; param: GLint); libdecl;
  TglPixelTransferxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPixelTransformParameterfEXT = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglPixelTransformParameterfvEXT = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglPixelTransformParameteriEXT = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglPixelTransformParameterivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglPixelZoom = procedure (xfactor: GLfloat; yfactor: GLfloat); libdecl;
  TglPixelZoomxOES = procedure (xfactor: GLfixed; yfactor: GLfixed); libdecl;
  TglPointAlongPathNV = function (path: GLuint; startSegment: GLsizei; numSegments: GLsizei; distance: GLfloat; x: PGLfloat; y: PGLfloat; tangentX: PGLfloat; tangentY: PGLfloat): GLboolean; libdecl;
  TglPointParameterf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfARB = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfEXT = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfSGIS = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfv = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameterfvARB = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameterfvEXT = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameterfvSGIS = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameteri = procedure (pname: GLenum; param: GLint); libdecl;
  TglPointParameteriNV = procedure (pname: GLenum; param: GLint); libdecl;
  TglPointParameteriv = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglPointParameterivNV = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglPointParameterx = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPointParameterxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPointParameterxv = procedure (pname: GLenum; const params: PGLfixed); libdecl;
  TglPointParameterxvOES = procedure (pname: GLenum; const params: PGLfixed); libdecl;
  TglPointSize = procedure (size: GLfloat); libdecl;
  TglPointSizePointerOES = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglPointSizex = procedure (size: GLfixed); libdecl;
  TglPointSizexOES = procedure (size: GLfixed); libdecl;
  TglPollAsyncSGIX = function (markerp: PGLuint): GLint; libdecl;
  TglPollInstrumentsSGIX = function (marker_p: PGLint): GLint; libdecl;
  TglPolygonMode = procedure (face: GLenum; mode: GLenum); libdecl;
  TglPolygonModeNV = procedure (face: GLenum; mode: GLenum); libdecl;
  TglPolygonOffset = procedure (factor: GLfloat; units: GLfloat); libdecl;
  TglPolygonOffsetClamp = procedure (factor: GLfloat; units: GLfloat; clamp: GLfloat); libdecl;
  TglPolygonOffsetClampEXT = procedure (factor: GLfloat; units: GLfloat; clamp: GLfloat); libdecl;
  TglPolygonOffsetEXT = procedure (factor: GLfloat; bias: GLfloat); libdecl;
  TglPolygonOffsetx = procedure (factor: GLfixed; units: GLfixed); libdecl;
  TglPolygonOffsetxOES = procedure (factor: GLfixed; units: GLfixed); libdecl;
  TglPolygonStipple = procedure (const mask: PGLubyte); libdecl;
  TglPopAttrib = procedure; libdecl;
  TglPopClientAttrib = procedure; libdecl;
  TglPopDebugGroup = procedure; libdecl;
  TglPopDebugGroupKHR = procedure; libdecl;
  TglPopGroupMarkerEXT = procedure; libdecl;
  TglPopMatrix = procedure; libdecl;
  TglPopName = procedure; libdecl;
  TglPresentFrameDualFillNV = procedure (video_slot: GLuint; minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint; presentDurationId: GLuint; _type: GLenum; target0: GLenum; fill0: GLuint; target1: GLenum; fill1: GLuint; target2: GLenum; fill2: GLuint; target3: GLenum; fill3: GLuint); libdecl;
  TglPresentFrameKeyedNV = procedure (video_slot: GLuint; minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint; presentDurationId: GLuint; _type: GLenum; target0: GLenum; fill0: GLuint; key0: GLuint; target1: GLenum; fill1: GLuint; key1: GLuint); libdecl;
  TglPrimitiveBoundingBox = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveBoundingBoxARB = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveBoundingBoxEXT = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveBoundingBoxOES = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveRestartIndex = procedure (index: GLuint); libdecl;
  TglPrimitiveRestartIndexNV = procedure (index: GLuint); libdecl;
  TglPrimitiveRestartNV = procedure; libdecl;
  TglPrioritizeTextures = procedure (n: GLsizei; const textures: PGLuint; const priorities: PGLfloat); libdecl;
  TglPrioritizeTexturesEXT = procedure (n: GLsizei; const textures: PGLuint; const priorities: PGLclampf); libdecl;
  TglPrioritizeTexturesxOES = procedure (n: GLsizei; const textures: PGLuint; const priorities: PGLfixed); libdecl;
  TglProgramBinary = procedure (_program: GLuint; binaryFormat: GLenum; const binary: Pointer; length: GLsizei); libdecl;
  TglProgramBinaryOES = procedure (_program: GLuint; binaryFormat: GLenum; const binary: Pointer; length: GLint); libdecl;
  TglProgramBufferParametersIivNV = procedure (target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglProgramBufferParametersIuivNV = procedure (target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramBufferParametersfvNV = procedure (target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglProgramEnvParameter4dARB = procedure (target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramEnvParameter4dvARB = procedure (target: GLenum; index: GLuint; const params: PGLdouble); libdecl;
  TglProgramEnvParameter4fARB = procedure (target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramEnvParameter4fvARB = procedure (target: GLenum; index: GLuint; const params: PGLfloat); libdecl;
  TglProgramEnvParameterI4iNV = procedure (target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglProgramEnvParameterI4ivNV = procedure (target: GLenum; index: GLuint; const params: PGLint); libdecl;
  TglProgramEnvParameterI4uiNV = procedure (target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglProgramEnvParameterI4uivNV = procedure (target: GLenum; index: GLuint; const params: PGLuint); libdecl;
  TglProgramEnvParameters4fvEXT = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglProgramEnvParametersI4ivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglProgramEnvParametersI4uivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramLocalParameter4dARB = procedure (target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramLocalParameter4dvARB = procedure (target: GLenum; index: GLuint; const params: PGLdouble); libdecl;
  TglProgramLocalParameter4fARB = procedure (target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramLocalParameter4fvARB = procedure (target: GLenum; index: GLuint; const params: PGLfloat); libdecl;
  TglProgramLocalParameterI4iNV = procedure (target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglProgramLocalParameterI4ivNV = procedure (target: GLenum; index: GLuint; const params: PGLint); libdecl;
  TglProgramLocalParameterI4uiNV = procedure (target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglProgramLocalParameterI4uivNV = procedure (target: GLenum; index: GLuint; const params: PGLuint); libdecl;
  TglProgramLocalParameters4fvEXT = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglProgramLocalParametersI4ivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglProgramLocalParametersI4uivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramNamedParameter4dNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramNamedParameter4dvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; const v: PGLdouble); libdecl;
  TglProgramNamedParameter4fNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramNamedParameter4fvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; const v: PGLfloat); libdecl;
  TglProgramParameter4dNV = procedure (target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramParameter4dvNV = procedure (target: GLenum; index: GLuint; const v: PGLdouble); libdecl;
  TglProgramParameter4fNV = procedure (target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramParameter4fvNV = procedure (target: GLenum; index: GLuint; const v: PGLfloat); libdecl;
  TglProgramParameteri = procedure (_program: GLuint; pname: GLenum; value: GLint); libdecl;
  TglProgramParameteriARB = procedure (_program: GLuint; pname: GLenum; value: GLint); libdecl;
  TglProgramParameteriEXT = procedure (_program: GLuint; pname: GLenum; value: GLint); libdecl;
  TglProgramParameters4dvNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglProgramParameters4fvNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglProgramPathFragmentInputGenNV = procedure (_program: GLuint; location: GLint; genMode: GLenum; components: GLint; const coeffs: PGLfloat); libdecl;
  TglProgramStringARB = procedure (target: GLenum; format: GLenum; len: GLsizei; const _string: Pointer); libdecl;
  TglProgramSubroutineParametersuivNV = procedure (target: GLenum; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramUniform1d = procedure (_program: GLuint; location: GLint; v0: GLdouble); libdecl;
  TglProgramUniform1dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble); libdecl;
  TglProgramUniform1dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform1dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform1f = procedure (_program: GLuint; location: GLint; v0: GLfloat); libdecl;
  TglProgramUniform1fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat); libdecl;
  TglProgramUniform1fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform1fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform1i = procedure (_program: GLuint; location: GLint; v0: GLint); libdecl;
  TglProgramUniform1i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64); libdecl;
  TglProgramUniform1i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT); libdecl;
  TglProgramUniform1i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform1i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform1iEXT = procedure (_program: GLuint; location: GLint; v0: GLint); libdecl;
  TglProgramUniform1iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform1ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform1ui = procedure (_program: GLuint; location: GLint; v0: GLuint); libdecl;
  TglProgramUniform1ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64); libdecl;
  TglProgramUniform1ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT); libdecl;
  TglProgramUniform1ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform1ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform1uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint); libdecl;
  TglProgramUniform1uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform1uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform2d = procedure (_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble); libdecl;
  TglProgramUniform2dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble; y: GLdouble); libdecl;
  TglProgramUniform2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform2f = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglProgramUniform2fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglProgramUniform2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform2i = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint); libdecl;
  TglProgramUniform2i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64; y: GLint64); libdecl;
  TglProgramUniform2i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT); libdecl;
  TglProgramUniform2i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform2i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform2iEXT = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint); libdecl;
  TglProgramUniform2iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform2ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform2ui = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglProgramUniform2ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64; y: GLuint64); libdecl;
  TglProgramUniform2ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT); libdecl;
  TglProgramUniform2ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform2ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform2uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglProgramUniform2uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform2uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform3d = procedure (_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble; v2: GLdouble); libdecl;
  TglProgramUniform3dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglProgramUniform3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform3f = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglProgramUniform3fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglProgramUniform3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform3i = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglProgramUniform3i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64; y: GLint64; z: GLint64); libdecl;
  TglProgramUniform3i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT); libdecl;
  TglProgramUniform3i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform3i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform3iEXT = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglProgramUniform3iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform3ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform3ui = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglProgramUniform3ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64; y: GLuint64; z: GLuint64); libdecl;
  TglProgramUniform3ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT); libdecl;
  TglProgramUniform3ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform3ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform3uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglProgramUniform3uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform3uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform4d = procedure (_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble; v2: GLdouble; v3: GLdouble); libdecl;
  TglProgramUniform4dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramUniform4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform4f = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglProgramUniform4fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglProgramUniform4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform4i = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglProgramUniform4i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64; y: GLint64; z: GLint64; w: GLint64); libdecl;
  TglProgramUniform4i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT); libdecl;
  TglProgramUniform4i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform4i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform4iEXT = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglProgramUniform4iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform4ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform4ui = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglProgramUniform4ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64); libdecl;
  TglProgramUniform4ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT); libdecl;
  TglProgramUniform4ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform4ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform4uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglProgramUniform4uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform4uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniformHandleui64ARB = procedure (_program: GLuint; location: GLint; value: GLuint64); libdecl;
  TglProgramUniformHandleui64IMG = procedure (_program: GLuint; location: GLint; value: GLuint64); libdecl;
  TglProgramUniformHandleui64NV = procedure (_program: GLuint; location: GLint; value: GLuint64); libdecl;
  TglProgramUniformHandleui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64); libdecl;
  TglProgramUniformHandleui64vIMG = procedure (_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64); libdecl;
  TglProgramUniformHandleui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64); libdecl;
  TglProgramUniformMatrix2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformui64NV = procedure (_program: GLuint; location: GLint; value: GLuint64EXT); libdecl;
  TglProgramUniformui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramVertexLimitNV = procedure (target: GLenum; limit: GLint); libdecl;
  TglProvokingVertex = procedure (mode: GLenum); libdecl;
  TglProvokingVertexEXT = procedure (mode: GLenum); libdecl;
  TglPushAttrib = procedure (mask: GLbitfield); libdecl;
  TglPushClientAttrib = procedure (mask: GLbitfield); libdecl;
  TglPushClientAttribDefaultEXT = procedure (mask: GLbitfield); libdecl;
  TglPushDebugGroup = procedure (source: GLenum; id: GLuint; length: GLsizei; const _message: PGLchar); libdecl;
  TglPushDebugGroupKHR = procedure (source: GLenum; id: GLuint; length: GLsizei; const _message: PGLchar); libdecl;
  TglPushGroupMarkerEXT = procedure (length: GLsizei; const marker: PGLchar); libdecl;
  TglPushMatrix = procedure; libdecl;
  TglPushName = procedure (name: GLuint); libdecl;
  TglQueryCounter = procedure (id: GLuint; target: GLenum); libdecl;
  TglQueryCounterEXT = procedure (id: GLuint; target: GLenum); libdecl;
  TglQueryMatrixxOES = function (mantissa: PGLfixed; exponent: PGLint): GLbitfield; libdecl;
  TglQueryObjectParameteruiAMD = procedure (target: GLenum; id: GLuint; pname: GLenum; param: GLuint); libdecl;
  TglQueryResourceNV = function (queryType: GLenum; tagId: GLint; count: GLuint; buffer: PGLint): GLint; libdecl;
  TglQueryResourceTagNV = procedure (tagId: GLint; const tagString: PGLchar); libdecl;
  TglRasterPos2d = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglRasterPos2dv = procedure (const v: PGLdouble); libdecl;
  TglRasterPos2f = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglRasterPos2fv = procedure (const v: PGLfloat); libdecl;
  TglRasterPos2i = procedure (x: GLint; y: GLint); libdecl;
  TglRasterPos2iv = procedure (const v: PGLint); libdecl;
  TglRasterPos2s = procedure (x: GLshort; y: GLshort); libdecl;
  TglRasterPos2sv = procedure (const v: PGLshort); libdecl;
  TglRasterPos2xOES = procedure (x: GLfixed; y: GLfixed); libdecl;
  TglRasterPos2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglRasterPos3d = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglRasterPos3dv = procedure (const v: PGLdouble); libdecl;
  TglRasterPos3f = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglRasterPos3fv = procedure (const v: PGLfloat); libdecl;
  TglRasterPos3i = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglRasterPos3iv = procedure (const v: PGLint); libdecl;
  TglRasterPos3s = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglRasterPos3sv = procedure (const v: PGLshort); libdecl;
  TglRasterPos3xOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglRasterPos3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglRasterPos4d = procedure (x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglRasterPos4dv = procedure (const v: PGLdouble); libdecl;
  TglRasterPos4f = procedure (x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglRasterPos4fv = procedure (const v: PGLfloat); libdecl;
  TglRasterPos4i = procedure (x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglRasterPos4iv = procedure (const v: PGLint); libdecl;
  TglRasterPos4s = procedure (x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglRasterPos4sv = procedure (const v: PGLshort); libdecl;
  TglRasterPos4xOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed; w: GLfixed); libdecl;
  TglRasterPos4xvOES = procedure (const coords: PGLfixed); libdecl;
  TglRasterSamplesEXT = procedure (samples: GLuint; fixedsamplelocations: GLboolean); libdecl;
  TglReadBuffer = procedure (src: GLenum); libdecl;
  TglReadBufferIndexedEXT = procedure (src: GLenum; index: GLint); libdecl;
  TglReadBufferNV = procedure (mode: GLenum); libdecl;
  TglReadInstrumentsSGIX = procedure (marker: GLint); libdecl;
  TglReadPixels = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglReadnPixels = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReadnPixelsARB = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReadnPixelsEXT = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReadnPixelsKHR = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReleaseKeyedMutexWin32EXT = function (memory: GLuint; key: GLuint64): GLboolean; libdecl;
  TglRectd = procedure (x1: GLdouble; y1: GLdouble; x2: GLdouble; y2: GLdouble); libdecl;
  TglRectdv = procedure (const v1: PGLdouble; const v2: PGLdouble); libdecl;
  TglRectf = procedure (x1: GLfloat; y1: GLfloat; x2: GLfloat; y2: GLfloat); libdecl;
  TglRectfv = procedure (const v1: PGLfloat; const v2: PGLfloat); libdecl;
  TglRecti = procedure (x1: GLint; y1: GLint; x2: GLint; y2: GLint); libdecl;
  TglRectiv = procedure (const v1: PGLint; const v2: PGLint); libdecl;
  TglRects = procedure (x1: GLshort; y1: GLshort; x2: GLshort; y2: GLshort); libdecl;
  TglRectsv = procedure (const v1: PGLshort; const v2: PGLshort); libdecl;
  TglRectxOES = procedure (x1: GLfixed; y1: GLfixed; x2: GLfixed; y2: GLfixed); libdecl;
  TglRectxvOES = procedure (const v1: PGLfixed; const v2: PGLfixed); libdecl;
  TglReferencePlaneSGIX = procedure (const equation: PGLdouble); libdecl;
  TglReleaseShaderCompiler = procedure; libdecl;
  TglRenderGpuMaskNV = procedure (mask: GLbitfield); libdecl;
  TglRenderMode = function (mode: GLenum): GLint; libdecl;
  TglRenderbufferStorage = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleANGLE = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleAPPLE = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleAdvancedAMD = procedure (target: GLenum; samples: GLsizei; storageSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleCoverageNV = procedure (target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleEXT = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleIMG = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleNV = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageOES = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglReplacementCodePointerSUN = procedure (_type: GLenum; stride: GLsizei; const _pointer: PPointer); libdecl;
  TglReplacementCodeubSUN = procedure (code: GLubyte); libdecl;
  TglReplacementCodeubvSUN = procedure (const code: PGLubyte); libdecl;
  TglReplacementCodeuiColor3fVertex3fSUN = procedure (rc: GLuint; r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiColor3fVertex3fvSUN = procedure (const rc: PGLuint; const c: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiColor4fNormal3fVertex3fSUN = procedure (rc: GLuint; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiColor4fNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiColor4ubVertex3fSUN = procedure (rc: GLuint; r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiColor4ubVertex3fvSUN = procedure (const rc: PGLuint; const c: PGLubyte; const v: PGLfloat); libdecl;
  TglReplacementCodeuiNormal3fVertex3fSUN = procedure (rc: GLuint; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiSUN = procedure (code: GLuint); libdecl;
  TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = procedure (rc: GLuint; s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = procedure (rc: GLuint; s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const tc: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fVertex3fSUN = procedure (rc: GLuint; s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fVertex3fvSUN = procedure (const rc: PGLuint; const tc: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiVertex3fSUN = procedure (rc: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiVertex3fvSUN = procedure (const rc: PGLuint; const v: PGLfloat); libdecl;
  TglReplacementCodeuivSUN = procedure (const code: PGLuint); libdecl;
  TglReplacementCodeusSUN = procedure (code: GLushort); libdecl;
  TglReplacementCodeusvSUN = procedure (const code: PGLushort); libdecl;
  TglRequestResidentProgramsNV = procedure (n: GLsizei; const programs: PGLuint); libdecl;
  TglResetHistogram = procedure (target: GLenum); libdecl;
  TglResetHistogramEXT = procedure (target: GLenum); libdecl;
  TglResetMemoryObjectParameterNV = procedure (memory: GLuint; pname: GLenum); libdecl;
  TglResetMinmax = procedure (target: GLenum); libdecl;
  TglResetMinmaxEXT = procedure (target: GLenum); libdecl;
  TglResizeBuffersMESA = procedure; libdecl;
  TglResolveDepthValuesNV = procedure; libdecl;
  TglResolveMultisampleFramebufferAPPLE = procedure; libdecl;
  TglResumeTransformFeedback = procedure; libdecl;
  TglResumeTransformFeedbackNV = procedure; libdecl;
  TglRotated = procedure (angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglRotatef = procedure (angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglRotatex = procedure (angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglRotatexOES = procedure (angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglSampleCoverage = procedure (value: GLfloat; invert: GLboolean); libdecl;
  TglSampleCoverageARB = procedure (value: GLfloat; invert: GLboolean); libdecl;
  TglSampleCoveragex = procedure (value: GLclampx; invert: GLboolean); libdecl;
  TglSampleCoveragexOES = procedure (value: GLclampx; invert: GLboolean); libdecl;
  TglSampleMapATI = procedure (dst: GLuint; interp: GLuint; swizzle: GLenum); libdecl;
  TglSampleMaskEXT = procedure (value: GLclampf; invert: GLboolean); libdecl;
  TglSampleMaskIndexedNV = procedure (index: GLuint; mask: GLbitfield); libdecl;
  TglSampleMaskSGIS = procedure (value: GLclampf; invert: GLboolean); libdecl;
  TglSampleMaski = procedure (maskNumber: GLuint; mask: GLbitfield); libdecl;
  TglSamplePatternEXT = procedure (pattern: GLenum); libdecl;
  TglSamplePatternSGIS = procedure (pattern: GLenum); libdecl;
  TglSamplerParameterIiv = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglSamplerParameterIivEXT = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglSamplerParameterIivOES = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglSamplerParameterIuiv = procedure (sampler: GLuint; pname: GLenum; const param: PGLuint); libdecl;
  TglSamplerParameterIuivEXT = procedure (sampler: GLuint; pname: GLenum; const param: PGLuint); libdecl;
  TglSamplerParameterIuivOES = procedure (sampler: GLuint; pname: GLenum; const param: PGLuint); libdecl;
  TglSamplerParameterf = procedure (sampler: GLuint; pname: GLenum; param: GLfloat); libdecl;
  TglSamplerParameterfv = procedure (sampler: GLuint; pname: GLenum; const param: PGLfloat); libdecl;
  TglSamplerParameteri = procedure (sampler: GLuint; pname: GLenum; param: GLint); libdecl;
  TglSamplerParameteriv = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglScaled = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglScalef = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglScalex = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglScalexOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglScissor = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorArrayv = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorArrayvNV = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorArrayvOES = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorExclusiveArrayvNV = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorExclusiveNV = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexed = procedure (index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexedNV = procedure (index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexedOES = procedure (index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexedv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglScissorIndexedvNV = procedure (index: GLuint; const v: PGLint); libdecl;
  TglScissorIndexedvOES = procedure (index: GLuint; const v: PGLint); libdecl;
  TglSecondaryColor3b = procedure (red: GLbyte; green: GLbyte; blue: GLbyte); libdecl;
  TglSecondaryColor3bEXT = procedure (red: GLbyte; green: GLbyte; blue: GLbyte); libdecl;
  TglSecondaryColor3bv = procedure (const v: PGLbyte); libdecl;
  TglSecondaryColor3bvEXT = procedure (const v: PGLbyte); libdecl;
  TglSecondaryColor3d = procedure (red: GLdouble; green: GLdouble; blue: GLdouble); libdecl;
  TglSecondaryColor3dEXT = procedure (red: GLdouble; green: GLdouble; blue: GLdouble); libdecl;
  TglSecondaryColor3dv = procedure (const v: PGLdouble); libdecl;
  TglSecondaryColor3dvEXT = procedure (const v: PGLdouble); libdecl;
  TglSecondaryColor3f = procedure (red: GLfloat; green: GLfloat; blue: GLfloat); libdecl;
  TglSecondaryColor3fEXT = procedure (red: GLfloat; green: GLfloat; blue: GLfloat); libdecl;
  TglSecondaryColor3fv = procedure (const v: PGLfloat); libdecl;
  TglSecondaryColor3fvEXT = procedure (const v: PGLfloat); libdecl;
  TglSecondaryColor3hNV = procedure (red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV); libdecl;
  TglSecondaryColor3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglSecondaryColor3i = procedure (red: GLint; green: GLint; blue: GLint); libdecl;
  TglSecondaryColor3iEXT = procedure (red: GLint; green: GLint; blue: GLint); libdecl;
  TglSecondaryColor3iv = procedure (const v: PGLint); libdecl;
  TglSecondaryColor3ivEXT = procedure (const v: PGLint); libdecl;
  TglSecondaryColor3s = procedure (red: GLshort; green: GLshort; blue: GLshort); libdecl;
  TglSecondaryColor3sEXT = procedure (red: GLshort; green: GLshort; blue: GLshort); libdecl;
  TglSecondaryColor3sv = procedure (const v: PGLshort); libdecl;
  TglSecondaryColor3svEXT = procedure (const v: PGLshort); libdecl;
  TglSecondaryColor3ub = procedure (red: GLubyte; green: GLubyte; blue: GLubyte); libdecl;
  TglSecondaryColor3ubEXT = procedure (red: GLubyte; green: GLubyte; blue: GLubyte); libdecl;
  TglSecondaryColor3ubv = procedure (const v: PGLubyte); libdecl;
  TglSecondaryColor3ubvEXT = procedure (const v: PGLubyte); libdecl;
  TglSecondaryColor3ui = procedure (red: GLuint; green: GLuint; blue: GLuint); libdecl;
  TglSecondaryColor3uiEXT = procedure (red: GLuint; green: GLuint; blue: GLuint); libdecl;
  TglSecondaryColor3uiv = procedure (const v: PGLuint); libdecl;
  TglSecondaryColor3uivEXT = procedure (const v: PGLuint); libdecl;
  TglSecondaryColor3us = procedure (red: GLushort; green: GLushort; blue: GLushort); libdecl;
  TglSecondaryColor3usEXT = procedure (red: GLushort; green: GLushort; blue: GLushort); libdecl;
  TglSecondaryColor3usv = procedure (const v: PGLushort); libdecl;
  TglSecondaryColor3usvEXT = procedure (const v: PGLushort); libdecl;
  TglSecondaryColorFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglSecondaryColorP3ui = procedure (_type: GLenum; color: GLuint); libdecl;
  TglSecondaryColorP3uiv = procedure (_type: GLenum; const color: PGLuint); libdecl;
  TglSecondaryColorPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglSecondaryColorPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglSecondaryColorPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglSelectBuffer = procedure (size: GLsizei; buffer: PGLuint); libdecl;
  TglSelectPerfMonitorCountersAMD = procedure (monitor: GLuint; enable: GLboolean; group: GLuint; numCounters: GLint; counterList: PGLuint); libdecl;
  TglSemaphoreParameterivNV = procedure (semaphore: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglSemaphoreParameterui64vEXT = procedure (semaphore: GLuint; pname: GLenum; const params: PGLuint64); libdecl;
  TglSeparableFilter2D = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const row: Pointer; const column: Pointer); libdecl;
  TglSeparableFilter2DEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const row: Pointer; const column: Pointer); libdecl;
  TglSetFenceAPPLE = procedure (fence: GLuint); libdecl;
  TglSetFenceNV = procedure (fence: GLuint; condition: GLenum); libdecl;
  TglSetFragmentShaderConstantATI = procedure (dst: GLuint; const value: PGLfloat); libdecl;
  TglSetInvariantEXT = procedure (id: GLuint; _type: GLenum; const addr: Pointer); libdecl;
  TglSetLocalConstantEXT = procedure (id: GLuint; _type: GLenum; const addr: Pointer); libdecl;
  TglSetMultisamplefvAMD = procedure (pname: GLenum; index: GLuint; const val: PGLfloat); libdecl;
  TglShadeModel = procedure (mode: GLenum); libdecl;
  TglShaderBinary = procedure (count: GLsizei; const shaders: PGLuint; binaryFormat: GLenum; const binary: Pointer; length: GLsizei); libdecl;
  TglShaderOp1EXT = procedure (op: GLenum; res: GLuint; arg1: GLuint); libdecl;
  TglShaderOp2EXT = procedure (op: GLenum; res: GLuint; arg1: GLuint; arg2: GLuint); libdecl;
  TglShaderOp3EXT = procedure (op: GLenum; res: GLuint; arg1: GLuint; arg2: GLuint; arg3: GLuint); libdecl;
  TglShaderSource = procedure (shader: GLuint; count: GLsizei; const _string: PPGLchar; const length: PGLint); libdecl;
  TglShaderSourceARB = procedure (shaderObj: GLhandleARB; count: GLsizei; const _string: PPGLcharARB; const length: PGLint); libdecl;
  TglShaderStorageBlockBinding = procedure (_program: GLuint; storageBlockIndex: GLuint; storageBlockBinding: GLuint); libdecl;
  TglShadingRateEXT = procedure (rate: GLenum); libdecl;
  TglShadingRateCombinerOpsEXT = procedure (combinerOp0: GLenum; combinerOp1: GLenum); libdecl;
  TglShadingRateImageBarrierNV = procedure (synchronize: GLboolean); libdecl;
  TglShadingRateQCOM = procedure (rate: GLenum); libdecl;
  TglShadingRateImagePaletteNV = procedure (viewport: GLuint; first: GLuint; count: GLsizei; const rates: PGLenum); libdecl;
  TglShadingRateSampleOrderNV = procedure (order: GLenum); libdecl;
  TglShadingRateSampleOrderCustomNV = procedure (rate: GLenum; samples: GLuint; const locations: PGLint); libdecl;
  TglSharpenTexFuncSGIS = procedure (target: GLenum; n: GLsizei; const points: PGLfloat); libdecl;
  TglSignalSemaphoreEXT = procedure (semaphore: GLuint; numBufferBarriers: GLuint; const buffers: PGLuint; numTextureBarriers: GLuint; const textures: PGLuint; const dstLayouts: PGLenum); libdecl;
  TglSignalSemaphoreui64NVX = procedure (signalGpu: GLuint; fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64); libdecl;
  TglSpecializeShader = procedure (shader: GLuint; const pEntryPoint: PGLchar; numSpecializationConstants: GLuint; const pConstantIndex: PGLuint; const pConstantValue: PGLuint); libdecl;
  TglSpecializeShaderARB = procedure (shader: GLuint; const pEntryPoint: PGLchar; numSpecializationConstants: GLuint; const pConstantIndex: PGLuint; const pConstantValue: PGLuint); libdecl;
  TglSpriteParameterfSGIX = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglSpriteParameterfvSGIX = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglSpriteParameteriSGIX = procedure (pname: GLenum; param: GLint); libdecl;
  TglSpriteParameterivSGIX = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglStartInstrumentsSGIX = procedure; libdecl;
  TglStartTilingQCOM = procedure (x: GLuint; y: GLuint; width: GLuint; height: GLuint; preserveMask: GLbitfield); libdecl;
  TglStateCaptureNV = procedure (state: GLuint; mode: GLenum); libdecl;
  TglStencilClearTagEXT = procedure (stencilTagBits: GLsizei; stencilClearTag: GLuint); libdecl;
  TglStencilFillPathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; fillMode: GLenum; mask: GLuint; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilFillPathNV = procedure (path: GLuint; fillMode: GLenum; mask: GLuint); libdecl;
  TglStencilFunc = procedure (func: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglStencilFuncSeparate = procedure (face: GLenum; func: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglStencilFuncSeparateATI = procedure (frontfunc: GLenum; backfunc: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglStencilMask = procedure (mask: GLuint); libdecl;
  TglStencilMaskSeparate = procedure (face: GLenum; mask: GLuint); libdecl;
  TglStencilOp = procedure (fail: GLenum; zfail: GLenum; zpass: GLenum); libdecl;
  TglStencilOpSeparate = procedure (face: GLenum; sfail: GLenum; dpfail: GLenum; dppass: GLenum); libdecl;
  TglStencilOpSeparateATI = procedure (face: GLenum; sfail: GLenum; dpfail: GLenum; dppass: GLenum); libdecl;
  TglStencilOpValueAMD = procedure (face: GLenum; value: GLuint); libdecl;
  TglStencilStrokePathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; reference: GLint; mask: GLuint; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilStrokePathNV = procedure (path: GLuint; reference: GLint; mask: GLuint); libdecl;
  TglStencilThenCoverFillPathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; fillMode: GLenum; mask: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilThenCoverFillPathNV = procedure (path: GLuint; fillMode: GLenum; mask: GLuint; coverMode: GLenum); libdecl;
  TglStencilThenCoverStrokePathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; reference: GLint; mask: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilThenCoverStrokePathNV = procedure (path: GLuint; reference: GLint; mask: GLuint; coverMode: GLenum); libdecl;
  TglStopInstrumentsSGIX = procedure (marker: GLint); libdecl;
  TglStringMarkerGREMEDY = procedure (len: GLsizei; const _string: Pointer); libdecl;
  TglSubpixelPrecisionBiasNV = procedure (xbits: GLuint; ybits: GLuint); libdecl;
  TglSwizzleEXT = procedure (res: GLuint; _in: GLuint; outX: GLenum; outY: GLenum; outZ: GLenum; outW: GLenum); libdecl;
  TglSyncTextureINTEL = procedure (texture: GLuint); libdecl;
  TglTagSampleBufferSGIX = procedure; libdecl;
  TglTangent3bEXT = procedure (tx: GLbyte; ty: GLbyte; tz: GLbyte); libdecl;
  TglTangent3bvEXT = procedure (const v: PGLbyte); libdecl;
  TglTangent3dEXT = procedure (tx: GLdouble; ty: GLdouble; tz: GLdouble); libdecl;
  TglTangent3dvEXT = procedure (const v: PGLdouble); libdecl;
  TglTangent3fEXT = procedure (tx: GLfloat; ty: GLfloat; tz: GLfloat); libdecl;
  TglTangent3fvEXT = procedure (const v: PGLfloat); libdecl;
  TglTangent3iEXT = procedure (tx: GLint; ty: GLint; tz: GLint); libdecl;
  TglTangent3ivEXT = procedure (const v: PGLint); libdecl;
  TglTangent3sEXT = procedure (tx: GLshort; ty: GLshort; tz: GLshort); libdecl;
  TglTangent3svEXT = procedure (const v: PGLshort); libdecl;
  TglTangentPointerEXT = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglTbufferMask3DFX = procedure (mask: GLuint); libdecl;
  TglTessellationFactorAMD = procedure (factor: GLfloat); libdecl;
  TglTessellationModeAMD = procedure (mode: GLenum); libdecl;
  TglTestFenceAPPLE = function (fence: GLuint): GLboolean; libdecl;
  TglTestFenceNV = function (fence: GLuint): GLboolean; libdecl;
  TglTestObjectAPPLE = function (_object: GLenum; name: GLuint): GLboolean; libdecl;
  TglTexAttachMemoryNV = procedure (target: GLenum; memory: GLuint; offset: GLuint64); libdecl;
  TglTexBuffer = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferARB = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferEXT = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferOES = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferRange = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTexBufferRangeEXT = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTexBufferRangeOES = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTexBumpParameterfvATI = procedure (pname: GLenum; const param: PGLfloat); libdecl;
  TglTexBumpParameterivATI = procedure (pname: GLenum; const param: PGLint); libdecl;
  TglTexCoord1bOES = procedure (s: GLbyte); libdecl;
  TglTexCoord1bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord1d = procedure (s: GLdouble); libdecl;
  TglTexCoord1dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord1f = procedure (s: GLfloat); libdecl;
  TglTexCoord1fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord1hNV = procedure (s: GLhalfNV); libdecl;
  TglTexCoord1hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord1i = procedure (s: GLint); libdecl;
  TglTexCoord1iv = procedure (const v: PGLint); libdecl;
  TglTexCoord1s = procedure (s: GLshort); libdecl;
  TglTexCoord1sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord1xOES = procedure (s: GLfixed); libdecl;
  TglTexCoord1xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoord2bOES = procedure (s: GLbyte; t: GLbyte); libdecl;
  TglTexCoord2bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord2d = procedure (s: GLdouble; t: GLdouble); libdecl;
  TglTexCoord2dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord2f = procedure (s: GLfloat; t: GLfloat); libdecl;
  TglTexCoord2fColor3fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fColor3fVertex3fvSUN = procedure (const tc: PGLfloat; const c: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fColor4fNormal3fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fColor4fNormal3fVertex3fvSUN = procedure (const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fColor4ubVertex3fSUN = procedure (s: GLfloat; t: GLfloat; r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fColor4ubVertex3fvSUN = procedure (const tc: PGLfloat; const c: PGLubyte; const v: PGLfloat); libdecl;
  TglTexCoord2fNormal3fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fNormal3fVertex3fvSUN = procedure (const tc: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fVertex3fvSUN = procedure (const tc: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord2hNV = procedure (s: GLhalfNV; t: GLhalfNV); libdecl;
  TglTexCoord2hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord2i = procedure (s: GLint; t: GLint); libdecl;
  TglTexCoord2iv = procedure (const v: PGLint); libdecl;
  TglTexCoord2s = procedure (s: GLshort; t: GLshort); libdecl;
  TglTexCoord2sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord2xOES = procedure (s: GLfixed; t: GLfixed); libdecl;
  TglTexCoord2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoord3bOES = procedure (s: GLbyte; t: GLbyte; r: GLbyte); libdecl;
  TglTexCoord3bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord3d = procedure (s: GLdouble; t: GLdouble; r: GLdouble); libdecl;
  TglTexCoord3dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord3f = procedure (s: GLfloat; t: GLfloat; r: GLfloat); libdecl;
  TglTexCoord3fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord3hNV = procedure (s: GLhalfNV; t: GLhalfNV; r: GLhalfNV); libdecl;
  TglTexCoord3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord3i = procedure (s: GLint; t: GLint; r: GLint); libdecl;
  TglTexCoord3iv = procedure (const v: PGLint); libdecl;
  TglTexCoord3s = procedure (s: GLshort; t: GLshort; r: GLshort); libdecl;
  TglTexCoord3sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord3xOES = procedure (s: GLfixed; t: GLfixed; r: GLfixed); libdecl;
  TglTexCoord3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoord4bOES = procedure (s: GLbyte; t: GLbyte; r: GLbyte; q: GLbyte); libdecl;
  TglTexCoord4bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord4d = procedure (s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble); libdecl;
  TglTexCoord4dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord4f = procedure (s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); libdecl;
  TglTexCoord4fColor4fNormal3fVertex4fSUN = procedure (s: GLfloat; t: GLfloat; p: GLfloat; q: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglTexCoord4fColor4fNormal3fVertex4fvSUN = procedure (const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord4fVertex4fSUN = procedure (s: GLfloat; t: GLfloat; p: GLfloat; q: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglTexCoord4fVertex4fvSUN = procedure (const tc: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord4fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord4hNV = procedure (s: GLhalfNV; t: GLhalfNV; r: GLhalfNV; q: GLhalfNV); libdecl;
  TglTexCoord4hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord4i = procedure (s: GLint; t: GLint; r: GLint; q: GLint); libdecl;
  TglTexCoord4iv = procedure (const v: PGLint); libdecl;
  TglTexCoord4s = procedure (s: GLshort; t: GLshort; r: GLshort; q: GLshort); libdecl;
  TglTexCoord4sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord4xOES = procedure (s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); libdecl;
  TglTexCoord4xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoordFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglTexCoordP1ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP1uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordP2ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP2uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordP3ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP3uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordP4ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP4uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglTexCoordPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglTexCoordPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglTexCoordPointervINTEL = procedure (size: GLint; _type: GLenum; const _pointer: PPointer); libdecl;
  TglTexEnvf = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexEnvfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexEnvi = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexEnviv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexEnvx = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexEnvxOES = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexEnvxv = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexEnvxvOES = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexEstimateMotionQCOM = procedure (ref: GLuint; target: GLuint; output: GLuint); libdecl;
  TglTexEstimateMotionRegionsQCOM = procedure (ref: GLuint; target: GLuint; output: GLuint; mask: GLuint); libdecl;
  TglExtrapolateTex2DQCOM = procedure (src1: GLuint; src2: GLuint; output: GLuint; scaleFactor: GLfloat); libdecl;
  TglTexFilterFuncSGIS = procedure (target: GLenum; filter: GLenum; n: GLsizei; const weights: PGLfloat); libdecl;
  TglTexGend = procedure (coord: GLenum; pname: GLenum; param: GLdouble); libdecl;
  TglTexGendv = procedure (coord: GLenum; pname: GLenum; const params: PGLdouble); libdecl;
  TglTexGenf = procedure (coord: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexGenfOES = procedure (coord: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexGenfv = procedure (coord: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexGenfvOES = procedure (coord: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexGeni = procedure (coord: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexGeniOES = procedure (coord: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexGeniv = procedure (coord: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexGenivOES = procedure (coord: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexGenxOES = procedure (coord: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexGenxvOES = procedure (coord: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexImage1D = procedure (target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage2D = procedure (target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage2DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexImage2DMultisampleCoverageNV = procedure (target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTexImage3D = procedure (target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage3DEXT = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage3DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexImage3DMultisampleCoverageNV = procedure (target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTexImage3DOES = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage4DSGIS = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; size4d: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexPageCommitmentARB = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean); libdecl;
  TglTexPageCommitmentEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean); libdecl;
  TglTexPageCommitmentMemNV = procedure (target: GLenum; layer: GLint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64; commit: GLboolean); libdecl;
  TglTexParameterIiv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterIivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterIivOES = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterIuiv = procedure (target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTexParameterIuivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTexParameterIuivOES = procedure (target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTexParameterf = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexParameterfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexParameteri = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexParameteriv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterx = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexParameterxOES = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexParameterxv = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexParameterxvOES = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexRenderbufferNV = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglTexStorage1D = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTexStorage1DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTexStorage2D = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTexStorage2DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTexStorage2DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexStorage3D = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTexStorage3DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTexStorage3DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexStorage3DMultisampleOES = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexStorageAttribs2DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; const attrib_list: PGLint); libdecl;
  TglTexStorageAttribs3DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; const attrib_list: PGLint); libdecl;
  TglTexStorageMem1DEXT = procedure (target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem2DEXT = procedure (target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem2DMultisampleEXT = procedure (target: GLenum; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem3DEXT = procedure (target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem3DMultisampleEXT = procedure (target: GLenum; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageSparseAMD = procedure (target: GLenum; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; layers: GLsizei; flags: GLbitfield); libdecl;
  TglTexSubImage1D = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage1DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage2D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage2DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage3D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage3DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage3DOES = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage4DSGIS = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; woffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; size4d: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureAttachMemoryNV = procedure (texture: GLuint; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureBarrier = procedure; libdecl;
  TglTextureBarrierNV = procedure; libdecl;
  TglTextureBuffer = procedure (texture: GLuint; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTextureBufferEXT = procedure (texture: GLuint; target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTextureBufferRange = procedure (texture: GLuint; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTextureBufferRangeEXT = procedure (texture: GLuint; target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTextureColorMaskSGIS = procedure (red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean); libdecl;
  TglTextureFoveationParametersQCOM = procedure (texture: GLuint; layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat; gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat); libdecl;
  TglTextureImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureImage2DMultisampleCoverageNV = procedure (texture: GLuint; target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureImage2DMultisampleNV = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureImage3DMultisampleCoverageNV = procedure (texture: GLuint; target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureImage3DMultisampleNV = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureLightEXT = procedure (pname: GLenum); libdecl;
  TglTextureMaterialEXT = procedure (face: GLenum; mode: GLenum); libdecl;
  TglTextureNormalEXT = procedure (mode: GLenum); libdecl;
  TglTexturePageCommitmentEXT = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean); libdecl;
  TglTexturePageCommitmentMemNV = procedure (texture: GLuint; layer: GLint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64; commit: GLboolean); libdecl;
  TglTextureParameterIiv = procedure (texture: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglTextureParameterIivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTextureParameterIuiv = procedure (texture: GLuint; pname: GLenum; const params: PGLuint); libdecl;
  TglTextureParameterIuivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTextureParameterf = procedure (texture: GLuint; pname: GLenum; param: GLfloat); libdecl;
  TglTextureParameterfEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTextureParameterfv = procedure (texture: GLuint; pname: GLenum; const param: PGLfloat); libdecl;
  TglTextureParameterfvEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTextureParameteri = procedure (texture: GLuint; pname: GLenum; param: GLint); libdecl;
  TglTextureParameteriEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTextureParameteriv = procedure (texture: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglTextureParameterivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTextureRangeAPPLE = procedure (target: GLenum; length: GLsizei; const _pointer: Pointer); libdecl;
  TglTextureRenderbufferEXT = procedure (texture: GLuint; target: GLenum; renderbuffer: GLuint); libdecl;
  TglTextureStorage1D = procedure (texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTextureStorage1DEXT = procedure (texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTextureStorage2D = procedure (texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTextureStorage2DEXT = procedure (texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTextureStorage2DMultisample = procedure (texture: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorage2DMultisampleEXT = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorage3D = procedure (texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTextureStorage3DEXT = procedure (texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTextureStorage3DMultisample = procedure (texture: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorage3DMultisampleEXT = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorageMem1DEXT = procedure (texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem2DEXT = procedure (texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem2DMultisampleEXT = procedure (texture: GLuint; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem3DEXT = procedure (texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem3DMultisampleEXT = procedure (texture: GLuint; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageSparseAMD = procedure (texture: GLuint; target: GLenum; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; layers: GLsizei; flags: GLbitfield); libdecl;
  TglTextureSubImage1D = procedure (texture: GLuint; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage2D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage3D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureView = procedure (texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint); libdecl;
  TglTextureViewEXT = procedure (texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint); libdecl;
  TglTextureViewOES = procedure (texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint); libdecl;
  TglTrackMatrixNV = procedure (target: GLenum; address: GLuint; matrix: GLenum; transform: GLenum); libdecl;
  TglTransformFeedbackAttribsNV = procedure (count: GLsizei; const attribs: PGLint; bufferMode: GLenum); libdecl;
  TglTransformFeedbackBufferBase = procedure (xfb: GLuint; index: GLuint; buffer: GLuint); libdecl;
  TglTransformFeedbackBufferRange = procedure (xfb: GLuint; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTransformFeedbackStreamAttribsNV = procedure (count: GLsizei; const attribs: PGLint; nbuffers: GLsizei; const bufstreams: PGLint; bufferMode: GLenum); libdecl;
  TglTransformFeedbackVaryings = procedure (_program: GLuint; count: GLsizei; const varyings: PPGLchar; bufferMode: GLenum); libdecl;
  TglTransformFeedbackVaryingsEXT = procedure (_program: GLuint; count: GLsizei; const varyings: PPGLchar; bufferMode: GLenum); libdecl;
  TglTransformFeedbackVaryingsNV = procedure (_program: GLuint; count: GLsizei; const locations: PGLint; bufferMode: GLenum); libdecl;
  TglTransformPathNV = procedure (resultPath: GLuint; srcPath: GLuint; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglTranslated = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglTranslatef = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTranslatex = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglTranslatexOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglUniform1d = procedure (location: GLint; x: GLdouble); libdecl;
  TglUniform1dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform1f = procedure (location: GLint; v0: GLfloat); libdecl;
  TglUniform1fARB = procedure (location: GLint; v0: GLfloat); libdecl;
  TglUniform1fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform1fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform1i = procedure (location: GLint; v0: GLint); libdecl;
  TglUniform1i64ARB = procedure (location: GLint; x: GLint64); libdecl;
  TglUniform1i64NV = procedure (location: GLint; x: GLint64EXT); libdecl;
  TglUniform1i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform1i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform1iARB = procedure (location: GLint; v0: GLint); libdecl;
  TglUniform1iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform1ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform1ui = procedure (location: GLint; v0: GLuint); libdecl;
  TglUniform1ui64ARB = procedure (location: GLint; x: GLuint64); libdecl;
  TglUniform1ui64NV = procedure (location: GLint; x: GLuint64EXT); libdecl;
  TglUniform1ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform1ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform1uiEXT = procedure (location: GLint; v0: GLuint); libdecl;
  TglUniform1uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform1uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform2d = procedure (location: GLint; x: GLdouble; y: GLdouble); libdecl;
  TglUniform2dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform2f = procedure (location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglUniform2fARB = procedure (location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglUniform2fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform2fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform2i = procedure (location: GLint; v0: GLint; v1: GLint); libdecl;
  TglUniform2i64ARB = procedure (location: GLint; x: GLint64; y: GLint64); libdecl;
  TglUniform2i64NV = procedure (location: GLint; x: GLint64EXT; y: GLint64EXT); libdecl;
  TglUniform2i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform2i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform2iARB = procedure (location: GLint; v0: GLint; v1: GLint); libdecl;
  TglUniform2iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform2ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform2ui = procedure (location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglUniform2ui64ARB = procedure (location: GLint; x: GLuint64; y: GLuint64); libdecl;
  TglUniform2ui64NV = procedure (location: GLint; x: GLuint64EXT; y: GLuint64EXT); libdecl;
  TglUniform2ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform2ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform2uiEXT = procedure (location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglUniform2uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform2uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform3d = procedure (location: GLint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglUniform3dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform3f = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglUniform3fARB = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglUniform3fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform3fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform3i = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglUniform3i64ARB = procedure (location: GLint; x: GLint64; y: GLint64; z: GLint64); libdecl;
  TglUniform3i64NV = procedure (location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT); libdecl;
  TglUniform3i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform3i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform3iARB = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglUniform3iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform3ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform3ui = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglUniform3ui64ARB = procedure (location: GLint; x: GLuint64; y: GLuint64; z: GLuint64); libdecl;
  TglUniform3ui64NV = procedure (location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT); libdecl;
  TglUniform3ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform3ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform3uiEXT = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglUniform3uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform3uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform4d = procedure (location: GLint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglUniform4dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform4f = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglUniform4fARB = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglUniform4fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform4fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform4i = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglUniform4i64ARB = procedure (location: GLint; x: GLint64; y: GLint64; z: GLint64; w: GLint64); libdecl;
  TglUniform4i64NV = procedure (location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT); libdecl;
  TglUniform4i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform4i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform4iARB = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglUniform4iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform4ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform4ui = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglUniform4ui64ARB = procedure (location: GLint; x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64); libdecl;
  TglUniform4ui64NV = procedure (location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT); libdecl;
  TglUniform4ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform4ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform4uiEXT = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglUniform4uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform4uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniformBlockBinding = procedure (_program: GLuint; uniformBlockIndex: GLuint; uniformBlockBinding: GLuint); libdecl;
  TglUniformBufferEXT = procedure (_program: GLuint; location: GLint; buffer: GLuint); libdecl;
  TglUniformHandleui64ARB = procedure (location: GLint; value: GLuint64); libdecl;
  TglUniformHandleui64IMG = procedure (location: GLint; value: GLuint64); libdecl;
  TglUniformHandleui64NV = procedure (location: GLint; value: GLuint64); libdecl;
  TglUniformHandleui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniformHandleui64vIMG = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniformHandleui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniformMatrix2dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix2fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2fvARB = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x3dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix2x3fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x3fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x4dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix2x4fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x4fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix3fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3fvARB = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x2dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix3x2fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x2fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x4dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix3x4fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x4fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix4fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4fvARB = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x2dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix4x2fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x2fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x3dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix4x3fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x3fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformSubroutinesuiv = procedure (shadertype: GLenum; count: GLsizei; const indices: PGLuint); libdecl;
  TglUniformui64NV = procedure (location: GLint; value: GLuint64EXT); libdecl;
  TglUniformui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUnlockArraysEXT = procedure; libdecl;
  TglUnmapBuffer = function (target: GLenum): GLboolean; libdecl;
  TglUnmapBufferARB = function (target: GLenum): GLboolean; libdecl;
  TglUnmapBufferOES = function (target: GLenum): GLboolean; libdecl;
  TglUnmapNamedBuffer = function (buffer: GLuint): GLboolean; libdecl;
  TglUnmapNamedBufferEXT = function (buffer: GLuint): GLboolean; libdecl;
  TglUnmapObjectBufferATI = procedure (buffer: GLuint); libdecl;
  TglUnmapTexture2DINTEL = procedure (texture: GLuint; level: GLint); libdecl;
  TglUpdateObjectBufferATI = procedure (buffer: GLuint; offset: GLuint; size: GLsizei; const _pointer: Pointer; preserve: GLenum); libdecl;
  TglUploadGpuMaskNVX = procedure (mask: GLbitfield); libdecl;
  TglUseProgram = procedure (_program: GLuint); libdecl;
  TglUseProgramObjectARB = procedure (programObj: GLhandleARB); libdecl;
  TglUseProgramStages = procedure (pipeline: GLuint; stages: GLbitfield; _program: GLuint); libdecl;
  TglUseProgramStagesEXT = procedure (pipeline: GLuint; stages: GLbitfield; _program: GLuint); libdecl;
  TglUseShaderProgramEXT = procedure (_type: GLenum; _program: GLuint); libdecl;
  TglVDPAUFiniNV = procedure; libdecl;
  TglVDPAUGetSurfaceivNV = procedure (surface: GLvdpauSurfaceNV; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint); libdecl;
  TglVDPAUInitNV = procedure (const vdpDevice: Pointer; const getProcAddress: Pointer); libdecl;
  TglVDPAUIsSurfaceNV = function (surface: GLvdpauSurfaceNV): GLboolean; libdecl;
  TglVDPAUMapSurfacesNV = procedure (numSurfaces: GLsizei; const surfaces: PGLvdpauSurfaceNV); libdecl;
  TglVDPAURegisterOutputSurfaceNV = function (const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint): GLvdpauSurfaceNV; libdecl;
  TglVDPAURegisterVideoSurfaceNV = function (const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint): GLvdpauSurfaceNV; libdecl;
  TglVDPAURegisterVideoSurfaceWithPictureStructureNV = function (const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint; isFrameStructure: GLboolean): GLvdpauSurfaceNV; libdecl;
  TglVDPAUSurfaceAccessNV = procedure (surface: GLvdpauSurfaceNV; access: GLenum); libdecl;
  TglVDPAUUnmapSurfacesNV = procedure (numSurface: GLsizei; const surfaces: PGLvdpauSurfaceNV); libdecl;
  TglVDPAUUnregisterSurfaceNV = procedure (surface: GLvdpauSurfaceNV); libdecl;
  TglValidateProgram = procedure (_program: GLuint); libdecl;
  TglValidateProgramARB = procedure (programObj: GLhandleARB); libdecl;
  TglValidateProgramPipeline = procedure (pipeline: GLuint); libdecl;
  TglValidateProgramPipelineEXT = procedure (pipeline: GLuint); libdecl;
  TglVariantArrayObjectATI = procedure (id: GLuint; _type: GLenum; stride: GLsizei; buffer: GLuint; offset: GLuint); libdecl;
  TglVariantPointerEXT = procedure (id: GLuint; _type: GLenum; stride: GLuint; const addr: Pointer); libdecl;
  TglVariantbvEXT = procedure (id: GLuint; const addr: PGLbyte); libdecl;
  TglVariantdvEXT = procedure (id: GLuint; const addr: PGLdouble); libdecl;
  TglVariantfvEXT = procedure (id: GLuint; const addr: PGLfloat); libdecl;
  TglVariantivEXT = procedure (id: GLuint; const addr: PGLint); libdecl;
  TglVariantsvEXT = procedure (id: GLuint; const addr: PGLshort); libdecl;
  TglVariantubvEXT = procedure (id: GLuint; const addr: PGLubyte); libdecl;
  TglVariantuivEXT = procedure (id: GLuint; const addr: PGLuint); libdecl;
  TglVariantusvEXT = procedure (id: GLuint; const addr: PGLushort); libdecl;
  TglVertex2bOES = procedure (x: GLbyte; y: GLbyte); libdecl;
  TglVertex2bvOES = procedure (const coords: PGLbyte); libdecl;
  TglVertex2d = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglVertex2dv = procedure (const v: PGLdouble); libdecl;
  TglVertex2f = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglVertex2fv = procedure (const v: PGLfloat); libdecl;
  TglVertex2hNV = procedure (x: GLhalfNV; y: GLhalfNV); libdecl;
  TglVertex2hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglVertex2i = procedure (x: GLint; y: GLint); libdecl;
  TglVertex2iv = procedure (const v: PGLint); libdecl;
  TglVertex2s = procedure (x: GLshort; y: GLshort); libdecl;
  TglVertex2sv = procedure (const v: PGLshort); libdecl;
  TglVertex2xOES = procedure (x: GLfixed); libdecl;
  TglVertex2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglVertex3bOES = procedure (x: GLbyte; y: GLbyte; z: GLbyte); libdecl;
  TglVertex3bvOES = procedure (const coords: PGLbyte); libdecl;
  TglVertex3d = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertex3dv = procedure (const v: PGLdouble); libdecl;
  TglVertex3f = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertex3fv = procedure (const v: PGLfloat); libdecl;
  TglVertex3hNV = procedure (x: GLhalfNV; y: GLhalfNV; z: GLhalfNV); libdecl;
  TglVertex3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglVertex3i = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglVertex3iv = procedure (const v: PGLint); libdecl;
  TglVertex3s = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertex3sv = procedure (const v: PGLshort); libdecl;
  TglVertex3xOES = procedure (x: GLfixed; y: GLfixed); libdecl;
  TglVertex3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglVertex4bOES = procedure (x: GLbyte; y: GLbyte; z: GLbyte; w: GLbyte); libdecl;
  TglVertex4bvOES = procedure (const coords: PGLbyte); libdecl;
  TglVertex4d = procedure (x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertex4dv = procedure (const v: PGLdouble); libdecl;
  TglVertex4f = procedure (x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertex4fv = procedure (const v: PGLfloat); libdecl;
  TglVertex4hNV = procedure (x: GLhalfNV; y: GLhalfNV; z: GLhalfNV; w: GLhalfNV); libdecl;
  TglVertex4hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglVertex4i = procedure (x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertex4iv = procedure (const v: PGLint); libdecl;
  TglVertex4s = procedure (x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertex4sv = procedure (const v: PGLshort); libdecl;
  TglVertex4xOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglVertex4xvOES = procedure (const coords: PGLfixed); libdecl;
  TglVertexArrayAttribBinding = procedure (vaobj: GLuint; attribindex: GLuint; bindingindex: GLuint); libdecl;
  TglVertexArrayAttribFormat = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint); libdecl;
  TglVertexArrayAttribIFormat = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayAttribLFormat = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayBindVertexBufferEXT = procedure (vaobj: GLuint; bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei); libdecl;
  TglVertexArrayBindingDivisor = procedure (vaobj: GLuint; bindingindex: GLuint; divisor: GLuint); libdecl;
  TglVertexArrayColorOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayEdgeFlagOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayElementBuffer = procedure (vaobj: GLuint; buffer: GLuint); libdecl;
  TglVertexArrayFogCoordOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayIndexOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayMultiTexCoordOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; texunit: GLenum; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayNormalOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayParameteriAPPLE = procedure (pname: GLenum; param: GLint); libdecl;
  TglVertexArrayRangeAPPLE = procedure (length: GLsizei; _pointer: Pointer); libdecl;
  TglVertexArrayRangeNV = procedure (length: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexArraySecondaryColorOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayTexCoordOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexAttribBindingEXT = procedure (vaobj: GLuint; attribindex: GLuint; bindingindex: GLuint); libdecl;
  TglVertexArrayVertexAttribDivisorEXT = procedure (vaobj: GLuint; index: GLuint; divisor: GLuint); libdecl;
  TglVertexArrayVertexAttribFormatEXT = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint); libdecl;
  TglVertexArrayVertexAttribIFormatEXT = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayVertexAttribIOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexAttribLFormatEXT = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayVertexAttribLOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexAttribOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexBindingDivisorEXT = procedure (vaobj: GLuint; bindingindex: GLuint; divisor: GLuint); libdecl;
  TglVertexArrayVertexBuffer = procedure (vaobj: GLuint; bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei); libdecl;
  TglVertexArrayVertexBuffers = procedure (vaobj: GLuint; first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const strides: PGLsizei); libdecl;
  TglVertexArrayVertexOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexAttrib1d = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttrib1dARB = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttrib1dNV = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttrib1dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib1dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib1dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib1f = procedure (index: GLuint; x: GLfloat); libdecl;
  TglVertexAttrib1fARB = procedure (index: GLuint; x: GLfloat); libdecl;
  TglVertexAttrib1fNV = procedure (index: GLuint; x: GLfloat); libdecl;
  TglVertexAttrib1fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib1fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib1fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib1hNV = procedure (index: GLuint; x: GLhalfNV); libdecl;
  TglVertexAttrib1hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib1s = procedure (index: GLuint; x: GLshort); libdecl;
  TglVertexAttrib1sARB = procedure (index: GLuint; x: GLshort); libdecl;
  TglVertexAttrib1sNV = procedure (index: GLuint; x: GLshort); libdecl;
  TglVertexAttrib1sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib1svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib1svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib2d = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttrib2dARB = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttrib2dNV = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttrib2dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib2dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib2dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib2f = procedure (index: GLuint; x: GLfloat; y: GLfloat); libdecl;
  TglVertexAttrib2fARB = procedure (index: GLuint; x: GLfloat; y: GLfloat); libdecl;
  TglVertexAttrib2fNV = procedure (index: GLuint; x: GLfloat; y: GLfloat); libdecl;
  TglVertexAttrib2fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib2fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib2fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib2hNV = procedure (index: GLuint; x: GLhalfNV; y: GLhalfNV); libdecl;
  TglVertexAttrib2hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib2s = procedure (index: GLuint; x: GLshort; y: GLshort); libdecl;
  TglVertexAttrib2sARB = procedure (index: GLuint; x: GLshort; y: GLshort); libdecl;
  TglVertexAttrib2sNV = procedure (index: GLuint; x: GLshort; y: GLshort); libdecl;
  TglVertexAttrib2sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib2svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib2svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib3d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttrib3dARB = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttrib3dNV = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttrib3dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib3dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib3dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib3f = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexAttrib3fARB = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexAttrib3fNV = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexAttrib3fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib3fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib3fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib3hNV = procedure (index: GLuint; x: GLhalfNV; y: GLhalfNV; z: GLhalfNV); libdecl;
  TglVertexAttrib3hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib3s = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexAttrib3sARB = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexAttrib3sNV = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexAttrib3sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib3svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib3svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4Nbv = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4NbvARB = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4Niv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4NivARB = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4Nsv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4NsvARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4Nub = procedure (index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte); libdecl;
  TglVertexAttrib4NubARB = procedure (index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte); libdecl;
  TglVertexAttrib4Nubv = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4NubvARB = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4Nuiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4NuivARB = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4Nusv = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttrib4NusvARB = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttrib4bv = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4bvARB = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttrib4dARB = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttrib4dNV = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttrib4dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib4dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib4dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib4f = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexAttrib4fARB = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexAttrib4fNV = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexAttrib4fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib4fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib4fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib4hNV = procedure (index: GLuint; x: GLhalfNV; y: GLhalfNV; z: GLhalfNV; w: GLhalfNV); libdecl;
  TglVertexAttrib4hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib4iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4ivARB = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4s = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexAttrib4sARB = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexAttrib4sNV = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexAttrib4sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4ubNV = procedure (index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte); libdecl;
  TglVertexAttrib4ubv = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4ubvARB = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4ubvNV = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4uivARB = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4usv = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttrib4usvARB = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttribArrayObjectATI = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; buffer: GLuint; offset: GLuint); libdecl;
  TglVertexAttribBinding = procedure (attribindex: GLuint; bindingindex: GLuint); libdecl;
  TglVertexAttribDivisor = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorANGLE = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorARB = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorEXT = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorNV = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribFormat = procedure (attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint); libdecl;
  TglVertexAttribFormatNV = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei); libdecl;
  TglVertexAttribI1i = procedure (index: GLuint; x: GLint); libdecl;
  TglVertexAttribI1iEXT = procedure (index: GLuint; x: GLint); libdecl;
  TglVertexAttribI1iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI1ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI1ui = procedure (index: GLuint; x: GLuint); libdecl;
  TglVertexAttribI1uiEXT = procedure (index: GLuint; x: GLuint); libdecl;
  TglVertexAttribI1uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI1uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI2i = procedure (index: GLuint; x: GLint; y: GLint); libdecl;
  TglVertexAttribI2iEXT = procedure (index: GLuint; x: GLint; y: GLint); libdecl;
  TglVertexAttribI2iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI2ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI2ui = procedure (index: GLuint; x: GLuint; y: GLuint); libdecl;
  TglVertexAttribI2uiEXT = procedure (index: GLuint; x: GLuint; y: GLuint); libdecl;
  TglVertexAttribI2uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI2uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI3i = procedure (index: GLuint; x: GLint; y: GLint; z: GLint); libdecl;
  TglVertexAttribI3iEXT = procedure (index: GLuint; x: GLint; y: GLint; z: GLint); libdecl;
  TglVertexAttribI3iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI3ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI3ui = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint); libdecl;
  TglVertexAttribI3uiEXT = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint); libdecl;
  TglVertexAttribI3uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI3uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI4bv = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttribI4bvEXT = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttribI4i = procedure (index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertexAttribI4iEXT = procedure (index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertexAttribI4iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI4ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI4sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttribI4svEXT = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttribI4ubv = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttribI4ubvEXT = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttribI4ui = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglVertexAttribI4uiEXT = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglVertexAttribI4uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI4uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI4usv = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttribI4usvEXT = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttribIFormat = procedure (attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexAttribIFormatNV = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglVertexAttribIPointer = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribIPointerEXT = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribL1d = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttribL1dEXT = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttribL1dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL1dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL1i64NV = procedure (index: GLuint; x: GLint64EXT); libdecl;
  TglVertexAttribL1i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL1ui64ARB = procedure (index: GLuint; x: GLuint64EXT); libdecl;
  TglVertexAttribL1ui64NV = procedure (index: GLuint; x: GLuint64EXT); libdecl;
  TglVertexAttribL1ui64vARB = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL1ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL2d = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttribL2dEXT = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttribL2dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL2dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL2i64NV = procedure (index: GLuint; x: GLint64EXT; y: GLint64EXT); libdecl;
  TglVertexAttribL2i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL2ui64NV = procedure (index: GLuint; x: GLuint64EXT; y: GLuint64EXT); libdecl;
  TglVertexAttribL2ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL3d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttribL3dEXT = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttribL3dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL3dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL3i64NV = procedure (index: GLuint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT); libdecl;
  TglVertexAttribL3i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL3ui64NV = procedure (index: GLuint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT); libdecl;
  TglVertexAttribL3ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL4d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttribL4dEXT = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttribL4dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL4dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL4i64NV = procedure (index: GLuint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT); libdecl;
  TglVertexAttribL4i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL4ui64NV = procedure (index: GLuint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT); libdecl;
  TglVertexAttribL4ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribLFormat = procedure (attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexAttribLFormatNV = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglVertexAttribLPointer = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribLPointerEXT = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribP1ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP1uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribP2ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP2uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribP3ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP3uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribP4ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP4uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribParameteriAMD = procedure (index: GLuint; pname: GLenum; param: GLint); libdecl;
  TglVertexAttribPointer = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribPointerARB = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribPointerNV = procedure (index: GLuint; fsize: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribs1dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs1fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs1hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs1svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs2dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs2fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs2hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs2svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs3dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs3fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs3hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs3svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs4dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs4fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs4hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs4svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs4ubvNV = procedure (index: GLuint; count: GLsizei; const v: PGLubyte); libdecl;
  TglVertexBindingDivisor = procedure (bindingindex: GLuint; divisor: GLuint); libdecl;
  TglVertexBlendARB = procedure (count: GLint); libdecl;
  TglVertexBlendEnvfATI = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglVertexBlendEnviATI = procedure (pname: GLenum; param: GLint); libdecl;
  TglVertexFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglVertexP2ui = procedure (_type: GLenum; value: GLuint); libdecl;
  TglVertexP2uiv = procedure (_type: GLenum; const value: PGLuint); libdecl;
  TglVertexP3ui = procedure (_type: GLenum; value: GLuint); libdecl;
  TglVertexP3uiv = procedure (_type: GLenum; const value: PGLuint); libdecl;
  TglVertexP4ui = procedure (_type: GLenum; value: GLuint); libdecl;
  TglVertexP4uiv = procedure (_type: GLenum; const value: PGLuint); libdecl;
  TglVertexPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglVertexPointervINTEL = procedure (size: GLint; _type: GLenum; const _pointer: PPointer); libdecl;
  TglVertexStream1dATI = procedure (stream: GLenum; x: GLdouble); libdecl;
  TglVertexStream1dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream1fATI = procedure (stream: GLenum; x: GLfloat); libdecl;
  TglVertexStream1fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream1iATI = procedure (stream: GLenum; x: GLint); libdecl;
  TglVertexStream1ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream1sATI = procedure (stream: GLenum; x: GLshort); libdecl;
  TglVertexStream1svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexStream2dATI = procedure (stream: GLenum; x: GLdouble; y: GLdouble); libdecl;
  TglVertexStream2dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream2fATI = procedure (stream: GLenum; x: GLfloat; y: GLfloat); libdecl;
  TglVertexStream2fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream2iATI = procedure (stream: GLenum; x: GLint; y: GLint); libdecl;
  TglVertexStream2ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream2sATI = procedure (stream: GLenum; x: GLshort; y: GLshort); libdecl;
  TglVertexStream2svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexStream3dATI = procedure (stream: GLenum; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexStream3dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream3fATI = procedure (stream: GLenum; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexStream3fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream3iATI = procedure (stream: GLenum; x: GLint; y: GLint; z: GLint); libdecl;
  TglVertexStream3ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream3sATI = procedure (stream: GLenum; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexStream3svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexStream4dATI = procedure (stream: GLenum; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexStream4dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream4fATI = procedure (stream: GLenum; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexStream4fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream4iATI = procedure (stream: GLenum; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertexStream4ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream4sATI = procedure (stream: GLenum; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexStream4svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexWeightPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexWeightfEXT = procedure (weight: GLfloat); libdecl;
  TglVertexWeightfvEXT = procedure (const weight: PGLfloat); libdecl;
  TglVertexWeighthNV = procedure (weight: GLhalfNV); libdecl;
  TglVertexWeighthvNV = procedure (const weight: PGLhalfNV); libdecl;
  TglVideoCaptureNV = function (video_capture_slot: GLuint; sequence_num: PGLuint; capture_time: PGLuint64EXT): GLenum; libdecl;
  TglVideoCaptureStreamParameterdvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLdouble); libdecl;
  TglVideoCaptureStreamParameterfvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLfloat); libdecl;
  TglVideoCaptureStreamParameterivNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglViewport = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglViewportArrayv = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglViewportArrayvNV = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglViewportArrayvOES = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglViewportIndexedf = procedure (index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat); libdecl;
  TglViewportIndexedfOES = procedure (index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat); libdecl;
  TglViewportIndexedfNV = procedure (index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat); libdecl;
  TglViewportIndexedfv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglViewportIndexedfvOES = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglViewportIndexedfvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglViewportPositionWScaleNV = procedure (index: GLuint; xcoeff: GLfloat; ycoeff: GLfloat); libdecl;
  TglViewportSwizzleNV = procedure (index: GLuint; swizzlex: GLenum; swizzley: GLenum; swizzlez: GLenum; swizzlew: GLenum); libdecl;
  TglWaitSemaphoreEXT = procedure (semaphore: GLuint; numBufferBarriers: GLuint; const buffers: PGLuint; numTextureBarriers: GLuint; const textures: PGLuint; const srcLayouts: PGLenum); libdecl;
  TglWaitSemaphoreui64NVX = procedure (waitGpu: GLuint; fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64); libdecl;
  TglWaitSync = procedure (sync: GLsync; flags: GLbitfield; timeout: GLuint64); libdecl;
  TglWaitSyncAPPLE = procedure (sync: GLsync; flags: GLbitfield; timeout: GLuint64); libdecl;
  TglWeightPathsNV = procedure (resultPath: GLuint; numPaths: GLsizei; const paths: PGLuint; const weights: PGLfloat); libdecl;
  TglWeightPointerARB = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglWeightPointerOES = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglWeightbvARB = procedure (size: GLint; const weights: PGLbyte); libdecl;
  TglWeightdvARB = procedure (size: GLint; const weights: PGLdouble); libdecl;
  TglWeightfvARB = procedure (size: GLint; const weights: PGLfloat); libdecl;
  TglWeightivARB = procedure (size: GLint; const weights: PGLint); libdecl;
  TglWeightsvARB = procedure (size: GLint; const weights: PGLshort); libdecl;
  TglWeightubvARB = procedure (size: GLint; const weights: PGLubyte); libdecl;
  TglWeightuivARB = procedure (size: GLint; const weights: PGLuint); libdecl;
  TglWeightusvARB = procedure (size: GLint; const weights: PGLushort); libdecl;
  TglWindowPos2d = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglWindowPos2dARB = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglWindowPos2dMESA = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglWindowPos2dv = procedure (const v: PGLdouble); libdecl;
  TglWindowPos2dvARB = procedure (const v: PGLdouble); libdecl;
  TglWindowPos2dvMESA = procedure (const v: PGLdouble); libdecl;
  TglWindowPos2f = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglWindowPos2fARB = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglWindowPos2fMESA = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglWindowPos2fv = procedure (const v: PGLfloat); libdecl;
  TglWindowPos2fvARB = procedure (const v: PGLfloat); libdecl;
  TglWindowPos2fvMESA = procedure (const v: PGLfloat); libdecl;
  TglWindowPos2i = procedure (x: GLint; y: GLint); libdecl;
  TglWindowPos2iARB = procedure (x: GLint; y: GLint); libdecl;
  TglWindowPos2iMESA = procedure (x: GLint; y: GLint); libdecl;
  TglWindowPos2iv = procedure (const v: PGLint); libdecl;
  TglWindowPos2ivARB = procedure (const v: PGLint); libdecl;
  TglWindowPos2ivMESA = procedure (const v: PGLint); libdecl;
  TglWindowPos2s = procedure (x: GLshort; y: GLshort); libdecl;
  TglWindowPos2sARB = procedure (x: GLshort; y: GLshort); libdecl;
  TglWindowPos2sMESA = procedure (x: GLshort; y: GLshort); libdecl;
  TglWindowPos2sv = procedure (const v: PGLshort); libdecl;
  TglWindowPos2svARB = procedure (const v: PGLshort); libdecl;
  TglWindowPos2svMESA = procedure (const v: PGLshort); libdecl;
  TglWindowPos3d = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglWindowPos3dARB = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglWindowPos3dMESA = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglWindowPos3dv = procedure (const v: PGLdouble); libdecl;
  TglWindowPos3dvARB = procedure (const v: PGLdouble); libdecl;
  TglWindowPos3dvMESA = procedure (const v: PGLdouble); libdecl;
  TglWindowPos3f = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglWindowPos3fARB = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglWindowPos3fMESA = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglWindowPos3fv = procedure (const v: PGLfloat); libdecl;
  TglWindowPos3fvARB = procedure (const v: PGLfloat); libdecl;
  TglWindowPos3fvMESA = procedure (const v: PGLfloat); libdecl;
  TglWindowPos3i = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglWindowPos3iARB = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglWindowPos3iMESA = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglWindowPos3iv = procedure (const v: PGLint); libdecl;
  TglWindowPos3ivARB = procedure (const v: PGLint); libdecl;
  TglWindowPos3ivMESA = procedure (const v: PGLint); libdecl;
  TglWindowPos3s = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglWindowPos3sARB = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglWindowPos3sMESA = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglWindowPos3sv = procedure (const v: PGLshort); libdecl;
  TglWindowPos3svARB = procedure (const v: PGLshort); libdecl;
  TglWindowPos3svMESA = procedure (const v: PGLshort); libdecl;
  TglWindowPos4dMESA = procedure (x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglWindowPos4dvMESA = procedure (const v: PGLdouble); libdecl;
  TglWindowPos4fMESA = procedure (x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglWindowPos4fvMESA = procedure (const v: PGLfloat); libdecl;
  TglWindowPos4iMESA = procedure (x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglWindowPos4ivMESA = procedure (const v: PGLint); libdecl;
  TglWindowPos4sMESA = procedure (x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglWindowPos4svMESA = procedure (const v: PGLshort); libdecl;
  TglWindowRectanglesEXT = procedure (mode: GLenum; count: GLsizei; const box: PGLint); libdecl;
  TglWriteMaskEXT = procedure (res: GLuint; _in: GLuint; outX: GLenum; outY: GLenum; outZ: GLenum; outW: GLenum); libdecl;
  TglDrawVkImageNV = procedure (vkImage: GLuint64; sampler: GLuint; x0: GLfloat; y0: GLfloat; x1: GLfloat; y1: GLfloat; z: GLfloat; s0: GLfloat; t0: GLfloat; s1: GLfloat; t1: GLfloat); libdecl;
  TglGetVkProcAddrNV = function (const name: PGLchar): GLVULKANPROCNV; libdecl;
  TglWaitVkSemaphoreNV = procedure (vkSemaphore: GLuint64); libdecl;
  TglSignalVkSemaphoreNV = procedure (vkSemaphore: GLuint64); libdecl;
  TglSignalVkFenceNV = procedure (vkFence: GLuint64); libdecl;
  TglFramebufferParameteriMESA = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglGetFramebufferParameterivMESA = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
{$if defined(WINDOWS)}
  TChoosePixelFormat = function (hDc: HDC; const pPfd: PPIXELFORMATDESCRIPTOR): LongInt; libdecl;
  TDescribePixelFormat = function (hdc: HDC; ipfd: LongInt; cjpfd: UINT; ppfd: PPIXELFORMATDESCRIPTOR): LongInt; libdecl;
  TGetPixelFormat = function (hdc: HDC): LongInt; libdecl;
  TSetPixelFormat = function (hdc: HDC; ipfd: LongInt; const ppfd: PPIXELFORMATDESCRIPTOR): BOOL; libdecl;
  TSwapBuffers = function (hdc: HDC): BOOL; libdecl;
  TwglAllocateMemoryNV = function (size: GLsizei; readfreq: GLfloat; writefreq: GLfloat; priority: GLfloat): Pointer; libdecl;
  TwglAssociateImageBufferEventsI3D = function (hDC: HDC; const pEvent: PHANDLE; const pAddress: PLPVOID; const pSize: PDWORD; count: UINT): BOOL; libdecl;
  TwglBeginFrameTrackingI3D = function: BOOL; libdecl;
  TwglBindDisplayColorTableEXT = function (id: GLushort): GLboolean; libdecl;
  TwglBindSwapBarrierNV = function (group: GLuint; barrier: GLuint): BOOL; libdecl;
  TwglBindTexImageARB = function (hPbuffer: HPBUFFERARB; iBuffer: LongInt): BOOL; libdecl;
  TwglBindVideoCaptureDeviceNV = function (uVideoSlot: UINT; hDevice: HVIDEOINPUTDEVICENV): BOOL; libdecl;
  TwglBindVideoDeviceNV = function (hDc: HDC; uVideoSlot: LongWord; hVideoDevice: HVIDEOOUTPUTDEVICENV; const piAttribList: PLongInt): BOOL; libdecl;
  TwglBindVideoImageNV = function (hVideoDevice: HPVIDEODEV; hPbuffer: HPBUFFERARB; iVideoBuffer: LongInt): BOOL; libdecl;
  TwglBlitContextFramebufferAMD = procedure (dstCtx: HGLRC; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TwglChoosePixelFormatARB = function (hdc: HDC; const piAttribIList: PLongInt; const pfAttribFList: PFLOAT; nMaxFormats: UINT; piFormats: PLongInt; nNumFormats: PUINT): BOOL; libdecl;
  TwglChoosePixelFormatEXT = function (hdc: HDC; const piAttribIList: PLongInt; const pfAttribFList: PFLOAT; nMaxFormats: UINT; piFormats: PLongInt; nNumFormats: PUINT): BOOL; libdecl;
  TwglCopyContext = function (hglrcSrc: HGLRC; hglrcDst: HGLRC; mask: UINT): BOOL; libdecl;
  TwglCopyImageSubDataNV = function (hSrcRC: HGLRC; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; hDstRC: HGLRC; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei): BOOL; libdecl;
  TwglCreateAffinityDCNV = function (const phGpuList: PHGPUNV): HDC; libdecl;
  TwglCreateAssociatedContextAMD = function (id: UINT): HGLRC; libdecl;
  TwglCreateAssociatedContextAttribsAMD = function (id: UINT; hShareContext: HGLRC; const attribList: PLongInt): HGLRC; libdecl;
  TwglCreateBufferRegionARB = function (hDC: HDC; iLayerPlane: LongInt; uType: UINT): HANDLE; libdecl;
  TwglCreateContext = function (hDc: HDC): HGLRC; libdecl;
  TwglCreateContextAttribsARB = function (hDC: HDC; hShareContext: HGLRC; const attribList: PLongInt): HGLRC; libdecl;
  TwglCreateDisplayColorTableEXT = function (id: GLushort): GLboolean; libdecl;
  TwglCreateImageBufferI3D = function (hDC: HDC; dwSize: DWORD; uFlags: UINT): LPVOID; libdecl;
  TwglCreateLayerContext = function (hDc: HDC; level: LongInt): HGLRC; libdecl;
  TwglCreatePbufferARB = function (hDC: HDC; iPixelFormat: LongInt; iWidth: LongInt; iHeight: LongInt; const piAttribList: PLongInt): HPBUFFERARB; libdecl;
  TwglCreatePbufferEXT = function (hDC: HDC; iPixelFormat: LongInt; iWidth: LongInt; iHeight: LongInt; const piAttribList: PLongInt): HPBUFFEREXT; libdecl;
  TwglDelayBeforeSwapNV = function (hDC: HDC; seconds: GLfloat): BOOL; libdecl;
  TwglDeleteAssociatedContextAMD = function (hglrc: HGLRC): BOOL; libdecl;
  TwglDeleteBufferRegionARB = procedure (hRegion: HANDLE); libdecl;
  TwglDeleteContext = function (oldContext: HGLRC): BOOL; libdecl;
  TwglDeleteDCNV = function (hdc: HDC): BOOL; libdecl;
  TwglDescribeLayerPlane = function (hDc: HDC; pixelFormat: LongInt; layerPlane: LongInt; nBytes: UINT; plpd: PLAYERPLANEDESCRIPTOR): BOOL; libdecl;
  TwglDestroyDisplayColorTableEXT = procedure (id: GLushort); libdecl;
  TwglDestroyImageBufferI3D = function (hDC: HDC; pAddress: LPVOID): BOOL; libdecl;
  TwglDestroyPbufferARB = function (hPbuffer: HPBUFFERARB): BOOL; libdecl;
  TwglDestroyPbufferEXT = function (hPbuffer: HPBUFFEREXT): BOOL; libdecl;
  TwglDisableFrameLockI3D = function: BOOL; libdecl;
  TwglDisableGenlockI3D = function (hDC: HDC): BOOL; libdecl;
  TwglDXCloseDeviceNV = function (hDevice: HANDLE): BOOL; libdecl;
  TwglDXLockObjectsNV = function (hDevice: HANDLE; count: GLint; hObjects: PHANDLE): BOOL; libdecl;
  TwglDXObjectAccessNV = function (hObject: HANDLE; access: GLenum): BOOL; libdecl;
  TwglDXOpenDeviceNV = function (dxDevice: Pointer): HANDLE; libdecl;
  TwglDXRegisterObjectNV = function (hDevice: HANDLE; dxObject: Pointer; name: GLuint; _type: GLenum; access: GLenum): HANDLE; libdecl;
  TwglDXSetResourceShareHandleNV = function (dxObject: Pointer; shareHandle: HANDLE): BOOL; libdecl;
  TwglDXUnlockObjectsNV = function (hDevice: HANDLE; count: GLint; hObjects: PHANDLE): BOOL; libdecl;
  TwglDXUnregisterObjectNV = function (hDevice: HANDLE; hObject: HANDLE): BOOL; libdecl;
  TwglEnableFrameLockI3D = function: BOOL; libdecl;
  TwglEnableGenlockI3D = function (hDC: HDC): BOOL; libdecl;
  TwglEndFrameTrackingI3D = function: BOOL; libdecl;
  TwglEnumerateVideoCaptureDevicesNV = function (hDc: HDC; phDeviceList: PHVIDEOINPUTDEVICENV): UINT; libdecl;
  TwglEnumerateVideoDevicesNV = function (hDc: HDC; phDeviceList: PHVIDEOOUTPUTDEVICENV): LongInt; libdecl;
  TwglEnumGpuDevicesNV = function (hGpu: HGPUNV; iDeviceIndex: UINT; lpGpuDevice: PGPU_DEVICE): BOOL; libdecl;
  TwglEnumGpusFromAffinityDCNV = function (hAffinityDC: HDC; iGpuIndex: UINT; hGpu: PHGPUNV): BOOL; libdecl;
  TwglEnumGpusNV = function (iGpuIndex: UINT; phGpu: PHGPUNV): BOOL; libdecl;
  TwglFreeMemoryNV = procedure (_pointer: Pointer); libdecl;
  TwglGenlockSampleRateI3D = function (hDC: HDC; uRate: UINT): BOOL; libdecl;
  TwglGenlockSourceDelayI3D = function (hDC: HDC; uDelay: UINT): BOOL; libdecl;
  TwglGenlockSourceEdgeI3D = function (hDC: HDC; uEdge: UINT): BOOL; libdecl;
  TwglGenlockSourceI3D = function (hDC: HDC; uSource: UINT): BOOL; libdecl;
  TwglGetContextGPUIDAMD = function (hglrc: HGLRC): UINT; libdecl;
  TwglGetCurrentAssociatedContextAMD = function: HGLRC; libdecl;
  TwglGetCurrentContext = function: HGLRC; libdecl;
  TwglGetCurrentDC = function: HDC; libdecl;
  TwglGetCurrentReadDCARB = function: HDC; libdecl;
  TwglGetCurrentReadDCEXT = function: HDC; libdecl;
  TwglGetDefaultProcAddress = function (lpszProc: LPCSTR): PROC; libdecl;
  TwglGetDigitalVideoParametersI3D = function (hDC: HDC; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TGetEnhMetaFilePixelFormat = function (hemf: HENHMETAFILE; cbBuffer: UINT; ppfd: PPIXELFORMATDESCRIPTOR): UINT; libdecl;
  TwglGetExtensionsStringARB = function (hdc: HDC): PShortInt; libdecl;
  TwglGetExtensionsStringEXT = function: PShortInt; libdecl;
  TwglGetFrameUsageI3D = function (pUsage: PSingle): BOOL; libdecl;
  TwglGetGammaTableI3D = function (hDC: HDC; iEntries: LongInt; puRed: PUSHORT; puGreen: PUSHORT; puBlue: PUSHORT): BOOL; libdecl;
  TwglGetGammaTableParametersI3D = function (hDC: HDC; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglGetGenlockSampleRateI3D = function (hDC: HDC; uRate: PUINT): BOOL; libdecl;
  TwglGetGenlockSourceDelayI3D = function (hDC: HDC; uDelay: PUINT): BOOL; libdecl;
  TwglGetGenlockSourceEdgeI3D = function (hDC: HDC; uEdge: PUINT): BOOL; libdecl;
  TwglGetGenlockSourceI3D = function (hDC: HDC; uSource: PUINT): BOOL; libdecl;
  TwglGetGPUIDsAMD = function (maxCount: UINT; ids: PUINT): UINT; libdecl;
  TwglGetGPUInfoAMD = function (id: UINT; _property: INT; dataType: GLenum; size: UINT; data: Pointer): INT; libdecl;
  TwglGetLayerPaletteEntries = function (hdc: HDC; iLayerPlane: LongInt; iStart: LongInt; cEntries: LongInt; pcr: PCOLORREF): LongInt; libdecl;
  TwglGetMscRateOML = function (hdc: HDC; numerator: PINT32; denominator: PINT32): BOOL; libdecl;
  TwglGetPbufferDCARB = function (hPbuffer: HPBUFFERARB): HDC; libdecl;
  TwglGetPbufferDCEXT = function (hPbuffer: HPBUFFEREXT): HDC; libdecl;
  TwglGetPixelFormatAttribfvARB = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; const piAttributes: PLongInt; pfValues: PFLOAT): BOOL; libdecl;
  TwglGetPixelFormatAttribfvEXT = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; piAttributes: PLongInt; pfValues: PFLOAT): BOOL; libdecl;
  TwglGetPixelFormatAttribivARB = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; const piAttributes: PLongInt; piValues: PLongInt): BOOL; libdecl;
  TwglGetPixelFormatAttribivEXT = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; piAttributes: PLongInt; piValues: PLongInt): BOOL; libdecl;
  TwglGetProcAddress = function (lpszProc: LPCSTR): PROC; libdecl;
  TwglGetSwapIntervalEXT = function: LongInt; libdecl;
  TwglGetSyncValuesOML = function (hdc: HDC; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL; libdecl;
  TwglGetVideoDeviceNV = function (hDC: HDC; numDevices: LongInt; hVideoDevice: PHPVIDEODEV): BOOL; libdecl;
  TwglGetVideoInfoNV = function (hpVideoDevice: HPVIDEODEV; pulCounterOutputPbuffer: PLongWord; pulCounterOutputVideo: PLongWord): BOOL; libdecl;
  TwglIsEnabledFrameLockI3D = function (pFlag: PBOOL): BOOL; libdecl;
  TwglIsEnabledGenlockI3D = function (hDC: HDC; pFlag: PBOOL): BOOL; libdecl;
  TwglJoinSwapGroupNV = function (hDC: HDC; group: GLuint): BOOL; libdecl;
  TwglLoadDisplayColorTableEXT = function (const table: PGLushort; length: GLuint): GLboolean; libdecl;
  TwglLockVideoCaptureDeviceNV = function (hDc: HDC; hDevice: HVIDEOINPUTDEVICENV): BOOL; libdecl;
  TwglMakeAssociatedContextCurrentAMD = function (hglrc: HGLRC): BOOL; libdecl;
  TwglMakeContextCurrentARB = function (hDrawDC: HDC; hReadDC: HDC; hglrc: HGLRC): BOOL; libdecl;
  TwglMakeContextCurrentEXT = function (hDrawDC: HDC; hReadDC: HDC; hglrc: HGLRC): BOOL; libdecl;
  TwglMakeCurrent = function (hDc: HDC; newContext: HGLRC): BOOL; libdecl;
  TwglQueryCurrentContextNV = function (iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglQueryFrameCountNV = function (hDC: HDC; count: PGLuint): BOOL; libdecl;
  TwglQueryFrameLockMasterI3D = function (pFlag: PBOOL): BOOL; libdecl;
  TwglQueryFrameTrackingI3D = function (pFrameCount: PDWORD; pMissedFrames: PDWORD; pLastMissedUsage: PSingle): BOOL; libdecl;
  TwglQueryGenlockMaxSourceDelayI3D = function (hDC: HDC; uMaxLineDelay: PUINT; uMaxPixelDelay: PUINT): BOOL; libdecl;
  TwglQueryMaxSwapGroupsNV = function (hDC: HDC; maxGroups: PGLuint; maxBarriers: PGLuint): BOOL; libdecl;
  TwglQueryPbufferARB = function (hPbuffer: HPBUFFERARB; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglQueryPbufferEXT = function (hPbuffer: HPBUFFEREXT; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglQuerySwapGroupNV = function (hDC: HDC; group: PGLuint; barrier: PGLuint): BOOL; libdecl;
  TwglQueryVideoCaptureDeviceNV = function (hDc: HDC; hDevice: HVIDEOINPUTDEVICENV; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglRealizeLayerPalette = function (hdc: HDC; iLayerPlane: LongInt; bRealize: BOOL): BOOL; libdecl;
  TwglReleaseImageBufferEventsI3D = function (hDC: HDC; const pAddress: PLPVOID; count: UINT): BOOL; libdecl;
  TwglReleasePbufferDCARB = function (hPbuffer: HPBUFFERARB; hDC: HDC): LongInt; libdecl;
  TwglReleasePbufferDCEXT = function (hPbuffer: HPBUFFEREXT; hDC: HDC): LongInt; libdecl;
  TwglReleaseTexImageARB = function (hPbuffer: HPBUFFERARB; iBuffer: LongInt): BOOL; libdecl;
  TwglReleaseVideoCaptureDeviceNV = function (hDc: HDC; hDevice: HVIDEOINPUTDEVICENV): BOOL; libdecl;
  TwglReleaseVideoDeviceNV = function (hVideoDevice: HPVIDEODEV): BOOL; libdecl;
  TwglReleaseVideoImageNV = function (hPbuffer: HPBUFFERARB; iVideoBuffer: LongInt): BOOL; libdecl;
  TwglResetFrameCountNV = function (hDC: HDC): BOOL; libdecl;
  TwglRestoreBufferRegionARB = function (hRegion: HANDLE; x: LongInt; y: LongInt; width: LongInt; height: LongInt; xSrc: LongInt; ySrc: LongInt): BOOL; libdecl;
  TwglSaveBufferRegionARB = function (hRegion: HANDLE; x: LongInt; y: LongInt; width: LongInt; height: LongInt): BOOL; libdecl;
  TwglSendPbufferToVideoNV = function (hPbuffer: HPBUFFERARB; iBufferType: LongInt; pulCounterPbuffer: PLongWord; bBlock: BOOL): BOOL; libdecl;
  TwglSetDigitalVideoParametersI3D = function (hDC: HDC; iAttribute: LongInt; const piValue: PLongInt): BOOL; libdecl;
  TwglSetGammaTableI3D = function (hDC: HDC; iEntries: LongInt; const puRed: PUSHORT; const puGreen: PUSHORT; const puBlue: PUSHORT): BOOL; libdecl;
  TwglSetGammaTableParametersI3D = function (hDC: HDC; iAttribute: LongInt; const piValue: PLongInt): BOOL; libdecl;
  TwglSetLayerPaletteEntries = function (hdc: HDC; iLayerPlane: LongInt; iStart: LongInt; cEntries: LongInt; const pcr: PCOLORREF): LongInt; libdecl;
  TwglSetPbufferAttribARB = function (hPbuffer: HPBUFFERARB; const piAttribList: PLongInt): BOOL; libdecl;
  TwglSetStereoEmitterState3DL = function (hDC: HDC; uState: UINT): BOOL; libdecl;
  TwglShareLists = function (hrcSrvShare: HGLRC; hrcSrvSource: HGLRC): BOOL; libdecl;
  TwglSwapBuffersMscOML = function (hdc: HDC; target_msc: INT64; divisor: INT64; remainder: INT64): INT64; libdecl;
  TwglSwapLayerBuffers = function (hdc: HDC; fuFlags: UINT): BOOL; libdecl;
  TwglSwapIntervalEXT = function (interval: LongInt): BOOL; libdecl;
  TwglSwapLayerBuffersMscOML = function (hdc: HDC; fuPlanes: INT; target_msc: INT64; divisor: INT64; remainder: INT64): INT64; libdecl;
  TwglUseFontBitmaps = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL; libdecl;
  TwglUseFontBitmapsA = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL; libdecl;
  TwglUseFontBitmapsW = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL; libdecl;
  TwglUseFontOutlines = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL; libdecl;
  TwglUseFontOutlinesA = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL; libdecl;
  TwglUseFontOutlinesW = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL; libdecl;
  TwglWaitForMscOML = function (hdc: HDC; target_msc: INT64; divisor: INT64; remainder: INT64; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL; libdecl;
  TwglWaitForSbcOML = function (hdc: HDC; target_sbc: INT64; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL; libdecl;
{$endif}
{$if defined(LINUX)}
  TglXAssociateDMPbufferSGIX = function (dpy: PTXDisplay; pbuffer: GLXPbufferSGIX; params: PDMparams; dmbuffer: DMbuffer): TBool; libdecl;
  TglXBindChannelToWindowSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; window: TWindow): LongInt; libdecl;
  TglXBindHyperpipeSGIX = function (dpy: PTXDisplay; hpId: LongInt): LongInt; libdecl;
  TglXBindSwapBarrierNV = function (dpy: PTXDisplay; group: GLuint; barrier: GLuint): TBool; libdecl;
  TglXBindSwapBarrierSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; barrier: LongInt); libdecl;
  TglXBindTexImageEXT = procedure (dpy: PTXDisplay; drawable: GLXDrawable; buffer: LongInt; const attrib_list: PLongInt); libdecl;
  TglXBindVideoCaptureDeviceNV = function (dpy: PTXDisplay; video_capture_slot: LongWord; device: GLXVideoCaptureDeviceNV): LongInt; libdecl;
  TglXBindVideoDeviceNV = function (dpy: PTXDisplay; video_slot: LongWord; video_device: LongWord; const attrib_list: PLongInt): LongInt; libdecl;
  TglXBindVideoImageNV = function (dpy: PTXDisplay; VideoDevice: GLXVideoDeviceNV; pbuf: GLXPbuffer; iVideoBuffer: LongInt): LongInt; libdecl;
  TglXBlitContextFramebufferAMD = procedure (dstCtx: GLXContext; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglXChannelRectSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; x: LongInt; y: LongInt; w: LongInt; h: LongInt): LongInt; libdecl;
  TglXChannelRectSyncSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; synctype: GLenum): LongInt; libdecl;
  TglXChooseFBConfig = function (dpy: PTXDisplay; screen: LongInt; const attrib_list: PLongInt; nelements: PLongInt): PGLXFBConfig; libdecl;
  TglXChooseFBConfigSGIX = function (dpy: PTXDisplay; screen: LongInt; attrib_list: PLongInt; nelements: PLongInt): PGLXFBConfigSGIX; libdecl;
  TglXChooseVisual = function (dpy: PTXDisplay; screen: LongInt; attribList: PLongInt): PTXVisualInfo; libdecl;
  TglXCopyBufferSubDataNV = procedure (dpy: PTXDisplay; readCtx: GLXContext; writeCtx: GLXContext; readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglXNamedCopyBufferSubDataNV = procedure (dpy: PTXDisplay; readCtx: GLXContext; writeCtx: GLXContext; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglXCopyContext = procedure (dpy: PTXDisplay; src: GLXContext; dst: GLXContext; mask: LongWord); libdecl;
  TglXCopyImageSubDataNV = procedure (dpy: PTXDisplay; srcCtx: GLXContext; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstCtx: GLXContext; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglXCopySubBufferMESA = procedure (dpy: PTXDisplay; drawable: GLXDrawable; x: LongInt; y: LongInt; width: LongInt; height: LongInt); libdecl;
  TglXCreateAssociatedContextAMD = function (id: LongWord; share_list: GLXContext): GLXContext; libdecl;
  TglXCreateAssociatedContextAttribsAMD = function (id: LongWord; share_context: GLXContext; const attribList: PLongInt): GLXContext; libdecl;
  TglXCreateContextAttribsARB = function (dpy: PTXDisplay; config: GLXFBConfig; share_context: GLXContext; direct: TBool; const attrib_list: PLongInt): GLXContext; libdecl;
  TglXCreateContext = function (dpy: PTXDisplay; vis: PTXVisualInfo; shareList: GLXContext; direct: TBool): GLXContext; libdecl;
  TglXCreateContextWithConfigSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; render_type: LongInt; share_list: GLXContext; direct: TBool): GLXContext; libdecl;
  TglXCreateGLXPbufferSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; width: LongWord; height: LongWord; attrib_list: PLongInt): GLXPbufferSGIX; libdecl;
  TglXCreateGLXPixmap = function (dpy: PTXDisplay; visual: PTXVisualInfo; pixmap: TPixmap): GLXPixmap; libdecl;
  TglXCreateGLXPixmapMESA = function (dpy: PTXDisplay; visual: PTXVisualInfo; pixmap: TPixmap; cmap: TColormap): GLXPixmap; libdecl;
  TglXCreateGLXPixmapWithConfigSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; pixmap: TPixmap): GLXPixmap; libdecl;
  TglXCreateGLXVideoSourceSGIX = function (display: PTXDisplay; screen: LongInt; server: VLServer; path: VLPath; nodeClass: LongInt; drainNode: VLNode): GLXVideoSourceSGIX; libdecl;
  TglXCreateNewContext = function (dpy: PTXDisplay; config: GLXFBConfig; render_type: LongInt; share_list: GLXContext; direct: TBool): GLXContext; libdecl;
  TglXCreatePbuffer = function (dpy: PTXDisplay; config: GLXFBConfig; const attrib_list: PLongInt): GLXPbuffer; libdecl;
  TglXCreatePixmap = function (dpy: PTXDisplay; config: GLXFBConfig; pixmap: TPixmap; const attrib_list: PLongInt): GLXPixmap; libdecl;
  TglXCreateWindow = function (dpy: PTXDisplay; config: GLXFBConfig; win: TWindow; const attrib_list: PLongInt): GLXWindow; libdecl;
  TglXCushionSGI = procedure (dpy: PTXDisplay; window: TWindow; cushion: Single); libdecl;
  TglXDelayBeforeSwapNV = function (dpy: PTXDisplay; drawable: GLXDrawable; seconds: GLfloat): TBool; libdecl;
  TglXDeleteAssociatedContextAMD = function (ctx: GLXContext): TBool; libdecl;
  TglXDestroyContext = procedure (dpy: PTXDisplay; ctx: GLXContext); libdecl;
  TglXDestroyGLXPbufferSGIX = procedure (dpy: PTXDisplay; pbuf: GLXPbufferSGIX); libdecl;
  TglXDestroyGLXPixmap = procedure (dpy: PTXDisplay; pixmap: GLXPixmap); libdecl;
  TglXDestroyGLXVideoSourceSGIX = procedure (dpy: PTXDisplay; glxvideosource: GLXVideoSourceSGIX); libdecl;
  TglXDestroyHyperpipeConfigSGIX = function (dpy: PTXDisplay; hpId: LongInt): LongInt; libdecl;
  TglXDestroyPbuffer = procedure (dpy: PTXDisplay; pbuf: GLXPbuffer); libdecl;
  TglXDestroyPixmap = procedure (dpy: PTXDisplay; pixmap: GLXPixmap); libdecl;
  TglXDestroyWindow = procedure (dpy: PTXDisplay; win: GLXWindow); libdecl;
  TglXEnumerateVideoCaptureDevicesNV = function (dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PGLXVideoCaptureDeviceNV; libdecl;
  TglXEnumerateVideoDevicesNV = function (dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PLongWord; libdecl;
  TglXFreeContextEXT = procedure (dpy: PTXDisplay; context: GLXContext); libdecl;
  TglXGetAGPOffsetMESA = function (const _pointer: Pointer): LongWord; libdecl;
  TglXGetClientString = function (dpy: PTXDisplay; name: LongInt): PShortInt; libdecl;
  TglXGetConfig = function (dpy: PTXDisplay; visual: PTXVisualInfo; attrib: LongInt; value: PLongInt): LongInt; libdecl;
  TglXGetContextGPUIDAMD = function (ctx: GLXContext): LongWord; libdecl;
  TglXGetContextIDEXT = function (const context: GLXContext): GLXContextID; libdecl;
  TglXGetCurrentAssociatedContextAMD = function: GLXContext; libdecl;
  TglXGetCurrentContext = function: GLXContext; libdecl;
  TglXGetCurrentDisplayEXT = function: PTXDisplay; libdecl;
  TglXGetCurrentDisplay = function: PTXDisplay; libdecl;
  TglXGetCurrentDrawable = function: GLXDrawable; libdecl;
  TglXGetCurrentReadDrawableSGI = function: GLXDrawable; libdecl;
  TglXGetCurrentReadDrawable = function: GLXDrawable; libdecl;
  TglXGetFBConfigAttrib = function (dpy: PTXDisplay; config: GLXFBConfig; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXGetFBConfigAttribSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXGetFBConfigFromVisualSGIX = function (dpy: PTXDisplay; vis: PTXVisualInfo): GLXFBConfigSGIX; libdecl;
  TglXGetFBConfigs = function (dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PGLXFBConfig; libdecl;
  TglXGetGPUIDsAMD = function (maxCount: LongWord; ids: PLongWord): LongWord; libdecl;
  TglXGetGPUInfoAMD = function (id: LongWord; _property: LongInt; dataType: GLenum; size: LongWord; data: Pointer): LongInt; libdecl;
  TglXGetMscRateOML = function (dpy: PTXDisplay; drawable: GLXDrawable; numerator: PLongInt; denominator: PLongInt): TBool; libdecl;
  TglXGetProcAddressARB = function (const procName: PGLubyte): __GLXextFuncPtr; libdecl;
  TglXGetProcAddress = function (const procName: PGLubyte): __GLXextFuncPtr; libdecl;
  TglXGetSelectedEvent = procedure (dpy: PTXDisplay; draw: GLXDrawable; event_mask: PLongWord); libdecl;
  TglXGetSelectedEventSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; mask: PLongWord); libdecl;
  TglXGetSwapIntervalMESA = function: LongInt; libdecl;
  TglXGetSyncValuesOML = function (dpy: PTXDisplay; drawable: GLXDrawable; ust: PInt64; msc: PInt64; sbc: PInt64): TBool; libdecl;
  TglXGetTransparentIndexSUN = function (dpy: PTXDisplay; overlay: TWindow; underlay: TWindow; pTransparentIndex: PLongWord): TStatus; libdecl;
  TglXGetVideoDeviceNV = function (dpy: PTXDisplay; screen: LongInt; numVideoDevices: LongInt; pVideoDevice: PGLXVideoDeviceNV): LongInt; libdecl;
  TglXGetVideoInfoNV = function (dpy: PTXDisplay; screen: LongInt; VideoDevice: GLXVideoDeviceNV; pulCounterOutputPbuffer: PLongWord; pulCounterOutputVideo: PLongWord): LongInt; libdecl;
  TglXGetVideoSyncSGI = function (count: PLongWord): LongInt; libdecl;
  TglXGetVisualFromFBConfig = function (dpy: PTXDisplay; config: GLXFBConfig): PTXVisualInfo; libdecl;
  TglXGetVisualFromFBConfigSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX): PTXVisualInfo; libdecl;
  TglXHyperpipeAttribSGIX = function (dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; attribList: Pointer): LongInt; libdecl;
  TglXHyperpipeConfigSGIX = function (dpy: PTXDisplay; networkId: LongInt; npipes: LongInt; cfg: PGLXHyperpipeConfigSGIX; hpId: PLongInt): LongInt; libdecl;
  TglXImportContextEXT = function (dpy: PTXDisplay; contextID: GLXContextID): GLXContext; libdecl;
  TglXIsDirect = function (dpy: PTXDisplay; ctx: GLXContext): TBool; libdecl;
  TglXJoinSwapGroupNV = function (dpy: PTXDisplay; drawable: GLXDrawable; group: GLuint): TBool; libdecl;
  TglXJoinSwapGroupSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; member: GLXDrawable); libdecl;
  TglXLockVideoCaptureDeviceNV = procedure (dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV); libdecl;
  TglXMakeAssociatedContextCurrentAMD = function (ctx: GLXContext): TBool; libdecl;
  TglXMakeContextCurrent = function (dpy: PTXDisplay; draw: GLXDrawable; read: GLXDrawable; ctx: GLXContext): TBool; libdecl;
  TglXMakeCurrent = function (dpy: PTXDisplay; drawable: GLXDrawable; ctx: GLXContext): TBool; libdecl;
  TglXMakeCurrentReadSGI = function (dpy: PTXDisplay; draw: GLXDrawable; read: GLXDrawable; ctx: GLXContext): TBool; libdecl;
  TglXQueryChannelDeltasSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; x: PLongInt; y: PLongInt; w: PLongInt; h: PLongInt): LongInt; libdecl;
  TglXQueryChannelRectSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; dx: PLongInt; dy: PLongInt; dw: PLongInt; dh: PLongInt): LongInt; libdecl;
  TglXQueryContext = function (dpy: PTXDisplay; ctx: GLXContext; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXQueryContextInfoEXT = function (dpy: PTXDisplay; context: GLXContext; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXQueryCurrentRendererIntegerMESA = function (attribute: LongInt; value: PLongWord): TBool; libdecl;
  TglXQueryCurrentRendererStringMESA = function (attribute: LongInt): PShortInt; libdecl;
  TglXQueryDrawable = procedure (dpy: PTXDisplay; draw: GLXDrawable; attribute: LongInt; value: PLongWord); libdecl;
  TglXQueryExtension = function (dpy: PTXDisplay; errorb: PLongInt; event: PLongInt): TBool; libdecl;
  TglXQueryExtensionsString = function (dpy: PTXDisplay; screen: LongInt): PShortInt; libdecl;
  TglXQueryFrameCountNV = function (dpy: PTXDisplay; screen: LongInt; count: PGLuint): TBool; libdecl;
  TglXQueryGLXPbufferSGIX = procedure (dpy: PTXDisplay; pbuf: GLXPbufferSGIX; attribute: LongInt; value: PLongWord); libdecl;
  TglXQueryHyperpipeAttribSGIX = function (dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; returnAttribList: Pointer): LongInt; libdecl;
  TglXQueryHyperpipeBestAttribSGIX = function (dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; attribList: Pointer; returnAttribList: Pointer): LongInt; libdecl;
  TglXQueryHyperpipeConfigSGIX = function (dpy: PTXDisplay; hpId: LongInt; npipes: PLongInt): PGLXHyperpipeConfigSGIX; libdecl;
  TglXQueryHyperpipeNetworkSGIX = function (dpy: PTXDisplay; npipes: PLongInt): PGLXHyperpipeNetworkSGIX; libdecl;
  TglXQueryMaxSwapBarriersSGIX = function (dpy: PTXDisplay; screen: LongInt; max: PLongInt): TBool; libdecl;
  TglXQueryMaxSwapGroupsNV = function (dpy: PTXDisplay; screen: LongInt; maxGroups: PGLuint; maxBarriers: PGLuint): TBool; libdecl;
  TglXQueryRendererIntegerMESA = function (dpy: PTXDisplay; screen: LongInt; renderer: LongInt; attribute: LongInt; value: PLongWord): TBool; libdecl;
  TglXQueryRendererStringMESA = function (dpy: PTXDisplay; screen: LongInt; renderer: LongInt; attribute: LongInt): PShortInt; libdecl;
  TglXQueryServerString = function (dpy: PTXDisplay; screen: LongInt; name: LongInt): PShortInt; libdecl;
  TglXQuerySwapGroupNV = function (dpy: PTXDisplay; drawable: GLXDrawable; group: PGLuint; barrier: PGLuint): TBool; libdecl;
  TglXQueryVersion = function (dpy: PTXDisplay; maj: PLongInt; min: PLongInt): TBool; libdecl;
  TglXQueryVideoCaptureDeviceNV = function (dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXReleaseBuffersMESA = function (dpy: PTXDisplay; drawable: GLXDrawable): TBool; libdecl;
  TglXReleaseTexImageEXT = procedure (dpy: PTXDisplay; drawable: GLXDrawable; buffer: LongInt); libdecl;
  TglXReleaseVideoCaptureDeviceNV = procedure (dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV); libdecl;
  TglXReleaseVideoDeviceNV = function (dpy: PTXDisplay; screen: LongInt; VideoDevice: GLXVideoDeviceNV): LongInt; libdecl;
  TglXReleaseVideoImageNV = function (dpy: PTXDisplay; pbuf: GLXPbuffer): LongInt; libdecl;
  TglXResetFrameCountNV = function (dpy: PTXDisplay; screen: LongInt): TBool; libdecl;
  TglXSelectEvent = procedure (dpy: PTXDisplay; draw: GLXDrawable; event_mask: LongWord); libdecl;
  TglXSelectEventSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; mask: LongWord); libdecl;
  TglXSendPbufferToVideoNV = function (dpy: PTXDisplay; pbuf: GLXPbuffer; iBufferType: LongInt; pulCounterPbuffer: PLongWord; bBlock: GLboolean): LongInt; libdecl;
  TglXSet3DfxModeMESA = function (mode: GLint): GLboolean; libdecl;
  TglXSwapBuffers = procedure (dpy: PTXDisplay; drawable: GLXDrawable); libdecl;
  TglXSwapBuffersMscOML = function (dpy: PTXDisplay; drawable: GLXDrawable; target_msc: Int64; divisor: Int64; remainder: Int64): Int64; libdecl;
  TglXSwapIntervalMESA = function (interval: LongWord): LongInt; libdecl;
  TglXSwapIntervalEXT = procedure (dpy: PTXDisplay; drawable: GLXDrawable; interval: LongInt); libdecl;
  TglXSwapIntervalSGI = function (interval: LongInt): LongInt; libdecl;
  TglXUseXFont = procedure (font: TFont; first: LongInt; count: LongInt; list: LongInt); libdecl;
  TglXWaitForMscOML = function (dpy: PTXDisplay; drawable: GLXDrawable; target_msc: Int64; divisor: Int64; remainder: Int64; ust: PInt64; msc: PInt64; sbc: PInt64): TBool; libdecl;
  TglXWaitForSbcOML = function (dpy: PTXDisplay; drawable: GLXDrawable; target_sbc: Int64; ust: PInt64; msc: PInt64; sbc: PInt64): TBool; libdecl;
  TglXWaitGL = procedure; libdecl;
  TglXWaitVideoSyncSGI = function (divisor: LongInt; remainder: LongInt; count: PLongWord): LongInt; libdecl;
  TglXWaitX = procedure; libdecl;
{$endif}
var
  glAccum: TglAccum;
  glAccumxOES: TglAccumxOES;
  glActiveProgramEXT: TglActiveProgramEXT;
  glActiveShaderProgram: TglActiveShaderProgram;
  glActiveShaderProgramEXT: TglActiveShaderProgramEXT;
  glActiveStencilFaceEXT: TglActiveStencilFaceEXT;
  glActiveTexture: TglActiveTexture;
  glActiveTextureARB: TglActiveTextureARB;
  glActiveVaryingNV: TglActiveVaryingNV;
  glAlphaFragmentOp1ATI: TglAlphaFragmentOp1ATI;
  glAlphaFragmentOp2ATI: TglAlphaFragmentOp2ATI;
  glAlphaFragmentOp3ATI: TglAlphaFragmentOp3ATI;
  glAlphaFunc: TglAlphaFunc;
  glAlphaFuncQCOM: TglAlphaFuncQCOM;
  glAlphaFuncx: TglAlphaFuncx;
  glAlphaFuncxOES: TglAlphaFuncxOES;
  glAlphaToCoverageDitherControlNV: TglAlphaToCoverageDitherControlNV;
  glApplyFramebufferAttachmentCMAAINTEL: TglApplyFramebufferAttachmentCMAAINTEL;
  glApplyTextureEXT: TglApplyTextureEXT;
  glAcquireKeyedMutexWin32EXT: TglAcquireKeyedMutexWin32EXT;
  glAreProgramsResidentNV: TglAreProgramsResidentNV;
  glAreTexturesResident: TglAreTexturesResident;
  glAreTexturesResidentEXT: TglAreTexturesResidentEXT;
  glArrayElement: TglArrayElement;
  glArrayElementEXT: TglArrayElementEXT;
  glArrayObjectATI: TglArrayObjectATI;
  glAsyncCopyBufferSubDataNVX: TglAsyncCopyBufferSubDataNVX;
  glAsyncCopyImageSubDataNVX: TglAsyncCopyImageSubDataNVX;
  glAsyncMarkerSGIX: TglAsyncMarkerSGIX;
  glAttachObjectARB: TglAttachObjectARB;
  glAttachShader: TglAttachShader;
  glBegin: TglBegin;
  glBeginConditionalRender: TglBeginConditionalRender;
  glBeginConditionalRenderNV: TglBeginConditionalRenderNV;
  glBeginConditionalRenderNVX: TglBeginConditionalRenderNVX;
  glBeginFragmentShaderATI: TglBeginFragmentShaderATI;
  glBeginOcclusionQueryNV: TglBeginOcclusionQueryNV;
  glBeginPerfMonitorAMD: TglBeginPerfMonitorAMD;
  glBeginPerfQueryINTEL: TglBeginPerfQueryINTEL;
  glBeginQuery: TglBeginQuery;
  glBeginQueryARB: TglBeginQueryARB;
  glBeginQueryEXT: TglBeginQueryEXT;
  glBeginQueryIndexed: TglBeginQueryIndexed;
  glBeginTransformFeedback: TglBeginTransformFeedback;
  glBeginTransformFeedbackEXT: TglBeginTransformFeedbackEXT;
  glBeginTransformFeedbackNV: TglBeginTransformFeedbackNV;
  glBeginVertexShaderEXT: TglBeginVertexShaderEXT;
  glBeginVideoCaptureNV: TglBeginVideoCaptureNV;
  glBindAttribLocation: TglBindAttribLocation;
  glBindAttribLocationARB: TglBindAttribLocationARB;
  glBindBuffer: TglBindBuffer;
  glBindBufferARB: TglBindBufferARB;
  glBindBufferBase: TglBindBufferBase;
  glBindBufferBaseEXT: TglBindBufferBaseEXT;
  glBindBufferBaseNV: TglBindBufferBaseNV;
  glBindBufferOffsetEXT: TglBindBufferOffsetEXT;
  glBindBufferOffsetNV: TglBindBufferOffsetNV;
  glBindBufferRange: TglBindBufferRange;
  glBindBufferRangeEXT: TglBindBufferRangeEXT;
  glBindBufferRangeNV: TglBindBufferRangeNV;
  glBindBuffersBase: TglBindBuffersBase;
  glBindBuffersRange: TglBindBuffersRange;
  glBindFragDataLocation: TglBindFragDataLocation;
  glBindFragDataLocationEXT: TglBindFragDataLocationEXT;
  glBindFragDataLocationIndexed: TglBindFragDataLocationIndexed;
  glBindFragDataLocationIndexedEXT: TglBindFragDataLocationIndexedEXT;
  glBindFragmentShaderATI: TglBindFragmentShaderATI;
  glBindFramebuffer: TglBindFramebuffer;
  glBindFramebufferEXT: TglBindFramebufferEXT;
  glBindFramebufferOES: TglBindFramebufferOES;
  glBindImageTexture: TglBindImageTexture;
  glBindImageTextureEXT: TglBindImageTextureEXT;
  glBindImageTextures: TglBindImageTextures;
  glBindLightParameterEXT: TglBindLightParameterEXT;
  glBindMaterialParameterEXT: TglBindMaterialParameterEXT;
  glBindMultiTextureEXT: TglBindMultiTextureEXT;
  glBindParameterEXT: TglBindParameterEXT;
  glBindProgramARB: TglBindProgramARB;
  glBindProgramNV: TglBindProgramNV;
  glBindProgramPipeline: TglBindProgramPipeline;
  glBindProgramPipelineEXT: TglBindProgramPipelineEXT;
  glBindRenderbuffer: TglBindRenderbuffer;
  glBindRenderbufferEXT: TglBindRenderbufferEXT;
  glBindRenderbufferOES: TglBindRenderbufferOES;
  glBindSampler: TglBindSampler;
  glBindSamplers: TglBindSamplers;
  glBindShadingRateImageNV: TglBindShadingRateImageNV;
  glBindTexGenParameterEXT: TglBindTexGenParameterEXT;
  glBindTexture: TglBindTexture;
  glBindTextureEXT: TglBindTextureEXT;
  glBindTextureUnit: TglBindTextureUnit;
  glBindTextureUnitParameterEXT: TglBindTextureUnitParameterEXT;
  glBindTextures: TglBindTextures;
  glBindTransformFeedback: TglBindTransformFeedback;
  glBindTransformFeedbackNV: TglBindTransformFeedbackNV;
  glBindVertexArray: TglBindVertexArray;
  glBindVertexArrayAPPLE: TglBindVertexArrayAPPLE;
  glBindVertexArrayOES: TglBindVertexArrayOES;
  glBindVertexBuffer: TglBindVertexBuffer;
  glBindVertexBuffers: TglBindVertexBuffers;
  glBindVertexShaderEXT: TglBindVertexShaderEXT;
  glBindVideoCaptureStreamBufferNV: TglBindVideoCaptureStreamBufferNV;
  glBindVideoCaptureStreamTextureNV: TglBindVideoCaptureStreamTextureNV;
  glBinormal3bEXT: TglBinormal3bEXT;
  glBinormal3bvEXT: TglBinormal3bvEXT;
  glBinormal3dEXT: TglBinormal3dEXT;
  glBinormal3dvEXT: TglBinormal3dvEXT;
  glBinormal3fEXT: TglBinormal3fEXT;
  glBinormal3fvEXT: TglBinormal3fvEXT;
  glBinormal3iEXT: TglBinormal3iEXT;
  glBinormal3ivEXT: TglBinormal3ivEXT;
  glBinormal3sEXT: TglBinormal3sEXT;
  glBinormal3svEXT: TglBinormal3svEXT;
  glBinormalPointerEXT: TglBinormalPointerEXT;
  glBitmap: TglBitmap;
  glBitmapxOES: TglBitmapxOES;
  glBlendBarrier: TglBlendBarrier;
  glBlendBarrierKHR: TglBlendBarrierKHR;
  glBlendBarrierNV: TglBlendBarrierNV;
  glBlendColor: TglBlendColor;
  glBlendColorEXT: TglBlendColorEXT;
  glBlendColorxOES: TglBlendColorxOES;
  glBlendEquation: TglBlendEquation;
  glBlendEquationEXT: TglBlendEquationEXT;
  glBlendEquationIndexedAMD: TglBlendEquationIndexedAMD;
  glBlendEquationOES: TglBlendEquationOES;
  glBlendEquationSeparate: TglBlendEquationSeparate;
  glBlendEquationSeparateEXT: TglBlendEquationSeparateEXT;
  glBlendEquationSeparateIndexedAMD: TglBlendEquationSeparateIndexedAMD;
  glBlendEquationSeparateOES: TglBlendEquationSeparateOES;
  glBlendEquationSeparatei: TglBlendEquationSeparatei;
  glBlendEquationSeparateiARB: TglBlendEquationSeparateiARB;
  glBlendEquationSeparateiEXT: TglBlendEquationSeparateiEXT;
  glBlendEquationSeparateiOES: TglBlendEquationSeparateiOES;
  glBlendEquationi: TglBlendEquationi;
  glBlendEquationiARB: TglBlendEquationiARB;
  glBlendEquationiEXT: TglBlendEquationiEXT;
  glBlendEquationiOES: TglBlendEquationiOES;
  glBlendFunc: TglBlendFunc;
  glBlendFuncIndexedAMD: TglBlendFuncIndexedAMD;
  glBlendFuncSeparate: TglBlendFuncSeparate;
  glBlendFuncSeparateEXT: TglBlendFuncSeparateEXT;
  glBlendFuncSeparateINGR: TglBlendFuncSeparateINGR;
  glBlendFuncSeparateIndexedAMD: TglBlendFuncSeparateIndexedAMD;
  glBlendFuncSeparateOES: TglBlendFuncSeparateOES;
  glBlendFuncSeparatei: TglBlendFuncSeparatei;
  glBlendFuncSeparateiARB: TglBlendFuncSeparateiARB;
  glBlendFuncSeparateiEXT: TglBlendFuncSeparateiEXT;
  glBlendFuncSeparateiOES: TglBlendFuncSeparateiOES;
  glBlendFunci: TglBlendFunci;
  glBlendFunciARB: TglBlendFunciARB;
  glBlendFunciEXT: TglBlendFunciEXT;
  glBlendFunciOES: TglBlendFunciOES;
  glBlendParameteriNV: TglBlendParameteriNV;
  glBlitFramebuffer: TglBlitFramebuffer;
  glBlitFramebufferANGLE: TglBlitFramebufferANGLE;
  glBlitFramebufferEXT: TglBlitFramebufferEXT;
  glBlitFramebufferLayerEXT: TglBlitFramebufferLayerEXT;
  glBlitFramebufferLayersEXT: TglBlitFramebufferLayersEXT;
  glBlitFramebufferNV: TglBlitFramebufferNV;
  glBlitNamedFramebuffer: TglBlitNamedFramebuffer;
  glBufferAddressRangeNV: TglBufferAddressRangeNV;
  glBufferAttachMemoryNV: TglBufferAttachMemoryNV;
  glBufferData: TglBufferData;
  glBufferDataARB: TglBufferDataARB;
  glBufferPageCommitmentARB: TglBufferPageCommitmentARB;
  glBufferPageCommitmentMemNV: TglBufferPageCommitmentMemNV;
  glBufferParameteriAPPLE: TglBufferParameteriAPPLE;
  glBufferStorage: TglBufferStorage;
  glBufferStorageEXT: TglBufferStorageEXT;
  glBufferStorageExternalEXT: TglBufferStorageExternalEXT;
  glBufferStorageMemEXT: TglBufferStorageMemEXT;
  glBufferSubData: TglBufferSubData;
  glBufferSubDataARB: TglBufferSubDataARB;
  glCallCommandListNV: TglCallCommandListNV;
  glCallList: TglCallList;
  glCallLists: TglCallLists;
  glCheckFramebufferStatus: TglCheckFramebufferStatus;
  glCheckFramebufferStatusEXT: TglCheckFramebufferStatusEXT;
  glCheckFramebufferStatusOES: TglCheckFramebufferStatusOES;
  glCheckNamedFramebufferStatus: TglCheckNamedFramebufferStatus;
  glCheckNamedFramebufferStatusEXT: TglCheckNamedFramebufferStatusEXT;
  glClampColor: TglClampColor;
  glClampColorARB: TglClampColorARB;
  glClear: TglClear;
  glClearAccum: TglClearAccum;
  glClearAccumxOES: TglClearAccumxOES;
  glClearBufferData: TglClearBufferData;
  glClearBufferSubData: TglClearBufferSubData;
  glClearBufferfi: TglClearBufferfi;
  glClearBufferfv: TglClearBufferfv;
  glClearBufferiv: TglClearBufferiv;
  glClearBufferuiv: TglClearBufferuiv;
  glClearColor: TglClearColor;
  glClearColorIiEXT: TglClearColorIiEXT;
  glClearColorIuiEXT: TglClearColorIuiEXT;
  glClearColorx: TglClearColorx;
  glClearColorxOES: TglClearColorxOES;
  glClearDepth: TglClearDepth;
  glClearDepthdNV: TglClearDepthdNV;
  glClearDepthf: TglClearDepthf;
  glClearDepthfOES: TglClearDepthfOES;
  glClearDepthx: TglClearDepthx;
  glClearDepthxOES: TglClearDepthxOES;
  glClearIndex: TglClearIndex;
  glClearNamedBufferData: TglClearNamedBufferData;
  glClearNamedBufferDataEXT: TglClearNamedBufferDataEXT;
  glClearNamedBufferSubData: TglClearNamedBufferSubData;
  glClearNamedBufferSubDataEXT: TglClearNamedBufferSubDataEXT;
  glClearNamedFramebufferfi: TglClearNamedFramebufferfi;
  glClearNamedFramebufferfv: TglClearNamedFramebufferfv;
  glClearNamedFramebufferiv: TglClearNamedFramebufferiv;
  glClearNamedFramebufferuiv: TglClearNamedFramebufferuiv;
  glClearPixelLocalStorageuiEXT: TglClearPixelLocalStorageuiEXT;
  glClearStencil: TglClearStencil;
  glClearTexImage: TglClearTexImage;
  glClearTexImageEXT: TglClearTexImageEXT;
  glClearTexSubImage: TglClearTexSubImage;
  glClearTexSubImageEXT: TglClearTexSubImageEXT;
  glClientActiveTexture: TglClientActiveTexture;
  glClientActiveTextureARB: TglClientActiveTextureARB;
  glClientActiveVertexStreamATI: TglClientActiveVertexStreamATI;
  glClientAttribDefaultEXT: TglClientAttribDefaultEXT;
  glClientWaitSemaphoreui64NVX: TglClientWaitSemaphoreui64NVX;
  glClientWaitSync: TglClientWaitSync;
  glClientWaitSyncAPPLE: TglClientWaitSyncAPPLE;
  glClipControl: TglClipControl;
  glClipControlEXT: TglClipControlEXT;
  glClipPlane: TglClipPlane;
  glClipPlanef: TglClipPlanef;
  glClipPlanefIMG: TglClipPlanefIMG;
  glClipPlanefOES: TglClipPlanefOES;
  glClipPlanex: TglClipPlanex;
  glClipPlanexIMG: TglClipPlanexIMG;
  glClipPlanexOES: TglClipPlanexOES;
  glColor3b: TglColor3b;
  glColor3bv: TglColor3bv;
  glColor3d: TglColor3d;
  glColor3dv: TglColor3dv;
  glColor3f: TglColor3f;
  glColor3fVertex3fSUN: TglColor3fVertex3fSUN;
  glColor3fVertex3fvSUN: TglColor3fVertex3fvSUN;
  glColor3fv: TglColor3fv;
  glColor3hNV: TglColor3hNV;
  glColor3hvNV: TglColor3hvNV;
  glColor3i: TglColor3i;
  glColor3iv: TglColor3iv;
  glColor3s: TglColor3s;
  glColor3sv: TglColor3sv;
  glColor3ub: TglColor3ub;
  glColor3ubv: TglColor3ubv;
  glColor3ui: TglColor3ui;
  glColor3uiv: TglColor3uiv;
  glColor3us: TglColor3us;
  glColor3usv: TglColor3usv;
  glColor3xOES: TglColor3xOES;
  glColor3xvOES: TglColor3xvOES;
  glColor4b: TglColor4b;
  glColor4bv: TglColor4bv;
  glColor4d: TglColor4d;
  glColor4dv: TglColor4dv;
  glColor4f: TglColor4f;
  glColor4fNormal3fVertex3fSUN: TglColor4fNormal3fVertex3fSUN;
  glColor4fNormal3fVertex3fvSUN: TglColor4fNormal3fVertex3fvSUN;
  glColor4fv: TglColor4fv;
  glColor4hNV: TglColor4hNV;
  glColor4hvNV: TglColor4hvNV;
  glColor4i: TglColor4i;
  glColor4iv: TglColor4iv;
  glColor4s: TglColor4s;
  glColor4sv: TglColor4sv;
  glColor4ub: TglColor4ub;
  glColor4ubVertex2fSUN: TglColor4ubVertex2fSUN;
  glColor4ubVertex2fvSUN: TglColor4ubVertex2fvSUN;
  glColor4ubVertex3fSUN: TglColor4ubVertex3fSUN;
  glColor4ubVertex3fvSUN: TglColor4ubVertex3fvSUN;
  glColor4ubv: TglColor4ubv;
  glColor4ui: TglColor4ui;
  glColor4uiv: TglColor4uiv;
  glColor4us: TglColor4us;
  glColor4usv: TglColor4usv;
  glColor4x: TglColor4x;
  glColor4xOES: TglColor4xOES;
  glColor4xvOES: TglColor4xvOES;
  glColorFormatNV: TglColorFormatNV;
  glColorFragmentOp1ATI: TglColorFragmentOp1ATI;
  glColorFragmentOp2ATI: TglColorFragmentOp2ATI;
  glColorFragmentOp3ATI: TglColorFragmentOp3ATI;
  glColorMask: TglColorMask;
  glColorMaskIndexedEXT: TglColorMaskIndexedEXT;
  glColorMaski: TglColorMaski;
  glColorMaskiEXT: TglColorMaskiEXT;
  glColorMaskiOES: TglColorMaskiOES;
  glColorMaterial: TglColorMaterial;
  glColorP3ui: TglColorP3ui;
  glColorP3uiv: TglColorP3uiv;
  glColorP4ui: TglColorP4ui;
  glColorP4uiv: TglColorP4uiv;
  glColorPointer: TglColorPointer;
  glColorPointerEXT: TglColorPointerEXT;
  glColorPointerListIBM: TglColorPointerListIBM;
  glColorPointervINTEL: TglColorPointervINTEL;
  glColorSubTable: TglColorSubTable;
  glColorSubTableEXT: TglColorSubTableEXT;
  glColorTable: TglColorTable;
  glColorTableEXT: TglColorTableEXT;
  glColorTableParameterfv: TglColorTableParameterfv;
  glColorTableParameterfvSGI: TglColorTableParameterfvSGI;
  glColorTableParameteriv: TglColorTableParameteriv;
  glColorTableParameterivSGI: TglColorTableParameterivSGI;
  glColorTableSGI: TglColorTableSGI;
  glCombinerInputNV: TglCombinerInputNV;
  glCombinerOutputNV: TglCombinerOutputNV;
  glCombinerParameterfNV: TglCombinerParameterfNV;
  glCombinerParameterfvNV: TglCombinerParameterfvNV;
  glCombinerParameteriNV: TglCombinerParameteriNV;
  glCombinerParameterivNV: TglCombinerParameterivNV;
  glCombinerStageParameterfvNV: TglCombinerStageParameterfvNV;
  glCommandListSegmentsNV: TglCommandListSegmentsNV;
  glCompileCommandListNV: TglCompileCommandListNV;
  glCompileShader: TglCompileShader;
  glCompileShaderARB: TglCompileShaderARB;
  glCompileShaderIncludeARB: TglCompileShaderIncludeARB;
  glCompressedMultiTexImage1DEXT: TglCompressedMultiTexImage1DEXT;
  glCompressedMultiTexImage2DEXT: TglCompressedMultiTexImage2DEXT;
  glCompressedMultiTexImage3DEXT: TglCompressedMultiTexImage3DEXT;
  glCompressedMultiTexSubImage1DEXT: TglCompressedMultiTexSubImage1DEXT;
  glCompressedMultiTexSubImage2DEXT: TglCompressedMultiTexSubImage2DEXT;
  glCompressedMultiTexSubImage3DEXT: TglCompressedMultiTexSubImage3DEXT;
  glCompressedTexImage1D: TglCompressedTexImage1D;
  glCompressedTexImage1DARB: TglCompressedTexImage1DARB;
  glCompressedTexImage2D: TglCompressedTexImage2D;
  glCompressedTexImage2DARB: TglCompressedTexImage2DARB;
  glCompressedTexImage3D: TglCompressedTexImage3D;
  glCompressedTexImage3DARB: TglCompressedTexImage3DARB;
  glCompressedTexImage3DOES: TglCompressedTexImage3DOES;
  glCompressedTexSubImage1D: TglCompressedTexSubImage1D;
  glCompressedTexSubImage1DARB: TglCompressedTexSubImage1DARB;
  glCompressedTexSubImage2D: TglCompressedTexSubImage2D;
  glCompressedTexSubImage2DARB: TglCompressedTexSubImage2DARB;
  glCompressedTexSubImage3D: TglCompressedTexSubImage3D;
  glCompressedTexSubImage3DARB: TglCompressedTexSubImage3DARB;
  glCompressedTexSubImage3DOES: TglCompressedTexSubImage3DOES;
  glCompressedTextureImage1DEXT: TglCompressedTextureImage1DEXT;
  glCompressedTextureImage2DEXT: TglCompressedTextureImage2DEXT;
  glCompressedTextureImage3DEXT: TglCompressedTextureImage3DEXT;
  glCompressedTextureSubImage1D: TglCompressedTextureSubImage1D;
  glCompressedTextureSubImage1DEXT: TglCompressedTextureSubImage1DEXT;
  glCompressedTextureSubImage2D: TglCompressedTextureSubImage2D;
  glCompressedTextureSubImage2DEXT: TglCompressedTextureSubImage2DEXT;
  glCompressedTextureSubImage3D: TglCompressedTextureSubImage3D;
  glCompressedTextureSubImage3DEXT: TglCompressedTextureSubImage3DEXT;
  glConservativeRasterParameterfNV: TglConservativeRasterParameterfNV;
  glConservativeRasterParameteriNV: TglConservativeRasterParameteriNV;
  glConvolutionFilter1D: TglConvolutionFilter1D;
  glConvolutionFilter1DEXT: TglConvolutionFilter1DEXT;
  glConvolutionFilter2D: TglConvolutionFilter2D;
  glConvolutionFilter2DEXT: TglConvolutionFilter2DEXT;
  glConvolutionParameterf: TglConvolutionParameterf;
  glConvolutionParameterfEXT: TglConvolutionParameterfEXT;
  glConvolutionParameterfv: TglConvolutionParameterfv;
  glConvolutionParameterfvEXT: TglConvolutionParameterfvEXT;
  glConvolutionParameteri: TglConvolutionParameteri;
  glConvolutionParameteriEXT: TglConvolutionParameteriEXT;
  glConvolutionParameteriv: TglConvolutionParameteriv;
  glConvolutionParameterivEXT: TglConvolutionParameterivEXT;
  glConvolutionParameterxOES: TglConvolutionParameterxOES;
  glConvolutionParameterxvOES: TglConvolutionParameterxvOES;
  glCopyBufferSubData: TglCopyBufferSubData;
  glCopyBufferSubDataNV: TglCopyBufferSubDataNV;
  glCopyColorSubTable: TglCopyColorSubTable;
  glCopyColorSubTableEXT: TglCopyColorSubTableEXT;
  glCopyColorTable: TglCopyColorTable;
  glCopyColorTableSGI: TglCopyColorTableSGI;
  glCopyConvolutionFilter1D: TglCopyConvolutionFilter1D;
  glCopyConvolutionFilter1DEXT: TglCopyConvolutionFilter1DEXT;
  glCopyConvolutionFilter2D: TglCopyConvolutionFilter2D;
  glCopyConvolutionFilter2DEXT: TglCopyConvolutionFilter2DEXT;
  glCopyImageSubData: TglCopyImageSubData;
  glCopyImageSubDataEXT: TglCopyImageSubDataEXT;
  glCopyImageSubDataNV: TglCopyImageSubDataNV;
  glCopyImageSubDataOES: TglCopyImageSubDataOES;
  glCopyMultiTexImage1DEXT: TglCopyMultiTexImage1DEXT;
  glCopyMultiTexImage2DEXT: TglCopyMultiTexImage2DEXT;
  glCopyMultiTexSubImage1DEXT: TglCopyMultiTexSubImage1DEXT;
  glCopyMultiTexSubImage2DEXT: TglCopyMultiTexSubImage2DEXT;
  glCopyMultiTexSubImage3DEXT: TglCopyMultiTexSubImage3DEXT;
  glCopyNamedBufferSubData: TglCopyNamedBufferSubData;
  glCopyPathNV: TglCopyPathNV;
  glCopyPixels: TglCopyPixels;
  glCopyTexImage1D: TglCopyTexImage1D;
  glCopyTexImage1DEXT: TglCopyTexImage1DEXT;
  glCopyTexImage2D: TglCopyTexImage2D;
  glCopyTexImage2DEXT: TglCopyTexImage2DEXT;
  glCopyTexSubImage1D: TglCopyTexSubImage1D;
  glCopyTexSubImage1DEXT: TglCopyTexSubImage1DEXT;
  glCopyTexSubImage2D: TglCopyTexSubImage2D;
  glCopyTexSubImage2DEXT: TglCopyTexSubImage2DEXT;
  glCopyTexSubImage3D: TglCopyTexSubImage3D;
  glCopyTexSubImage3DEXT: TglCopyTexSubImage3DEXT;
  glCopyTexSubImage3DOES: TglCopyTexSubImage3DOES;
  glCopyTextureImage1DEXT: TglCopyTextureImage1DEXT;
  glCopyTextureImage2DEXT: TglCopyTextureImage2DEXT;
  glCopyTextureLevelsAPPLE: TglCopyTextureLevelsAPPLE;
  glCopyTextureSubImage1D: TglCopyTextureSubImage1D;
  glCopyTextureSubImage1DEXT: TglCopyTextureSubImage1DEXT;
  glCopyTextureSubImage2D: TglCopyTextureSubImage2D;
  glCopyTextureSubImage2DEXT: TglCopyTextureSubImage2DEXT;
  glCopyTextureSubImage3D: TglCopyTextureSubImage3D;
  glCopyTextureSubImage3DEXT: TglCopyTextureSubImage3DEXT;
  glCoverFillPathInstancedNV: TglCoverFillPathInstancedNV;
  glCoverFillPathNV: TglCoverFillPathNV;
  glCoverStrokePathInstancedNV: TglCoverStrokePathInstancedNV;
  glCoverStrokePathNV: TglCoverStrokePathNV;
  glCoverageMaskNV: TglCoverageMaskNV;
  glCoverageModulationNV: TglCoverageModulationNV;
  glCoverageModulationTableNV: TglCoverageModulationTableNV;
  glCoverageOperationNV: TglCoverageOperationNV;
  glCreateBuffers: TglCreateBuffers;
  glCreateCommandListsNV: TglCreateCommandListsNV;
  glCreateFramebuffers: TglCreateFramebuffers;
  glCreateMemoryObjectsEXT: TglCreateMemoryObjectsEXT;
  glCreatePerfQueryINTEL: TglCreatePerfQueryINTEL;
  glCreateProgram: TglCreateProgram;
  glCreateProgramObjectARB: TglCreateProgramObjectARB;
  glCreateProgramPipelines: TglCreateProgramPipelines;
  glCreateProgressFenceNVX: TglCreateProgressFenceNVX;
  glCreateQueries: TglCreateQueries;
  glCreateRenderbuffers: TglCreateRenderbuffers;
  glCreateSamplers: TglCreateSamplers;
  glCreateSemaphoresNV: TglCreateSemaphoresNV;
  glCreateShader: TglCreateShader;
  glCreateShaderObjectARB: TglCreateShaderObjectARB;
  glCreateShaderProgramEXT: TglCreateShaderProgramEXT;
  glCreateShaderProgramv: TglCreateShaderProgramv;
  glCreateShaderProgramvEXT: TglCreateShaderProgramvEXT;
  glCreateStatesNV: TglCreateStatesNV;
  glCreateSyncFromCLeventARB: TglCreateSyncFromCLeventARB;
  glCreateTextures: TglCreateTextures;
  glCreateTransformFeedbacks: TglCreateTransformFeedbacks;
  glCreateVertexArrays: TglCreateVertexArrays;
  glCullFace: TglCullFace;
  glCullParameterdvEXT: TglCullParameterdvEXT;
  glCullParameterfvEXT: TglCullParameterfvEXT;
  glCurrentPaletteMatrixARB: TglCurrentPaletteMatrixARB;
  glCurrentPaletteMatrixOES: TglCurrentPaletteMatrixOES;
  glDebugMessageCallback: TglDebugMessageCallback;
  glDebugMessageCallbackAMD: TglDebugMessageCallbackAMD;
  glDebugMessageCallbackARB: TglDebugMessageCallbackARB;
  glDebugMessageCallbackKHR: TglDebugMessageCallbackKHR;
  glDebugMessageControl: TglDebugMessageControl;
  glDebugMessageControlARB: TglDebugMessageControlARB;
  glDebugMessageControlKHR: TglDebugMessageControlKHR;
  glDebugMessageEnableAMD: TglDebugMessageEnableAMD;
  glDebugMessageInsert: TglDebugMessageInsert;
  glDebugMessageInsertAMD: TglDebugMessageInsertAMD;
  glDebugMessageInsertARB: TglDebugMessageInsertARB;
  glDebugMessageInsertKHR: TglDebugMessageInsertKHR;
  glDeformSGIX: TglDeformSGIX;
  glDeformationMap3dSGIX: TglDeformationMap3dSGIX;
  glDeformationMap3fSGIX: TglDeformationMap3fSGIX;
  glDeleteAsyncMarkersSGIX: TglDeleteAsyncMarkersSGIX;
  glDeleteBuffers: TglDeleteBuffers;
  glDeleteBuffersARB: TglDeleteBuffersARB;
  glDeleteCommandListsNV: TglDeleteCommandListsNV;
  glDeleteFencesAPPLE: TglDeleteFencesAPPLE;
  glDeleteFencesNV: TglDeleteFencesNV;
  glDeleteFragmentShaderATI: TglDeleteFragmentShaderATI;
  glDeleteFramebuffers: TglDeleteFramebuffers;
  glDeleteFramebuffersEXT: TglDeleteFramebuffersEXT;
  glDeleteFramebuffersOES: TglDeleteFramebuffersOES;
  glDeleteLists: TglDeleteLists;
  glDeleteMemoryObjectsEXT: TglDeleteMemoryObjectsEXT;
  glDeleteNamedStringARB: TglDeleteNamedStringARB;
  glDeleteNamesAMD: TglDeleteNamesAMD;
  glDeleteObjectARB: TglDeleteObjectARB;
  glDeleteOcclusionQueriesNV: TglDeleteOcclusionQueriesNV;
  glDeletePathsNV: TglDeletePathsNV;
  glDeletePerfMonitorsAMD: TglDeletePerfMonitorsAMD;
  glDeletePerfQueryINTEL: TglDeletePerfQueryINTEL;
  glDeleteProgram: TglDeleteProgram;
  glDeleteProgramPipelines: TglDeleteProgramPipelines;
  glDeleteProgramPipelinesEXT: TglDeleteProgramPipelinesEXT;
  glDeleteProgramsARB: TglDeleteProgramsARB;
  glDeleteProgramsNV: TglDeleteProgramsNV;
  glDeleteQueries: TglDeleteQueries;
  glDeleteQueriesARB: TglDeleteQueriesARB;
  glDeleteQueriesEXT: TglDeleteQueriesEXT;
  glDeleteQueryResourceTagNV: TglDeleteQueryResourceTagNV;
  glDeleteRenderbuffers: TglDeleteRenderbuffers;
  glDeleteRenderbuffersEXT: TglDeleteRenderbuffersEXT;
  glDeleteRenderbuffersOES: TglDeleteRenderbuffersOES;
  glDeleteSamplers: TglDeleteSamplers;
  glDeleteSemaphoresEXT: TglDeleteSemaphoresEXT;
  glDeleteShader: TglDeleteShader;
  glDeleteStatesNV: TglDeleteStatesNV;
  glDeleteSync: TglDeleteSync;
  glDeleteSyncAPPLE: TglDeleteSyncAPPLE;
  glDeleteTextures: TglDeleteTextures;
  glDeleteTexturesEXT: TglDeleteTexturesEXT;
  glDeleteTransformFeedbacks: TglDeleteTransformFeedbacks;
  glDeleteTransformFeedbacksNV: TglDeleteTransformFeedbacksNV;
  glDeleteVertexArrays: TglDeleteVertexArrays;
  glDeleteVertexArraysAPPLE: TglDeleteVertexArraysAPPLE;
  glDeleteVertexArraysOES: TglDeleteVertexArraysOES;
  glDeleteVertexShaderEXT: TglDeleteVertexShaderEXT;
  glDepthBoundsEXT: TglDepthBoundsEXT;
  glDepthBoundsdNV: TglDepthBoundsdNV;
  glDepthFunc: TglDepthFunc;
  glDepthMask: TglDepthMask;
  glDepthRange: TglDepthRange;
  glDepthRangeArraydvNV: TglDepthRangeArraydvNV;
  glDepthRangeArrayfvNV: TglDepthRangeArrayfvNV;
  glDepthRangeArrayfvOES: TglDepthRangeArrayfvOES;
  glDepthRangeArrayv: TglDepthRangeArrayv;
  glDepthRangeIndexed: TglDepthRangeIndexed;
  glDepthRangeIndexeddNV: TglDepthRangeIndexeddNV;
  glDepthRangeIndexedfNV: TglDepthRangeIndexedfNV;
  glDepthRangeIndexedfOES: TglDepthRangeIndexedfOES;
  glDepthRangedNV: TglDepthRangedNV;
  glDepthRangef: TglDepthRangef;
  glDepthRangefOES: TglDepthRangefOES;
  glDepthRangex: TglDepthRangex;
  glDepthRangexOES: TglDepthRangexOES;
  glDetachObjectARB: TglDetachObjectARB;
  glDetachShader: TglDetachShader;
  glDetailTexFuncSGIS: TglDetailTexFuncSGIS;
  glDisable: TglDisable;
  glDisableClientState: TglDisableClientState;
  glDisableClientStateIndexedEXT: TglDisableClientStateIndexedEXT;
  glDisableClientStateiEXT: TglDisableClientStateiEXT;
  glDisableDriverControlQCOM: TglDisableDriverControlQCOM;
  glDisableIndexedEXT: TglDisableIndexedEXT;
  glDisableVariantClientStateEXT: TglDisableVariantClientStateEXT;
  glDisableVertexArrayAttrib: TglDisableVertexArrayAttrib;
  glDisableVertexArrayAttribEXT: TglDisableVertexArrayAttribEXT;
  glDisableVertexArrayEXT: TglDisableVertexArrayEXT;
  glDisableVertexAttribAPPLE: TglDisableVertexAttribAPPLE;
  glDisableVertexAttribArray: TglDisableVertexAttribArray;
  glDisableVertexAttribArrayARB: TglDisableVertexAttribArrayARB;
  glDisablei: TglDisablei;
  glDisableiEXT: TglDisableiEXT;
  glDisableiNV: TglDisableiNV;
  glDisableiOES: TglDisableiOES;
  glDiscardFramebufferEXT: TglDiscardFramebufferEXT;
  glDispatchCompute: TglDispatchCompute;
  glDispatchComputeGroupSizeARB: TglDispatchComputeGroupSizeARB;
  glDispatchComputeIndirect: TglDispatchComputeIndirect;
  glDrawArrays: TglDrawArrays;
  glDrawArraysEXT: TglDrawArraysEXT;
  glDrawArraysIndirect: TglDrawArraysIndirect;
  glDrawArraysInstanced: TglDrawArraysInstanced;
  glDrawArraysInstancedANGLE: TglDrawArraysInstancedANGLE;
  glDrawArraysInstancedARB: TglDrawArraysInstancedARB;
  glDrawArraysInstancedBaseInstance: TglDrawArraysInstancedBaseInstance;
  glDrawArraysInstancedBaseInstanceEXT: TglDrawArraysInstancedBaseInstanceEXT;
  glDrawArraysInstancedEXT: TglDrawArraysInstancedEXT;
  glDrawArraysInstancedNV: TglDrawArraysInstancedNV;
  glDrawBuffer: TglDrawBuffer;
  glDrawBuffers: TglDrawBuffers;
  glDrawBuffersARB: TglDrawBuffersARB;
  glDrawBuffersATI: TglDrawBuffersATI;
  glDrawBuffersEXT: TglDrawBuffersEXT;
  glDrawBuffersIndexedEXT: TglDrawBuffersIndexedEXT;
  glDrawBuffersNV: TglDrawBuffersNV;
  glDrawCommandsAddressNV: TglDrawCommandsAddressNV;
  glDrawCommandsNV: TglDrawCommandsNV;
  glDrawCommandsStatesAddressNV: TglDrawCommandsStatesAddressNV;
  glDrawCommandsStatesNV: TglDrawCommandsStatesNV;
  glDrawElementArrayAPPLE: TglDrawElementArrayAPPLE;
  glDrawElementArrayATI: TglDrawElementArrayATI;
  glDrawElements: TglDrawElements;
  glDrawElementsBaseVertex: TglDrawElementsBaseVertex;
  glDrawElementsBaseVertexEXT: TglDrawElementsBaseVertexEXT;
  glDrawElementsBaseVertexOES: TglDrawElementsBaseVertexOES;
  glDrawElementsIndirect: TglDrawElementsIndirect;
  glDrawElementsInstanced: TglDrawElementsInstanced;
  glDrawElementsInstancedANGLE: TglDrawElementsInstancedANGLE;
  glDrawElementsInstancedARB: TglDrawElementsInstancedARB;
  glDrawElementsInstancedBaseInstance: TglDrawElementsInstancedBaseInstance;
  glDrawElementsInstancedBaseInstanceEXT: TglDrawElementsInstancedBaseInstanceEXT;
  glDrawElementsInstancedBaseVertex: TglDrawElementsInstancedBaseVertex;
  glDrawElementsInstancedBaseVertexBaseInstance: TglDrawElementsInstancedBaseVertexBaseInstance;
  glDrawElementsInstancedBaseVertexBaseInstanceEXT: TglDrawElementsInstancedBaseVertexBaseInstanceEXT;
  glDrawElementsInstancedBaseVertexEXT: TglDrawElementsInstancedBaseVertexEXT;
  glDrawElementsInstancedBaseVertexOES: TglDrawElementsInstancedBaseVertexOES;
  glDrawElementsInstancedEXT: TglDrawElementsInstancedEXT;
  glDrawElementsInstancedNV: TglDrawElementsInstancedNV;
  glDrawMeshArraysSUN: TglDrawMeshArraysSUN;
  glDrawMeshTasksNV: TglDrawMeshTasksNV;
  glDrawMeshTasksIndirectNV: TglDrawMeshTasksIndirectNV;
  glDrawPixels: TglDrawPixels;
  glDrawRangeElementArrayAPPLE: TglDrawRangeElementArrayAPPLE;
  glDrawRangeElementArrayATI: TglDrawRangeElementArrayATI;
  glDrawRangeElements: TglDrawRangeElements;
  glDrawRangeElementsBaseVertex: TglDrawRangeElementsBaseVertex;
  glDrawRangeElementsBaseVertexEXT: TglDrawRangeElementsBaseVertexEXT;
  glDrawRangeElementsBaseVertexOES: TglDrawRangeElementsBaseVertexOES;
  glDrawRangeElementsEXT: TglDrawRangeElementsEXT;
  glDrawTexfOES: TglDrawTexfOES;
  glDrawTexfvOES: TglDrawTexfvOES;
  glDrawTexiOES: TglDrawTexiOES;
  glDrawTexivOES: TglDrawTexivOES;
  glDrawTexsOES: TglDrawTexsOES;
  glDrawTexsvOES: TglDrawTexsvOES;
  glDrawTextureNV: TglDrawTextureNV;
  glDrawTexxOES: TglDrawTexxOES;
  glDrawTexxvOES: TglDrawTexxvOES;
  glDrawTransformFeedback: TglDrawTransformFeedback;
  glDrawTransformFeedbackEXT: TglDrawTransformFeedbackEXT;
  glDrawTransformFeedbackInstanced: TglDrawTransformFeedbackInstanced;
  glDrawTransformFeedbackInstancedEXT: TglDrawTransformFeedbackInstancedEXT;
  glDrawTransformFeedbackNV: TglDrawTransformFeedbackNV;
  glDrawTransformFeedbackStream: TglDrawTransformFeedbackStream;
  glDrawTransformFeedbackStreamInstanced: TglDrawTransformFeedbackStreamInstanced;
  glEGLImageTargetRenderbufferStorageOES: TglEGLImageTargetRenderbufferStorageOES;
  glEGLImageTargetTexStorageEXT: TglEGLImageTargetTexStorageEXT;
  glEGLImageTargetTexture2DOES: TglEGLImageTargetTexture2DOES;
  glEGLImageTargetTextureStorageEXT: TglEGLImageTargetTextureStorageEXT;
  glEdgeFlag: TglEdgeFlag;
  glEdgeFlagFormatNV: TglEdgeFlagFormatNV;
  glEdgeFlagPointer: TglEdgeFlagPointer;
  glEdgeFlagPointerEXT: TglEdgeFlagPointerEXT;
  glEdgeFlagPointerListIBM: TglEdgeFlagPointerListIBM;
  glEdgeFlagv: TglEdgeFlagv;
  glElementPointerAPPLE: TglElementPointerAPPLE;
  glElementPointerATI: TglElementPointerATI;
  glEnable: TglEnable;
  glEnableClientState: TglEnableClientState;
  glEnableClientStateIndexedEXT: TglEnableClientStateIndexedEXT;
  glEnableClientStateiEXT: TglEnableClientStateiEXT;
  glEnableDriverControlQCOM: TglEnableDriverControlQCOM;
  glEnableIndexedEXT: TglEnableIndexedEXT;
  glEnableVariantClientStateEXT: TglEnableVariantClientStateEXT;
  glEnableVertexArrayAttrib: TglEnableVertexArrayAttrib;
  glEnableVertexArrayAttribEXT: TglEnableVertexArrayAttribEXT;
  glEnableVertexArrayEXT: TglEnableVertexArrayEXT;
  glEnableVertexAttribAPPLE: TglEnableVertexAttribAPPLE;
  glEnableVertexAttribArray: TglEnableVertexAttribArray;
  glEnableVertexAttribArrayARB: TglEnableVertexAttribArrayARB;
  glEnablei: TglEnablei;
  glEnableiEXT: TglEnableiEXT;
  glEnableiNV: TglEnableiNV;
  glEnableiOES: TglEnableiOES;
  glEnd: TglEnd;
  glEndConditionalRender: TglEndConditionalRender;
  glEndConditionalRenderNV: TglEndConditionalRenderNV;
  glEndConditionalRenderNVX: TglEndConditionalRenderNVX;
  glEndFragmentShaderATI: TglEndFragmentShaderATI;
  glEndList: TglEndList;
  glEndOcclusionQueryNV: TglEndOcclusionQueryNV;
  glEndPerfMonitorAMD: TglEndPerfMonitorAMD;
  glEndPerfQueryINTEL: TglEndPerfQueryINTEL;
  glEndQuery: TglEndQuery;
  glEndQueryARB: TglEndQueryARB;
  glEndQueryEXT: TglEndQueryEXT;
  glEndQueryIndexed: TglEndQueryIndexed;
  glEndTilingQCOM: TglEndTilingQCOM;
  glEndTransformFeedback: TglEndTransformFeedback;
  glEndTransformFeedbackEXT: TglEndTransformFeedbackEXT;
  glEndTransformFeedbackNV: TglEndTransformFeedbackNV;
  glEndVertexShaderEXT: TglEndVertexShaderEXT;
  glEndVideoCaptureNV: TglEndVideoCaptureNV;
  glEvalCoord1d: TglEvalCoord1d;
  glEvalCoord1dv: TglEvalCoord1dv;
  glEvalCoord1f: TglEvalCoord1f;
  glEvalCoord1fv: TglEvalCoord1fv;
  glEvalCoord1xOES: TglEvalCoord1xOES;
  glEvalCoord1xvOES: TglEvalCoord1xvOES;
  glEvalCoord2d: TglEvalCoord2d;
  glEvalCoord2dv: TglEvalCoord2dv;
  glEvalCoord2f: TglEvalCoord2f;
  glEvalCoord2fv: TglEvalCoord2fv;
  glEvalCoord2xOES: TglEvalCoord2xOES;
  glEvalCoord2xvOES: TglEvalCoord2xvOES;
  glEvalMapsNV: TglEvalMapsNV;
  glEvalMesh1: TglEvalMesh1;
  glEvalMesh2: TglEvalMesh2;
  glEvalPoint1: TglEvalPoint1;
  glEvalPoint2: TglEvalPoint2;
  glEvaluateDepthValuesARB: TglEvaluateDepthValuesARB;
  glExecuteProgramNV: TglExecuteProgramNV;
  glExtGetBufferPointervQCOM: TglExtGetBufferPointervQCOM;
  glExtGetBuffersQCOM: TglExtGetBuffersQCOM;
  glExtGetFramebuffersQCOM: TglExtGetFramebuffersQCOM;
  glExtGetProgramBinarySourceQCOM: TglExtGetProgramBinarySourceQCOM;
  glExtGetProgramsQCOM: TglExtGetProgramsQCOM;
  glExtGetRenderbuffersQCOM: TglExtGetRenderbuffersQCOM;
  glExtGetShadersQCOM: TglExtGetShadersQCOM;
  glExtGetTexLevelParameterivQCOM: TglExtGetTexLevelParameterivQCOM;
  glExtGetTexSubImageQCOM: TglExtGetTexSubImageQCOM;
  glExtGetTexturesQCOM: TglExtGetTexturesQCOM;
  glExtIsProgramBinaryQCOM: TglExtIsProgramBinaryQCOM;
  glExtTexObjectStateOverrideiQCOM: TglExtTexObjectStateOverrideiQCOM;
  glExtractComponentEXT: TglExtractComponentEXT;
  glFeedbackBuffer: TglFeedbackBuffer;
  glFeedbackBufferxOES: TglFeedbackBufferxOES;
  glFenceSync: TglFenceSync;
  glFenceSyncAPPLE: TglFenceSyncAPPLE;
  glFinalCombinerInputNV: TglFinalCombinerInputNV;
  glFinish: TglFinish;
  glFinishAsyncSGIX: TglFinishAsyncSGIX;
  glFinishFenceAPPLE: TglFinishFenceAPPLE;
  glFinishFenceNV: TglFinishFenceNV;
  glFinishObjectAPPLE: TglFinishObjectAPPLE;
  glFinishTextureSUNX: TglFinishTextureSUNX;
  glFlush: TglFlush;
  glFlushMappedBufferRange: TglFlushMappedBufferRange;
  glFlushMappedBufferRangeAPPLE: TglFlushMappedBufferRangeAPPLE;
  glFlushMappedBufferRangeEXT: TglFlushMappedBufferRangeEXT;
  glFlushMappedNamedBufferRange: TglFlushMappedNamedBufferRange;
  glFlushMappedNamedBufferRangeEXT: TglFlushMappedNamedBufferRangeEXT;
  glFlushPixelDataRangeNV: TglFlushPixelDataRangeNV;
  glFlushRasterSGIX: TglFlushRasterSGIX;
  glFlushStaticDataIBM: TglFlushStaticDataIBM;
  glFlushVertexArrayRangeAPPLE: TglFlushVertexArrayRangeAPPLE;
  glFlushVertexArrayRangeNV: TglFlushVertexArrayRangeNV;
  glFogCoordFormatNV: TglFogCoordFormatNV;
  glFogCoordPointer: TglFogCoordPointer;
  glFogCoordPointerEXT: TglFogCoordPointerEXT;
  glFogCoordPointerListIBM: TglFogCoordPointerListIBM;
  glFogCoordd: TglFogCoordd;
  glFogCoorddEXT: TglFogCoorddEXT;
  glFogCoorddv: TglFogCoorddv;
  glFogCoorddvEXT: TglFogCoorddvEXT;
  glFogCoordf: TglFogCoordf;
  glFogCoordfEXT: TglFogCoordfEXT;
  glFogCoordfv: TglFogCoordfv;
  glFogCoordfvEXT: TglFogCoordfvEXT;
  glFogCoordhNV: TglFogCoordhNV;
  glFogCoordhvNV: TglFogCoordhvNV;
  glFogFuncSGIS: TglFogFuncSGIS;
  glFogf: TglFogf;
  glFogfv: TglFogfv;
  glFogi: TglFogi;
  glFogiv: TglFogiv;
  glFogx: TglFogx;
  glFogxOES: TglFogxOES;
  glFogxv: TglFogxv;
  glFogxvOES: TglFogxvOES;
  glFragmentColorMaterialSGIX: TglFragmentColorMaterialSGIX;
  glFragmentCoverageColorNV: TglFragmentCoverageColorNV;
  glFragmentLightModelfSGIX: TglFragmentLightModelfSGIX;
  glFragmentLightModelfvSGIX: TglFragmentLightModelfvSGIX;
  glFragmentLightModeliSGIX: TglFragmentLightModeliSGIX;
  glFragmentLightModelivSGIX: TglFragmentLightModelivSGIX;
  glFragmentLightfSGIX: TglFragmentLightfSGIX;
  glFragmentLightfvSGIX: TglFragmentLightfvSGIX;
  glFragmentLightiSGIX: TglFragmentLightiSGIX;
  glFragmentLightivSGIX: TglFragmentLightivSGIX;
  glFragmentMaterialfSGIX: TglFragmentMaterialfSGIX;
  glFragmentMaterialfvSGIX: TglFragmentMaterialfvSGIX;
  glFragmentMaterialiSGIX: TglFragmentMaterialiSGIX;
  glFragmentMaterialivSGIX: TglFragmentMaterialivSGIX;
  glFrameTerminatorGREMEDY: TglFrameTerminatorGREMEDY;
  glFrameZoomSGIX: TglFrameZoomSGIX;
  glFramebufferDrawBufferEXT: TglFramebufferDrawBufferEXT;
  glFramebufferDrawBuffersEXT: TglFramebufferDrawBuffersEXT;
  glFramebufferFetchBarrierEXT: TglFramebufferFetchBarrierEXT;
  glFramebufferFetchBarrierQCOM: TglFramebufferFetchBarrierQCOM;
  glFramebufferFoveationConfigQCOM: TglFramebufferFoveationConfigQCOM;
  glFramebufferFoveationParametersQCOM: TglFramebufferFoveationParametersQCOM;
  glFramebufferParameteri: TglFramebufferParameteri;
  glFramebufferPixelLocalStorageSizeEXT: TglFramebufferPixelLocalStorageSizeEXT;
  glFramebufferReadBufferEXT: TglFramebufferReadBufferEXT;
  glFramebufferRenderbuffer: TglFramebufferRenderbuffer;
  glFramebufferRenderbufferEXT: TglFramebufferRenderbufferEXT;
  glFramebufferRenderbufferOES: TglFramebufferRenderbufferOES;
  glFramebufferSampleLocationsfvARB: TglFramebufferSampleLocationsfvARB;
  glFramebufferSampleLocationsfvNV: TglFramebufferSampleLocationsfvNV;
  glFramebufferSamplePositionsfvAMD: TglFramebufferSamplePositionsfvAMD;
  glFramebufferShadingRateEXT: TglFramebufferShadingRateEXT;
  glFramebufferTexture: TglFramebufferTexture;
  glFramebufferTexture1D: TglFramebufferTexture1D;
  glFramebufferTexture1DEXT: TglFramebufferTexture1DEXT;
  glFramebufferTexture2D: TglFramebufferTexture2D;
  glFramebufferTexture2DEXT: TglFramebufferTexture2DEXT;
  glFramebufferTexture2DDownsampleIMG: TglFramebufferTexture2DDownsampleIMG;
  glFramebufferTexture2DMultisampleEXT: TglFramebufferTexture2DMultisampleEXT;
  glFramebufferTexture2DMultisampleIMG: TglFramebufferTexture2DMultisampleIMG;
  glFramebufferTexture2DOES: TglFramebufferTexture2DOES;
  glFramebufferTexture3D: TglFramebufferTexture3D;
  glFramebufferTexture3DEXT: TglFramebufferTexture3DEXT;
  glFramebufferTexture3DOES: TglFramebufferTexture3DOES;
  glFramebufferTextureARB: TglFramebufferTextureARB;
  glFramebufferTextureEXT: TglFramebufferTextureEXT;
  glFramebufferTextureFaceARB: TglFramebufferTextureFaceARB;
  glFramebufferTextureFaceEXT: TglFramebufferTextureFaceEXT;
  glFramebufferTextureLayer: TglFramebufferTextureLayer;
  glFramebufferTextureLayerARB: TglFramebufferTextureLayerARB;
  glFramebufferTextureLayerEXT: TglFramebufferTextureLayerEXT;
  glFramebufferTextureLayerDownsampleIMG: TglFramebufferTextureLayerDownsampleIMG;
  glFramebufferTextureMultisampleMultiviewOVR: TglFramebufferTextureMultisampleMultiviewOVR;
  glFramebufferTextureMultiviewOVR: TglFramebufferTextureMultiviewOVR;
  glFramebufferTextureOES: TglFramebufferTextureOES;
  glFreeObjectBufferATI: TglFreeObjectBufferATI;
  glFrontFace: TglFrontFace;
  glFrustum: TglFrustum;
  glFrustumf: TglFrustumf;
  glFrustumfOES: TglFrustumfOES;
  glFrustumx: TglFrustumx;
  glFrustumxOES: TglFrustumxOES;
  glGenAsyncMarkersSGIX: TglGenAsyncMarkersSGIX;
  glGenBuffers: TglGenBuffers;
  glGenBuffersARB: TglGenBuffersARB;
  glGenFencesAPPLE: TglGenFencesAPPLE;
  glGenFencesNV: TglGenFencesNV;
  glGenFragmentShadersATI: TglGenFragmentShadersATI;
  glGenFramebuffers: TglGenFramebuffers;
  glGenFramebuffersEXT: TglGenFramebuffersEXT;
  glGenFramebuffersOES: TglGenFramebuffersOES;
  glGenLists: TglGenLists;
  glGenNamesAMD: TglGenNamesAMD;
  glGenOcclusionQueriesNV: TglGenOcclusionQueriesNV;
  glGenPathsNV: TglGenPathsNV;
  glGenPerfMonitorsAMD: TglGenPerfMonitorsAMD;
  glGenProgramPipelines: TglGenProgramPipelines;
  glGenProgramPipelinesEXT: TglGenProgramPipelinesEXT;
  glGenProgramsARB: TglGenProgramsARB;
  glGenProgramsNV: TglGenProgramsNV;
  glGenQueries: TglGenQueries;
  glGenQueriesARB: TglGenQueriesARB;
  glGenQueriesEXT: TglGenQueriesEXT;
  glGenQueryResourceTagNV: TglGenQueryResourceTagNV;
  glGenRenderbuffers: TglGenRenderbuffers;
  glGenRenderbuffersEXT: TglGenRenderbuffersEXT;
  glGenRenderbuffersOES: TglGenRenderbuffersOES;
  glGenSamplers: TglGenSamplers;
  glGenSemaphoresEXT: TglGenSemaphoresEXT;
  glGenSymbolsEXT: TglGenSymbolsEXT;
  glGenTextures: TglGenTextures;
  glGenTexturesEXT: TglGenTexturesEXT;
  glGenTransformFeedbacks: TglGenTransformFeedbacks;
  glGenTransformFeedbacksNV: TglGenTransformFeedbacksNV;
  glGenVertexArrays: TglGenVertexArrays;
  glGenVertexArraysAPPLE: TglGenVertexArraysAPPLE;
  glGenVertexArraysOES: TglGenVertexArraysOES;
  glGenVertexShadersEXT: TglGenVertexShadersEXT;
  glGenerateMipmap: TglGenerateMipmap;
  glGenerateMipmapEXT: TglGenerateMipmapEXT;
  glGenerateMipmapOES: TglGenerateMipmapOES;
  glGenerateMultiTexMipmapEXT: TglGenerateMultiTexMipmapEXT;
  glGenerateTextureMipmap: TglGenerateTextureMipmap;
  glGenerateTextureMipmapEXT: TglGenerateTextureMipmapEXT;
  glGetActiveAtomicCounterBufferiv: TglGetActiveAtomicCounterBufferiv;
  glGetActiveAttrib: TglGetActiveAttrib;
  glGetActiveAttribARB: TglGetActiveAttribARB;
  glGetActiveSubroutineName: TglGetActiveSubroutineName;
  glGetActiveSubroutineUniformName: TglGetActiveSubroutineUniformName;
  glGetActiveSubroutineUniformiv: TglGetActiveSubroutineUniformiv;
  glGetActiveUniform: TglGetActiveUniform;
  glGetActiveUniformARB: TglGetActiveUniformARB;
  glGetActiveUniformBlockName: TglGetActiveUniformBlockName;
  glGetActiveUniformBlockiv: TglGetActiveUniformBlockiv;
  glGetActiveUniformName: TglGetActiveUniformName;
  glGetActiveUniformsiv: TglGetActiveUniformsiv;
  glGetActiveVaryingNV: TglGetActiveVaryingNV;
  glGetArrayObjectfvATI: TglGetArrayObjectfvATI;
  glGetArrayObjectivATI: TglGetArrayObjectivATI;
  glGetAttachedObjectsARB: TglGetAttachedObjectsARB;
  glGetAttachedShaders: TglGetAttachedShaders;
  glGetAttribLocation: TglGetAttribLocation;
  glGetAttribLocationARB: TglGetAttribLocationARB;
  glGetBooleanIndexedvEXT: TglGetBooleanIndexedvEXT;
  glGetBooleani_v: TglGetBooleani_v;
  glGetBooleanv: TglGetBooleanv;
  glGetBufferParameteri64v: TglGetBufferParameteri64v;
  glGetBufferParameteriv: TglGetBufferParameteriv;
  glGetBufferParameterivARB: TglGetBufferParameterivARB;
  glGetBufferParameterui64vNV: TglGetBufferParameterui64vNV;
  glGetBufferPointerv: TglGetBufferPointerv;
  glGetBufferPointervARB: TglGetBufferPointervARB;
  glGetBufferPointervOES: TglGetBufferPointervOES;
  glGetBufferSubData: TglGetBufferSubData;
  glGetBufferSubDataARB: TglGetBufferSubDataARB;
  glGetClipPlane: TglGetClipPlane;
  glGetClipPlanef: TglGetClipPlanef;
  glGetClipPlanefOES: TglGetClipPlanefOES;
  glGetClipPlanex: TglGetClipPlanex;
  glGetClipPlanexOES: TglGetClipPlanexOES;
  glGetColorTable: TglGetColorTable;
  glGetColorTableEXT: TglGetColorTableEXT;
  glGetColorTableParameterfv: TglGetColorTableParameterfv;
  glGetColorTableParameterfvEXT: TglGetColorTableParameterfvEXT;
  glGetColorTableParameterfvSGI: TglGetColorTableParameterfvSGI;
  glGetColorTableParameteriv: TglGetColorTableParameteriv;
  glGetColorTableParameterivEXT: TglGetColorTableParameterivEXT;
  glGetColorTableParameterivSGI: TglGetColorTableParameterivSGI;
  glGetColorTableSGI: TglGetColorTableSGI;
  glGetCombinerInputParameterfvNV: TglGetCombinerInputParameterfvNV;
  glGetCombinerInputParameterivNV: TglGetCombinerInputParameterivNV;
  glGetCombinerOutputParameterfvNV: TglGetCombinerOutputParameterfvNV;
  glGetCombinerOutputParameterivNV: TglGetCombinerOutputParameterivNV;
  glGetCombinerStageParameterfvNV: TglGetCombinerStageParameterfvNV;
  glGetCommandHeaderNV: TglGetCommandHeaderNV;
  glGetCompressedMultiTexImageEXT: TglGetCompressedMultiTexImageEXT;
  glGetCompressedTexImage: TglGetCompressedTexImage;
  glGetCompressedTexImageARB: TglGetCompressedTexImageARB;
  glGetCompressedTextureImage: TglGetCompressedTextureImage;
  glGetCompressedTextureImageEXT: TglGetCompressedTextureImageEXT;
  glGetCompressedTextureSubImage: TglGetCompressedTextureSubImage;
  glGetConvolutionFilter: TglGetConvolutionFilter;
  glGetConvolutionFilterEXT: TglGetConvolutionFilterEXT;
  glGetConvolutionParameterfv: TglGetConvolutionParameterfv;
  glGetConvolutionParameterfvEXT: TglGetConvolutionParameterfvEXT;
  glGetConvolutionParameteriv: TglGetConvolutionParameteriv;
  glGetConvolutionParameterivEXT: TglGetConvolutionParameterivEXT;
  glGetConvolutionParameterxvOES: TglGetConvolutionParameterxvOES;
  glGetCoverageModulationTableNV: TglGetCoverageModulationTableNV;
  glGetDebugMessageLog: TglGetDebugMessageLog;
  glGetDebugMessageLogAMD: TglGetDebugMessageLogAMD;
  glGetDebugMessageLogARB: TglGetDebugMessageLogARB;
  glGetDebugMessageLogKHR: TglGetDebugMessageLogKHR;
  glGetDetailTexFuncSGIS: TglGetDetailTexFuncSGIS;
  glGetDoubleIndexedvEXT: TglGetDoubleIndexedvEXT;
  glGetDoublei_v: TglGetDoublei_v;
  glGetDoublei_vEXT: TglGetDoublei_vEXT;
  glGetDoublev: TglGetDoublev;
  glGetDriverControlStringQCOM: TglGetDriverControlStringQCOM;
  glGetDriverControlsQCOM: TglGetDriverControlsQCOM;
  glGetError: TglGetError;
  glGetFenceivNV: TglGetFenceivNV;
  glGetFinalCombinerInputParameterfvNV: TglGetFinalCombinerInputParameterfvNV;
  glGetFinalCombinerInputParameterivNV: TglGetFinalCombinerInputParameterivNV;
  glGetFirstPerfQueryIdINTEL: TglGetFirstPerfQueryIdINTEL;
  glGetFixedv: TglGetFixedv;
  glGetFixedvOES: TglGetFixedvOES;
  glGetFloatIndexedvEXT: TglGetFloatIndexedvEXT;
  glGetFloati_v: TglGetFloati_v;
  glGetFloati_vEXT: TglGetFloati_vEXT;
  glGetFloati_vNV: TglGetFloati_vNV;
  glGetFloati_vOES: TglGetFloati_vOES;
  glGetFloatv: TglGetFloatv;
  glGetFogFuncSGIS: TglGetFogFuncSGIS;
  glGetFragDataIndex: TglGetFragDataIndex;
  glGetFragDataIndexEXT: TglGetFragDataIndexEXT;
  glGetFragDataLocation: TglGetFragDataLocation;
  glGetFragDataLocationEXT: TglGetFragDataLocationEXT;
  glGetFragmentLightfvSGIX: TglGetFragmentLightfvSGIX;
  glGetFragmentLightivSGIX: TglGetFragmentLightivSGIX;
  glGetFragmentMaterialfvSGIX: TglGetFragmentMaterialfvSGIX;
  glGetFragmentMaterialivSGIX: TglGetFragmentMaterialivSGIX;
  glGetFragmentShadingRatesEXT: TglGetFragmentShadingRatesEXT;
  glGetFramebufferAttachmentParameteriv: TglGetFramebufferAttachmentParameteriv;
  glGetFramebufferAttachmentParameterivEXT: TglGetFramebufferAttachmentParameterivEXT;
  glGetFramebufferAttachmentParameterivOES: TglGetFramebufferAttachmentParameterivOES;
  glGetFramebufferParameterfvAMD: TglGetFramebufferParameterfvAMD;
  glGetFramebufferParameteriv: TglGetFramebufferParameteriv;
  glGetFramebufferParameterivEXT: TglGetFramebufferParameterivEXT;
  glGetFramebufferPixelLocalStorageSizeEXT: TglGetFramebufferPixelLocalStorageSizeEXT;
  glGetGraphicsResetStatus: TglGetGraphicsResetStatus;
  glGetGraphicsResetStatusARB: TglGetGraphicsResetStatusARB;
  glGetGraphicsResetStatusEXT: TglGetGraphicsResetStatusEXT;
  glGetGraphicsResetStatusKHR: TglGetGraphicsResetStatusKHR;
  glGetHandleARB: TglGetHandleARB;
  glGetHistogram: TglGetHistogram;
  glGetHistogramEXT: TglGetHistogramEXT;
  glGetHistogramParameterfv: TglGetHistogramParameterfv;
  glGetHistogramParameterfvEXT: TglGetHistogramParameterfvEXT;
  glGetHistogramParameteriv: TglGetHistogramParameteriv;
  glGetHistogramParameterivEXT: TglGetHistogramParameterivEXT;
  glGetHistogramParameterxvOES: TglGetHistogramParameterxvOES;
  glGetImageHandleARB: TglGetImageHandleARB;
  glGetImageHandleNV: TglGetImageHandleNV;
  glGetImageTransformParameterfvHP: TglGetImageTransformParameterfvHP;
  glGetImageTransformParameterivHP: TglGetImageTransformParameterivHP;
  glGetInfoLogARB: TglGetInfoLogARB;
  glGetInstrumentsSGIX: TglGetInstrumentsSGIX;
  glGetInteger64i_v: TglGetInteger64i_v;
  glGetInteger64v: TglGetInteger64v;
  glGetInteger64vAPPLE: TglGetInteger64vAPPLE;
  glGetInteger64vEXT: TglGetInteger64vEXT;
  glGetIntegerIndexedvEXT: TglGetIntegerIndexedvEXT;
  glGetIntegeri_v: TglGetIntegeri_v;
  glGetIntegeri_vEXT: TglGetIntegeri_vEXT;
  glGetIntegerui64i_vNV: TglGetIntegerui64i_vNV;
  glGetIntegerui64vNV: TglGetIntegerui64vNV;
  glGetIntegerv: TglGetIntegerv;
  glGetInternalformatSampleivNV: TglGetInternalformatSampleivNV;
  glGetInternalformati64v: TglGetInternalformati64v;
  glGetInternalformativ: TglGetInternalformativ;
  glGetInvariantBooleanvEXT: TglGetInvariantBooleanvEXT;
  glGetInvariantFloatvEXT: TglGetInvariantFloatvEXT;
  glGetInvariantIntegervEXT: TglGetInvariantIntegervEXT;
  glGetLightfv: TglGetLightfv;
  glGetLightiv: TglGetLightiv;
  glGetLightxOES: TglGetLightxOES;
  glGetLightxv: TglGetLightxv;
  glGetLightxvOES: TglGetLightxvOES;
  glGetListParameterfvSGIX: TglGetListParameterfvSGIX;
  glGetListParameterivSGIX: TglGetListParameterivSGIX;
  glGetLocalConstantBooleanvEXT: TglGetLocalConstantBooleanvEXT;
  glGetLocalConstantFloatvEXT: TglGetLocalConstantFloatvEXT;
  glGetLocalConstantIntegervEXT: TglGetLocalConstantIntegervEXT;
  glGetMapAttribParameterfvNV: TglGetMapAttribParameterfvNV;
  glGetMapAttribParameterivNV: TglGetMapAttribParameterivNV;
  glGetMapControlPointsNV: TglGetMapControlPointsNV;
  glGetMapParameterfvNV: TglGetMapParameterfvNV;
  glGetMapParameterivNV: TglGetMapParameterivNV;
  glGetMapdv: TglGetMapdv;
  glGetMapfv: TglGetMapfv;
  glGetMapiv: TglGetMapiv;
  glGetMapxvOES: TglGetMapxvOES;
  glGetMaterialfv: TglGetMaterialfv;
  glGetMaterialiv: TglGetMaterialiv;
  glGetMaterialxOES: TglGetMaterialxOES;
  glGetMaterialxv: TglGetMaterialxv;
  glGetMaterialxvOES: TglGetMaterialxvOES;
  glGetMemoryObjectDetachedResourcesuivNV: TglGetMemoryObjectDetachedResourcesuivNV;
  glGetMemoryObjectParameterivEXT: TglGetMemoryObjectParameterivEXT;
  glGetMinmax: TglGetMinmax;
  glGetMinmaxEXT: TglGetMinmaxEXT;
  glGetMinmaxParameterfv: TglGetMinmaxParameterfv;
  glGetMinmaxParameterfvEXT: TglGetMinmaxParameterfvEXT;
  glGetMinmaxParameteriv: TglGetMinmaxParameteriv;
  glGetMinmaxParameterivEXT: TglGetMinmaxParameterivEXT;
  glGetMultiTexEnvfvEXT: TglGetMultiTexEnvfvEXT;
  glGetMultiTexEnvivEXT: TglGetMultiTexEnvivEXT;
  glGetMultiTexGendvEXT: TglGetMultiTexGendvEXT;
  glGetMultiTexGenfvEXT: TglGetMultiTexGenfvEXT;
  glGetMultiTexGenivEXT: TglGetMultiTexGenivEXT;
  glGetMultiTexImageEXT: TglGetMultiTexImageEXT;
  glGetMultiTexLevelParameterfvEXT: TglGetMultiTexLevelParameterfvEXT;
  glGetMultiTexLevelParameterivEXT: TglGetMultiTexLevelParameterivEXT;
  glGetMultiTexParameterIivEXT: TglGetMultiTexParameterIivEXT;
  glGetMultiTexParameterIuivEXT: TglGetMultiTexParameterIuivEXT;
  glGetMultiTexParameterfvEXT: TglGetMultiTexParameterfvEXT;
  glGetMultiTexParameterivEXT: TglGetMultiTexParameterivEXT;
  glGetMultisamplefv: TglGetMultisamplefv;
  glGetMultisamplefvNV: TglGetMultisamplefvNV;
  glGetNamedBufferParameteri64v: TglGetNamedBufferParameteri64v;
  glGetNamedBufferParameteriv: TglGetNamedBufferParameteriv;
  glGetNamedBufferParameterivEXT: TglGetNamedBufferParameterivEXT;
  glGetNamedBufferParameterui64vNV: TglGetNamedBufferParameterui64vNV;
  glGetNamedBufferPointerv: TglGetNamedBufferPointerv;
  glGetNamedBufferPointervEXT: TglGetNamedBufferPointervEXT;
  glGetNamedBufferSubData: TglGetNamedBufferSubData;
  glGetNamedBufferSubDataEXT: TglGetNamedBufferSubDataEXT;
  glGetNamedFramebufferParameterfvAMD: TglGetNamedFramebufferParameterfvAMD;
  glGetNamedFramebufferAttachmentParameteriv: TglGetNamedFramebufferAttachmentParameteriv;
  glGetNamedFramebufferAttachmentParameterivEXT: TglGetNamedFramebufferAttachmentParameterivEXT;
  glGetNamedFramebufferParameteriv: TglGetNamedFramebufferParameteriv;
  glGetNamedFramebufferParameterivEXT: TglGetNamedFramebufferParameterivEXT;
  glGetNamedProgramLocalParameterIivEXT: TglGetNamedProgramLocalParameterIivEXT;
  glGetNamedProgramLocalParameterIuivEXT: TglGetNamedProgramLocalParameterIuivEXT;
  glGetNamedProgramLocalParameterdvEXT: TglGetNamedProgramLocalParameterdvEXT;
  glGetNamedProgramLocalParameterfvEXT: TglGetNamedProgramLocalParameterfvEXT;
  glGetNamedProgramStringEXT: TglGetNamedProgramStringEXT;
  glGetNamedProgramivEXT: TglGetNamedProgramivEXT;
  glGetNamedRenderbufferParameteriv: TglGetNamedRenderbufferParameteriv;
  glGetNamedRenderbufferParameterivEXT: TglGetNamedRenderbufferParameterivEXT;
  glGetNamedStringARB: TglGetNamedStringARB;
  glGetNamedStringivARB: TglGetNamedStringivARB;
  glGetNextPerfQueryIdINTEL: TglGetNextPerfQueryIdINTEL;
  glGetObjectBufferfvATI: TglGetObjectBufferfvATI;
  glGetObjectBufferivATI: TglGetObjectBufferivATI;
  glGetObjectLabel: TglGetObjectLabel;
  glGetObjectLabelEXT: TglGetObjectLabelEXT;
  glGetObjectLabelKHR: TglGetObjectLabelKHR;
  glGetObjectParameterfvARB: TglGetObjectParameterfvARB;
  glGetObjectParameterivAPPLE: TglGetObjectParameterivAPPLE;
  glGetObjectParameterivARB: TglGetObjectParameterivARB;
  glGetObjectPtrLabel: TglGetObjectPtrLabel;
  glGetObjectPtrLabelKHR: TglGetObjectPtrLabelKHR;
  glGetOcclusionQueryivNV: TglGetOcclusionQueryivNV;
  glGetOcclusionQueryuivNV: TglGetOcclusionQueryuivNV;
  glGetPathColorGenfvNV: TglGetPathColorGenfvNV;
  glGetPathColorGenivNV: TglGetPathColorGenivNV;
  glGetPathCommandsNV: TglGetPathCommandsNV;
  glGetPathCoordsNV: TglGetPathCoordsNV;
  glGetPathDashArrayNV: TglGetPathDashArrayNV;
  glGetPathLengthNV: TglGetPathLengthNV;
  glGetPathMetricRangeNV: TglGetPathMetricRangeNV;
  glGetPathMetricsNV: TglGetPathMetricsNV;
  glGetPathParameterfvNV: TglGetPathParameterfvNV;
  glGetPathParameterivNV: TglGetPathParameterivNV;
  glGetPathSpacingNV: TglGetPathSpacingNV;
  glGetPathTexGenfvNV: TglGetPathTexGenfvNV;
  glGetPathTexGenivNV: TglGetPathTexGenivNV;
  glGetPerfCounterInfoINTEL: TglGetPerfCounterInfoINTEL;
  glGetPerfMonitorCounterDataAMD: TglGetPerfMonitorCounterDataAMD;
  glGetPerfMonitorCounterInfoAMD: TglGetPerfMonitorCounterInfoAMD;
  glGetPerfMonitorCounterStringAMD: TglGetPerfMonitorCounterStringAMD;
  glGetPerfMonitorCountersAMD: TglGetPerfMonitorCountersAMD;
  glGetPerfMonitorGroupStringAMD: TglGetPerfMonitorGroupStringAMD;
  glGetPerfMonitorGroupsAMD: TglGetPerfMonitorGroupsAMD;
  glGetPerfQueryDataINTEL: TglGetPerfQueryDataINTEL;
  glGetPerfQueryIdByNameINTEL: TglGetPerfQueryIdByNameINTEL;
  glGetPerfQueryInfoINTEL: TglGetPerfQueryInfoINTEL;
  glGetPixelMapfv: TglGetPixelMapfv;
  glGetPixelMapuiv: TglGetPixelMapuiv;
  glGetPixelMapusv: TglGetPixelMapusv;
  glGetPixelMapxv: TglGetPixelMapxv;
  glGetPixelTexGenParameterfvSGIS: TglGetPixelTexGenParameterfvSGIS;
  glGetPixelTexGenParameterivSGIS: TglGetPixelTexGenParameterivSGIS;
  glGetPixelTransformParameterfvEXT: TglGetPixelTransformParameterfvEXT;
  glGetPixelTransformParameterivEXT: TglGetPixelTransformParameterivEXT;
  glGetPointerIndexedvEXT: TglGetPointerIndexedvEXT;
  glGetPointeri_vEXT: TglGetPointeri_vEXT;
  glGetPointerv: TglGetPointerv;
  glGetPointervEXT: TglGetPointervEXT;
  glGetPointervKHR: TglGetPointervKHR;
  glGetPolygonStipple: TglGetPolygonStipple;
  glGetProgramBinary: TglGetProgramBinary;
  glGetProgramBinaryOES: TglGetProgramBinaryOES;
  glGetProgramEnvParameterIivNV: TglGetProgramEnvParameterIivNV;
  glGetProgramEnvParameterIuivNV: TglGetProgramEnvParameterIuivNV;
  glGetProgramEnvParameterdvARB: TglGetProgramEnvParameterdvARB;
  glGetProgramEnvParameterfvARB: TglGetProgramEnvParameterfvARB;
  glGetProgramInfoLog: TglGetProgramInfoLog;
  glGetProgramInterfaceiv: TglGetProgramInterfaceiv;
  glGetProgramLocalParameterIivNV: TglGetProgramLocalParameterIivNV;
  glGetProgramLocalParameterIuivNV: TglGetProgramLocalParameterIuivNV;
  glGetProgramLocalParameterdvARB: TglGetProgramLocalParameterdvARB;
  glGetProgramLocalParameterfvARB: TglGetProgramLocalParameterfvARB;
  glGetProgramNamedParameterdvNV: TglGetProgramNamedParameterdvNV;
  glGetProgramNamedParameterfvNV: TglGetProgramNamedParameterfvNV;
  glGetProgramParameterdvNV: TglGetProgramParameterdvNV;
  glGetProgramParameterfvNV: TglGetProgramParameterfvNV;
  glGetProgramPipelineInfoLog: TglGetProgramPipelineInfoLog;
  glGetProgramPipelineInfoLogEXT: TglGetProgramPipelineInfoLogEXT;
  glGetProgramPipelineiv: TglGetProgramPipelineiv;
  glGetProgramPipelineivEXT: TglGetProgramPipelineivEXT;
  glGetProgramResourceIndex: TglGetProgramResourceIndex;
  glGetProgramResourceLocation: TglGetProgramResourceLocation;
  glGetProgramResourceLocationIndex: TglGetProgramResourceLocationIndex;
  glGetProgramResourceLocationIndexEXT: TglGetProgramResourceLocationIndexEXT;
  glGetProgramResourceName: TglGetProgramResourceName;
  glGetProgramResourcefvNV: TglGetProgramResourcefvNV;
  glGetProgramResourceiv: TglGetProgramResourceiv;
  glGetProgramStageiv: TglGetProgramStageiv;
  glGetProgramStringARB: TglGetProgramStringARB;
  glGetProgramStringNV: TglGetProgramStringNV;
  glGetProgramSubroutineParameteruivNV: TglGetProgramSubroutineParameteruivNV;
  glGetProgramiv: TglGetProgramiv;
  glGetProgramivARB: TglGetProgramivARB;
  glGetProgramivNV: TglGetProgramivNV;
  glGetQueryBufferObjecti64v: TglGetQueryBufferObjecti64v;
  glGetQueryBufferObjectiv: TglGetQueryBufferObjectiv;
  glGetQueryBufferObjectui64v: TglGetQueryBufferObjectui64v;
  glGetQueryBufferObjectuiv: TglGetQueryBufferObjectuiv;
  glGetQueryIndexediv: TglGetQueryIndexediv;
  glGetQueryObjecti64v: TglGetQueryObjecti64v;
  glGetQueryObjecti64vEXT: TglGetQueryObjecti64vEXT;
  glGetQueryObjectiv: TglGetQueryObjectiv;
  glGetQueryObjectivARB: TglGetQueryObjectivARB;
  glGetQueryObjectivEXT: TglGetQueryObjectivEXT;
  glGetQueryObjectui64v: TglGetQueryObjectui64v;
  glGetQueryObjectui64vEXT: TglGetQueryObjectui64vEXT;
  glGetQueryObjectuiv: TglGetQueryObjectuiv;
  glGetQueryObjectuivARB: TglGetQueryObjectuivARB;
  glGetQueryObjectuivEXT: TglGetQueryObjectuivEXT;
  glGetQueryiv: TglGetQueryiv;
  glGetQueryivARB: TglGetQueryivARB;
  glGetQueryivEXT: TglGetQueryivEXT;
  glGetRenderbufferParameteriv: TglGetRenderbufferParameteriv;
  glGetRenderbufferParameterivEXT: TglGetRenderbufferParameterivEXT;
  glGetRenderbufferParameterivOES: TglGetRenderbufferParameterivOES;
  glGetSamplerParameterIiv: TglGetSamplerParameterIiv;
  glGetSamplerParameterIivEXT: TglGetSamplerParameterIivEXT;
  glGetSamplerParameterIivOES: TglGetSamplerParameterIivOES;
  glGetSamplerParameterIuiv: TglGetSamplerParameterIuiv;
  glGetSamplerParameterIuivEXT: TglGetSamplerParameterIuivEXT;
  glGetSamplerParameterIuivOES: TglGetSamplerParameterIuivOES;
  glGetSamplerParameterfv: TglGetSamplerParameterfv;
  glGetSamplerParameteriv: TglGetSamplerParameteriv;
  glGetSemaphoreParameterivNV: TglGetSemaphoreParameterivNV;
  glGetSemaphoreParameterui64vEXT: TglGetSemaphoreParameterui64vEXT;
  glGetSeparableFilter: TglGetSeparableFilter;
  glGetSeparableFilterEXT: TglGetSeparableFilterEXT;
  glGetShaderInfoLog: TglGetShaderInfoLog;
  glGetShaderPrecisionFormat: TglGetShaderPrecisionFormat;
  glGetShaderSource: TglGetShaderSource;
  glGetShaderSourceARB: TglGetShaderSourceARB;
  glGetShaderiv: TglGetShaderiv;
  glGetShadingRateImagePaletteNV: TglGetShadingRateImagePaletteNV;
  glGetShadingRateSampleLocationivNV: TglGetShadingRateSampleLocationivNV;
  glGetSharpenTexFuncSGIS: TglGetSharpenTexFuncSGIS;
  glGetStageIndexNV: TglGetStageIndexNV;
  glGetString: TglGetString;
  glGetStringi: TglGetStringi;
  glGetSubroutineIndex: TglGetSubroutineIndex;
  glGetSubroutineUniformLocation: TglGetSubroutineUniformLocation;
  glGetSynciv: TglGetSynciv;
  glGetSyncivAPPLE: TglGetSyncivAPPLE;
  glGetTexBumpParameterfvATI: TglGetTexBumpParameterfvATI;
  glGetTexBumpParameterivATI: TglGetTexBumpParameterivATI;
  glGetTexEnvfv: TglGetTexEnvfv;
  glGetTexEnviv: TglGetTexEnviv;
  glGetTexEnvxv: TglGetTexEnvxv;
  glGetTexEnvxvOES: TglGetTexEnvxvOES;
  glGetTexFilterFuncSGIS: TglGetTexFilterFuncSGIS;
  glGetTexGendv: TglGetTexGendv;
  glGetTexGenfv: TglGetTexGenfv;
  glGetTexGenfvOES: TglGetTexGenfvOES;
  glGetTexGeniv: TglGetTexGeniv;
  glGetTexGenivOES: TglGetTexGenivOES;
  glGetTexGenxvOES: TglGetTexGenxvOES;
  glGetTexImage: TglGetTexImage;
  glGetTexLevelParameterfv: TglGetTexLevelParameterfv;
  glGetTexLevelParameteriv: TglGetTexLevelParameteriv;
  glGetTexLevelParameterxvOES: TglGetTexLevelParameterxvOES;
  glGetTexParameterIiv: TglGetTexParameterIiv;
  glGetTexParameterIivEXT: TglGetTexParameterIivEXT;
  glGetTexParameterIivOES: TglGetTexParameterIivOES;
  glGetTexParameterIuiv: TglGetTexParameterIuiv;
  glGetTexParameterIuivEXT: TglGetTexParameterIuivEXT;
  glGetTexParameterIuivOES: TglGetTexParameterIuivOES;
  glGetTexParameterPointervAPPLE: TglGetTexParameterPointervAPPLE;
  glGetTexParameterfv: TglGetTexParameterfv;
  glGetTexParameteriv: TglGetTexParameteriv;
  glGetTexParameterxv: TglGetTexParameterxv;
  glGetTexParameterxvOES: TglGetTexParameterxvOES;
  glGetTextureHandleARB: TglGetTextureHandleARB;
  glGetTextureHandleIMG: TglGetTextureHandleIMG;
  glGetTextureHandleNV: TglGetTextureHandleNV;
  glGetTextureImage: TglGetTextureImage;
  glGetTextureImageEXT: TglGetTextureImageEXT;
  glGetTextureLevelParameterfv: TglGetTextureLevelParameterfv;
  glGetTextureLevelParameterfvEXT: TglGetTextureLevelParameterfvEXT;
  glGetTextureLevelParameteriv: TglGetTextureLevelParameteriv;
  glGetTextureLevelParameterivEXT: TglGetTextureLevelParameterivEXT;
  glGetTextureParameterIiv: TglGetTextureParameterIiv;
  glGetTextureParameterIivEXT: TglGetTextureParameterIivEXT;
  glGetTextureParameterIuiv: TglGetTextureParameterIuiv;
  glGetTextureParameterIuivEXT: TglGetTextureParameterIuivEXT;
  glGetTextureParameterfv: TglGetTextureParameterfv;
  glGetTextureParameterfvEXT: TglGetTextureParameterfvEXT;
  glGetTextureParameteriv: TglGetTextureParameteriv;
  glGetTextureParameterivEXT: TglGetTextureParameterivEXT;
  glGetTextureSamplerHandleARB: TglGetTextureSamplerHandleARB;
  glGetTextureSamplerHandleIMG: TglGetTextureSamplerHandleIMG;
  glGetTextureSamplerHandleNV: TglGetTextureSamplerHandleNV;
  glGetTextureSubImage: TglGetTextureSubImage;
  glGetTrackMatrixivNV: TglGetTrackMatrixivNV;
  glGetTransformFeedbackVarying: TglGetTransformFeedbackVarying;
  glGetTransformFeedbackVaryingEXT: TglGetTransformFeedbackVaryingEXT;
  glGetTransformFeedbackVaryingNV: TglGetTransformFeedbackVaryingNV;
  glGetTransformFeedbacki64_v: TglGetTransformFeedbacki64_v;
  glGetTransformFeedbacki_v: TglGetTransformFeedbacki_v;
  glGetTransformFeedbackiv: TglGetTransformFeedbackiv;
  glGetTranslatedShaderSourceANGLE: TglGetTranslatedShaderSourceANGLE;
  glGetUniformBlockIndex: TglGetUniformBlockIndex;
  glGetUniformBufferSizeEXT: TglGetUniformBufferSizeEXT;
  glGetUniformIndices: TglGetUniformIndices;
  glGetUniformLocation: TglGetUniformLocation;
  glGetUniformLocationARB: TglGetUniformLocationARB;
  glGetUniformOffsetEXT: TglGetUniformOffsetEXT;
  glGetUniformSubroutineuiv: TglGetUniformSubroutineuiv;
  glGetUniformdv: TglGetUniformdv;
  glGetUniformfv: TglGetUniformfv;
  glGetUniformfvARB: TglGetUniformfvARB;
  glGetUniformi64vARB: TglGetUniformi64vARB;
  glGetUniformi64vNV: TglGetUniformi64vNV;
  glGetUniformiv: TglGetUniformiv;
  glGetUniformivARB: TglGetUniformivARB;
  glGetUniformui64vARB: TglGetUniformui64vARB;
  glGetUniformui64vNV: TglGetUniformui64vNV;
  glGetUniformuiv: TglGetUniformuiv;
  glGetUniformuivEXT: TglGetUniformuivEXT;
  glGetUnsignedBytevEXT: TglGetUnsignedBytevEXT;
  glGetUnsignedBytei_vEXT: TglGetUnsignedBytei_vEXT;
  glGetVariantArrayObjectfvATI: TglGetVariantArrayObjectfvATI;
  glGetVariantArrayObjectivATI: TglGetVariantArrayObjectivATI;
  glGetVariantBooleanvEXT: TglGetVariantBooleanvEXT;
  glGetVariantFloatvEXT: TglGetVariantFloatvEXT;
  glGetVariantIntegervEXT: TglGetVariantIntegervEXT;
  glGetVariantPointervEXT: TglGetVariantPointervEXT;
  glGetVaryingLocationNV: TglGetVaryingLocationNV;
  glGetVertexArrayIndexed64iv: TglGetVertexArrayIndexed64iv;
  glGetVertexArrayIndexediv: TglGetVertexArrayIndexediv;
  glGetVertexArrayIntegeri_vEXT: TglGetVertexArrayIntegeri_vEXT;
  glGetVertexArrayIntegervEXT: TglGetVertexArrayIntegervEXT;
  glGetVertexArrayPointeri_vEXT: TglGetVertexArrayPointeri_vEXT;
  glGetVertexArrayPointervEXT: TglGetVertexArrayPointervEXT;
  glGetVertexArrayiv: TglGetVertexArrayiv;
  glGetVertexAttribArrayObjectfvATI: TglGetVertexAttribArrayObjectfvATI;
  glGetVertexAttribArrayObjectivATI: TglGetVertexAttribArrayObjectivATI;
  glGetVertexAttribIiv: TglGetVertexAttribIiv;
  glGetVertexAttribIivEXT: TglGetVertexAttribIivEXT;
  glGetVertexAttribIuiv: TglGetVertexAttribIuiv;
  glGetVertexAttribIuivEXT: TglGetVertexAttribIuivEXT;
  glGetVertexAttribLdv: TglGetVertexAttribLdv;
  glGetVertexAttribLdvEXT: TglGetVertexAttribLdvEXT;
  glGetVertexAttribLi64vNV: TglGetVertexAttribLi64vNV;
  glGetVertexAttribLui64vARB: TglGetVertexAttribLui64vARB;
  glGetVertexAttribLui64vNV: TglGetVertexAttribLui64vNV;
  glGetVertexAttribPointerv: TglGetVertexAttribPointerv;
  glGetVertexAttribPointervARB: TglGetVertexAttribPointervARB;
  glGetVertexAttribPointervNV: TglGetVertexAttribPointervNV;
  glGetVertexAttribdv: TglGetVertexAttribdv;
  glGetVertexAttribdvARB: TglGetVertexAttribdvARB;
  glGetVertexAttribdvNV: TglGetVertexAttribdvNV;
  glGetVertexAttribfv: TglGetVertexAttribfv;
  glGetVertexAttribfvARB: TglGetVertexAttribfvARB;
  glGetVertexAttribfvNV: TglGetVertexAttribfvNV;
  glGetVertexAttribiv: TglGetVertexAttribiv;
  glGetVertexAttribivARB: TglGetVertexAttribivARB;
  glGetVertexAttribivNV: TglGetVertexAttribivNV;
  glGetVideoCaptureStreamdvNV: TglGetVideoCaptureStreamdvNV;
  glGetVideoCaptureStreamfvNV: TglGetVideoCaptureStreamfvNV;
  glGetVideoCaptureStreamivNV: TglGetVideoCaptureStreamivNV;
  glGetVideoCaptureivNV: TglGetVideoCaptureivNV;
  glGetVideoi64vNV: TglGetVideoi64vNV;
  glGetVideoivNV: TglGetVideoivNV;
  glGetVideoui64vNV: TglGetVideoui64vNV;
  glGetVideouivNV: TglGetVideouivNV;
  glGetnColorTable: TglGetnColorTable;
  glGetnColorTableARB: TglGetnColorTableARB;
  glGetnCompressedTexImage: TglGetnCompressedTexImage;
  glGetnCompressedTexImageARB: TglGetnCompressedTexImageARB;
  glGetnConvolutionFilter: TglGetnConvolutionFilter;
  glGetnConvolutionFilterARB: TglGetnConvolutionFilterARB;
  glGetnHistogram: TglGetnHistogram;
  glGetnHistogramARB: TglGetnHistogramARB;
  glGetnMapdv: TglGetnMapdv;
  glGetnMapdvARB: TglGetnMapdvARB;
  glGetnMapfv: TglGetnMapfv;
  glGetnMapfvARB: TglGetnMapfvARB;
  glGetnMapiv: TglGetnMapiv;
  glGetnMapivARB: TglGetnMapivARB;
  glGetnMinmax: TglGetnMinmax;
  glGetnMinmaxARB: TglGetnMinmaxARB;
  glGetnPixelMapfv: TglGetnPixelMapfv;
  glGetnPixelMapfvARB: TglGetnPixelMapfvARB;
  glGetnPixelMapuiv: TglGetnPixelMapuiv;
  glGetnPixelMapuivARB: TglGetnPixelMapuivARB;
  glGetnPixelMapusv: TglGetnPixelMapusv;
  glGetnPixelMapusvARB: TglGetnPixelMapusvARB;
  glGetnPolygonStipple: TglGetnPolygonStipple;
  glGetnPolygonStippleARB: TglGetnPolygonStippleARB;
  glGetnSeparableFilter: TglGetnSeparableFilter;
  glGetnSeparableFilterARB: TglGetnSeparableFilterARB;
  glGetnTexImage: TglGetnTexImage;
  glGetnTexImageARB: TglGetnTexImageARB;
  glGetnUniformdv: TglGetnUniformdv;
  glGetnUniformdvARB: TglGetnUniformdvARB;
  glGetnUniformfv: TglGetnUniformfv;
  glGetnUniformfvARB: TglGetnUniformfvARB;
  glGetnUniformfvEXT: TglGetnUniformfvEXT;
  glGetnUniformfvKHR: TglGetnUniformfvKHR;
  glGetnUniformi64vARB: TglGetnUniformi64vARB;
  glGetnUniformiv: TglGetnUniformiv;
  glGetnUniformivARB: TglGetnUniformivARB;
  glGetnUniformivEXT: TglGetnUniformivEXT;
  glGetnUniformivKHR: TglGetnUniformivKHR;
  glGetnUniformui64vARB: TglGetnUniformui64vARB;
  glGetnUniformuiv: TglGetnUniformuiv;
  glGetnUniformuivARB: TglGetnUniformuivARB;
  glGetnUniformuivKHR: TglGetnUniformuivKHR;
  glGlobalAlphaFactorbSUN: TglGlobalAlphaFactorbSUN;
  glGlobalAlphaFactordSUN: TglGlobalAlphaFactordSUN;
  glGlobalAlphaFactorfSUN: TglGlobalAlphaFactorfSUN;
  glGlobalAlphaFactoriSUN: TglGlobalAlphaFactoriSUN;
  glGlobalAlphaFactorsSUN: TglGlobalAlphaFactorsSUN;
  glGlobalAlphaFactorubSUN: TglGlobalAlphaFactorubSUN;
  glGlobalAlphaFactoruiSUN: TglGlobalAlphaFactoruiSUN;
  glGlobalAlphaFactorusSUN: TglGlobalAlphaFactorusSUN;
  glHint: TglHint;
  glHintPGI: TglHintPGI;
  glHistogram: TglHistogram;
  glHistogramEXT: TglHistogramEXT;
  glIglooInterfaceSGIX: TglIglooInterfaceSGIX;
  glImageTransformParameterfHP: TglImageTransformParameterfHP;
  glImageTransformParameterfvHP: TglImageTransformParameterfvHP;
  glImageTransformParameteriHP: TglImageTransformParameteriHP;
  glImageTransformParameterivHP: TglImageTransformParameterivHP;
  glImportMemoryFdEXT: TglImportMemoryFdEXT;
  glImportMemoryWin32HandleEXT: TglImportMemoryWin32HandleEXT;
  glImportMemoryWin32NameEXT: TglImportMemoryWin32NameEXT;
  glImportSemaphoreFdEXT: TglImportSemaphoreFdEXT;
  glImportSemaphoreWin32HandleEXT: TglImportSemaphoreWin32HandleEXT;
  glImportSemaphoreWin32NameEXT: TglImportSemaphoreWin32NameEXT;
  glImportSyncEXT: TglImportSyncEXT;
  glIndexFormatNV: TglIndexFormatNV;
  glIndexFuncEXT: TglIndexFuncEXT;
  glIndexMask: TglIndexMask;
  glIndexMaterialEXT: TglIndexMaterialEXT;
  glIndexPointer: TglIndexPointer;
  glIndexPointerEXT: TglIndexPointerEXT;
  glIndexPointerListIBM: TglIndexPointerListIBM;
  glIndexd: TglIndexd;
  glIndexdv: TglIndexdv;
  glIndexf: TglIndexf;
  glIndexfv: TglIndexfv;
  glIndexi: TglIndexi;
  glIndexiv: TglIndexiv;
  glIndexs: TglIndexs;
  glIndexsv: TglIndexsv;
  glIndexub: TglIndexub;
  glIndexubv: TglIndexubv;
  glIndexxOES: TglIndexxOES;
  glIndexxvOES: TglIndexxvOES;
  glInitNames: TglInitNames;
  glInsertComponentEXT: TglInsertComponentEXT;
  glInsertEventMarkerEXT: TglInsertEventMarkerEXT;
  glInstrumentsBufferSGIX: TglInstrumentsBufferSGIX;
  glInterleavedArrays: TglInterleavedArrays;
  glInterpolatePathsNV: TglInterpolatePathsNV;
  glInvalidateBufferData: TglInvalidateBufferData;
  glInvalidateBufferSubData: TglInvalidateBufferSubData;
  glInvalidateFramebuffer: TglInvalidateFramebuffer;
  glInvalidateNamedFramebufferData: TglInvalidateNamedFramebufferData;
  glInvalidateNamedFramebufferSubData: TglInvalidateNamedFramebufferSubData;
  glInvalidateSubFramebuffer: TglInvalidateSubFramebuffer;
  glInvalidateTexImage: TglInvalidateTexImage;
  glInvalidateTexSubImage: TglInvalidateTexSubImage;
  glIsAsyncMarkerSGIX: TglIsAsyncMarkerSGIX;
  glIsBuffer: TglIsBuffer;
  glIsBufferARB: TglIsBufferARB;
  glIsBufferResidentNV: TglIsBufferResidentNV;
  glIsCommandListNV: TglIsCommandListNV;
  glIsEnabled: TglIsEnabled;
  glIsEnabledIndexedEXT: TglIsEnabledIndexedEXT;
  glIsEnabledi: TglIsEnabledi;
  glIsEnablediEXT: TglIsEnablediEXT;
  glIsEnablediNV: TglIsEnablediNV;
  glIsEnablediOES: TglIsEnablediOES;
  glIsFenceAPPLE: TglIsFenceAPPLE;
  glIsFenceNV: TglIsFenceNV;
  glIsFramebuffer: TglIsFramebuffer;
  glIsFramebufferEXT: TglIsFramebufferEXT;
  glIsFramebufferOES: TglIsFramebufferOES;
  glIsImageHandleResidentARB: TglIsImageHandleResidentARB;
  glIsImageHandleResidentNV: TglIsImageHandleResidentNV;
  glIsList: TglIsList;
  glIsMemoryObjectEXT: TglIsMemoryObjectEXT;
  glIsNameAMD: TglIsNameAMD;
  glIsNamedBufferResidentNV: TglIsNamedBufferResidentNV;
  glIsNamedStringARB: TglIsNamedStringARB;
  glIsObjectBufferATI: TglIsObjectBufferATI;
  glIsOcclusionQueryNV: TglIsOcclusionQueryNV;
  glIsPathNV: TglIsPathNV;
  glIsPointInFillPathNV: TglIsPointInFillPathNV;
  glIsPointInStrokePathNV: TglIsPointInStrokePathNV;
  glIsProgram: TglIsProgram;
  glIsProgramARB: TglIsProgramARB;
  glIsProgramNV: TglIsProgramNV;
  glIsProgramPipeline: TglIsProgramPipeline;
  glIsProgramPipelineEXT: TglIsProgramPipelineEXT;
  glIsQuery: TglIsQuery;
  glIsQueryARB: TglIsQueryARB;
  glIsQueryEXT: TglIsQueryEXT;
  glIsRenderbuffer: TglIsRenderbuffer;
  glIsRenderbufferEXT: TglIsRenderbufferEXT;
  glIsRenderbufferOES: TglIsRenderbufferOES;
  glIsSemaphoreEXT: TglIsSemaphoreEXT;
  glIsSampler: TglIsSampler;
  glIsShader: TglIsShader;
  glIsStateNV: TglIsStateNV;
  glIsSync: TglIsSync;
  glIsSyncAPPLE: TglIsSyncAPPLE;
  glIsTexture: TglIsTexture;
  glIsTextureEXT: TglIsTextureEXT;
  glIsTextureHandleResidentARB: TglIsTextureHandleResidentARB;
  glIsTextureHandleResidentNV: TglIsTextureHandleResidentNV;
  glIsTransformFeedback: TglIsTransformFeedback;
  glIsTransformFeedbackNV: TglIsTransformFeedbackNV;
  glIsVariantEnabledEXT: TglIsVariantEnabledEXT;
  glIsVertexArray: TglIsVertexArray;
  glIsVertexArrayAPPLE: TglIsVertexArrayAPPLE;
  glIsVertexArrayOES: TglIsVertexArrayOES;
  glIsVertexAttribEnabledAPPLE: TglIsVertexAttribEnabledAPPLE;
  glLGPUCopyImageSubDataNVX: TglLGPUCopyImageSubDataNVX;
  glLGPUInterlockNVX: TglLGPUInterlockNVX;
  glLGPUNamedBufferSubDataNVX: TglLGPUNamedBufferSubDataNVX;
  glLabelObjectEXT: TglLabelObjectEXT;
  glLightEnviSGIX: TglLightEnviSGIX;
  glLightModelf: TglLightModelf;
  glLightModelfv: TglLightModelfv;
  glLightModeli: TglLightModeli;
  glLightModeliv: TglLightModeliv;
  glLightModelx: TglLightModelx;
  glLightModelxOES: TglLightModelxOES;
  glLightModelxv: TglLightModelxv;
  glLightModelxvOES: TglLightModelxvOES;
  glLightf: TglLightf;
  glLightfv: TglLightfv;
  glLighti: TglLighti;
  glLightiv: TglLightiv;
  glLightx: TglLightx;
  glLightxOES: TglLightxOES;
  glLightxv: TglLightxv;
  glLightxvOES: TglLightxvOES;
  glLineStipple: TglLineStipple;
  glLineWidth: TglLineWidth;
  glLineWidthx: TglLineWidthx;
  glLineWidthxOES: TglLineWidthxOES;
  glLinkProgram: TglLinkProgram;
  glLinkProgramARB: TglLinkProgramARB;
  glListBase: TglListBase;
  glListDrawCommandsStatesClientNV: TglListDrawCommandsStatesClientNV;
  glListParameterfSGIX: TglListParameterfSGIX;
  glListParameterfvSGIX: TglListParameterfvSGIX;
  glListParameteriSGIX: TglListParameteriSGIX;
  glListParameterivSGIX: TglListParameterivSGIX;
  glLoadIdentity: TglLoadIdentity;
  glLoadIdentityDeformationMapSGIX: TglLoadIdentityDeformationMapSGIX;
  glLoadMatrixd: TglLoadMatrixd;
  glLoadMatrixf: TglLoadMatrixf;
  glLoadMatrixx: TglLoadMatrixx;
  glLoadMatrixxOES: TglLoadMatrixxOES;
  glLoadName: TglLoadName;
  glLoadPaletteFromModelViewMatrixOES: TglLoadPaletteFromModelViewMatrixOES;
  glLoadProgramNV: TglLoadProgramNV;
  glLoadTransposeMatrixd: TglLoadTransposeMatrixd;
  glLoadTransposeMatrixdARB: TglLoadTransposeMatrixdARB;
  glLoadTransposeMatrixf: TglLoadTransposeMatrixf;
  glLoadTransposeMatrixfARB: TglLoadTransposeMatrixfARB;
  glLoadTransposeMatrixxOES: TglLoadTransposeMatrixxOES;
  glLockArraysEXT: TglLockArraysEXT;
  glLogicOp: TglLogicOp;
  glMakeBufferNonResidentNV: TglMakeBufferNonResidentNV;
  glMakeBufferResidentNV: TglMakeBufferResidentNV;
  glMakeImageHandleNonResidentARB: TglMakeImageHandleNonResidentARB;
  glMakeImageHandleNonResidentNV: TglMakeImageHandleNonResidentNV;
  glMakeImageHandleResidentARB: TglMakeImageHandleResidentARB;
  glMakeImageHandleResidentNV: TglMakeImageHandleResidentNV;
  glMakeNamedBufferNonResidentNV: TglMakeNamedBufferNonResidentNV;
  glMakeNamedBufferResidentNV: TglMakeNamedBufferResidentNV;
  glMakeTextureHandleNonResidentARB: TglMakeTextureHandleNonResidentARB;
  glMakeTextureHandleNonResidentNV: TglMakeTextureHandleNonResidentNV;
  glMakeTextureHandleResidentARB: TglMakeTextureHandleResidentARB;
  glMakeTextureHandleResidentNV: TglMakeTextureHandleResidentNV;
  glMap1d: TglMap1d;
  glMap1f: TglMap1f;
  glMap1xOES: TglMap1xOES;
  glMap2d: TglMap2d;
  glMap2f: TglMap2f;
  glMap2xOES: TglMap2xOES;
  glMapBuffer: TglMapBuffer;
  glMapBufferARB: TglMapBufferARB;
  glMapBufferOES: TglMapBufferOES;
  glMapBufferRange: TglMapBufferRange;
  glMapBufferRangeEXT: TglMapBufferRangeEXT;
  glMapControlPointsNV: TglMapControlPointsNV;
  glMapGrid1d: TglMapGrid1d;
  glMapGrid1f: TglMapGrid1f;
  glMapGrid1xOES: TglMapGrid1xOES;
  glMapGrid2d: TglMapGrid2d;
  glMapGrid2f: TglMapGrid2f;
  glMapGrid2xOES: TglMapGrid2xOES;
  glMapNamedBuffer: TglMapNamedBuffer;
  glMapNamedBufferEXT: TglMapNamedBufferEXT;
  glMapNamedBufferRange: TglMapNamedBufferRange;
  glMapNamedBufferRangeEXT: TglMapNamedBufferRangeEXT;
  glMapObjectBufferATI: TglMapObjectBufferATI;
  glMapParameterfvNV: TglMapParameterfvNV;
  glMapParameterivNV: TglMapParameterivNV;
  glMapTexture2DINTEL: TglMapTexture2DINTEL;
  glMapVertexAttrib1dAPPLE: TglMapVertexAttrib1dAPPLE;
  glMapVertexAttrib1fAPPLE: TglMapVertexAttrib1fAPPLE;
  glMapVertexAttrib2dAPPLE: TglMapVertexAttrib2dAPPLE;
  glMapVertexAttrib2fAPPLE: TglMapVertexAttrib2fAPPLE;
  glMaterialf: TglMaterialf;
  glMaterialfv: TglMaterialfv;
  glMateriali: TglMateriali;
  glMaterialiv: TglMaterialiv;
  glMaterialx: TglMaterialx;
  glMaterialxOES: TglMaterialxOES;
  glMaterialxv: TglMaterialxv;
  glMaterialxvOES: TglMaterialxvOES;
  glMatrixFrustumEXT: TglMatrixFrustumEXT;
  glMatrixIndexPointerARB: TglMatrixIndexPointerARB;
  glMatrixIndexPointerOES: TglMatrixIndexPointerOES;
  glMatrixIndexubvARB: TglMatrixIndexubvARB;
  glMatrixIndexuivARB: TglMatrixIndexuivARB;
  glMatrixIndexusvARB: TglMatrixIndexusvARB;
  glMatrixLoad3x2fNV: TglMatrixLoad3x2fNV;
  glMatrixLoad3x3fNV: TglMatrixLoad3x3fNV;
  glMatrixLoadIdentityEXT: TglMatrixLoadIdentityEXT;
  glMatrixLoadTranspose3x3fNV: TglMatrixLoadTranspose3x3fNV;
  glMatrixLoadTransposedEXT: TglMatrixLoadTransposedEXT;
  glMatrixLoadTransposefEXT: TglMatrixLoadTransposefEXT;
  glMatrixLoaddEXT: TglMatrixLoaddEXT;
  glMatrixLoadfEXT: TglMatrixLoadfEXT;
  glMatrixMode: TglMatrixMode;
  glMatrixMult3x2fNV: TglMatrixMult3x2fNV;
  glMatrixMult3x3fNV: TglMatrixMult3x3fNV;
  glMatrixMultTranspose3x3fNV: TglMatrixMultTranspose3x3fNV;
  glMatrixMultTransposedEXT: TglMatrixMultTransposedEXT;
  glMatrixMultTransposefEXT: TglMatrixMultTransposefEXT;
  glMatrixMultdEXT: TglMatrixMultdEXT;
  glMatrixMultfEXT: TglMatrixMultfEXT;
  glMatrixOrthoEXT: TglMatrixOrthoEXT;
  glMatrixPopEXT: TglMatrixPopEXT;
  glMatrixPushEXT: TglMatrixPushEXT;
  glMatrixRotatedEXT: TglMatrixRotatedEXT;
  glMatrixRotatefEXT: TglMatrixRotatefEXT;
  glMatrixScaledEXT: TglMatrixScaledEXT;
  glMatrixScalefEXT: TglMatrixScalefEXT;
  glMatrixTranslatedEXT: TglMatrixTranslatedEXT;
  glMatrixTranslatefEXT: TglMatrixTranslatefEXT;
  glMaxShaderCompilerThreadsKHR: TglMaxShaderCompilerThreadsKHR;
  glMaxShaderCompilerThreadsARB: TglMaxShaderCompilerThreadsARB;
  glMemoryBarrier: TglMemoryBarrier;
  glMemoryBarrierByRegion: TglMemoryBarrierByRegion;
  glMemoryBarrierEXT: TglMemoryBarrierEXT;
  glMemoryObjectParameterivEXT: TglMemoryObjectParameterivEXT;
  glMinSampleShading: TglMinSampleShading;
  glMinSampleShadingARB: TglMinSampleShadingARB;
  glMinSampleShadingOES: TglMinSampleShadingOES;
  glMinmax: TglMinmax;
  glMinmaxEXT: TglMinmaxEXT;
  glMultMatrixd: TglMultMatrixd;
  glMultMatrixf: TglMultMatrixf;
  glMultMatrixx: TglMultMatrixx;
  glMultMatrixxOES: TglMultMatrixxOES;
  glMultTransposeMatrixd: TglMultTransposeMatrixd;
  glMultTransposeMatrixdARB: TglMultTransposeMatrixdARB;
  glMultTransposeMatrixf: TglMultTransposeMatrixf;
  glMultTransposeMatrixfARB: TglMultTransposeMatrixfARB;
  glMultTransposeMatrixxOES: TglMultTransposeMatrixxOES;
  glMultiDrawArrays: TglMultiDrawArrays;
  glMultiDrawArraysEXT: TglMultiDrawArraysEXT;
  glMultiDrawArraysIndirect: TglMultiDrawArraysIndirect;
  glMultiDrawArraysIndirectAMD: TglMultiDrawArraysIndirectAMD;
  glMultiDrawArraysIndirectBindlessCountNV: TglMultiDrawArraysIndirectBindlessCountNV;
  glMultiDrawArraysIndirectBindlessNV: TglMultiDrawArraysIndirectBindlessNV;
  glMultiDrawArraysIndirectCount: TglMultiDrawArraysIndirectCount;
  glMultiDrawArraysIndirectCountARB: TglMultiDrawArraysIndirectCountARB;
  glMultiDrawArraysIndirectEXT: TglMultiDrawArraysIndirectEXT;
  glMultiDrawElementArrayAPPLE: TglMultiDrawElementArrayAPPLE;
  glMultiDrawElements: TglMultiDrawElements;
  glMultiDrawElementsBaseVertex: TglMultiDrawElementsBaseVertex;
  glMultiDrawElementsBaseVertexEXT: TglMultiDrawElementsBaseVertexEXT;
  glMultiDrawElementsEXT: TglMultiDrawElementsEXT;
  glMultiDrawElementsIndirect: TglMultiDrawElementsIndirect;
  glMultiDrawElementsIndirectAMD: TglMultiDrawElementsIndirectAMD;
  glMultiDrawElementsIndirectBindlessCountNV: TglMultiDrawElementsIndirectBindlessCountNV;
  glMultiDrawElementsIndirectBindlessNV: TglMultiDrawElementsIndirectBindlessNV;
  glMultiDrawElementsIndirectCount: TglMultiDrawElementsIndirectCount;
  glMultiDrawElementsIndirectCountARB: TglMultiDrawElementsIndirectCountARB;
  glMultiDrawElementsIndirectEXT: TglMultiDrawElementsIndirectEXT;
  glMultiDrawMeshTasksIndirectNV: TglMultiDrawMeshTasksIndirectNV;
  glMultiDrawMeshTasksIndirectCountNV: TglMultiDrawMeshTasksIndirectCountNV;
  glMultiDrawRangeElementArrayAPPLE: TglMultiDrawRangeElementArrayAPPLE;
  glMultiModeDrawArraysIBM: TglMultiModeDrawArraysIBM;
  glMultiModeDrawElementsIBM: TglMultiModeDrawElementsIBM;
  glMultiTexBufferEXT: TglMultiTexBufferEXT;
  glMultiTexCoord1bOES: TglMultiTexCoord1bOES;
  glMultiTexCoord1bvOES: TglMultiTexCoord1bvOES;
  glMultiTexCoord1d: TglMultiTexCoord1d;
  glMultiTexCoord1dARB: TglMultiTexCoord1dARB;
  glMultiTexCoord1dv: TglMultiTexCoord1dv;
  glMultiTexCoord1dvARB: TglMultiTexCoord1dvARB;
  glMultiTexCoord1f: TglMultiTexCoord1f;
  glMultiTexCoord1fARB: TglMultiTexCoord1fARB;
  glMultiTexCoord1fv: TglMultiTexCoord1fv;
  glMultiTexCoord1fvARB: TglMultiTexCoord1fvARB;
  glMultiTexCoord1hNV: TglMultiTexCoord1hNV;
  glMultiTexCoord1hvNV: TglMultiTexCoord1hvNV;
  glMultiTexCoord1i: TglMultiTexCoord1i;
  glMultiTexCoord1iARB: TglMultiTexCoord1iARB;
  glMultiTexCoord1iv: TglMultiTexCoord1iv;
  glMultiTexCoord1ivARB: TglMultiTexCoord1ivARB;
  glMultiTexCoord1s: TglMultiTexCoord1s;
  glMultiTexCoord1sARB: TglMultiTexCoord1sARB;
  glMultiTexCoord1sv: TglMultiTexCoord1sv;
  glMultiTexCoord1svARB: TglMultiTexCoord1svARB;
  glMultiTexCoord1xOES: TglMultiTexCoord1xOES;
  glMultiTexCoord1xvOES: TglMultiTexCoord1xvOES;
  glMultiTexCoord2bOES: TglMultiTexCoord2bOES;
  glMultiTexCoord2bvOES: TglMultiTexCoord2bvOES;
  glMultiTexCoord2d: TglMultiTexCoord2d;
  glMultiTexCoord2dARB: TglMultiTexCoord2dARB;
  glMultiTexCoord2dv: TglMultiTexCoord2dv;
  glMultiTexCoord2dvARB: TglMultiTexCoord2dvARB;
  glMultiTexCoord2f: TglMultiTexCoord2f;
  glMultiTexCoord2fARB: TglMultiTexCoord2fARB;
  glMultiTexCoord2fv: TglMultiTexCoord2fv;
  glMultiTexCoord2fvARB: TglMultiTexCoord2fvARB;
  glMultiTexCoord2hNV: TglMultiTexCoord2hNV;
  glMultiTexCoord2hvNV: TglMultiTexCoord2hvNV;
  glMultiTexCoord2i: TglMultiTexCoord2i;
  glMultiTexCoord2iARB: TglMultiTexCoord2iARB;
  glMultiTexCoord2iv: TglMultiTexCoord2iv;
  glMultiTexCoord2ivARB: TglMultiTexCoord2ivARB;
  glMultiTexCoord2s: TglMultiTexCoord2s;
  glMultiTexCoord2sARB: TglMultiTexCoord2sARB;
  glMultiTexCoord2sv: TglMultiTexCoord2sv;
  glMultiTexCoord2svARB: TglMultiTexCoord2svARB;
  glMultiTexCoord2xOES: TglMultiTexCoord2xOES;
  glMultiTexCoord2xvOES: TglMultiTexCoord2xvOES;
  glMultiTexCoord3bOES: TglMultiTexCoord3bOES;
  glMultiTexCoord3bvOES: TglMultiTexCoord3bvOES;
  glMultiTexCoord3d: TglMultiTexCoord3d;
  glMultiTexCoord3dARB: TglMultiTexCoord3dARB;
  glMultiTexCoord3dv: TglMultiTexCoord3dv;
  glMultiTexCoord3dvARB: TglMultiTexCoord3dvARB;
  glMultiTexCoord3f: TglMultiTexCoord3f;
  glMultiTexCoord3fARB: TglMultiTexCoord3fARB;
  glMultiTexCoord3fv: TglMultiTexCoord3fv;
  glMultiTexCoord3fvARB: TglMultiTexCoord3fvARB;
  glMultiTexCoord3hNV: TglMultiTexCoord3hNV;
  glMultiTexCoord3hvNV: TglMultiTexCoord3hvNV;
  glMultiTexCoord3i: TglMultiTexCoord3i;
  glMultiTexCoord3iARB: TglMultiTexCoord3iARB;
  glMultiTexCoord3iv: TglMultiTexCoord3iv;
  glMultiTexCoord3ivARB: TglMultiTexCoord3ivARB;
  glMultiTexCoord3s: TglMultiTexCoord3s;
  glMultiTexCoord3sARB: TglMultiTexCoord3sARB;
  glMultiTexCoord3sv: TglMultiTexCoord3sv;
  glMultiTexCoord3svARB: TglMultiTexCoord3svARB;
  glMultiTexCoord3xOES: TglMultiTexCoord3xOES;
  glMultiTexCoord3xvOES: TglMultiTexCoord3xvOES;
  glMultiTexCoord4bOES: TglMultiTexCoord4bOES;
  glMultiTexCoord4bvOES: TglMultiTexCoord4bvOES;
  glMultiTexCoord4d: TglMultiTexCoord4d;
  glMultiTexCoord4dARB: TglMultiTexCoord4dARB;
  glMultiTexCoord4dv: TglMultiTexCoord4dv;
  glMultiTexCoord4dvARB: TglMultiTexCoord4dvARB;
  glMultiTexCoord4f: TglMultiTexCoord4f;
  glMultiTexCoord4fARB: TglMultiTexCoord4fARB;
  glMultiTexCoord4fv: TglMultiTexCoord4fv;
  glMultiTexCoord4fvARB: TglMultiTexCoord4fvARB;
  glMultiTexCoord4hNV: TglMultiTexCoord4hNV;
  glMultiTexCoord4hvNV: TglMultiTexCoord4hvNV;
  glMultiTexCoord4i: TglMultiTexCoord4i;
  glMultiTexCoord4iARB: TglMultiTexCoord4iARB;
  glMultiTexCoord4iv: TglMultiTexCoord4iv;
  glMultiTexCoord4ivARB: TglMultiTexCoord4ivARB;
  glMultiTexCoord4s: TglMultiTexCoord4s;
  glMultiTexCoord4sARB: TglMultiTexCoord4sARB;
  glMultiTexCoord4sv: TglMultiTexCoord4sv;
  glMultiTexCoord4svARB: TglMultiTexCoord4svARB;
  glMultiTexCoord4x: TglMultiTexCoord4x;
  glMultiTexCoord4xOES: TglMultiTexCoord4xOES;
  glMultiTexCoord4xvOES: TglMultiTexCoord4xvOES;
  glMultiTexCoordP1ui: TglMultiTexCoordP1ui;
  glMultiTexCoordP1uiv: TglMultiTexCoordP1uiv;
  glMultiTexCoordP2ui: TglMultiTexCoordP2ui;
  glMultiTexCoordP2uiv: TglMultiTexCoordP2uiv;
  glMultiTexCoordP3ui: TglMultiTexCoordP3ui;
  glMultiTexCoordP3uiv: TglMultiTexCoordP3uiv;
  glMultiTexCoordP4ui: TglMultiTexCoordP4ui;
  glMultiTexCoordP4uiv: TglMultiTexCoordP4uiv;
  glMultiTexCoordPointerEXT: TglMultiTexCoordPointerEXT;
  glMultiTexEnvfEXT: TglMultiTexEnvfEXT;
  glMultiTexEnvfvEXT: TglMultiTexEnvfvEXT;
  glMultiTexEnviEXT: TglMultiTexEnviEXT;
  glMultiTexEnvivEXT: TglMultiTexEnvivEXT;
  glMultiTexGendEXT: TglMultiTexGendEXT;
  glMultiTexGendvEXT: TglMultiTexGendvEXT;
  glMultiTexGenfEXT: TglMultiTexGenfEXT;
  glMultiTexGenfvEXT: TglMultiTexGenfvEXT;
  glMultiTexGeniEXT: TglMultiTexGeniEXT;
  glMultiTexGenivEXT: TglMultiTexGenivEXT;
  glMultiTexImage1DEXT: TglMultiTexImage1DEXT;
  glMultiTexImage2DEXT: TglMultiTexImage2DEXT;
  glMultiTexImage3DEXT: TglMultiTexImage3DEXT;
  glMultiTexParameterIivEXT: TglMultiTexParameterIivEXT;
  glMultiTexParameterIuivEXT: TglMultiTexParameterIuivEXT;
  glMultiTexParameterfEXT: TglMultiTexParameterfEXT;
  glMultiTexParameterfvEXT: TglMultiTexParameterfvEXT;
  glMultiTexParameteriEXT: TglMultiTexParameteriEXT;
  glMultiTexParameterivEXT: TglMultiTexParameterivEXT;
  glMultiTexRenderbufferEXT: TglMultiTexRenderbufferEXT;
  glMultiTexSubImage1DEXT: TglMultiTexSubImage1DEXT;
  glMultiTexSubImage2DEXT: TglMultiTexSubImage2DEXT;
  glMultiTexSubImage3DEXT: TglMultiTexSubImage3DEXT;
  glMulticastBarrierNV: TglMulticastBarrierNV;
  glMulticastBlitFramebufferNV: TglMulticastBlitFramebufferNV;
  glMulticastBufferSubDataNV: TglMulticastBufferSubDataNV;
  glMulticastCopyBufferSubDataNV: TglMulticastCopyBufferSubDataNV;
  glMulticastCopyImageSubDataNV: TglMulticastCopyImageSubDataNV;
  glMulticastFramebufferSampleLocationsfvNV: TglMulticastFramebufferSampleLocationsfvNV;
  glMulticastGetQueryObjecti64vNV: TglMulticastGetQueryObjecti64vNV;
  glMulticastGetQueryObjectivNV: TglMulticastGetQueryObjectivNV;
  glMulticastGetQueryObjectui64vNV: TglMulticastGetQueryObjectui64vNV;
  glMulticastGetQueryObjectuivNV: TglMulticastGetQueryObjectuivNV;
  glMulticastScissorArrayvNVX: TglMulticastScissorArrayvNVX;
  glMulticastViewportArrayvNVX: TglMulticastViewportArrayvNVX;
  glMulticastViewportPositionWScaleNVX: TglMulticastViewportPositionWScaleNVX;
  glMulticastWaitSyncNV: TglMulticastWaitSyncNV;
  glNamedBufferAttachMemoryNV: TglNamedBufferAttachMemoryNV;
  glNamedBufferData: TglNamedBufferData;
  glNamedBufferDataEXT: TglNamedBufferDataEXT;
  glNamedBufferPageCommitmentARB: TglNamedBufferPageCommitmentARB;
  glNamedBufferPageCommitmentEXT: TglNamedBufferPageCommitmentEXT;
  glNamedBufferPageCommitmentMemNV: TglNamedBufferPageCommitmentMemNV;
  glNamedBufferStorage: TglNamedBufferStorage;
  glNamedBufferStorageExternalEXT: TglNamedBufferStorageExternalEXT;
  glNamedBufferStorageEXT: TglNamedBufferStorageEXT;
  glNamedBufferStorageMemEXT: TglNamedBufferStorageMemEXT;
  glNamedBufferSubData: TglNamedBufferSubData;
  glNamedBufferSubDataEXT: TglNamedBufferSubDataEXT;
  glNamedCopyBufferSubDataEXT: TglNamedCopyBufferSubDataEXT;
  glNamedFramebufferDrawBuffer: TglNamedFramebufferDrawBuffer;
  glNamedFramebufferDrawBuffers: TglNamedFramebufferDrawBuffers;
  glNamedFramebufferParameteri: TglNamedFramebufferParameteri;
  glNamedFramebufferParameteriEXT: TglNamedFramebufferParameteriEXT;
  glNamedFramebufferReadBuffer: TglNamedFramebufferReadBuffer;
  glNamedFramebufferRenderbuffer: TglNamedFramebufferRenderbuffer;
  glNamedFramebufferRenderbufferEXT: TglNamedFramebufferRenderbufferEXT;
  glNamedFramebufferSampleLocationsfvARB: TglNamedFramebufferSampleLocationsfvARB;
  glNamedFramebufferSampleLocationsfvNV: TglNamedFramebufferSampleLocationsfvNV;
  glNamedFramebufferTexture: TglNamedFramebufferTexture;
  glNamedFramebufferSamplePositionsfvAMD: TglNamedFramebufferSamplePositionsfvAMD;
  glNamedFramebufferTexture1DEXT: TglNamedFramebufferTexture1DEXT;
  glNamedFramebufferTexture2DEXT: TglNamedFramebufferTexture2DEXT;
  glNamedFramebufferTexture3DEXT: TglNamedFramebufferTexture3DEXT;
  glNamedFramebufferTextureEXT: TglNamedFramebufferTextureEXT;
  glNamedFramebufferTextureFaceEXT: TglNamedFramebufferTextureFaceEXT;
  glNamedFramebufferTextureLayer: TglNamedFramebufferTextureLayer;
  glNamedFramebufferTextureLayerEXT: TglNamedFramebufferTextureLayerEXT;
  glNamedProgramLocalParameter4dEXT: TglNamedProgramLocalParameter4dEXT;
  glNamedProgramLocalParameter4dvEXT: TglNamedProgramLocalParameter4dvEXT;
  glNamedProgramLocalParameter4fEXT: TglNamedProgramLocalParameter4fEXT;
  glNamedProgramLocalParameter4fvEXT: TglNamedProgramLocalParameter4fvEXT;
  glNamedProgramLocalParameterI4iEXT: TglNamedProgramLocalParameterI4iEXT;
  glNamedProgramLocalParameterI4ivEXT: TglNamedProgramLocalParameterI4ivEXT;
  glNamedProgramLocalParameterI4uiEXT: TglNamedProgramLocalParameterI4uiEXT;
  glNamedProgramLocalParameterI4uivEXT: TglNamedProgramLocalParameterI4uivEXT;
  glNamedProgramLocalParameters4fvEXT: TglNamedProgramLocalParameters4fvEXT;
  glNamedProgramLocalParametersI4ivEXT: TglNamedProgramLocalParametersI4ivEXT;
  glNamedProgramLocalParametersI4uivEXT: TglNamedProgramLocalParametersI4uivEXT;
  glNamedProgramStringEXT: TglNamedProgramStringEXT;
  glNamedRenderbufferStorage: TglNamedRenderbufferStorage;
  glNamedRenderbufferStorageEXT: TglNamedRenderbufferStorageEXT;
  glNamedRenderbufferStorageMultisample: TglNamedRenderbufferStorageMultisample;
  glNamedRenderbufferStorageMultisampleAdvancedAMD: TglNamedRenderbufferStorageMultisampleAdvancedAMD;
  glNamedRenderbufferStorageMultisampleCoverageEXT: TglNamedRenderbufferStorageMultisampleCoverageEXT;
  glNamedRenderbufferStorageMultisampleEXT: TglNamedRenderbufferStorageMultisampleEXT;
  glNamedStringARB: TglNamedStringARB;
  glNewList: TglNewList;
  glNewObjectBufferATI: TglNewObjectBufferATI;
  glNormal3b: TglNormal3b;
  glNormal3bv: TglNormal3bv;
  glNormal3d: TglNormal3d;
  glNormal3dv: TglNormal3dv;
  glNormal3f: TglNormal3f;
  glNormal3fVertex3fSUN: TglNormal3fVertex3fSUN;
  glNormal3fVertex3fvSUN: TglNormal3fVertex3fvSUN;
  glNormal3fv: TglNormal3fv;
  glNormal3hNV: TglNormal3hNV;
  glNormal3hvNV: TglNormal3hvNV;
  glNormal3i: TglNormal3i;
  glNormal3iv: TglNormal3iv;
  glNormal3s: TglNormal3s;
  glNormal3sv: TglNormal3sv;
  glNormal3x: TglNormal3x;
  glNormal3xOES: TglNormal3xOES;
  glNormal3xvOES: TglNormal3xvOES;
  glNormalFormatNV: TglNormalFormatNV;
  glNormalP3ui: TglNormalP3ui;
  glNormalP3uiv: TglNormalP3uiv;
  glNormalPointer: TglNormalPointer;
  glNormalPointerEXT: TglNormalPointerEXT;
  glNormalPointerListIBM: TglNormalPointerListIBM;
  glNormalPointervINTEL: TglNormalPointervINTEL;
  glNormalStream3bATI: TglNormalStream3bATI;
  glNormalStream3bvATI: TglNormalStream3bvATI;
  glNormalStream3dATI: TglNormalStream3dATI;
  glNormalStream3dvATI: TglNormalStream3dvATI;
  glNormalStream3fATI: TglNormalStream3fATI;
  glNormalStream3fvATI: TglNormalStream3fvATI;
  glNormalStream3iATI: TglNormalStream3iATI;
  glNormalStream3ivATI: TglNormalStream3ivATI;
  glNormalStream3sATI: TglNormalStream3sATI;
  glNormalStream3svATI: TglNormalStream3svATI;
  glObjectLabel: TglObjectLabel;
  glObjectLabelKHR: TglObjectLabelKHR;
  glObjectPtrLabel: TglObjectPtrLabel;
  glObjectPtrLabelKHR: TglObjectPtrLabelKHR;
  glObjectPurgeableAPPLE: TglObjectPurgeableAPPLE;
  glObjectUnpurgeableAPPLE: TglObjectUnpurgeableAPPLE;
  glOrtho: TglOrtho;
  glOrthof: TglOrthof;
  glOrthofOES: TglOrthofOES;
  glOrthox: TglOrthox;
  glOrthoxOES: TglOrthoxOES;
  glPNTrianglesfATI: TglPNTrianglesfATI;
  glPNTrianglesiATI: TglPNTrianglesiATI;
  glPassTexCoordATI: TglPassTexCoordATI;
  glPassThrough: TglPassThrough;
  glPassThroughxOES: TglPassThroughxOES;
  glPatchParameterfv: TglPatchParameterfv;
  glPatchParameteri: TglPatchParameteri;
  glPatchParameteriEXT: TglPatchParameteriEXT;
  glPatchParameteriOES: TglPatchParameteriOES;
  glPathColorGenNV: TglPathColorGenNV;
  glPathCommandsNV: TglPathCommandsNV;
  glPathCoordsNV: TglPathCoordsNV;
  glPathCoverDepthFuncNV: TglPathCoverDepthFuncNV;
  glPathDashArrayNV: TglPathDashArrayNV;
  glPathFogGenNV: TglPathFogGenNV;
  glPathGlyphIndexArrayNV: TglPathGlyphIndexArrayNV;
  glPathGlyphIndexRangeNV: TglPathGlyphIndexRangeNV;
  glPathGlyphRangeNV: TglPathGlyphRangeNV;
  glPathGlyphsNV: TglPathGlyphsNV;
  glPathMemoryGlyphIndexArrayNV: TglPathMemoryGlyphIndexArrayNV;
  glPathParameterfNV: TglPathParameterfNV;
  glPathParameterfvNV: TglPathParameterfvNV;
  glPathParameteriNV: TglPathParameteriNV;
  glPathParameterivNV: TglPathParameterivNV;
  glPathStencilDepthOffsetNV: TglPathStencilDepthOffsetNV;
  glPathStencilFuncNV: TglPathStencilFuncNV;
  glPathStringNV: TglPathStringNV;
  glPathSubCommandsNV: TglPathSubCommandsNV;
  glPathSubCoordsNV: TglPathSubCoordsNV;
  glPathTexGenNV: TglPathTexGenNV;
  glPauseTransformFeedback: TglPauseTransformFeedback;
  glPauseTransformFeedbackNV: TglPauseTransformFeedbackNV;
  glPixelDataRangeNV: TglPixelDataRangeNV;
  glPixelMapfv: TglPixelMapfv;
  glPixelMapuiv: TglPixelMapuiv;
  glPixelMapusv: TglPixelMapusv;
  glPixelMapx: TglPixelMapx;
  glPixelStoref: TglPixelStoref;
  glPixelStorei: TglPixelStorei;
  glPixelStorex: TglPixelStorex;
  glPixelTexGenParameterfSGIS: TglPixelTexGenParameterfSGIS;
  glPixelTexGenParameterfvSGIS: TglPixelTexGenParameterfvSGIS;
  glPixelTexGenParameteriSGIS: TglPixelTexGenParameteriSGIS;
  glPixelTexGenParameterivSGIS: TglPixelTexGenParameterivSGIS;
  glPixelTexGenSGIX: TglPixelTexGenSGIX;
  glPixelTransferf: TglPixelTransferf;
  glPixelTransferi: TglPixelTransferi;
  glPixelTransferxOES: TglPixelTransferxOES;
  glPixelTransformParameterfEXT: TglPixelTransformParameterfEXT;
  glPixelTransformParameterfvEXT: TglPixelTransformParameterfvEXT;
  glPixelTransformParameteriEXT: TglPixelTransformParameteriEXT;
  glPixelTransformParameterivEXT: TglPixelTransformParameterivEXT;
  glPixelZoom: TglPixelZoom;
  glPixelZoomxOES: TglPixelZoomxOES;
  glPointAlongPathNV: TglPointAlongPathNV;
  glPointParameterf: TglPointParameterf;
  glPointParameterfARB: TglPointParameterfARB;
  glPointParameterfEXT: TglPointParameterfEXT;
  glPointParameterfSGIS: TglPointParameterfSGIS;
  glPointParameterfv: TglPointParameterfv;
  glPointParameterfvARB: TglPointParameterfvARB;
  glPointParameterfvEXT: TglPointParameterfvEXT;
  glPointParameterfvSGIS: TglPointParameterfvSGIS;
  glPointParameteri: TglPointParameteri;
  glPointParameteriNV: TglPointParameteriNV;
  glPointParameteriv: TglPointParameteriv;
  glPointParameterivNV: TglPointParameterivNV;
  glPointParameterx: TglPointParameterx;
  glPointParameterxOES: TglPointParameterxOES;
  glPointParameterxv: TglPointParameterxv;
  glPointParameterxvOES: TglPointParameterxvOES;
  glPointSize: TglPointSize;
  glPointSizePointerOES: TglPointSizePointerOES;
  glPointSizex: TglPointSizex;
  glPointSizexOES: TglPointSizexOES;
  glPollAsyncSGIX: TglPollAsyncSGIX;
  glPollInstrumentsSGIX: TglPollInstrumentsSGIX;
  glPolygonMode: TglPolygonMode;
  glPolygonModeNV: TglPolygonModeNV;
  glPolygonOffset: TglPolygonOffset;
  glPolygonOffsetClamp: TglPolygonOffsetClamp;
  glPolygonOffsetClampEXT: TglPolygonOffsetClampEXT;
  glPolygonOffsetEXT: TglPolygonOffsetEXT;
  glPolygonOffsetx: TglPolygonOffsetx;
  glPolygonOffsetxOES: TglPolygonOffsetxOES;
  glPolygonStipple: TglPolygonStipple;
  glPopAttrib: TglPopAttrib;
  glPopClientAttrib: TglPopClientAttrib;
  glPopDebugGroup: TglPopDebugGroup;
  glPopDebugGroupKHR: TglPopDebugGroupKHR;
  glPopGroupMarkerEXT: TglPopGroupMarkerEXT;
  glPopMatrix: TglPopMatrix;
  glPopName: TglPopName;
  glPresentFrameDualFillNV: TglPresentFrameDualFillNV;
  glPresentFrameKeyedNV: TglPresentFrameKeyedNV;
  glPrimitiveBoundingBox: TglPrimitiveBoundingBox;
  glPrimitiveBoundingBoxARB: TglPrimitiveBoundingBoxARB;
  glPrimitiveBoundingBoxEXT: TglPrimitiveBoundingBoxEXT;
  glPrimitiveBoundingBoxOES: TglPrimitiveBoundingBoxOES;
  glPrimitiveRestartIndex: TglPrimitiveRestartIndex;
  glPrimitiveRestartIndexNV: TglPrimitiveRestartIndexNV;
  glPrimitiveRestartNV: TglPrimitiveRestartNV;
  glPrioritizeTextures: TglPrioritizeTextures;
  glPrioritizeTexturesEXT: TglPrioritizeTexturesEXT;
  glPrioritizeTexturesxOES: TglPrioritizeTexturesxOES;
  glProgramBinary: TglProgramBinary;
  glProgramBinaryOES: TglProgramBinaryOES;
  glProgramBufferParametersIivNV: TglProgramBufferParametersIivNV;
  glProgramBufferParametersIuivNV: TglProgramBufferParametersIuivNV;
  glProgramBufferParametersfvNV: TglProgramBufferParametersfvNV;
  glProgramEnvParameter4dARB: TglProgramEnvParameter4dARB;
  glProgramEnvParameter4dvARB: TglProgramEnvParameter4dvARB;
  glProgramEnvParameter4fARB: TglProgramEnvParameter4fARB;
  glProgramEnvParameter4fvARB: TglProgramEnvParameter4fvARB;
  glProgramEnvParameterI4iNV: TglProgramEnvParameterI4iNV;
  glProgramEnvParameterI4ivNV: TglProgramEnvParameterI4ivNV;
  glProgramEnvParameterI4uiNV: TglProgramEnvParameterI4uiNV;
  glProgramEnvParameterI4uivNV: TglProgramEnvParameterI4uivNV;
  glProgramEnvParameters4fvEXT: TglProgramEnvParameters4fvEXT;
  glProgramEnvParametersI4ivNV: TglProgramEnvParametersI4ivNV;
  glProgramEnvParametersI4uivNV: TglProgramEnvParametersI4uivNV;
  glProgramLocalParameter4dARB: TglProgramLocalParameter4dARB;
  glProgramLocalParameter4dvARB: TglProgramLocalParameter4dvARB;
  glProgramLocalParameter4fARB: TglProgramLocalParameter4fARB;
  glProgramLocalParameter4fvARB: TglProgramLocalParameter4fvARB;
  glProgramLocalParameterI4iNV: TglProgramLocalParameterI4iNV;
  glProgramLocalParameterI4ivNV: TglProgramLocalParameterI4ivNV;
  glProgramLocalParameterI4uiNV: TglProgramLocalParameterI4uiNV;
  glProgramLocalParameterI4uivNV: TglProgramLocalParameterI4uivNV;
  glProgramLocalParameters4fvEXT: TglProgramLocalParameters4fvEXT;
  glProgramLocalParametersI4ivNV: TglProgramLocalParametersI4ivNV;
  glProgramLocalParametersI4uivNV: TglProgramLocalParametersI4uivNV;
  glProgramNamedParameter4dNV: TglProgramNamedParameter4dNV;
  glProgramNamedParameter4dvNV: TglProgramNamedParameter4dvNV;
  glProgramNamedParameter4fNV: TglProgramNamedParameter4fNV;
  glProgramNamedParameter4fvNV: TglProgramNamedParameter4fvNV;
  glProgramParameter4dNV: TglProgramParameter4dNV;
  glProgramParameter4dvNV: TglProgramParameter4dvNV;
  glProgramParameter4fNV: TglProgramParameter4fNV;
  glProgramParameter4fvNV: TglProgramParameter4fvNV;
  glProgramParameteri: TglProgramParameteri;
  glProgramParameteriARB: TglProgramParameteriARB;
  glProgramParameteriEXT: TglProgramParameteriEXT;
  glProgramParameters4dvNV: TglProgramParameters4dvNV;
  glProgramParameters4fvNV: TglProgramParameters4fvNV;
  glProgramPathFragmentInputGenNV: TglProgramPathFragmentInputGenNV;
  glProgramStringARB: TglProgramStringARB;
  glProgramSubroutineParametersuivNV: TglProgramSubroutineParametersuivNV;
  glProgramUniform1d: TglProgramUniform1d;
  glProgramUniform1dEXT: TglProgramUniform1dEXT;
  glProgramUniform1dv: TglProgramUniform1dv;
  glProgramUniform1dvEXT: TglProgramUniform1dvEXT;
  glProgramUniform1f: TglProgramUniform1f;
  glProgramUniform1fEXT: TglProgramUniform1fEXT;
  glProgramUniform1fv: TglProgramUniform1fv;
  glProgramUniform1fvEXT: TglProgramUniform1fvEXT;
  glProgramUniform1i: TglProgramUniform1i;
  glProgramUniform1i64ARB: TglProgramUniform1i64ARB;
  glProgramUniform1i64NV: TglProgramUniform1i64NV;
  glProgramUniform1i64vARB: TglProgramUniform1i64vARB;
  glProgramUniform1i64vNV: TglProgramUniform1i64vNV;
  glProgramUniform1iEXT: TglProgramUniform1iEXT;
  glProgramUniform1iv: TglProgramUniform1iv;
  glProgramUniform1ivEXT: TglProgramUniform1ivEXT;
  glProgramUniform1ui: TglProgramUniform1ui;
  glProgramUniform1ui64ARB: TglProgramUniform1ui64ARB;
  glProgramUniform1ui64NV: TglProgramUniform1ui64NV;
  glProgramUniform1ui64vARB: TglProgramUniform1ui64vARB;
  glProgramUniform1ui64vNV: TglProgramUniform1ui64vNV;
  glProgramUniform1uiEXT: TglProgramUniform1uiEXT;
  glProgramUniform1uiv: TglProgramUniform1uiv;
  glProgramUniform1uivEXT: TglProgramUniform1uivEXT;
  glProgramUniform2d: TglProgramUniform2d;
  glProgramUniform2dEXT: TglProgramUniform2dEXT;
  glProgramUniform2dv: TglProgramUniform2dv;
  glProgramUniform2dvEXT: TglProgramUniform2dvEXT;
  glProgramUniform2f: TglProgramUniform2f;
  glProgramUniform2fEXT: TglProgramUniform2fEXT;
  glProgramUniform2fv: TglProgramUniform2fv;
  glProgramUniform2fvEXT: TglProgramUniform2fvEXT;
  glProgramUniform2i: TglProgramUniform2i;
  glProgramUniform2i64ARB: TglProgramUniform2i64ARB;
  glProgramUniform2i64NV: TglProgramUniform2i64NV;
  glProgramUniform2i64vARB: TglProgramUniform2i64vARB;
  glProgramUniform2i64vNV: TglProgramUniform2i64vNV;
  glProgramUniform2iEXT: TglProgramUniform2iEXT;
  glProgramUniform2iv: TglProgramUniform2iv;
  glProgramUniform2ivEXT: TglProgramUniform2ivEXT;
  glProgramUniform2ui: TglProgramUniform2ui;
  glProgramUniform2ui64ARB: TglProgramUniform2ui64ARB;
  glProgramUniform2ui64NV: TglProgramUniform2ui64NV;
  glProgramUniform2ui64vARB: TglProgramUniform2ui64vARB;
  glProgramUniform2ui64vNV: TglProgramUniform2ui64vNV;
  glProgramUniform2uiEXT: TglProgramUniform2uiEXT;
  glProgramUniform2uiv: TglProgramUniform2uiv;
  glProgramUniform2uivEXT: TglProgramUniform2uivEXT;
  glProgramUniform3d: TglProgramUniform3d;
  glProgramUniform3dEXT: TglProgramUniform3dEXT;
  glProgramUniform3dv: TglProgramUniform3dv;
  glProgramUniform3dvEXT: TglProgramUniform3dvEXT;
  glProgramUniform3f: TglProgramUniform3f;
  glProgramUniform3fEXT: TglProgramUniform3fEXT;
  glProgramUniform3fv: TglProgramUniform3fv;
  glProgramUniform3fvEXT: TglProgramUniform3fvEXT;
  glProgramUniform3i: TglProgramUniform3i;
  glProgramUniform3i64ARB: TglProgramUniform3i64ARB;
  glProgramUniform3i64NV: TglProgramUniform3i64NV;
  glProgramUniform3i64vARB: TglProgramUniform3i64vARB;
  glProgramUniform3i64vNV: TglProgramUniform3i64vNV;
  glProgramUniform3iEXT: TglProgramUniform3iEXT;
  glProgramUniform3iv: TglProgramUniform3iv;
  glProgramUniform3ivEXT: TglProgramUniform3ivEXT;
  glProgramUniform3ui: TglProgramUniform3ui;
  glProgramUniform3ui64ARB: TglProgramUniform3ui64ARB;
  glProgramUniform3ui64NV: TglProgramUniform3ui64NV;
  glProgramUniform3ui64vARB: TglProgramUniform3ui64vARB;
  glProgramUniform3ui64vNV: TglProgramUniform3ui64vNV;
  glProgramUniform3uiEXT: TglProgramUniform3uiEXT;
  glProgramUniform3uiv: TglProgramUniform3uiv;
  glProgramUniform3uivEXT: TglProgramUniform3uivEXT;
  glProgramUniform4d: TglProgramUniform4d;
  glProgramUniform4dEXT: TglProgramUniform4dEXT;
  glProgramUniform4dv: TglProgramUniform4dv;
  glProgramUniform4dvEXT: TglProgramUniform4dvEXT;
  glProgramUniform4f: TglProgramUniform4f;
  glProgramUniform4fEXT: TglProgramUniform4fEXT;
  glProgramUniform4fv: TglProgramUniform4fv;
  glProgramUniform4fvEXT: TglProgramUniform4fvEXT;
  glProgramUniform4i: TglProgramUniform4i;
  glProgramUniform4i64ARB: TglProgramUniform4i64ARB;
  glProgramUniform4i64NV: TglProgramUniform4i64NV;
  glProgramUniform4i64vARB: TglProgramUniform4i64vARB;
  glProgramUniform4i64vNV: TglProgramUniform4i64vNV;
  glProgramUniform4iEXT: TglProgramUniform4iEXT;
  glProgramUniform4iv: TglProgramUniform4iv;
  glProgramUniform4ivEXT: TglProgramUniform4ivEXT;
  glProgramUniform4ui: TglProgramUniform4ui;
  glProgramUniform4ui64ARB: TglProgramUniform4ui64ARB;
  glProgramUniform4ui64NV: TglProgramUniform4ui64NV;
  glProgramUniform4ui64vARB: TglProgramUniform4ui64vARB;
  glProgramUniform4ui64vNV: TglProgramUniform4ui64vNV;
  glProgramUniform4uiEXT: TglProgramUniform4uiEXT;
  glProgramUniform4uiv: TglProgramUniform4uiv;
  glProgramUniform4uivEXT: TglProgramUniform4uivEXT;
  glProgramUniformHandleui64ARB: TglProgramUniformHandleui64ARB;
  glProgramUniformHandleui64IMG: TglProgramUniformHandleui64IMG;
  glProgramUniformHandleui64NV: TglProgramUniformHandleui64NV;
  glProgramUniformHandleui64vARB: TglProgramUniformHandleui64vARB;
  glProgramUniformHandleui64vIMG: TglProgramUniformHandleui64vIMG;
  glProgramUniformHandleui64vNV: TglProgramUniformHandleui64vNV;
  glProgramUniformMatrix2dv: TglProgramUniformMatrix2dv;
  glProgramUniformMatrix2dvEXT: TglProgramUniformMatrix2dvEXT;
  glProgramUniformMatrix2fv: TglProgramUniformMatrix2fv;
  glProgramUniformMatrix2fvEXT: TglProgramUniformMatrix2fvEXT;
  glProgramUniformMatrix2x3dv: TglProgramUniformMatrix2x3dv;
  glProgramUniformMatrix2x3dvEXT: TglProgramUniformMatrix2x3dvEXT;
  glProgramUniformMatrix2x3fv: TglProgramUniformMatrix2x3fv;
  glProgramUniformMatrix2x3fvEXT: TglProgramUniformMatrix2x3fvEXT;
  glProgramUniformMatrix2x4dv: TglProgramUniformMatrix2x4dv;
  glProgramUniformMatrix2x4dvEXT: TglProgramUniformMatrix2x4dvEXT;
  glProgramUniformMatrix2x4fv: TglProgramUniformMatrix2x4fv;
  glProgramUniformMatrix2x4fvEXT: TglProgramUniformMatrix2x4fvEXT;
  glProgramUniformMatrix3dv: TglProgramUniformMatrix3dv;
  glProgramUniformMatrix3dvEXT: TglProgramUniformMatrix3dvEXT;
  glProgramUniformMatrix3fv: TglProgramUniformMatrix3fv;
  glProgramUniformMatrix3fvEXT: TglProgramUniformMatrix3fvEXT;
  glProgramUniformMatrix3x2dv: TglProgramUniformMatrix3x2dv;
  glProgramUniformMatrix3x2dvEXT: TglProgramUniformMatrix3x2dvEXT;
  glProgramUniformMatrix3x2fv: TglProgramUniformMatrix3x2fv;
  glProgramUniformMatrix3x2fvEXT: TglProgramUniformMatrix3x2fvEXT;
  glProgramUniformMatrix3x4dv: TglProgramUniformMatrix3x4dv;
  glProgramUniformMatrix3x4dvEXT: TglProgramUniformMatrix3x4dvEXT;
  glProgramUniformMatrix3x4fv: TglProgramUniformMatrix3x4fv;
  glProgramUniformMatrix3x4fvEXT: TglProgramUniformMatrix3x4fvEXT;
  glProgramUniformMatrix4dv: TglProgramUniformMatrix4dv;
  glProgramUniformMatrix4dvEXT: TglProgramUniformMatrix4dvEXT;
  glProgramUniformMatrix4fv: TglProgramUniformMatrix4fv;
  glProgramUniformMatrix4fvEXT: TglProgramUniformMatrix4fvEXT;
  glProgramUniformMatrix4x2dv: TglProgramUniformMatrix4x2dv;
  glProgramUniformMatrix4x2dvEXT: TglProgramUniformMatrix4x2dvEXT;
  glProgramUniformMatrix4x2fv: TglProgramUniformMatrix4x2fv;
  glProgramUniformMatrix4x2fvEXT: TglProgramUniformMatrix4x2fvEXT;
  glProgramUniformMatrix4x3dv: TglProgramUniformMatrix4x3dv;
  glProgramUniformMatrix4x3dvEXT: TglProgramUniformMatrix4x3dvEXT;
  glProgramUniformMatrix4x3fv: TglProgramUniformMatrix4x3fv;
  glProgramUniformMatrix4x3fvEXT: TglProgramUniformMatrix4x3fvEXT;
  glProgramUniformui64NV: TglProgramUniformui64NV;
  glProgramUniformui64vNV: TglProgramUniformui64vNV;
  glProgramVertexLimitNV: TglProgramVertexLimitNV;
  glProvokingVertex: TglProvokingVertex;
  glProvokingVertexEXT: TglProvokingVertexEXT;
  glPushAttrib: TglPushAttrib;
  glPushClientAttrib: TglPushClientAttrib;
  glPushClientAttribDefaultEXT: TglPushClientAttribDefaultEXT;
  glPushDebugGroup: TglPushDebugGroup;
  glPushDebugGroupKHR: TglPushDebugGroupKHR;
  glPushGroupMarkerEXT: TglPushGroupMarkerEXT;
  glPushMatrix: TglPushMatrix;
  glPushName: TglPushName;
  glQueryCounter: TglQueryCounter;
  glQueryCounterEXT: TglQueryCounterEXT;
  glQueryMatrixxOES: TglQueryMatrixxOES;
  glQueryObjectParameteruiAMD: TglQueryObjectParameteruiAMD;
  glQueryResourceNV: TglQueryResourceNV;
  glQueryResourceTagNV: TglQueryResourceTagNV;
  glRasterPos2d: TglRasterPos2d;
  glRasterPos2dv: TglRasterPos2dv;
  glRasterPos2f: TglRasterPos2f;
  glRasterPos2fv: TglRasterPos2fv;
  glRasterPos2i: TglRasterPos2i;
  glRasterPos2iv: TglRasterPos2iv;
  glRasterPos2s: TglRasterPos2s;
  glRasterPos2sv: TglRasterPos2sv;
  glRasterPos2xOES: TglRasterPos2xOES;
  glRasterPos2xvOES: TglRasterPos2xvOES;
  glRasterPos3d: TglRasterPos3d;
  glRasterPos3dv: TglRasterPos3dv;
  glRasterPos3f: TglRasterPos3f;
  glRasterPos3fv: TglRasterPos3fv;
  glRasterPos3i: TglRasterPos3i;
  glRasterPos3iv: TglRasterPos3iv;
  glRasterPos3s: TglRasterPos3s;
  glRasterPos3sv: TglRasterPos3sv;
  glRasterPos3xOES: TglRasterPos3xOES;
  glRasterPos3xvOES: TglRasterPos3xvOES;
  glRasterPos4d: TglRasterPos4d;
  glRasterPos4dv: TglRasterPos4dv;
  glRasterPos4f: TglRasterPos4f;
  glRasterPos4fv: TglRasterPos4fv;
  glRasterPos4i: TglRasterPos4i;
  glRasterPos4iv: TglRasterPos4iv;
  glRasterPos4s: TglRasterPos4s;
  glRasterPos4sv: TglRasterPos4sv;
  glRasterPos4xOES: TglRasterPos4xOES;
  glRasterPos4xvOES: TglRasterPos4xvOES;
  glRasterSamplesEXT: TglRasterSamplesEXT;
  glReadBuffer: TglReadBuffer;
  glReadBufferIndexedEXT: TglReadBufferIndexedEXT;
  glReadBufferNV: TglReadBufferNV;
  glReadInstrumentsSGIX: TglReadInstrumentsSGIX;
  glReadPixels: TglReadPixels;
  glReadnPixels: TglReadnPixels;
  glReadnPixelsARB: TglReadnPixelsARB;
  glReadnPixelsEXT: TglReadnPixelsEXT;
  glReadnPixelsKHR: TglReadnPixelsKHR;
  glReleaseKeyedMutexWin32EXT: TglReleaseKeyedMutexWin32EXT;
  glRectd: TglRectd;
  glRectdv: TglRectdv;
  glRectf: TglRectf;
  glRectfv: TglRectfv;
  glRecti: TglRecti;
  glRectiv: TglRectiv;
  glRects: TglRects;
  glRectsv: TglRectsv;
  glRectxOES: TglRectxOES;
  glRectxvOES: TglRectxvOES;
  glReferencePlaneSGIX: TglReferencePlaneSGIX;
  glReleaseShaderCompiler: TglReleaseShaderCompiler;
  glRenderGpuMaskNV: TglRenderGpuMaskNV;
  glRenderMode: TglRenderMode;
  glRenderbufferStorage: TglRenderbufferStorage;
  glRenderbufferStorageEXT: TglRenderbufferStorageEXT;
  glRenderbufferStorageMultisample: TglRenderbufferStorageMultisample;
  glRenderbufferStorageMultisampleANGLE: TglRenderbufferStorageMultisampleANGLE;
  glRenderbufferStorageMultisampleAPPLE: TglRenderbufferStorageMultisampleAPPLE;
  glRenderbufferStorageMultisampleAdvancedAMD: TglRenderbufferStorageMultisampleAdvancedAMD;
  glRenderbufferStorageMultisampleCoverageNV: TglRenderbufferStorageMultisampleCoverageNV;
  glRenderbufferStorageMultisampleEXT: TglRenderbufferStorageMultisampleEXT;
  glRenderbufferStorageMultisampleIMG: TglRenderbufferStorageMultisampleIMG;
  glRenderbufferStorageMultisampleNV: TglRenderbufferStorageMultisampleNV;
  glRenderbufferStorageOES: TglRenderbufferStorageOES;
  glReplacementCodePointerSUN: TglReplacementCodePointerSUN;
  glReplacementCodeubSUN: TglReplacementCodeubSUN;
  glReplacementCodeubvSUN: TglReplacementCodeubvSUN;
  glReplacementCodeuiColor3fVertex3fSUN: TglReplacementCodeuiColor3fVertex3fSUN;
  glReplacementCodeuiColor3fVertex3fvSUN: TglReplacementCodeuiColor3fVertex3fvSUN;
  glReplacementCodeuiColor4fNormal3fVertex3fSUN: TglReplacementCodeuiColor4fNormal3fVertex3fSUN;
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN: TglReplacementCodeuiColor4fNormal3fVertex3fvSUN;
  glReplacementCodeuiColor4ubVertex3fSUN: TglReplacementCodeuiColor4ubVertex3fSUN;
  glReplacementCodeuiColor4ubVertex3fvSUN: TglReplacementCodeuiColor4ubVertex3fvSUN;
  glReplacementCodeuiNormal3fVertex3fSUN: TglReplacementCodeuiNormal3fVertex3fSUN;
  glReplacementCodeuiNormal3fVertex3fvSUN: TglReplacementCodeuiNormal3fVertex3fvSUN;
  glReplacementCodeuiSUN: TglReplacementCodeuiSUN;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
  glReplacementCodeuiTexCoord2fVertex3fSUN: TglReplacementCodeuiTexCoord2fVertex3fSUN;
  glReplacementCodeuiTexCoord2fVertex3fvSUN: TglReplacementCodeuiTexCoord2fVertex3fvSUN;
  glReplacementCodeuiVertex3fSUN: TglReplacementCodeuiVertex3fSUN;
  glReplacementCodeuiVertex3fvSUN: TglReplacementCodeuiVertex3fvSUN;
  glReplacementCodeuivSUN: TglReplacementCodeuivSUN;
  glReplacementCodeusSUN: TglReplacementCodeusSUN;
  glReplacementCodeusvSUN: TglReplacementCodeusvSUN;
  glRequestResidentProgramsNV: TglRequestResidentProgramsNV;
  glResetHistogram: TglResetHistogram;
  glResetHistogramEXT: TglResetHistogramEXT;
  glResetMemoryObjectParameterNV: TglResetMemoryObjectParameterNV;
  glResetMinmax: TglResetMinmax;
  glResetMinmaxEXT: TglResetMinmaxEXT;
  glResizeBuffersMESA: TglResizeBuffersMESA;
  glResolveDepthValuesNV: TglResolveDepthValuesNV;
  glResolveMultisampleFramebufferAPPLE: TglResolveMultisampleFramebufferAPPLE;
  glResumeTransformFeedback: TglResumeTransformFeedback;
  glResumeTransformFeedbackNV: TglResumeTransformFeedbackNV;
  glRotated: TglRotated;
  glRotatef: TglRotatef;
  glRotatex: TglRotatex;
  glRotatexOES: TglRotatexOES;
  glSampleCoverage: TglSampleCoverage;
  glSampleCoverageARB: TglSampleCoverageARB;
  glSampleCoveragex: TglSampleCoveragex;
  glSampleCoveragexOES: TglSampleCoveragexOES;
  glSampleMapATI: TglSampleMapATI;
  glSampleMaskEXT: TglSampleMaskEXT;
  glSampleMaskIndexedNV: TglSampleMaskIndexedNV;
  glSampleMaskSGIS: TglSampleMaskSGIS;
  glSampleMaski: TglSampleMaski;
  glSamplePatternEXT: TglSamplePatternEXT;
  glSamplePatternSGIS: TglSamplePatternSGIS;
  glSamplerParameterIiv: TglSamplerParameterIiv;
  glSamplerParameterIivEXT: TglSamplerParameterIivEXT;
  glSamplerParameterIivOES: TglSamplerParameterIivOES;
  glSamplerParameterIuiv: TglSamplerParameterIuiv;
  glSamplerParameterIuivEXT: TglSamplerParameterIuivEXT;
  glSamplerParameterIuivOES: TglSamplerParameterIuivOES;
  glSamplerParameterf: TglSamplerParameterf;
  glSamplerParameterfv: TglSamplerParameterfv;
  glSamplerParameteri: TglSamplerParameteri;
  glSamplerParameteriv: TglSamplerParameteriv;
  glScaled: TglScaled;
  glScalef: TglScalef;
  glScalex: TglScalex;
  glScalexOES: TglScalexOES;
  glScissor: TglScissor;
  glScissorArrayv: TglScissorArrayv;
  glScissorArrayvNV: TglScissorArrayvNV;
  glScissorArrayvOES: TglScissorArrayvOES;
  glScissorExclusiveArrayvNV: TglScissorExclusiveArrayvNV;
  glScissorExclusiveNV: TglScissorExclusiveNV;
  glScissorIndexed: TglScissorIndexed;
  glScissorIndexedNV: TglScissorIndexedNV;
  glScissorIndexedOES: TglScissorIndexedOES;
  glScissorIndexedv: TglScissorIndexedv;
  glScissorIndexedvNV: TglScissorIndexedvNV;
  glScissorIndexedvOES: TglScissorIndexedvOES;
  glSecondaryColor3b: TglSecondaryColor3b;
  glSecondaryColor3bEXT: TglSecondaryColor3bEXT;
  glSecondaryColor3bv: TglSecondaryColor3bv;
  glSecondaryColor3bvEXT: TglSecondaryColor3bvEXT;
  glSecondaryColor3d: TglSecondaryColor3d;
  glSecondaryColor3dEXT: TglSecondaryColor3dEXT;
  glSecondaryColor3dv: TglSecondaryColor3dv;
  glSecondaryColor3dvEXT: TglSecondaryColor3dvEXT;
  glSecondaryColor3f: TglSecondaryColor3f;
  glSecondaryColor3fEXT: TglSecondaryColor3fEXT;
  glSecondaryColor3fv: TglSecondaryColor3fv;
  glSecondaryColor3fvEXT: TglSecondaryColor3fvEXT;
  glSecondaryColor3hNV: TglSecondaryColor3hNV;
  glSecondaryColor3hvNV: TglSecondaryColor3hvNV;
  glSecondaryColor3i: TglSecondaryColor3i;
  glSecondaryColor3iEXT: TglSecondaryColor3iEXT;
  glSecondaryColor3iv: TglSecondaryColor3iv;
  glSecondaryColor3ivEXT: TglSecondaryColor3ivEXT;
  glSecondaryColor3s: TglSecondaryColor3s;
  glSecondaryColor3sEXT: TglSecondaryColor3sEXT;
  glSecondaryColor3sv: TglSecondaryColor3sv;
  glSecondaryColor3svEXT: TglSecondaryColor3svEXT;
  glSecondaryColor3ub: TglSecondaryColor3ub;
  glSecondaryColor3ubEXT: TglSecondaryColor3ubEXT;
  glSecondaryColor3ubv: TglSecondaryColor3ubv;
  glSecondaryColor3ubvEXT: TglSecondaryColor3ubvEXT;
  glSecondaryColor3ui: TglSecondaryColor3ui;
  glSecondaryColor3uiEXT: TglSecondaryColor3uiEXT;
  glSecondaryColor3uiv: TglSecondaryColor3uiv;
  glSecondaryColor3uivEXT: TglSecondaryColor3uivEXT;
  glSecondaryColor3us: TglSecondaryColor3us;
  glSecondaryColor3usEXT: TglSecondaryColor3usEXT;
  glSecondaryColor3usv: TglSecondaryColor3usv;
  glSecondaryColor3usvEXT: TglSecondaryColor3usvEXT;
  glSecondaryColorFormatNV: TglSecondaryColorFormatNV;
  glSecondaryColorP3ui: TglSecondaryColorP3ui;
  glSecondaryColorP3uiv: TglSecondaryColorP3uiv;
  glSecondaryColorPointer: TglSecondaryColorPointer;
  glSecondaryColorPointerEXT: TglSecondaryColorPointerEXT;
  glSecondaryColorPointerListIBM: TglSecondaryColorPointerListIBM;
  glSelectBuffer: TglSelectBuffer;
  glSelectPerfMonitorCountersAMD: TglSelectPerfMonitorCountersAMD;
  glSemaphoreParameterivNV: TglSemaphoreParameterivNV;
  glSemaphoreParameterui64vEXT: TglSemaphoreParameterui64vEXT;
  glSeparableFilter2D: TglSeparableFilter2D;
  glSeparableFilter2DEXT: TglSeparableFilter2DEXT;
  glSetFenceAPPLE: TglSetFenceAPPLE;
  glSetFenceNV: TglSetFenceNV;
  glSetFragmentShaderConstantATI: TglSetFragmentShaderConstantATI;
  glSetInvariantEXT: TglSetInvariantEXT;
  glSetLocalConstantEXT: TglSetLocalConstantEXT;
  glSetMultisamplefvAMD: TglSetMultisamplefvAMD;
  glShadeModel: TglShadeModel;
  glShaderBinary: TglShaderBinary;
  glShaderOp1EXT: TglShaderOp1EXT;
  glShaderOp2EXT: TglShaderOp2EXT;
  glShaderOp3EXT: TglShaderOp3EXT;
  glShaderSource: TglShaderSource;
  glShaderSourceARB: TglShaderSourceARB;
  glShaderStorageBlockBinding: TglShaderStorageBlockBinding;
  glShadingRateEXT: TglShadingRateEXT;
  glShadingRateCombinerOpsEXT: TglShadingRateCombinerOpsEXT;
  glShadingRateImageBarrierNV: TglShadingRateImageBarrierNV;
  glShadingRateQCOM: TglShadingRateQCOM;
  glShadingRateImagePaletteNV: TglShadingRateImagePaletteNV;
  glShadingRateSampleOrderNV: TglShadingRateSampleOrderNV;
  glShadingRateSampleOrderCustomNV: TglShadingRateSampleOrderCustomNV;
  glSharpenTexFuncSGIS: TglSharpenTexFuncSGIS;
  glSignalSemaphoreEXT: TglSignalSemaphoreEXT;
  glSignalSemaphoreui64NVX: TglSignalSemaphoreui64NVX;
  glSpecializeShader: TglSpecializeShader;
  glSpecializeShaderARB: TglSpecializeShaderARB;
  glSpriteParameterfSGIX: TglSpriteParameterfSGIX;
  glSpriteParameterfvSGIX: TglSpriteParameterfvSGIX;
  glSpriteParameteriSGIX: TglSpriteParameteriSGIX;
  glSpriteParameterivSGIX: TglSpriteParameterivSGIX;
  glStartInstrumentsSGIX: TglStartInstrumentsSGIX;
  glStartTilingQCOM: TglStartTilingQCOM;
  glStateCaptureNV: TglStateCaptureNV;
  glStencilClearTagEXT: TglStencilClearTagEXT;
  glStencilFillPathInstancedNV: TglStencilFillPathInstancedNV;
  glStencilFillPathNV: TglStencilFillPathNV;
  glStencilFunc: TglStencilFunc;
  glStencilFuncSeparate: TglStencilFuncSeparate;
  glStencilFuncSeparateATI: TglStencilFuncSeparateATI;
  glStencilMask: TglStencilMask;
  glStencilMaskSeparate: TglStencilMaskSeparate;
  glStencilOp: TglStencilOp;
  glStencilOpSeparate: TglStencilOpSeparate;
  glStencilOpSeparateATI: TglStencilOpSeparateATI;
  glStencilOpValueAMD: TglStencilOpValueAMD;
  glStencilStrokePathInstancedNV: TglStencilStrokePathInstancedNV;
  glStencilStrokePathNV: TglStencilStrokePathNV;
  glStencilThenCoverFillPathInstancedNV: TglStencilThenCoverFillPathInstancedNV;
  glStencilThenCoverFillPathNV: TglStencilThenCoverFillPathNV;
  glStencilThenCoverStrokePathInstancedNV: TglStencilThenCoverStrokePathInstancedNV;
  glStencilThenCoverStrokePathNV: TglStencilThenCoverStrokePathNV;
  glStopInstrumentsSGIX: TglStopInstrumentsSGIX;
  glStringMarkerGREMEDY: TglStringMarkerGREMEDY;
  glSubpixelPrecisionBiasNV: TglSubpixelPrecisionBiasNV;
  glSwizzleEXT: TglSwizzleEXT;
  glSyncTextureINTEL: TglSyncTextureINTEL;
  glTagSampleBufferSGIX: TglTagSampleBufferSGIX;
  glTangent3bEXT: TglTangent3bEXT;
  glTangent3bvEXT: TglTangent3bvEXT;
  glTangent3dEXT: TglTangent3dEXT;
  glTangent3dvEXT: TglTangent3dvEXT;
  glTangent3fEXT: TglTangent3fEXT;
  glTangent3fvEXT: TglTangent3fvEXT;
  glTangent3iEXT: TglTangent3iEXT;
  glTangent3ivEXT: TglTangent3ivEXT;
  glTangent3sEXT: TglTangent3sEXT;
  glTangent3svEXT: TglTangent3svEXT;
  glTangentPointerEXT: TglTangentPointerEXT;
  glTbufferMask3DFX: TglTbufferMask3DFX;
  glTessellationFactorAMD: TglTessellationFactorAMD;
  glTessellationModeAMD: TglTessellationModeAMD;
  glTestFenceAPPLE: TglTestFenceAPPLE;
  glTestFenceNV: TglTestFenceNV;
  glTestObjectAPPLE: TglTestObjectAPPLE;
  glTexAttachMemoryNV: TglTexAttachMemoryNV;
  glTexBuffer: TglTexBuffer;
  glTexBufferARB: TglTexBufferARB;
  glTexBufferEXT: TglTexBufferEXT;
  glTexBufferOES: TglTexBufferOES;
  glTexBufferRange: TglTexBufferRange;
  glTexBufferRangeEXT: TglTexBufferRangeEXT;
  glTexBufferRangeOES: TglTexBufferRangeOES;
  glTexBumpParameterfvATI: TglTexBumpParameterfvATI;
  glTexBumpParameterivATI: TglTexBumpParameterivATI;
  glTexCoord1bOES: TglTexCoord1bOES;
  glTexCoord1bvOES: TglTexCoord1bvOES;
  glTexCoord1d: TglTexCoord1d;
  glTexCoord1dv: TglTexCoord1dv;
  glTexCoord1f: TglTexCoord1f;
  glTexCoord1fv: TglTexCoord1fv;
  glTexCoord1hNV: TglTexCoord1hNV;
  glTexCoord1hvNV: TglTexCoord1hvNV;
  glTexCoord1i: TglTexCoord1i;
  glTexCoord1iv: TglTexCoord1iv;
  glTexCoord1s: TglTexCoord1s;
  glTexCoord1sv: TglTexCoord1sv;
  glTexCoord1xOES: TglTexCoord1xOES;
  glTexCoord1xvOES: TglTexCoord1xvOES;
  glTexCoord2bOES: TglTexCoord2bOES;
  glTexCoord2bvOES: TglTexCoord2bvOES;
  glTexCoord2d: TglTexCoord2d;
  glTexCoord2dv: TglTexCoord2dv;
  glTexCoord2f: TglTexCoord2f;
  glTexCoord2fColor3fVertex3fSUN: TglTexCoord2fColor3fVertex3fSUN;
  glTexCoord2fColor3fVertex3fvSUN: TglTexCoord2fColor3fVertex3fvSUN;
  glTexCoord2fColor4fNormal3fVertex3fSUN: TglTexCoord2fColor4fNormal3fVertex3fSUN;
  glTexCoord2fColor4fNormal3fVertex3fvSUN: TglTexCoord2fColor4fNormal3fVertex3fvSUN;
  glTexCoord2fColor4ubVertex3fSUN: TglTexCoord2fColor4ubVertex3fSUN;
  glTexCoord2fColor4ubVertex3fvSUN: TglTexCoord2fColor4ubVertex3fvSUN;
  glTexCoord2fNormal3fVertex3fSUN: TglTexCoord2fNormal3fVertex3fSUN;
  glTexCoord2fNormal3fVertex3fvSUN: TglTexCoord2fNormal3fVertex3fvSUN;
  glTexCoord2fVertex3fSUN: TglTexCoord2fVertex3fSUN;
  glTexCoord2fVertex3fvSUN: TglTexCoord2fVertex3fvSUN;
  glTexCoord2fv: TglTexCoord2fv;
  glTexCoord2hNV: TglTexCoord2hNV;
  glTexCoord2hvNV: TglTexCoord2hvNV;
  glTexCoord2i: TglTexCoord2i;
  glTexCoord2iv: TglTexCoord2iv;
  glTexCoord2s: TglTexCoord2s;
  glTexCoord2sv: TglTexCoord2sv;
  glTexCoord2xOES: TglTexCoord2xOES;
  glTexCoord2xvOES: TglTexCoord2xvOES;
  glTexCoord3bOES: TglTexCoord3bOES;
  glTexCoord3bvOES: TglTexCoord3bvOES;
  glTexCoord3d: TglTexCoord3d;
  glTexCoord3dv: TglTexCoord3dv;
  glTexCoord3f: TglTexCoord3f;
  glTexCoord3fv: TglTexCoord3fv;
  glTexCoord3hNV: TglTexCoord3hNV;
  glTexCoord3hvNV: TglTexCoord3hvNV;
  glTexCoord3i: TglTexCoord3i;
  glTexCoord3iv: TglTexCoord3iv;
  glTexCoord3s: TglTexCoord3s;
  glTexCoord3sv: TglTexCoord3sv;
  glTexCoord3xOES: TglTexCoord3xOES;
  glTexCoord3xvOES: TglTexCoord3xvOES;
  glTexCoord4bOES: TglTexCoord4bOES;
  glTexCoord4bvOES: TglTexCoord4bvOES;
  glTexCoord4d: TglTexCoord4d;
  glTexCoord4dv: TglTexCoord4dv;
  glTexCoord4f: TglTexCoord4f;
  glTexCoord4fColor4fNormal3fVertex4fSUN: TglTexCoord4fColor4fNormal3fVertex4fSUN;
  glTexCoord4fColor4fNormal3fVertex4fvSUN: TglTexCoord4fColor4fNormal3fVertex4fvSUN;
  glTexCoord4fVertex4fSUN: TglTexCoord4fVertex4fSUN;
  glTexCoord4fVertex4fvSUN: TglTexCoord4fVertex4fvSUN;
  glTexCoord4fv: TglTexCoord4fv;
  glTexCoord4hNV: TglTexCoord4hNV;
  glTexCoord4hvNV: TglTexCoord4hvNV;
  glTexCoord4i: TglTexCoord4i;
  glTexCoord4iv: TglTexCoord4iv;
  glTexCoord4s: TglTexCoord4s;
  glTexCoord4sv: TglTexCoord4sv;
  glTexCoord4xOES: TglTexCoord4xOES;
  glTexCoord4xvOES: TglTexCoord4xvOES;
  glTexCoordFormatNV: TglTexCoordFormatNV;
  glTexCoordP1ui: TglTexCoordP1ui;
  glTexCoordP1uiv: TglTexCoordP1uiv;
  glTexCoordP2ui: TglTexCoordP2ui;
  glTexCoordP2uiv: TglTexCoordP2uiv;
  glTexCoordP3ui: TglTexCoordP3ui;
  glTexCoordP3uiv: TglTexCoordP3uiv;
  glTexCoordP4ui: TglTexCoordP4ui;
  glTexCoordP4uiv: TglTexCoordP4uiv;
  glTexCoordPointer: TglTexCoordPointer;
  glTexCoordPointerEXT: TglTexCoordPointerEXT;
  glTexCoordPointerListIBM: TglTexCoordPointerListIBM;
  glTexCoordPointervINTEL: TglTexCoordPointervINTEL;
  glTexEnvf: TglTexEnvf;
  glTexEnvfv: TglTexEnvfv;
  glTexEnvi: TglTexEnvi;
  glTexEnviv: TglTexEnviv;
  glTexEnvx: TglTexEnvx;
  glTexEnvxOES: TglTexEnvxOES;
  glTexEnvxv: TglTexEnvxv;
  glTexEnvxvOES: TglTexEnvxvOES;
  glTexEstimateMotionQCOM: TglTexEstimateMotionQCOM;
  glTexEstimateMotionRegionsQCOM: TglTexEstimateMotionRegionsQCOM;
  glExtrapolateTex2DQCOM: TglExtrapolateTex2DQCOM;
  glTexFilterFuncSGIS: TglTexFilterFuncSGIS;
  glTexGend: TglTexGend;
  glTexGendv: TglTexGendv;
  glTexGenf: TglTexGenf;
  glTexGenfOES: TglTexGenfOES;
  glTexGenfv: TglTexGenfv;
  glTexGenfvOES: TglTexGenfvOES;
  glTexGeni: TglTexGeni;
  glTexGeniOES: TglTexGeniOES;
  glTexGeniv: TglTexGeniv;
  glTexGenivOES: TglTexGenivOES;
  glTexGenxOES: TglTexGenxOES;
  glTexGenxvOES: TglTexGenxvOES;
  glTexImage1D: TglTexImage1D;
  glTexImage2D: TglTexImage2D;
  glTexImage2DMultisample: TglTexImage2DMultisample;
  glTexImage2DMultisampleCoverageNV: TglTexImage2DMultisampleCoverageNV;
  glTexImage3D: TglTexImage3D;
  glTexImage3DEXT: TglTexImage3DEXT;
  glTexImage3DMultisample: TglTexImage3DMultisample;
  glTexImage3DMultisampleCoverageNV: TglTexImage3DMultisampleCoverageNV;
  glTexImage3DOES: TglTexImage3DOES;
  glTexImage4DSGIS: TglTexImage4DSGIS;
  glTexPageCommitmentARB: TglTexPageCommitmentARB;
  glTexPageCommitmentEXT: TglTexPageCommitmentEXT;
  glTexPageCommitmentMemNV: TglTexPageCommitmentMemNV;
  glTexParameterIiv: TglTexParameterIiv;
  glTexParameterIivEXT: TglTexParameterIivEXT;
  glTexParameterIivOES: TglTexParameterIivOES;
  glTexParameterIuiv: TglTexParameterIuiv;
  glTexParameterIuivEXT: TglTexParameterIuivEXT;
  glTexParameterIuivOES: TglTexParameterIuivOES;
  glTexParameterf: TglTexParameterf;
  glTexParameterfv: TglTexParameterfv;
  glTexParameteri: TglTexParameteri;
  glTexParameteriv: TglTexParameteriv;
  glTexParameterx: TglTexParameterx;
  glTexParameterxOES: TglTexParameterxOES;
  glTexParameterxv: TglTexParameterxv;
  glTexParameterxvOES: TglTexParameterxvOES;
  glTexRenderbufferNV: TglTexRenderbufferNV;
  glTexStorage1D: TglTexStorage1D;
  glTexStorage1DEXT: TglTexStorage1DEXT;
  glTexStorage2D: TglTexStorage2D;
  glTexStorage2DEXT: TglTexStorage2DEXT;
  glTexStorage2DMultisample: TglTexStorage2DMultisample;
  glTexStorage3D: TglTexStorage3D;
  glTexStorage3DEXT: TglTexStorage3DEXT;
  glTexStorage3DMultisample: TglTexStorage3DMultisample;
  glTexStorage3DMultisampleOES: TglTexStorage3DMultisampleOES;
  glTexStorageAttribs2DEXT: TglTexStorageAttribs2DEXT;
  glTexStorageAttribs3DEXT: TglTexStorageAttribs3DEXT;
  glTexStorageMem1DEXT: TglTexStorageMem1DEXT;
  glTexStorageMem2DEXT: TglTexStorageMem2DEXT;
  glTexStorageMem2DMultisampleEXT: TglTexStorageMem2DMultisampleEXT;
  glTexStorageMem3DEXT: TglTexStorageMem3DEXT;
  glTexStorageMem3DMultisampleEXT: TglTexStorageMem3DMultisampleEXT;
  glTexStorageSparseAMD: TglTexStorageSparseAMD;
  glTexSubImage1D: TglTexSubImage1D;
  glTexSubImage1DEXT: TglTexSubImage1DEXT;
  glTexSubImage2D: TglTexSubImage2D;
  glTexSubImage2DEXT: TglTexSubImage2DEXT;
  glTexSubImage3D: TglTexSubImage3D;
  glTexSubImage3DEXT: TglTexSubImage3DEXT;
  glTexSubImage3DOES: TglTexSubImage3DOES;
  glTexSubImage4DSGIS: TglTexSubImage4DSGIS;
  glTextureAttachMemoryNV: TglTextureAttachMemoryNV;
  glTextureBarrier: TglTextureBarrier;
  glTextureBarrierNV: TglTextureBarrierNV;
  glTextureBuffer: TglTextureBuffer;
  glTextureBufferEXT: TglTextureBufferEXT;
  glTextureBufferRange: TglTextureBufferRange;
  glTextureBufferRangeEXT: TglTextureBufferRangeEXT;
  glTextureColorMaskSGIS: TglTextureColorMaskSGIS;
  glTextureFoveationParametersQCOM: TglTextureFoveationParametersQCOM;
  glTextureImage1DEXT: TglTextureImage1DEXT;
  glTextureImage2DEXT: TglTextureImage2DEXT;
  glTextureImage2DMultisampleCoverageNV: TglTextureImage2DMultisampleCoverageNV;
  glTextureImage2DMultisampleNV: TglTextureImage2DMultisampleNV;
  glTextureImage3DEXT: TglTextureImage3DEXT;
  glTextureImage3DMultisampleCoverageNV: TglTextureImage3DMultisampleCoverageNV;
  glTextureImage3DMultisampleNV: TglTextureImage3DMultisampleNV;
  glTextureLightEXT: TglTextureLightEXT;
  glTextureMaterialEXT: TglTextureMaterialEXT;
  glTextureNormalEXT: TglTextureNormalEXT;
  glTexturePageCommitmentEXT: TglTexturePageCommitmentEXT;
  glTexturePageCommitmentMemNV: TglTexturePageCommitmentMemNV;
  glTextureParameterIiv: TglTextureParameterIiv;
  glTextureParameterIivEXT: TglTextureParameterIivEXT;
  glTextureParameterIuiv: TglTextureParameterIuiv;
  glTextureParameterIuivEXT: TglTextureParameterIuivEXT;
  glTextureParameterf: TglTextureParameterf;
  glTextureParameterfEXT: TglTextureParameterfEXT;
  glTextureParameterfv: TglTextureParameterfv;
  glTextureParameterfvEXT: TglTextureParameterfvEXT;
  glTextureParameteri: TglTextureParameteri;
  glTextureParameteriEXT: TglTextureParameteriEXT;
  glTextureParameteriv: TglTextureParameteriv;
  glTextureParameterivEXT: TglTextureParameterivEXT;
  glTextureRangeAPPLE: TglTextureRangeAPPLE;
  glTextureRenderbufferEXT: TglTextureRenderbufferEXT;
  glTextureStorage1D: TglTextureStorage1D;
  glTextureStorage1DEXT: TglTextureStorage1DEXT;
  glTextureStorage2D: TglTextureStorage2D;
  glTextureStorage2DEXT: TglTextureStorage2DEXT;
  glTextureStorage2DMultisample: TglTextureStorage2DMultisample;
  glTextureStorage2DMultisampleEXT: TglTextureStorage2DMultisampleEXT;
  glTextureStorage3D: TglTextureStorage3D;
  glTextureStorage3DEXT: TglTextureStorage3DEXT;
  glTextureStorage3DMultisample: TglTextureStorage3DMultisample;
  glTextureStorage3DMultisampleEXT: TglTextureStorage3DMultisampleEXT;
  glTextureStorageMem1DEXT: TglTextureStorageMem1DEXT;
  glTextureStorageMem2DEXT: TglTextureStorageMem2DEXT;
  glTextureStorageMem2DMultisampleEXT: TglTextureStorageMem2DMultisampleEXT;
  glTextureStorageMem3DEXT: TglTextureStorageMem3DEXT;
  glTextureStorageMem3DMultisampleEXT: TglTextureStorageMem3DMultisampleEXT;
  glTextureStorageSparseAMD: TglTextureStorageSparseAMD;
  glTextureSubImage1D: TglTextureSubImage1D;
  glTextureSubImage1DEXT: TglTextureSubImage1DEXT;
  glTextureSubImage2D: TglTextureSubImage2D;
  glTextureSubImage2DEXT: TglTextureSubImage2DEXT;
  glTextureSubImage3D: TglTextureSubImage3D;
  glTextureSubImage3DEXT: TglTextureSubImage3DEXT;
  glTextureView: TglTextureView;
  glTextureViewEXT: TglTextureViewEXT;
  glTextureViewOES: TglTextureViewOES;
  glTrackMatrixNV: TglTrackMatrixNV;
  glTransformFeedbackAttribsNV: TglTransformFeedbackAttribsNV;
  glTransformFeedbackBufferBase: TglTransformFeedbackBufferBase;
  glTransformFeedbackBufferRange: TglTransformFeedbackBufferRange;
  glTransformFeedbackStreamAttribsNV: TglTransformFeedbackStreamAttribsNV;
  glTransformFeedbackVaryings: TglTransformFeedbackVaryings;
  glTransformFeedbackVaryingsEXT: TglTransformFeedbackVaryingsEXT;
  glTransformFeedbackVaryingsNV: TglTransformFeedbackVaryingsNV;
  glTransformPathNV: TglTransformPathNV;
  glTranslated: TglTranslated;
  glTranslatef: TglTranslatef;
  glTranslatex: TglTranslatex;
  glTranslatexOES: TglTranslatexOES;
  glUniform1d: TglUniform1d;
  glUniform1dv: TglUniform1dv;
  glUniform1f: TglUniform1f;
  glUniform1fARB: TglUniform1fARB;
  glUniform1fv: TglUniform1fv;
  glUniform1fvARB: TglUniform1fvARB;
  glUniform1i: TglUniform1i;
  glUniform1i64ARB: TglUniform1i64ARB;
  glUniform1i64NV: TglUniform1i64NV;
  glUniform1i64vARB: TglUniform1i64vARB;
  glUniform1i64vNV: TglUniform1i64vNV;
  glUniform1iARB: TglUniform1iARB;
  glUniform1iv: TglUniform1iv;
  glUniform1ivARB: TglUniform1ivARB;
  glUniform1ui: TglUniform1ui;
  glUniform1ui64ARB: TglUniform1ui64ARB;
  glUniform1ui64NV: TglUniform1ui64NV;
  glUniform1ui64vARB: TglUniform1ui64vARB;
  glUniform1ui64vNV: TglUniform1ui64vNV;
  glUniform1uiEXT: TglUniform1uiEXT;
  glUniform1uiv: TglUniform1uiv;
  glUniform1uivEXT: TglUniform1uivEXT;
  glUniform2d: TglUniform2d;
  glUniform2dv: TglUniform2dv;
  glUniform2f: TglUniform2f;
  glUniform2fARB: TglUniform2fARB;
  glUniform2fv: TglUniform2fv;
  glUniform2fvARB: TglUniform2fvARB;
  glUniform2i: TglUniform2i;
  glUniform2i64ARB: TglUniform2i64ARB;
  glUniform2i64NV: TglUniform2i64NV;
  glUniform2i64vARB: TglUniform2i64vARB;
  glUniform2i64vNV: TglUniform2i64vNV;
  glUniform2iARB: TglUniform2iARB;
  glUniform2iv: TglUniform2iv;
  glUniform2ivARB: TglUniform2ivARB;
  glUniform2ui: TglUniform2ui;
  glUniform2ui64ARB: TglUniform2ui64ARB;
  glUniform2ui64NV: TglUniform2ui64NV;
  glUniform2ui64vARB: TglUniform2ui64vARB;
  glUniform2ui64vNV: TglUniform2ui64vNV;
  glUniform2uiEXT: TglUniform2uiEXT;
  glUniform2uiv: TglUniform2uiv;
  glUniform2uivEXT: TglUniform2uivEXT;
  glUniform3d: TglUniform3d;
  glUniform3dv: TglUniform3dv;
  glUniform3f: TglUniform3f;
  glUniform3fARB: TglUniform3fARB;
  glUniform3fv: TglUniform3fv;
  glUniform3fvARB: TglUniform3fvARB;
  glUniform3i: TglUniform3i;
  glUniform3i64ARB: TglUniform3i64ARB;
  glUniform3i64NV: TglUniform3i64NV;
  glUniform3i64vARB: TglUniform3i64vARB;
  glUniform3i64vNV: TglUniform3i64vNV;
  glUniform3iARB: TglUniform3iARB;
  glUniform3iv: TglUniform3iv;
  glUniform3ivARB: TglUniform3ivARB;
  glUniform3ui: TglUniform3ui;
  glUniform3ui64ARB: TglUniform3ui64ARB;
  glUniform3ui64NV: TglUniform3ui64NV;
  glUniform3ui64vARB: TglUniform3ui64vARB;
  glUniform3ui64vNV: TglUniform3ui64vNV;
  glUniform3uiEXT: TglUniform3uiEXT;
  glUniform3uiv: TglUniform3uiv;
  glUniform3uivEXT: TglUniform3uivEXT;
  glUniform4d: TglUniform4d;
  glUniform4dv: TglUniform4dv;
  glUniform4f: TglUniform4f;
  glUniform4fARB: TglUniform4fARB;
  glUniform4fv: TglUniform4fv;
  glUniform4fvARB: TglUniform4fvARB;
  glUniform4i: TglUniform4i;
  glUniform4i64ARB: TglUniform4i64ARB;
  glUniform4i64NV: TglUniform4i64NV;
  glUniform4i64vARB: TglUniform4i64vARB;
  glUniform4i64vNV: TglUniform4i64vNV;
  glUniform4iARB: TglUniform4iARB;
  glUniform4iv: TglUniform4iv;
  glUniform4ivARB: TglUniform4ivARB;
  glUniform4ui: TglUniform4ui;
  glUniform4ui64ARB: TglUniform4ui64ARB;
  glUniform4ui64NV: TglUniform4ui64NV;
  glUniform4ui64vARB: TglUniform4ui64vARB;
  glUniform4ui64vNV: TglUniform4ui64vNV;
  glUniform4uiEXT: TglUniform4uiEXT;
  glUniform4uiv: TglUniform4uiv;
  glUniform4uivEXT: TglUniform4uivEXT;
  glUniformBlockBinding: TglUniformBlockBinding;
  glUniformBufferEXT: TglUniformBufferEXT;
  glUniformHandleui64ARB: TglUniformHandleui64ARB;
  glUniformHandleui64IMG: TglUniformHandleui64IMG;
  glUniformHandleui64NV: TglUniformHandleui64NV;
  glUniformHandleui64vARB: TglUniformHandleui64vARB;
  glUniformHandleui64vIMG: TglUniformHandleui64vIMG;
  glUniformHandleui64vNV: TglUniformHandleui64vNV;
  glUniformMatrix2dv: TglUniformMatrix2dv;
  glUniformMatrix2fv: TglUniformMatrix2fv;
  glUniformMatrix2fvARB: TglUniformMatrix2fvARB;
  glUniformMatrix2x3dv: TglUniformMatrix2x3dv;
  glUniformMatrix2x3fv: TglUniformMatrix2x3fv;
  glUniformMatrix2x3fvNV: TglUniformMatrix2x3fvNV;
  glUniformMatrix2x4dv: TglUniformMatrix2x4dv;
  glUniformMatrix2x4fv: TglUniformMatrix2x4fv;
  glUniformMatrix2x4fvNV: TglUniformMatrix2x4fvNV;
  glUniformMatrix3dv: TglUniformMatrix3dv;
  glUniformMatrix3fv: TglUniformMatrix3fv;
  glUniformMatrix3fvARB: TglUniformMatrix3fvARB;
  glUniformMatrix3x2dv: TglUniformMatrix3x2dv;
  glUniformMatrix3x2fv: TglUniformMatrix3x2fv;
  glUniformMatrix3x2fvNV: TglUniformMatrix3x2fvNV;
  glUniformMatrix3x4dv: TglUniformMatrix3x4dv;
  glUniformMatrix3x4fv: TglUniformMatrix3x4fv;
  glUniformMatrix3x4fvNV: TglUniformMatrix3x4fvNV;
  glUniformMatrix4dv: TglUniformMatrix4dv;
  glUniformMatrix4fv: TglUniformMatrix4fv;
  glUniformMatrix4fvARB: TglUniformMatrix4fvARB;
  glUniformMatrix4x2dv: TglUniformMatrix4x2dv;
  glUniformMatrix4x2fv: TglUniformMatrix4x2fv;
  glUniformMatrix4x2fvNV: TglUniformMatrix4x2fvNV;
  glUniformMatrix4x3dv: TglUniformMatrix4x3dv;
  glUniformMatrix4x3fv: TglUniformMatrix4x3fv;
  glUniformMatrix4x3fvNV: TglUniformMatrix4x3fvNV;
  glUniformSubroutinesuiv: TglUniformSubroutinesuiv;
  glUniformui64NV: TglUniformui64NV;
  glUniformui64vNV: TglUniformui64vNV;
  glUnlockArraysEXT: TglUnlockArraysEXT;
  glUnmapBuffer: TglUnmapBuffer;
  glUnmapBufferARB: TglUnmapBufferARB;
  glUnmapBufferOES: TglUnmapBufferOES;
  glUnmapNamedBuffer: TglUnmapNamedBuffer;
  glUnmapNamedBufferEXT: TglUnmapNamedBufferEXT;
  glUnmapObjectBufferATI: TglUnmapObjectBufferATI;
  glUnmapTexture2DINTEL: TglUnmapTexture2DINTEL;
  glUpdateObjectBufferATI: TglUpdateObjectBufferATI;
  glUploadGpuMaskNVX: TglUploadGpuMaskNVX;
  glUseProgram: TglUseProgram;
  glUseProgramObjectARB: TglUseProgramObjectARB;
  glUseProgramStages: TglUseProgramStages;
  glUseProgramStagesEXT: TglUseProgramStagesEXT;
  glUseShaderProgramEXT: TglUseShaderProgramEXT;
  glVDPAUFiniNV: TglVDPAUFiniNV;
  glVDPAUGetSurfaceivNV: TglVDPAUGetSurfaceivNV;
  glVDPAUInitNV: TglVDPAUInitNV;
  glVDPAUIsSurfaceNV: TglVDPAUIsSurfaceNV;
  glVDPAUMapSurfacesNV: TglVDPAUMapSurfacesNV;
  glVDPAURegisterOutputSurfaceNV: TglVDPAURegisterOutputSurfaceNV;
  glVDPAURegisterVideoSurfaceNV: TglVDPAURegisterVideoSurfaceNV;
  glVDPAURegisterVideoSurfaceWithPictureStructureNV: TglVDPAURegisterVideoSurfaceWithPictureStructureNV;
  glVDPAUSurfaceAccessNV: TglVDPAUSurfaceAccessNV;
  glVDPAUUnmapSurfacesNV: TglVDPAUUnmapSurfacesNV;
  glVDPAUUnregisterSurfaceNV: TglVDPAUUnregisterSurfaceNV;
  glValidateProgram: TglValidateProgram;
  glValidateProgramARB: TglValidateProgramARB;
  glValidateProgramPipeline: TglValidateProgramPipeline;
  glValidateProgramPipelineEXT: TglValidateProgramPipelineEXT;
  glVariantArrayObjectATI: TglVariantArrayObjectATI;
  glVariantPointerEXT: TglVariantPointerEXT;
  glVariantbvEXT: TglVariantbvEXT;
  glVariantdvEXT: TglVariantdvEXT;
  glVariantfvEXT: TglVariantfvEXT;
  glVariantivEXT: TglVariantivEXT;
  glVariantsvEXT: TglVariantsvEXT;
  glVariantubvEXT: TglVariantubvEXT;
  glVariantuivEXT: TglVariantuivEXT;
  glVariantusvEXT: TglVariantusvEXT;
  glVertex2bOES: TglVertex2bOES;
  glVertex2bvOES: TglVertex2bvOES;
  glVertex2d: TglVertex2d;
  glVertex2dv: TglVertex2dv;
  glVertex2f: TglVertex2f;
  glVertex2fv: TglVertex2fv;
  glVertex2hNV: TglVertex2hNV;
  glVertex2hvNV: TglVertex2hvNV;
  glVertex2i: TglVertex2i;
  glVertex2iv: TglVertex2iv;
  glVertex2s: TglVertex2s;
  glVertex2sv: TglVertex2sv;
  glVertex2xOES: TglVertex2xOES;
  glVertex2xvOES: TglVertex2xvOES;
  glVertex3bOES: TglVertex3bOES;
  glVertex3bvOES: TglVertex3bvOES;
  glVertex3d: TglVertex3d;
  glVertex3dv: TglVertex3dv;
  glVertex3f: TglVertex3f;
  glVertex3fv: TglVertex3fv;
  glVertex3hNV: TglVertex3hNV;
  glVertex3hvNV: TglVertex3hvNV;
  glVertex3i: TglVertex3i;
  glVertex3iv: TglVertex3iv;
  glVertex3s: TglVertex3s;
  glVertex3sv: TglVertex3sv;
  glVertex3xOES: TglVertex3xOES;
  glVertex3xvOES: TglVertex3xvOES;
  glVertex4bOES: TglVertex4bOES;
  glVertex4bvOES: TglVertex4bvOES;
  glVertex4d: TglVertex4d;
  glVertex4dv: TglVertex4dv;
  glVertex4f: TglVertex4f;
  glVertex4fv: TglVertex4fv;
  glVertex4hNV: TglVertex4hNV;
  glVertex4hvNV: TglVertex4hvNV;
  glVertex4i: TglVertex4i;
  glVertex4iv: TglVertex4iv;
  glVertex4s: TglVertex4s;
  glVertex4sv: TglVertex4sv;
  glVertex4xOES: TglVertex4xOES;
  glVertex4xvOES: TglVertex4xvOES;
  glVertexArrayAttribBinding: TglVertexArrayAttribBinding;
  glVertexArrayAttribFormat: TglVertexArrayAttribFormat;
  glVertexArrayAttribIFormat: TglVertexArrayAttribIFormat;
  glVertexArrayAttribLFormat: TglVertexArrayAttribLFormat;
  glVertexArrayBindVertexBufferEXT: TglVertexArrayBindVertexBufferEXT;
  glVertexArrayBindingDivisor: TglVertexArrayBindingDivisor;
  glVertexArrayColorOffsetEXT: TglVertexArrayColorOffsetEXT;
  glVertexArrayEdgeFlagOffsetEXT: TglVertexArrayEdgeFlagOffsetEXT;
  glVertexArrayElementBuffer: TglVertexArrayElementBuffer;
  glVertexArrayFogCoordOffsetEXT: TglVertexArrayFogCoordOffsetEXT;
  glVertexArrayIndexOffsetEXT: TglVertexArrayIndexOffsetEXT;
  glVertexArrayMultiTexCoordOffsetEXT: TglVertexArrayMultiTexCoordOffsetEXT;
  glVertexArrayNormalOffsetEXT: TglVertexArrayNormalOffsetEXT;
  glVertexArrayParameteriAPPLE: TglVertexArrayParameteriAPPLE;
  glVertexArrayRangeAPPLE: TglVertexArrayRangeAPPLE;
  glVertexArrayRangeNV: TglVertexArrayRangeNV;
  glVertexArraySecondaryColorOffsetEXT: TglVertexArraySecondaryColorOffsetEXT;
  glVertexArrayTexCoordOffsetEXT: TglVertexArrayTexCoordOffsetEXT;
  glVertexArrayVertexAttribBindingEXT: TglVertexArrayVertexAttribBindingEXT;
  glVertexArrayVertexAttribDivisorEXT: TglVertexArrayVertexAttribDivisorEXT;
  glVertexArrayVertexAttribFormatEXT: TglVertexArrayVertexAttribFormatEXT;
  glVertexArrayVertexAttribIFormatEXT: TglVertexArrayVertexAttribIFormatEXT;
  glVertexArrayVertexAttribIOffsetEXT: TglVertexArrayVertexAttribIOffsetEXT;
  glVertexArrayVertexAttribLFormatEXT: TglVertexArrayVertexAttribLFormatEXT;
  glVertexArrayVertexAttribLOffsetEXT: TglVertexArrayVertexAttribLOffsetEXT;
  glVertexArrayVertexAttribOffsetEXT: TglVertexArrayVertexAttribOffsetEXT;
  glVertexArrayVertexBindingDivisorEXT: TglVertexArrayVertexBindingDivisorEXT;
  glVertexArrayVertexBuffer: TglVertexArrayVertexBuffer;
  glVertexArrayVertexBuffers: TglVertexArrayVertexBuffers;
  glVertexArrayVertexOffsetEXT: TglVertexArrayVertexOffsetEXT;
  glVertexAttrib1d: TglVertexAttrib1d;
  glVertexAttrib1dARB: TglVertexAttrib1dARB;
  glVertexAttrib1dNV: TglVertexAttrib1dNV;
  glVertexAttrib1dv: TglVertexAttrib1dv;
  glVertexAttrib1dvARB: TglVertexAttrib1dvARB;
  glVertexAttrib1dvNV: TglVertexAttrib1dvNV;
  glVertexAttrib1f: TglVertexAttrib1f;
  glVertexAttrib1fARB: TglVertexAttrib1fARB;
  glVertexAttrib1fNV: TglVertexAttrib1fNV;
  glVertexAttrib1fv: TglVertexAttrib1fv;
  glVertexAttrib1fvARB: TglVertexAttrib1fvARB;
  glVertexAttrib1fvNV: TglVertexAttrib1fvNV;
  glVertexAttrib1hNV: TglVertexAttrib1hNV;
  glVertexAttrib1hvNV: TglVertexAttrib1hvNV;
  glVertexAttrib1s: TglVertexAttrib1s;
  glVertexAttrib1sARB: TglVertexAttrib1sARB;
  glVertexAttrib1sNV: TglVertexAttrib1sNV;
  glVertexAttrib1sv: TglVertexAttrib1sv;
  glVertexAttrib1svARB: TglVertexAttrib1svARB;
  glVertexAttrib1svNV: TglVertexAttrib1svNV;
  glVertexAttrib2d: TglVertexAttrib2d;
  glVertexAttrib2dARB: TglVertexAttrib2dARB;
  glVertexAttrib2dNV: TglVertexAttrib2dNV;
  glVertexAttrib2dv: TglVertexAttrib2dv;
  glVertexAttrib2dvARB: TglVertexAttrib2dvARB;
  glVertexAttrib2dvNV: TglVertexAttrib2dvNV;
  glVertexAttrib2f: TglVertexAttrib2f;
  glVertexAttrib2fARB: TglVertexAttrib2fARB;
  glVertexAttrib2fNV: TglVertexAttrib2fNV;
  glVertexAttrib2fv: TglVertexAttrib2fv;
  glVertexAttrib2fvARB: TglVertexAttrib2fvARB;
  glVertexAttrib2fvNV: TglVertexAttrib2fvNV;
  glVertexAttrib2hNV: TglVertexAttrib2hNV;
  glVertexAttrib2hvNV: TglVertexAttrib2hvNV;
  glVertexAttrib2s: TglVertexAttrib2s;
  glVertexAttrib2sARB: TglVertexAttrib2sARB;
  glVertexAttrib2sNV: TglVertexAttrib2sNV;
  glVertexAttrib2sv: TglVertexAttrib2sv;
  glVertexAttrib2svARB: TglVertexAttrib2svARB;
  glVertexAttrib2svNV: TglVertexAttrib2svNV;
  glVertexAttrib3d: TglVertexAttrib3d;
  glVertexAttrib3dARB: TglVertexAttrib3dARB;
  glVertexAttrib3dNV: TglVertexAttrib3dNV;
  glVertexAttrib3dv: TglVertexAttrib3dv;
  glVertexAttrib3dvARB: TglVertexAttrib3dvARB;
  glVertexAttrib3dvNV: TglVertexAttrib3dvNV;
  glVertexAttrib3f: TglVertexAttrib3f;
  glVertexAttrib3fARB: TglVertexAttrib3fARB;
  glVertexAttrib3fNV: TglVertexAttrib3fNV;
  glVertexAttrib3fv: TglVertexAttrib3fv;
  glVertexAttrib3fvARB: TglVertexAttrib3fvARB;
  glVertexAttrib3fvNV: TglVertexAttrib3fvNV;
  glVertexAttrib3hNV: TglVertexAttrib3hNV;
  glVertexAttrib3hvNV: TglVertexAttrib3hvNV;
  glVertexAttrib3s: TglVertexAttrib3s;
  glVertexAttrib3sARB: TglVertexAttrib3sARB;
  glVertexAttrib3sNV: TglVertexAttrib3sNV;
  glVertexAttrib3sv: TglVertexAttrib3sv;
  glVertexAttrib3svARB: TglVertexAttrib3svARB;
  glVertexAttrib3svNV: TglVertexAttrib3svNV;
  glVertexAttrib4Nbv: TglVertexAttrib4Nbv;
  glVertexAttrib4NbvARB: TglVertexAttrib4NbvARB;
  glVertexAttrib4Niv: TglVertexAttrib4Niv;
  glVertexAttrib4NivARB: TglVertexAttrib4NivARB;
  glVertexAttrib4Nsv: TglVertexAttrib4Nsv;
  glVertexAttrib4NsvARB: TglVertexAttrib4NsvARB;
  glVertexAttrib4Nub: TglVertexAttrib4Nub;
  glVertexAttrib4NubARB: TglVertexAttrib4NubARB;
  glVertexAttrib4Nubv: TglVertexAttrib4Nubv;
  glVertexAttrib4NubvARB: TglVertexAttrib4NubvARB;
  glVertexAttrib4Nuiv: TglVertexAttrib4Nuiv;
  glVertexAttrib4NuivARB: TglVertexAttrib4NuivARB;
  glVertexAttrib4Nusv: TglVertexAttrib4Nusv;
  glVertexAttrib4NusvARB: TglVertexAttrib4NusvARB;
  glVertexAttrib4bv: TglVertexAttrib4bv;
  glVertexAttrib4bvARB: TglVertexAttrib4bvARB;
  glVertexAttrib4d: TglVertexAttrib4d;
  glVertexAttrib4dARB: TglVertexAttrib4dARB;
  glVertexAttrib4dNV: TglVertexAttrib4dNV;
  glVertexAttrib4dv: TglVertexAttrib4dv;
  glVertexAttrib4dvARB: TglVertexAttrib4dvARB;
  glVertexAttrib4dvNV: TglVertexAttrib4dvNV;
  glVertexAttrib4f: TglVertexAttrib4f;
  glVertexAttrib4fARB: TglVertexAttrib4fARB;
  glVertexAttrib4fNV: TglVertexAttrib4fNV;
  glVertexAttrib4fv: TglVertexAttrib4fv;
  glVertexAttrib4fvARB: TglVertexAttrib4fvARB;
  glVertexAttrib4fvNV: TglVertexAttrib4fvNV;
  glVertexAttrib4hNV: TglVertexAttrib4hNV;
  glVertexAttrib4hvNV: TglVertexAttrib4hvNV;
  glVertexAttrib4iv: TglVertexAttrib4iv;
  glVertexAttrib4ivARB: TglVertexAttrib4ivARB;
  glVertexAttrib4s: TglVertexAttrib4s;
  glVertexAttrib4sARB: TglVertexAttrib4sARB;
  glVertexAttrib4sNV: TglVertexAttrib4sNV;
  glVertexAttrib4sv: TglVertexAttrib4sv;
  glVertexAttrib4svARB: TglVertexAttrib4svARB;
  glVertexAttrib4svNV: TglVertexAttrib4svNV;
  glVertexAttrib4ubNV: TglVertexAttrib4ubNV;
  glVertexAttrib4ubv: TglVertexAttrib4ubv;
  glVertexAttrib4ubvARB: TglVertexAttrib4ubvARB;
  glVertexAttrib4ubvNV: TglVertexAttrib4ubvNV;
  glVertexAttrib4uiv: TglVertexAttrib4uiv;
  glVertexAttrib4uivARB: TglVertexAttrib4uivARB;
  glVertexAttrib4usv: TglVertexAttrib4usv;
  glVertexAttrib4usvARB: TglVertexAttrib4usvARB;
  glVertexAttribArrayObjectATI: TglVertexAttribArrayObjectATI;
  glVertexAttribBinding: TglVertexAttribBinding;
  glVertexAttribDivisor: TglVertexAttribDivisor;
  glVertexAttribDivisorANGLE: TglVertexAttribDivisorANGLE;
  glVertexAttribDivisorARB: TglVertexAttribDivisorARB;
  glVertexAttribDivisorEXT: TglVertexAttribDivisorEXT;
  glVertexAttribDivisorNV: TglVertexAttribDivisorNV;
  glVertexAttribFormat: TglVertexAttribFormat;
  glVertexAttribFormatNV: TglVertexAttribFormatNV;
  glVertexAttribI1i: TglVertexAttribI1i;
  glVertexAttribI1iEXT: TglVertexAttribI1iEXT;
  glVertexAttribI1iv: TglVertexAttribI1iv;
  glVertexAttribI1ivEXT: TglVertexAttribI1ivEXT;
  glVertexAttribI1ui: TglVertexAttribI1ui;
  glVertexAttribI1uiEXT: TglVertexAttribI1uiEXT;
  glVertexAttribI1uiv: TglVertexAttribI1uiv;
  glVertexAttribI1uivEXT: TglVertexAttribI1uivEXT;
  glVertexAttribI2i: TglVertexAttribI2i;
  glVertexAttribI2iEXT: TglVertexAttribI2iEXT;
  glVertexAttribI2iv: TglVertexAttribI2iv;
  glVertexAttribI2ivEXT: TglVertexAttribI2ivEXT;
  glVertexAttribI2ui: TglVertexAttribI2ui;
  glVertexAttribI2uiEXT: TglVertexAttribI2uiEXT;
  glVertexAttribI2uiv: TglVertexAttribI2uiv;
  glVertexAttribI2uivEXT: TglVertexAttribI2uivEXT;
  glVertexAttribI3i: TglVertexAttribI3i;
  glVertexAttribI3iEXT: TglVertexAttribI3iEXT;
  glVertexAttribI3iv: TglVertexAttribI3iv;
  glVertexAttribI3ivEXT: TglVertexAttribI3ivEXT;
  glVertexAttribI3ui: TglVertexAttribI3ui;
  glVertexAttribI3uiEXT: TglVertexAttribI3uiEXT;
  glVertexAttribI3uiv: TglVertexAttribI3uiv;
  glVertexAttribI3uivEXT: TglVertexAttribI3uivEXT;
  glVertexAttribI4bv: TglVertexAttribI4bv;
  glVertexAttribI4bvEXT: TglVertexAttribI4bvEXT;
  glVertexAttribI4i: TglVertexAttribI4i;
  glVertexAttribI4iEXT: TglVertexAttribI4iEXT;
  glVertexAttribI4iv: TglVertexAttribI4iv;
  glVertexAttribI4ivEXT: TglVertexAttribI4ivEXT;
  glVertexAttribI4sv: TglVertexAttribI4sv;
  glVertexAttribI4svEXT: TglVertexAttribI4svEXT;
  glVertexAttribI4ubv: TglVertexAttribI4ubv;
  glVertexAttribI4ubvEXT: TglVertexAttribI4ubvEXT;
  glVertexAttribI4ui: TglVertexAttribI4ui;
  glVertexAttribI4uiEXT: TglVertexAttribI4uiEXT;
  glVertexAttribI4uiv: TglVertexAttribI4uiv;
  glVertexAttribI4uivEXT: TglVertexAttribI4uivEXT;
  glVertexAttribI4usv: TglVertexAttribI4usv;
  glVertexAttribI4usvEXT: TglVertexAttribI4usvEXT;
  glVertexAttribIFormat: TglVertexAttribIFormat;
  glVertexAttribIFormatNV: TglVertexAttribIFormatNV;
  glVertexAttribIPointer: TglVertexAttribIPointer;
  glVertexAttribIPointerEXT: TglVertexAttribIPointerEXT;
  glVertexAttribL1d: TglVertexAttribL1d;
  glVertexAttribL1dEXT: TglVertexAttribL1dEXT;
  glVertexAttribL1dv: TglVertexAttribL1dv;
  glVertexAttribL1dvEXT: TglVertexAttribL1dvEXT;
  glVertexAttribL1i64NV: TglVertexAttribL1i64NV;
  glVertexAttribL1i64vNV: TglVertexAttribL1i64vNV;
  glVertexAttribL1ui64ARB: TglVertexAttribL1ui64ARB;
  glVertexAttribL1ui64NV: TglVertexAttribL1ui64NV;
  glVertexAttribL1ui64vARB: TglVertexAttribL1ui64vARB;
  glVertexAttribL1ui64vNV: TglVertexAttribL1ui64vNV;
  glVertexAttribL2d: TglVertexAttribL2d;
  glVertexAttribL2dEXT: TglVertexAttribL2dEXT;
  glVertexAttribL2dv: TglVertexAttribL2dv;
  glVertexAttribL2dvEXT: TglVertexAttribL2dvEXT;
  glVertexAttribL2i64NV: TglVertexAttribL2i64NV;
  glVertexAttribL2i64vNV: TglVertexAttribL2i64vNV;
  glVertexAttribL2ui64NV: TglVertexAttribL2ui64NV;
  glVertexAttribL2ui64vNV: TglVertexAttribL2ui64vNV;
  glVertexAttribL3d: TglVertexAttribL3d;
  glVertexAttribL3dEXT: TglVertexAttribL3dEXT;
  glVertexAttribL3dv: TglVertexAttribL3dv;
  glVertexAttribL3dvEXT: TglVertexAttribL3dvEXT;
  glVertexAttribL3i64NV: TglVertexAttribL3i64NV;
  glVertexAttribL3i64vNV: TglVertexAttribL3i64vNV;
  glVertexAttribL3ui64NV: TglVertexAttribL3ui64NV;
  glVertexAttribL3ui64vNV: TglVertexAttribL3ui64vNV;
  glVertexAttribL4d: TglVertexAttribL4d;
  glVertexAttribL4dEXT: TglVertexAttribL4dEXT;
  glVertexAttribL4dv: TglVertexAttribL4dv;
  glVertexAttribL4dvEXT: TglVertexAttribL4dvEXT;
  glVertexAttribL4i64NV: TglVertexAttribL4i64NV;
  glVertexAttribL4i64vNV: TglVertexAttribL4i64vNV;
  glVertexAttribL4ui64NV: TglVertexAttribL4ui64NV;
  glVertexAttribL4ui64vNV: TglVertexAttribL4ui64vNV;
  glVertexAttribLFormat: TglVertexAttribLFormat;
  glVertexAttribLFormatNV: TglVertexAttribLFormatNV;
  glVertexAttribLPointer: TglVertexAttribLPointer;
  glVertexAttribLPointerEXT: TglVertexAttribLPointerEXT;
  glVertexAttribP1ui: TglVertexAttribP1ui;
  glVertexAttribP1uiv: TglVertexAttribP1uiv;
  glVertexAttribP2ui: TglVertexAttribP2ui;
  glVertexAttribP2uiv: TglVertexAttribP2uiv;
  glVertexAttribP3ui: TglVertexAttribP3ui;
  glVertexAttribP3uiv: TglVertexAttribP3uiv;
  glVertexAttribP4ui: TglVertexAttribP4ui;
  glVertexAttribP4uiv: TglVertexAttribP4uiv;
  glVertexAttribParameteriAMD: TglVertexAttribParameteriAMD;
  glVertexAttribPointer: TglVertexAttribPointer;
  glVertexAttribPointerARB: TglVertexAttribPointerARB;
  glVertexAttribPointerNV: TglVertexAttribPointerNV;
  glVertexAttribs1dvNV: TglVertexAttribs1dvNV;
  glVertexAttribs1fvNV: TglVertexAttribs1fvNV;
  glVertexAttribs1hvNV: TglVertexAttribs1hvNV;
  glVertexAttribs1svNV: TglVertexAttribs1svNV;
  glVertexAttribs2dvNV: TglVertexAttribs2dvNV;
  glVertexAttribs2fvNV: TglVertexAttribs2fvNV;
  glVertexAttribs2hvNV: TglVertexAttribs2hvNV;
  glVertexAttribs2svNV: TglVertexAttribs2svNV;
  glVertexAttribs3dvNV: TglVertexAttribs3dvNV;
  glVertexAttribs3fvNV: TglVertexAttribs3fvNV;
  glVertexAttribs3hvNV: TglVertexAttribs3hvNV;
  glVertexAttribs3svNV: TglVertexAttribs3svNV;
  glVertexAttribs4dvNV: TglVertexAttribs4dvNV;
  glVertexAttribs4fvNV: TglVertexAttribs4fvNV;
  glVertexAttribs4hvNV: TglVertexAttribs4hvNV;
  glVertexAttribs4svNV: TglVertexAttribs4svNV;
  glVertexAttribs4ubvNV: TglVertexAttribs4ubvNV;
  glVertexBindingDivisor: TglVertexBindingDivisor;
  glVertexBlendARB: TglVertexBlendARB;
  glVertexBlendEnvfATI: TglVertexBlendEnvfATI;
  glVertexBlendEnviATI: TglVertexBlendEnviATI;
  glVertexFormatNV: TglVertexFormatNV;
  glVertexP2ui: TglVertexP2ui;
  glVertexP2uiv: TglVertexP2uiv;
  glVertexP3ui: TglVertexP3ui;
  glVertexP3uiv: TglVertexP3uiv;
  glVertexP4ui: TglVertexP4ui;
  glVertexP4uiv: TglVertexP4uiv;
  glVertexPointer: TglVertexPointer;
  glVertexPointerEXT: TglVertexPointerEXT;
  glVertexPointerListIBM: TglVertexPointerListIBM;
  glVertexPointervINTEL: TglVertexPointervINTEL;
  glVertexStream1dATI: TglVertexStream1dATI;
  glVertexStream1dvATI: TglVertexStream1dvATI;
  glVertexStream1fATI: TglVertexStream1fATI;
  glVertexStream1fvATI: TglVertexStream1fvATI;
  glVertexStream1iATI: TglVertexStream1iATI;
  glVertexStream1ivATI: TglVertexStream1ivATI;
  glVertexStream1sATI: TglVertexStream1sATI;
  glVertexStream1svATI: TglVertexStream1svATI;
  glVertexStream2dATI: TglVertexStream2dATI;
  glVertexStream2dvATI: TglVertexStream2dvATI;
  glVertexStream2fATI: TglVertexStream2fATI;
  glVertexStream2fvATI: TglVertexStream2fvATI;
  glVertexStream2iATI: TglVertexStream2iATI;
  glVertexStream2ivATI: TglVertexStream2ivATI;
  glVertexStream2sATI: TglVertexStream2sATI;
  glVertexStream2svATI: TglVertexStream2svATI;
  glVertexStream3dATI: TglVertexStream3dATI;
  glVertexStream3dvATI: TglVertexStream3dvATI;
  glVertexStream3fATI: TglVertexStream3fATI;
  glVertexStream3fvATI: TglVertexStream3fvATI;
  glVertexStream3iATI: TglVertexStream3iATI;
  glVertexStream3ivATI: TglVertexStream3ivATI;
  glVertexStream3sATI: TglVertexStream3sATI;
  glVertexStream3svATI: TglVertexStream3svATI;
  glVertexStream4dATI: TglVertexStream4dATI;
  glVertexStream4dvATI: TglVertexStream4dvATI;
  glVertexStream4fATI: TglVertexStream4fATI;
  glVertexStream4fvATI: TglVertexStream4fvATI;
  glVertexStream4iATI: TglVertexStream4iATI;
  glVertexStream4ivATI: TglVertexStream4ivATI;
  glVertexStream4sATI: TglVertexStream4sATI;
  glVertexStream4svATI: TglVertexStream4svATI;
  glVertexWeightPointerEXT: TglVertexWeightPointerEXT;
  glVertexWeightfEXT: TglVertexWeightfEXT;
  glVertexWeightfvEXT: TglVertexWeightfvEXT;
  glVertexWeighthNV: TglVertexWeighthNV;
  glVertexWeighthvNV: TglVertexWeighthvNV;
  glVideoCaptureNV: TglVideoCaptureNV;
  glVideoCaptureStreamParameterdvNV: TglVideoCaptureStreamParameterdvNV;
  glVideoCaptureStreamParameterfvNV: TglVideoCaptureStreamParameterfvNV;
  glVideoCaptureStreamParameterivNV: TglVideoCaptureStreamParameterivNV;
  glViewport: TglViewport;
  glViewportArrayv: TglViewportArrayv;
  glViewportArrayvNV: TglViewportArrayvNV;
  glViewportArrayvOES: TglViewportArrayvOES;
  glViewportIndexedf: TglViewportIndexedf;
  glViewportIndexedfOES: TglViewportIndexedfOES;
  glViewportIndexedfNV: TglViewportIndexedfNV;
  glViewportIndexedfv: TglViewportIndexedfv;
  glViewportIndexedfvOES: TglViewportIndexedfvOES;
  glViewportIndexedfvNV: TglViewportIndexedfvNV;
  glViewportPositionWScaleNV: TglViewportPositionWScaleNV;
  glViewportSwizzleNV: TglViewportSwizzleNV;
  glWaitSemaphoreEXT: TglWaitSemaphoreEXT;
  glWaitSemaphoreui64NVX: TglWaitSemaphoreui64NVX;
  glWaitSync: TglWaitSync;
  glWaitSyncAPPLE: TglWaitSyncAPPLE;
  glWeightPathsNV: TglWeightPathsNV;
  glWeightPointerARB: TglWeightPointerARB;
  glWeightPointerOES: TglWeightPointerOES;
  glWeightbvARB: TglWeightbvARB;
  glWeightdvARB: TglWeightdvARB;
  glWeightfvARB: TglWeightfvARB;
  glWeightivARB: TglWeightivARB;
  glWeightsvARB: TglWeightsvARB;
  glWeightubvARB: TglWeightubvARB;
  glWeightuivARB: TglWeightuivARB;
  glWeightusvARB: TglWeightusvARB;
  glWindowPos2d: TglWindowPos2d;
  glWindowPos2dARB: TglWindowPos2dARB;
  glWindowPos2dMESA: TglWindowPos2dMESA;
  glWindowPos2dv: TglWindowPos2dv;
  glWindowPos2dvARB: TglWindowPos2dvARB;
  glWindowPos2dvMESA: TglWindowPos2dvMESA;
  glWindowPos2f: TglWindowPos2f;
  glWindowPos2fARB: TglWindowPos2fARB;
  glWindowPos2fMESA: TglWindowPos2fMESA;
  glWindowPos2fv: TglWindowPos2fv;
  glWindowPos2fvARB: TglWindowPos2fvARB;
  glWindowPos2fvMESA: TglWindowPos2fvMESA;
  glWindowPos2i: TglWindowPos2i;
  glWindowPos2iARB: TglWindowPos2iARB;
  glWindowPos2iMESA: TglWindowPos2iMESA;
  glWindowPos2iv: TglWindowPos2iv;
  glWindowPos2ivARB: TglWindowPos2ivARB;
  glWindowPos2ivMESA: TglWindowPos2ivMESA;
  glWindowPos2s: TglWindowPos2s;
  glWindowPos2sARB: TglWindowPos2sARB;
  glWindowPos2sMESA: TglWindowPos2sMESA;
  glWindowPos2sv: TglWindowPos2sv;
  glWindowPos2svARB: TglWindowPos2svARB;
  glWindowPos2svMESA: TglWindowPos2svMESA;
  glWindowPos3d: TglWindowPos3d;
  glWindowPos3dARB: TglWindowPos3dARB;
  glWindowPos3dMESA: TglWindowPos3dMESA;
  glWindowPos3dv: TglWindowPos3dv;
  glWindowPos3dvARB: TglWindowPos3dvARB;
  glWindowPos3dvMESA: TglWindowPos3dvMESA;
  glWindowPos3f: TglWindowPos3f;
  glWindowPos3fARB: TglWindowPos3fARB;
  glWindowPos3fMESA: TglWindowPos3fMESA;
  glWindowPos3fv: TglWindowPos3fv;
  glWindowPos3fvARB: TglWindowPos3fvARB;
  glWindowPos3fvMESA: TglWindowPos3fvMESA;
  glWindowPos3i: TglWindowPos3i;
  glWindowPos3iARB: TglWindowPos3iARB;
  glWindowPos3iMESA: TglWindowPos3iMESA;
  glWindowPos3iv: TglWindowPos3iv;
  glWindowPos3ivARB: TglWindowPos3ivARB;
  glWindowPos3ivMESA: TglWindowPos3ivMESA;
  glWindowPos3s: TglWindowPos3s;
  glWindowPos3sARB: TglWindowPos3sARB;
  glWindowPos3sMESA: TglWindowPos3sMESA;
  glWindowPos3sv: TglWindowPos3sv;
  glWindowPos3svARB: TglWindowPos3svARB;
  glWindowPos3svMESA: TglWindowPos3svMESA;
  glWindowPos4dMESA: TglWindowPos4dMESA;
  glWindowPos4dvMESA: TglWindowPos4dvMESA;
  glWindowPos4fMESA: TglWindowPos4fMESA;
  glWindowPos4fvMESA: TglWindowPos4fvMESA;
  glWindowPos4iMESA: TglWindowPos4iMESA;
  glWindowPos4ivMESA: TglWindowPos4ivMESA;
  glWindowPos4sMESA: TglWindowPos4sMESA;
  glWindowPos4svMESA: TglWindowPos4svMESA;
  glWindowRectanglesEXT: TglWindowRectanglesEXT;
  glWriteMaskEXT: TglWriteMaskEXT;
  glDrawVkImageNV: TglDrawVkImageNV;
  glGetVkProcAddrNV: TglGetVkProcAddrNV;
  glWaitVkSemaphoreNV: TglWaitVkSemaphoreNV;
  glSignalVkSemaphoreNV: TglSignalVkSemaphoreNV;
  glSignalVkFenceNV: TglSignalVkFenceNV;
  glFramebufferParameteriMESA: TglFramebufferParameteriMESA;
  glGetFramebufferParameterivMESA: TglGetFramebufferParameterivMESA;
{$if defined(WINDOWS)}
  ChoosePixelFormat: TChoosePixelFormat;
  DescribePixelFormat: TDescribePixelFormat;
  GetPixelFormat: TGetPixelFormat;
  SetPixelFormat: TSetPixelFormat;
  SwapBuffers: TSwapBuffers;
  wglAllocateMemoryNV: TwglAllocateMemoryNV;
  wglAssociateImageBufferEventsI3D: TwglAssociateImageBufferEventsI3D;
  wglBeginFrameTrackingI3D: TwglBeginFrameTrackingI3D;
  wglBindDisplayColorTableEXT: TwglBindDisplayColorTableEXT;
  wglBindSwapBarrierNV: TwglBindSwapBarrierNV;
  wglBindTexImageARB: TwglBindTexImageARB;
  wglBindVideoCaptureDeviceNV: TwglBindVideoCaptureDeviceNV;
  wglBindVideoDeviceNV: TwglBindVideoDeviceNV;
  wglBindVideoImageNV: TwglBindVideoImageNV;
  wglBlitContextFramebufferAMD: TwglBlitContextFramebufferAMD;
  wglChoosePixelFormatARB: TwglChoosePixelFormatARB;
  wglChoosePixelFormatEXT: TwglChoosePixelFormatEXT;
  wglCopyContext: TwglCopyContext;
  wglCopyImageSubDataNV: TwglCopyImageSubDataNV;
  wglCreateAffinityDCNV: TwglCreateAffinityDCNV;
  wglCreateAssociatedContextAMD: TwglCreateAssociatedContextAMD;
  wglCreateAssociatedContextAttribsAMD: TwglCreateAssociatedContextAttribsAMD;
  wglCreateBufferRegionARB: TwglCreateBufferRegionARB;
  wglCreateContext: TwglCreateContext;
  wglCreateContextAttribsARB: TwglCreateContextAttribsARB;
  wglCreateDisplayColorTableEXT: TwglCreateDisplayColorTableEXT;
  wglCreateImageBufferI3D: TwglCreateImageBufferI3D;
  wglCreateLayerContext: TwglCreateLayerContext;
  wglCreatePbufferARB: TwglCreatePbufferARB;
  wglCreatePbufferEXT: TwglCreatePbufferEXT;
  wglDelayBeforeSwapNV: TwglDelayBeforeSwapNV;
  wglDeleteAssociatedContextAMD: TwglDeleteAssociatedContextAMD;
  wglDeleteBufferRegionARB: TwglDeleteBufferRegionARB;
  wglDeleteContext: TwglDeleteContext;
  wglDeleteDCNV: TwglDeleteDCNV;
  wglDescribeLayerPlane: TwglDescribeLayerPlane;
  wglDestroyDisplayColorTableEXT: TwglDestroyDisplayColorTableEXT;
  wglDestroyImageBufferI3D: TwglDestroyImageBufferI3D;
  wglDestroyPbufferARB: TwglDestroyPbufferARB;
  wglDestroyPbufferEXT: TwglDestroyPbufferEXT;
  wglDisableFrameLockI3D: TwglDisableFrameLockI3D;
  wglDisableGenlockI3D: TwglDisableGenlockI3D;
  wglDXCloseDeviceNV: TwglDXCloseDeviceNV;
  wglDXLockObjectsNV: TwglDXLockObjectsNV;
  wglDXObjectAccessNV: TwglDXObjectAccessNV;
  wglDXOpenDeviceNV: TwglDXOpenDeviceNV;
  wglDXRegisterObjectNV: TwglDXRegisterObjectNV;
  wglDXSetResourceShareHandleNV: TwglDXSetResourceShareHandleNV;
  wglDXUnlockObjectsNV: TwglDXUnlockObjectsNV;
  wglDXUnregisterObjectNV: TwglDXUnregisterObjectNV;
  wglEnableFrameLockI3D: TwglEnableFrameLockI3D;
  wglEnableGenlockI3D: TwglEnableGenlockI3D;
  wglEndFrameTrackingI3D: TwglEndFrameTrackingI3D;
  wglEnumerateVideoCaptureDevicesNV: TwglEnumerateVideoCaptureDevicesNV;
  wglEnumerateVideoDevicesNV: TwglEnumerateVideoDevicesNV;
  wglEnumGpuDevicesNV: TwglEnumGpuDevicesNV;
  wglEnumGpusFromAffinityDCNV: TwglEnumGpusFromAffinityDCNV;
  wglEnumGpusNV: TwglEnumGpusNV;
  wglFreeMemoryNV: TwglFreeMemoryNV;
  wglGenlockSampleRateI3D: TwglGenlockSampleRateI3D;
  wglGenlockSourceDelayI3D: TwglGenlockSourceDelayI3D;
  wglGenlockSourceEdgeI3D: TwglGenlockSourceEdgeI3D;
  wglGenlockSourceI3D: TwglGenlockSourceI3D;
  wglGetContextGPUIDAMD: TwglGetContextGPUIDAMD;
  wglGetCurrentAssociatedContextAMD: TwglGetCurrentAssociatedContextAMD;
  wglGetCurrentContext: TwglGetCurrentContext;
  wglGetCurrentDC: TwglGetCurrentDC;
  wglGetCurrentReadDCARB: TwglGetCurrentReadDCARB;
  wglGetCurrentReadDCEXT: TwglGetCurrentReadDCEXT;
  wglGetDefaultProcAddress: TwglGetDefaultProcAddress;
  wglGetDigitalVideoParametersI3D: TwglGetDigitalVideoParametersI3D;
  GetEnhMetaFilePixelFormat: TGetEnhMetaFilePixelFormat;
  wglGetExtensionsStringARB: TwglGetExtensionsStringARB;
  wglGetExtensionsStringEXT: TwglGetExtensionsStringEXT;
  wglGetFrameUsageI3D: TwglGetFrameUsageI3D;
  wglGetGammaTableI3D: TwglGetGammaTableI3D;
  wglGetGammaTableParametersI3D: TwglGetGammaTableParametersI3D;
  wglGetGenlockSampleRateI3D: TwglGetGenlockSampleRateI3D;
  wglGetGenlockSourceDelayI3D: TwglGetGenlockSourceDelayI3D;
  wglGetGenlockSourceEdgeI3D: TwglGetGenlockSourceEdgeI3D;
  wglGetGenlockSourceI3D: TwglGetGenlockSourceI3D;
  wglGetGPUIDsAMD: TwglGetGPUIDsAMD;
  wglGetGPUInfoAMD: TwglGetGPUInfoAMD;
  wglGetLayerPaletteEntries: TwglGetLayerPaletteEntries;
  wglGetMscRateOML: TwglGetMscRateOML;
  wglGetPbufferDCARB: TwglGetPbufferDCARB;
  wglGetPbufferDCEXT: TwglGetPbufferDCEXT;
  wglGetPixelFormatAttribfvARB: TwglGetPixelFormatAttribfvARB;
  wglGetPixelFormatAttribfvEXT: TwglGetPixelFormatAttribfvEXT;
  wglGetPixelFormatAttribivARB: TwglGetPixelFormatAttribivARB;
  wglGetPixelFormatAttribivEXT: TwglGetPixelFormatAttribivEXT;
  wglGetProcAddress: TwglGetProcAddress;
  wglGetSwapIntervalEXT: TwglGetSwapIntervalEXT;
  wglGetSyncValuesOML: TwglGetSyncValuesOML;
  wglGetVideoDeviceNV: TwglGetVideoDeviceNV;
  wglGetVideoInfoNV: TwglGetVideoInfoNV;
  wglIsEnabledFrameLockI3D: TwglIsEnabledFrameLockI3D;
  wglIsEnabledGenlockI3D: TwglIsEnabledGenlockI3D;
  wglJoinSwapGroupNV: TwglJoinSwapGroupNV;
  wglLoadDisplayColorTableEXT: TwglLoadDisplayColorTableEXT;
  wglLockVideoCaptureDeviceNV: TwglLockVideoCaptureDeviceNV;
  wglMakeAssociatedContextCurrentAMD: TwglMakeAssociatedContextCurrentAMD;
  wglMakeContextCurrentARB: TwglMakeContextCurrentARB;
  wglMakeContextCurrentEXT: TwglMakeContextCurrentEXT;
  wglMakeCurrent: TwglMakeCurrent;
  wglQueryCurrentContextNV: TwglQueryCurrentContextNV;
  wglQueryFrameCountNV: TwglQueryFrameCountNV;
  wglQueryFrameLockMasterI3D: TwglQueryFrameLockMasterI3D;
  wglQueryFrameTrackingI3D: TwglQueryFrameTrackingI3D;
  wglQueryGenlockMaxSourceDelayI3D: TwglQueryGenlockMaxSourceDelayI3D;
  wglQueryMaxSwapGroupsNV: TwglQueryMaxSwapGroupsNV;
  wglQueryPbufferARB: TwglQueryPbufferARB;
  wglQueryPbufferEXT: TwglQueryPbufferEXT;
  wglQuerySwapGroupNV: TwglQuerySwapGroupNV;
  wglQueryVideoCaptureDeviceNV: TwglQueryVideoCaptureDeviceNV;
  wglRealizeLayerPalette: TwglRealizeLayerPalette;
  wglReleaseImageBufferEventsI3D: TwglReleaseImageBufferEventsI3D;
  wglReleasePbufferDCARB: TwglReleasePbufferDCARB;
  wglReleasePbufferDCEXT: TwglReleasePbufferDCEXT;
  wglReleaseTexImageARB: TwglReleaseTexImageARB;
  wglReleaseVideoCaptureDeviceNV: TwglReleaseVideoCaptureDeviceNV;
  wglReleaseVideoDeviceNV: TwglReleaseVideoDeviceNV;
  wglReleaseVideoImageNV: TwglReleaseVideoImageNV;
  wglResetFrameCountNV: TwglResetFrameCountNV;
  wglRestoreBufferRegionARB: TwglRestoreBufferRegionARB;
  wglSaveBufferRegionARB: TwglSaveBufferRegionARB;
  wglSendPbufferToVideoNV: TwglSendPbufferToVideoNV;
  wglSetDigitalVideoParametersI3D: TwglSetDigitalVideoParametersI3D;
  wglSetGammaTableI3D: TwglSetGammaTableI3D;
  wglSetGammaTableParametersI3D: TwglSetGammaTableParametersI3D;
  wglSetLayerPaletteEntries: TwglSetLayerPaletteEntries;
  wglSetPbufferAttribARB: TwglSetPbufferAttribARB;
  wglSetStereoEmitterState3DL: TwglSetStereoEmitterState3DL;
  wglShareLists: TwglShareLists;
  wglSwapBuffersMscOML: TwglSwapBuffersMscOML;
  wglSwapLayerBuffers: TwglSwapLayerBuffers;
  wglSwapIntervalEXT: TwglSwapIntervalEXT;
  wglSwapLayerBuffersMscOML: TwglSwapLayerBuffersMscOML;
  wglUseFontBitmaps: TwglUseFontBitmaps;
  wglUseFontBitmapsA: TwglUseFontBitmapsA;
  wglUseFontBitmapsW: TwglUseFontBitmapsW;
  wglUseFontOutlines: TwglUseFontOutlines;
  wglUseFontOutlinesA: TwglUseFontOutlinesA;
  wglUseFontOutlinesW: TwglUseFontOutlinesW;
  wglWaitForMscOML: TwglWaitForMscOML;
  wglWaitForSbcOML: TwglWaitForSbcOML;
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX: TglXAssociateDMPbufferSGIX;
  glXBindChannelToWindowSGIX: TglXBindChannelToWindowSGIX;
  glXBindHyperpipeSGIX: TglXBindHyperpipeSGIX;
  glXBindSwapBarrierNV: TglXBindSwapBarrierNV;
  glXBindSwapBarrierSGIX: TglXBindSwapBarrierSGIX;
  glXBindTexImageEXT: TglXBindTexImageEXT;
  glXBindVideoCaptureDeviceNV: TglXBindVideoCaptureDeviceNV;
  glXBindVideoDeviceNV: TglXBindVideoDeviceNV;
  glXBindVideoImageNV: TglXBindVideoImageNV;
  glXBlitContextFramebufferAMD: TglXBlitContextFramebufferAMD;
  glXChannelRectSGIX: TglXChannelRectSGIX;
  glXChannelRectSyncSGIX: TglXChannelRectSyncSGIX;
  glXChooseFBConfig: TglXChooseFBConfig;
  glXChooseFBConfigSGIX: TglXChooseFBConfigSGIX;
  glXChooseVisual: TglXChooseVisual;
  glXCopyBufferSubDataNV: TglXCopyBufferSubDataNV;
  glXNamedCopyBufferSubDataNV: TglXNamedCopyBufferSubDataNV;
  glXCopyContext: TglXCopyContext;
  glXCopyImageSubDataNV: TglXCopyImageSubDataNV;
  glXCopySubBufferMESA: TglXCopySubBufferMESA;
  glXCreateAssociatedContextAMD: TglXCreateAssociatedContextAMD;
  glXCreateAssociatedContextAttribsAMD: TglXCreateAssociatedContextAttribsAMD;
  glXCreateContextAttribsARB: TglXCreateContextAttribsARB;
  glXCreateContext: TglXCreateContext;
  glXCreateContextWithConfigSGIX: TglXCreateContextWithConfigSGIX;
  glXCreateGLXPbufferSGIX: TglXCreateGLXPbufferSGIX;
  glXCreateGLXPixmap: TglXCreateGLXPixmap;
  glXCreateGLXPixmapMESA: TglXCreateGLXPixmapMESA;
  glXCreateGLXPixmapWithConfigSGIX: TglXCreateGLXPixmapWithConfigSGIX;
  glXCreateGLXVideoSourceSGIX: TglXCreateGLXVideoSourceSGIX;
  glXCreateNewContext: TglXCreateNewContext;
  glXCreatePbuffer: TglXCreatePbuffer;
  glXCreatePixmap: TglXCreatePixmap;
  glXCreateWindow: TglXCreateWindow;
  glXCushionSGI: TglXCushionSGI;
  glXDelayBeforeSwapNV: TglXDelayBeforeSwapNV;
  glXDeleteAssociatedContextAMD: TglXDeleteAssociatedContextAMD;
  glXDestroyContext: TglXDestroyContext;
  glXDestroyGLXPbufferSGIX: TglXDestroyGLXPbufferSGIX;
  glXDestroyGLXPixmap: TglXDestroyGLXPixmap;
  glXDestroyGLXVideoSourceSGIX: TglXDestroyGLXVideoSourceSGIX;
  glXDestroyHyperpipeConfigSGIX: TglXDestroyHyperpipeConfigSGIX;
  glXDestroyPbuffer: TglXDestroyPbuffer;
  glXDestroyPixmap: TglXDestroyPixmap;
  glXDestroyWindow: TglXDestroyWindow;
  glXEnumerateVideoCaptureDevicesNV: TglXEnumerateVideoCaptureDevicesNV;
  glXEnumerateVideoDevicesNV: TglXEnumerateVideoDevicesNV;
  glXFreeContextEXT: TglXFreeContextEXT;
  glXGetAGPOffsetMESA: TglXGetAGPOffsetMESA;
  glXGetClientString: TglXGetClientString;
  glXGetConfig: TglXGetConfig;
  glXGetContextGPUIDAMD: TglXGetContextGPUIDAMD;
  glXGetContextIDEXT: TglXGetContextIDEXT;
  glXGetCurrentAssociatedContextAMD: TglXGetCurrentAssociatedContextAMD;
  glXGetCurrentContext: TglXGetCurrentContext;
  glXGetCurrentDisplayEXT: TglXGetCurrentDisplayEXT;
  glXGetCurrentDisplay: TglXGetCurrentDisplay;
  glXGetCurrentDrawable: TglXGetCurrentDrawable;
  glXGetCurrentReadDrawableSGI: TglXGetCurrentReadDrawableSGI;
  glXGetCurrentReadDrawable: TglXGetCurrentReadDrawable;
  glXGetFBConfigAttrib: TglXGetFBConfigAttrib;
  glXGetFBConfigAttribSGIX: TglXGetFBConfigAttribSGIX;
  glXGetFBConfigFromVisualSGIX: TglXGetFBConfigFromVisualSGIX;
  glXGetFBConfigs: TglXGetFBConfigs;
  glXGetGPUIDsAMD: TglXGetGPUIDsAMD;
  glXGetGPUInfoAMD: TglXGetGPUInfoAMD;
  glXGetMscRateOML: TglXGetMscRateOML;
  glXGetProcAddressARB: TglXGetProcAddressARB;
  glXGetProcAddress: TglXGetProcAddress;
  glXGetSelectedEvent: TglXGetSelectedEvent;
  glXGetSelectedEventSGIX: TglXGetSelectedEventSGIX;
  glXGetSwapIntervalMESA: TglXGetSwapIntervalMESA;
  glXGetSyncValuesOML: TglXGetSyncValuesOML;
  glXGetTransparentIndexSUN: TglXGetTransparentIndexSUN;
  glXGetVideoDeviceNV: TglXGetVideoDeviceNV;
  glXGetVideoInfoNV: TglXGetVideoInfoNV;
  glXGetVideoSyncSGI: TglXGetVideoSyncSGI;
  glXGetVisualFromFBConfig: TglXGetVisualFromFBConfig;
  glXGetVisualFromFBConfigSGIX: TglXGetVisualFromFBConfigSGIX;
  glXHyperpipeAttribSGIX: TglXHyperpipeAttribSGIX;
  glXHyperpipeConfigSGIX: TglXHyperpipeConfigSGIX;
  glXImportContextEXT: TglXImportContextEXT;
  glXIsDirect: TglXIsDirect;
  glXJoinSwapGroupNV: TglXJoinSwapGroupNV;
  glXJoinSwapGroupSGIX: TglXJoinSwapGroupSGIX;
  glXLockVideoCaptureDeviceNV: TglXLockVideoCaptureDeviceNV;
  glXMakeAssociatedContextCurrentAMD: TglXMakeAssociatedContextCurrentAMD;
  glXMakeContextCurrent: TglXMakeContextCurrent;
  glXMakeCurrent: TglXMakeCurrent;
  glXMakeCurrentReadSGI: TglXMakeCurrentReadSGI;
  glXQueryChannelDeltasSGIX: TglXQueryChannelDeltasSGIX;
  glXQueryChannelRectSGIX: TglXQueryChannelRectSGIX;
  glXQueryContext: TglXQueryContext;
  glXQueryContextInfoEXT: TglXQueryContextInfoEXT;
  glXQueryCurrentRendererIntegerMESA: TglXQueryCurrentRendererIntegerMESA;
  glXQueryCurrentRendererStringMESA: TglXQueryCurrentRendererStringMESA;
  glXQueryDrawable: TglXQueryDrawable;
  glXQueryExtension: TglXQueryExtension;
  glXQueryExtensionsString: TglXQueryExtensionsString;
  glXQueryFrameCountNV: TglXQueryFrameCountNV;
  glXQueryGLXPbufferSGIX: TglXQueryGLXPbufferSGIX;
  glXQueryHyperpipeAttribSGIX: TglXQueryHyperpipeAttribSGIX;
  glXQueryHyperpipeBestAttribSGIX: TglXQueryHyperpipeBestAttribSGIX;
  glXQueryHyperpipeConfigSGIX: TglXQueryHyperpipeConfigSGIX;
  glXQueryHyperpipeNetworkSGIX: TglXQueryHyperpipeNetworkSGIX;
  glXQueryMaxSwapBarriersSGIX: TglXQueryMaxSwapBarriersSGIX;
  glXQueryMaxSwapGroupsNV: TglXQueryMaxSwapGroupsNV;
  glXQueryRendererIntegerMESA: TglXQueryRendererIntegerMESA;
  glXQueryRendererStringMESA: TglXQueryRendererStringMESA;
  glXQueryServerString: TglXQueryServerString;
  glXQuerySwapGroupNV: TglXQuerySwapGroupNV;
  glXQueryVersion: TglXQueryVersion;
  glXQueryVideoCaptureDeviceNV: TglXQueryVideoCaptureDeviceNV;
  glXReleaseBuffersMESA: TglXReleaseBuffersMESA;
  glXReleaseTexImageEXT: TglXReleaseTexImageEXT;
  glXReleaseVideoCaptureDeviceNV: TglXReleaseVideoCaptureDeviceNV;
  glXReleaseVideoDeviceNV: TglXReleaseVideoDeviceNV;
  glXReleaseVideoImageNV: TglXReleaseVideoImageNV;
  glXResetFrameCountNV: TglXResetFrameCountNV;
  glXSelectEvent: TglXSelectEvent;
  glXSelectEventSGIX: TglXSelectEventSGIX;
  glXSendPbufferToVideoNV: TglXSendPbufferToVideoNV;
  glXSet3DfxModeMESA: TglXSet3DfxModeMESA;
  glXSwapBuffers: TglXSwapBuffers;
  glXSwapBuffersMscOML: TglXSwapBuffersMscOML;
  glXSwapIntervalMESA: TglXSwapIntervalMESA;
  glXSwapIntervalEXT: TglXSwapIntervalEXT;
  glXSwapIntervalSGI: TglXSwapIntervalSGI;
  glXUseXFont: TglXUseXFont;
  glXWaitForMscOML: TglXWaitForMscOML;
  glXWaitForSbcOML: TglXWaitForSbcOML;
  glXWaitGL: TglXWaitGL;
  glXWaitVideoSyncSGI: TglXWaitVideoSyncSGI;
  glXWaitX: TglXWaitX;
{$endif}

  type TGLAttribs = record
  private
    var Attribs: array[0..63] of TGLint;
    procedure Initialize; inline;
    procedure Finalize; inline;
    function GetData: PGLInt;
    function GetAttrib(const Index: TGLint): TGLint;
    procedure SetAttrib(const Index: TGLint; const Value: TGLint);
  public
    property Data: PGLint read GetData;
    property Attrib[const Index: TGLint]: TGLint read GetAttrib write SetAttrib; default;
    class operator Initialize(var v: TGLAttribs);
    class operator Finalize(var v: TGLAttribs);
  end; 

{$if defined(WINDOWS)}
var glSharedDC: HDC;
var glSharedContext: HGLRC;
{$elseif defined(LINUX)}
var glSharedWindow: TWindow;
var glSharedContext: TGLXContext;
{$endif}

implementation

{$ifdef CPU64}
  type TLibHandle = QWord;
{$else}
  type TLibHandle = LongWord;
{$endif}

procedure TGLAttribs.Initialize;
begin
  {$push}
  {$hints off}
  FillChar(Attribs, SizeOf(Attribs), 0);
  {$pop}
end;

procedure TGLAttribs.Finalize;
begin

end;

function TGLAttribs.GetData: PGLInt;
begin
  Result := @Attribs;
end;

function TGLAttribs.GetAttrib(const Index: TGLint): TGLint;
  var i: Integer;
begin
  for i := 0 to Length(Attribs) shr 1 do
  begin
    if Attribs[i * 2] = Index then Exit(Attribs[i * 2 + 1]);
  end;
  Result := 0;
end;

procedure TGLAttribs.SetAttrib(const Index: TGLint; const Value: TGLint);
  var i: Integer;
  var ai: TGLint;
begin
  for i := 0 to Length(Attribs) shr 1 do
  begin
    ai := i * 2;
    if (Attribs[ai] = Index) or (Attribs[ai] = 0) then
    begin
      Attribs[ai] := Index;
      Attribs[ai + 1] := Value;
      Exit;
    end;
  end;
end;

class operator TGLAttribs.Initialize(var v: TGLAttribs);
begin
  v.Initialize;
end;

class operator TGLAttribs.Finalize(var v: TGLAttribs);
begin
  v.Finalize;
end;

{$if defined(WINDOWS)}
function PlatformLibOpen(Name: PAnsiChar): TLibHandle; stdcall; external 'kernel32.dll' name 'LoadLibraryA';
function PlatformLibClose(Handle: TLibHandle): Boolean; stdcall; external 'kernel32.dll' name 'FreeLibrary';
function PlatformLibAddress(Handle: TLibHandle; ProcName: PAnsiChar): Pointer; stdcall; external 'kernel32.dll' name 'GetProcAddress';
function GDIChoosePixelFormat(DC: HDC; pfd: PPixelFormatDescriptor): Integer; stdcall; external 'gdi32' name 'ChoosePixelFormat';
function GDIDescribePixelFormat(DC: HDC; ipfd: LongInt; cjpfd: UINT; const pfd: PPixelFormatDescriptor): LongInt; external 'gdi32' name 'DescribePixelFormat';
function GDIGetPixelFormat(DC: HDC): LongInt; external 'gdi32' name 'GetPixelFormat';
function GDISetPixelFormat(DC: HDC; PixelFormat: Integer; pfd: PPixelFormatDescriptor): WINBOOL; external 'gdi32' name 'SetPixelFormat';
function GDISwapBuffers(DC: HDC): BOOL; external 'gdi32' name 'SwapBuffers';
{$else}
function PlatformLibOpen(Name: PAnsiChar; Flags: LongInt): TLibHandle; cdecl; external 'dl' name 'dlopen';
function PlatformLibClose(Handle: TLibHandle): LongInt; cdecl; external 'dl' name 'dlclose';
function PlatformLibAddress(Handle: TLibHandle; ProcName: PAnsiChar): Pointer; cdecl; external 'dl' name 'dlsym';
{$endif}

function LibOpen(const Name: String): TLibHandle;
begin
  Result := PlatformLibOpen(PAnsiChar(Name){$if not defined(WINDOWS)}, 1{$endif});
end;

function LibClose(const Handle: TLibHandle): Boolean;
begin
  Result := PlatformLibClose(Handle){$if not defined(WINDOWS)} = 0{$endif};
end;

function LibAddress(const Handle: TLibHandle; const ProcName: String): Pointer;
begin
  Result := PlatformLibAddress(Handle, PAnsiChar(ProcName));
end;

var Lib: TLibHandle;

function ProcAddress(const ProcName: String): Pointer;
begin
{$if defined(WINDOWS)}
  Result := wglGetProcAddress(PAnsiChar(ProcName));
  if not Assigned(Result) then Result := LibAddress(Lib, ProcName);
{$else}
  Result := LibAddress(Lib, ProcName);
{$endif}
end; 

procedure LoadCommands;
begin
{$if defined(WINDOWS)}
  ChoosePixelFormat := TChoosePixelFormat(@GDIChoosePixelFormat);
  DescribePixelFormat := TDescribePixelFormat(@GDIDescribePixelFormat);
  GetPixelFormat := TGetPixelFormat(@GDIGetPixelFormat);
  SetPixelFormat := TSetPixelFormat(@GDISetPixelFormat);
  SwapBuffers := TSwapBuffers(@GDISwapBuffers);
  wglAllocateMemoryNV := TwglAllocateMemoryNV(ProcAddress('wglAllocateMemoryNV'));
  wglAssociateImageBufferEventsI3D := TwglAssociateImageBufferEventsI3D(ProcAddress('wglAssociateImageBufferEventsI3D'));
  wglBeginFrameTrackingI3D := TwglBeginFrameTrackingI3D(ProcAddress('wglBeginFrameTrackingI3D'));
  wglBindDisplayColorTableEXT := TwglBindDisplayColorTableEXT(ProcAddress('wglBindDisplayColorTableEXT'));
  wglBindSwapBarrierNV := TwglBindSwapBarrierNV(ProcAddress('wglBindSwapBarrierNV'));
  wglBindTexImageARB := TwglBindTexImageARB(ProcAddress('wglBindTexImageARB'));
  wglBindVideoCaptureDeviceNV := TwglBindVideoCaptureDeviceNV(ProcAddress('wglBindVideoCaptureDeviceNV'));
  wglBindVideoDeviceNV := TwglBindVideoDeviceNV(ProcAddress('wglBindVideoDeviceNV'));
  wglBindVideoImageNV := TwglBindVideoImageNV(ProcAddress('wglBindVideoImageNV'));
  wglBlitContextFramebufferAMD := TwglBlitContextFramebufferAMD(ProcAddress('wglBlitContextFramebufferAMD'));
  wglChoosePixelFormatARB := TwglChoosePixelFormatARB(ProcAddress('wglChoosePixelFormatARB'));
  wglChoosePixelFormatEXT := TwglChoosePixelFormatEXT(ProcAddress('wglChoosePixelFormatEXT'));
  wglCopyContext := TwglCopyContext(ProcAddress('wglCopyContext'));
  wglCopyImageSubDataNV := TwglCopyImageSubDataNV(ProcAddress('wglCopyImageSubDataNV'));
  wglCreateAffinityDCNV := TwglCreateAffinityDCNV(ProcAddress('wglCreateAffinityDCNV'));
  wglCreateAssociatedContextAMD := TwglCreateAssociatedContextAMD(ProcAddress('wglCreateAssociatedContextAMD'));
  wglCreateAssociatedContextAttribsAMD := TwglCreateAssociatedContextAttribsAMD(ProcAddress('wglCreateAssociatedContextAttribsAMD'));
  wglCreateBufferRegionARB := TwglCreateBufferRegionARB(ProcAddress('wglCreateBufferRegionARB'));
  wglCreateContext := TwglCreateContext(ProcAddress('wglCreateContext'));
  wglCreateContextAttribsARB := TwglCreateContextAttribsARB(ProcAddress('wglCreateContextAttribsARB'));
  wglCreateDisplayColorTableEXT := TwglCreateDisplayColorTableEXT(ProcAddress('wglCreateDisplayColorTableEXT'));
  wglCreateImageBufferI3D := TwglCreateImageBufferI3D(ProcAddress('wglCreateImageBufferI3D'));
  wglCreateLayerContext := TwglCreateLayerContext(ProcAddress('wglCreateLayerContext'));
  wglCreatePbufferARB := TwglCreatePbufferARB(ProcAddress('wglCreatePbufferARB'));
  wglCreatePbufferEXT := TwglCreatePbufferEXT(ProcAddress('wglCreatePbufferEXT'));
  wglDelayBeforeSwapNV := TwglDelayBeforeSwapNV(ProcAddress('wglDelayBeforeSwapNV'));
  wglDeleteAssociatedContextAMD := TwglDeleteAssociatedContextAMD(ProcAddress('wglDeleteAssociatedContextAMD'));
  wglDeleteBufferRegionARB := TwglDeleteBufferRegionARB(ProcAddress('wglDeleteBufferRegionARB'));
  wglDeleteContext := TwglDeleteContext(ProcAddress('wglDeleteContext'));
  wglDeleteDCNV := TwglDeleteDCNV(ProcAddress('wglDeleteDCNV'));
  wglDescribeLayerPlane := TwglDescribeLayerPlane(ProcAddress('wglDescribeLayerPlane'));
  wglDestroyDisplayColorTableEXT := TwglDestroyDisplayColorTableEXT(ProcAddress('wglDestroyDisplayColorTableEXT'));
  wglDestroyImageBufferI3D := TwglDestroyImageBufferI3D(ProcAddress('wglDestroyImageBufferI3D'));
  wglDestroyPbufferARB := TwglDestroyPbufferARB(ProcAddress('wglDestroyPbufferARB'));
  wglDestroyPbufferEXT := TwglDestroyPbufferEXT(ProcAddress('wglDestroyPbufferEXT'));
  wglDisableFrameLockI3D := TwglDisableFrameLockI3D(ProcAddress('wglDisableFrameLockI3D'));
  wglDisableGenlockI3D := TwglDisableGenlockI3D(ProcAddress('wglDisableGenlockI3D'));
  wglDXCloseDeviceNV := TwglDXCloseDeviceNV(ProcAddress('wglDXCloseDeviceNV'));
  wglDXLockObjectsNV := TwglDXLockObjectsNV(ProcAddress('wglDXLockObjectsNV'));
  wglDXObjectAccessNV := TwglDXObjectAccessNV(ProcAddress('wglDXObjectAccessNV'));
  wglDXOpenDeviceNV := TwglDXOpenDeviceNV(ProcAddress('wglDXOpenDeviceNV'));
  wglDXRegisterObjectNV := TwglDXRegisterObjectNV(ProcAddress('wglDXRegisterObjectNV'));
  wglDXSetResourceShareHandleNV := TwglDXSetResourceShareHandleNV(ProcAddress('wglDXSetResourceShareHandleNV'));
  wglDXUnlockObjectsNV := TwglDXUnlockObjectsNV(ProcAddress('wglDXUnlockObjectsNV'));
  wglDXUnregisterObjectNV := TwglDXUnregisterObjectNV(ProcAddress('wglDXUnregisterObjectNV'));
  wglEnableFrameLockI3D := TwglEnableFrameLockI3D(ProcAddress('wglEnableFrameLockI3D'));
  wglEnableGenlockI3D := TwglEnableGenlockI3D(ProcAddress('wglEnableGenlockI3D'));
  wglEndFrameTrackingI3D := TwglEndFrameTrackingI3D(ProcAddress('wglEndFrameTrackingI3D'));
  wglEnumerateVideoCaptureDevicesNV := TwglEnumerateVideoCaptureDevicesNV(ProcAddress('wglEnumerateVideoCaptureDevicesNV'));
  wglEnumerateVideoDevicesNV := TwglEnumerateVideoDevicesNV(ProcAddress('wglEnumerateVideoDevicesNV'));
  wglEnumGpuDevicesNV := TwglEnumGpuDevicesNV(ProcAddress('wglEnumGpuDevicesNV'));
  wglEnumGpusFromAffinityDCNV := TwglEnumGpusFromAffinityDCNV(ProcAddress('wglEnumGpusFromAffinityDCNV'));
  wglEnumGpusNV := TwglEnumGpusNV(ProcAddress('wglEnumGpusNV'));
  wglFreeMemoryNV := TwglFreeMemoryNV(ProcAddress('wglFreeMemoryNV'));
  wglGenlockSampleRateI3D := TwglGenlockSampleRateI3D(ProcAddress('wglGenlockSampleRateI3D'));
  wglGenlockSourceDelayI3D := TwglGenlockSourceDelayI3D(ProcAddress('wglGenlockSourceDelayI3D'));
  wglGenlockSourceEdgeI3D := TwglGenlockSourceEdgeI3D(ProcAddress('wglGenlockSourceEdgeI3D'));
  wglGenlockSourceI3D := TwglGenlockSourceI3D(ProcAddress('wglGenlockSourceI3D'));
  wglGetContextGPUIDAMD := TwglGetContextGPUIDAMD(ProcAddress('wglGetContextGPUIDAMD'));
  wglGetCurrentAssociatedContextAMD := TwglGetCurrentAssociatedContextAMD(ProcAddress('wglGetCurrentAssociatedContextAMD'));
  wglGetCurrentContext := TwglGetCurrentContext(ProcAddress('wglGetCurrentContext'));
  wglGetCurrentDC := TwglGetCurrentDC(ProcAddress('wglGetCurrentDC'));
  wglGetCurrentReadDCARB := TwglGetCurrentReadDCARB(ProcAddress('wglGetCurrentReadDCARB'));
  wglGetCurrentReadDCEXT := TwglGetCurrentReadDCEXT(ProcAddress('wglGetCurrentReadDCEXT'));
  wglGetDefaultProcAddress := TwglGetDefaultProcAddress(ProcAddress('wglGetDefaultProcAddress'));
  wglGetDigitalVideoParametersI3D := TwglGetDigitalVideoParametersI3D(ProcAddress('wglGetDigitalVideoParametersI3D'));
  GetEnhMetaFilePixelFormat := TGetEnhMetaFilePixelFormat(ProcAddress('GetEnhMetaFilePixelFormat'));
  wglGetExtensionsStringARB := TwglGetExtensionsStringARB(ProcAddress('wglGetExtensionsStringARB'));
  wglGetExtensionsStringEXT := TwglGetExtensionsStringEXT(ProcAddress('wglGetExtensionsStringEXT'));
  wglGetFrameUsageI3D := TwglGetFrameUsageI3D(ProcAddress('wglGetFrameUsageI3D'));
  wglGetGammaTableI3D := TwglGetGammaTableI3D(ProcAddress('wglGetGammaTableI3D'));
  wglGetGammaTableParametersI3D := TwglGetGammaTableParametersI3D(ProcAddress('wglGetGammaTableParametersI3D'));
  wglGetGenlockSampleRateI3D := TwglGetGenlockSampleRateI3D(ProcAddress('wglGetGenlockSampleRateI3D'));
  wglGetGenlockSourceDelayI3D := TwglGetGenlockSourceDelayI3D(ProcAddress('wglGetGenlockSourceDelayI3D'));
  wglGetGenlockSourceEdgeI3D := TwglGetGenlockSourceEdgeI3D(ProcAddress('wglGetGenlockSourceEdgeI3D'));
  wglGetGenlockSourceI3D := TwglGetGenlockSourceI3D(ProcAddress('wglGetGenlockSourceI3D'));
  wglGetGPUIDsAMD := TwglGetGPUIDsAMD(ProcAddress('wglGetGPUIDsAMD'));
  wglGetGPUInfoAMD := TwglGetGPUInfoAMD(ProcAddress('wglGetGPUInfoAMD'));
  wglGetLayerPaletteEntries := TwglGetLayerPaletteEntries(ProcAddress('wglGetLayerPaletteEntries'));
  wglGetMscRateOML := TwglGetMscRateOML(ProcAddress('wglGetMscRateOML'));
  wglGetPbufferDCARB := TwglGetPbufferDCARB(ProcAddress('wglGetPbufferDCARB'));
  wglGetPbufferDCEXT := TwglGetPbufferDCEXT(ProcAddress('wglGetPbufferDCEXT'));
  wglGetPixelFormatAttribfvARB := TwglGetPixelFormatAttribfvARB(ProcAddress('wglGetPixelFormatAttribfvARB'));
  wglGetPixelFormatAttribfvEXT := TwglGetPixelFormatAttribfvEXT(ProcAddress('wglGetPixelFormatAttribfvEXT'));
  wglGetPixelFormatAttribivARB := TwglGetPixelFormatAttribivARB(ProcAddress('wglGetPixelFormatAttribivARB'));
  wglGetPixelFormatAttribivEXT := TwglGetPixelFormatAttribivEXT(ProcAddress('wglGetPixelFormatAttribivEXT'));
  wglGetProcAddress := TwglGetProcAddress(ProcAddress('wglGetProcAddress'));
  wglGetSwapIntervalEXT := TwglGetSwapIntervalEXT(ProcAddress('wglGetSwapIntervalEXT'));
  wglGetSyncValuesOML := TwglGetSyncValuesOML(ProcAddress('wglGetSyncValuesOML'));
  wglGetVideoDeviceNV := TwglGetVideoDeviceNV(ProcAddress('wglGetVideoDeviceNV'));
  wglGetVideoInfoNV := TwglGetVideoInfoNV(ProcAddress('wglGetVideoInfoNV'));
  wglIsEnabledFrameLockI3D := TwglIsEnabledFrameLockI3D(ProcAddress('wglIsEnabledFrameLockI3D'));
  wglIsEnabledGenlockI3D := TwglIsEnabledGenlockI3D(ProcAddress('wglIsEnabledGenlockI3D'));
  wglJoinSwapGroupNV := TwglJoinSwapGroupNV(ProcAddress('wglJoinSwapGroupNV'));
  wglLoadDisplayColorTableEXT := TwglLoadDisplayColorTableEXT(ProcAddress('wglLoadDisplayColorTableEXT'));
  wglLockVideoCaptureDeviceNV := TwglLockVideoCaptureDeviceNV(ProcAddress('wglLockVideoCaptureDeviceNV'));
  wglMakeAssociatedContextCurrentAMD := TwglMakeAssociatedContextCurrentAMD(ProcAddress('wglMakeAssociatedContextCurrentAMD'));
  wglMakeContextCurrentARB := TwglMakeContextCurrentARB(ProcAddress('wglMakeContextCurrentARB'));
  wglMakeContextCurrentEXT := TwglMakeContextCurrentEXT(ProcAddress('wglMakeContextCurrentEXT'));
  wglMakeCurrent := TwglMakeCurrent(ProcAddress('wglMakeCurrent'));
  wglQueryCurrentContextNV := TwglQueryCurrentContextNV(ProcAddress('wglQueryCurrentContextNV'));
  wglQueryFrameCountNV := TwglQueryFrameCountNV(ProcAddress('wglQueryFrameCountNV'));
  wglQueryFrameLockMasterI3D := TwglQueryFrameLockMasterI3D(ProcAddress('wglQueryFrameLockMasterI3D'));
  wglQueryFrameTrackingI3D := TwglQueryFrameTrackingI3D(ProcAddress('wglQueryFrameTrackingI3D'));
  wglQueryGenlockMaxSourceDelayI3D := TwglQueryGenlockMaxSourceDelayI3D(ProcAddress('wglQueryGenlockMaxSourceDelayI3D'));
  wglQueryMaxSwapGroupsNV := TwglQueryMaxSwapGroupsNV(ProcAddress('wglQueryMaxSwapGroupsNV'));
  wglQueryPbufferARB := TwglQueryPbufferARB(ProcAddress('wglQueryPbufferARB'));
  wglQueryPbufferEXT := TwglQueryPbufferEXT(ProcAddress('wglQueryPbufferEXT'));
  wglQuerySwapGroupNV := TwglQuerySwapGroupNV(ProcAddress('wglQuerySwapGroupNV'));
  wglQueryVideoCaptureDeviceNV := TwglQueryVideoCaptureDeviceNV(ProcAddress('wglQueryVideoCaptureDeviceNV'));
  wglRealizeLayerPalette := TwglRealizeLayerPalette(ProcAddress('wglRealizeLayerPalette'));
  wglReleaseImageBufferEventsI3D := TwglReleaseImageBufferEventsI3D(ProcAddress('wglReleaseImageBufferEventsI3D'));
  wglReleasePbufferDCARB := TwglReleasePbufferDCARB(ProcAddress('wglReleasePbufferDCARB'));
  wglReleasePbufferDCEXT := TwglReleasePbufferDCEXT(ProcAddress('wglReleasePbufferDCEXT'));
  wglReleaseTexImageARB := TwglReleaseTexImageARB(ProcAddress('wglReleaseTexImageARB'));
  wglReleaseVideoCaptureDeviceNV := TwglReleaseVideoCaptureDeviceNV(ProcAddress('wglReleaseVideoCaptureDeviceNV'));
  wglReleaseVideoDeviceNV := TwglReleaseVideoDeviceNV(ProcAddress('wglReleaseVideoDeviceNV'));
  wglReleaseVideoImageNV := TwglReleaseVideoImageNV(ProcAddress('wglReleaseVideoImageNV'));
  wglResetFrameCountNV := TwglResetFrameCountNV(ProcAddress('wglResetFrameCountNV'));
  wglRestoreBufferRegionARB := TwglRestoreBufferRegionARB(ProcAddress('wglRestoreBufferRegionARB'));
  wglSaveBufferRegionARB := TwglSaveBufferRegionARB(ProcAddress('wglSaveBufferRegionARB'));
  wglSendPbufferToVideoNV := TwglSendPbufferToVideoNV(ProcAddress('wglSendPbufferToVideoNV'));
  wglSetDigitalVideoParametersI3D := TwglSetDigitalVideoParametersI3D(ProcAddress('wglSetDigitalVideoParametersI3D'));
  wglSetGammaTableI3D := TwglSetGammaTableI3D(ProcAddress('wglSetGammaTableI3D'));
  wglSetGammaTableParametersI3D := TwglSetGammaTableParametersI3D(ProcAddress('wglSetGammaTableParametersI3D'));
  wglSetLayerPaletteEntries := TwglSetLayerPaletteEntries(ProcAddress('wglSetLayerPaletteEntries'));
  wglSetPbufferAttribARB := TwglSetPbufferAttribARB(ProcAddress('wglSetPbufferAttribARB'));
  wglSetStereoEmitterState3DL := TwglSetStereoEmitterState3DL(ProcAddress('wglSetStereoEmitterState3DL'));
  wglShareLists := TwglShareLists(ProcAddress('wglShareLists'));
  wglSwapBuffersMscOML := TwglSwapBuffersMscOML(ProcAddress('wglSwapBuffersMscOML'));
  wglSwapLayerBuffers := TwglSwapLayerBuffers(ProcAddress('wglSwapLayerBuffers'));
  wglSwapIntervalEXT := TwglSwapIntervalEXT(ProcAddress('wglSwapIntervalEXT'));
  wglSwapLayerBuffersMscOML := TwglSwapLayerBuffersMscOML(ProcAddress('wglSwapLayerBuffersMscOML'));
  wglUseFontBitmaps := TwglUseFontBitmaps(ProcAddress('wglUseFontBitmaps'));
  wglUseFontBitmapsA := TwglUseFontBitmapsA(ProcAddress('wglUseFontBitmapsA'));
  wglUseFontBitmapsW := TwglUseFontBitmapsW(ProcAddress('wglUseFontBitmapsW'));
  wglUseFontOutlines := TwglUseFontOutlines(ProcAddress('wglUseFontOutlines'));
  wglUseFontOutlinesA := TwglUseFontOutlinesA(ProcAddress('wglUseFontOutlinesA'));
  wglUseFontOutlinesW := TwglUseFontOutlinesW(ProcAddress('wglUseFontOutlinesW'));
  wglWaitForMscOML := TwglWaitForMscOML(ProcAddress('wglWaitForMscOML'));
  wglWaitForSbcOML := TwglWaitForSbcOML(ProcAddress('wglWaitForSbcOML'));
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX := TglXAssociateDMPbufferSGIX(ProcAddress('glXAssociateDMPbufferSGIX'));
  glXBindChannelToWindowSGIX := TglXBindChannelToWindowSGIX(ProcAddress('glXBindChannelToWindowSGIX'));
  glXBindHyperpipeSGIX := TglXBindHyperpipeSGIX(ProcAddress('glXBindHyperpipeSGIX'));
  glXBindSwapBarrierNV := TglXBindSwapBarrierNV(ProcAddress('glXBindSwapBarrierNV'));
  glXBindSwapBarrierSGIX := TglXBindSwapBarrierSGIX(ProcAddress('glXBindSwapBarrierSGIX'));
  glXBindTexImageEXT := TglXBindTexImageEXT(ProcAddress('glXBindTexImageEXT'));
  glXBindVideoCaptureDeviceNV := TglXBindVideoCaptureDeviceNV(ProcAddress('glXBindVideoCaptureDeviceNV'));
  glXBindVideoDeviceNV := TglXBindVideoDeviceNV(ProcAddress('glXBindVideoDeviceNV'));
  glXBindVideoImageNV := TglXBindVideoImageNV(ProcAddress('glXBindVideoImageNV'));
  glXBlitContextFramebufferAMD := TglXBlitContextFramebufferAMD(ProcAddress('glXBlitContextFramebufferAMD'));
  glXChannelRectSGIX := TglXChannelRectSGIX(ProcAddress('glXChannelRectSGIX'));
  glXChannelRectSyncSGIX := TglXChannelRectSyncSGIX(ProcAddress('glXChannelRectSyncSGIX'));
  glXChooseFBConfig := TglXChooseFBConfig(ProcAddress('glXChooseFBConfig'));
  glXChooseFBConfigSGIX := TglXChooseFBConfigSGIX(ProcAddress('glXChooseFBConfigSGIX'));
  glXChooseVisual := TglXChooseVisual(ProcAddress('glXChooseVisual'));
  glXCopyBufferSubDataNV := TglXCopyBufferSubDataNV(ProcAddress('glXCopyBufferSubDataNV'));
  glXNamedCopyBufferSubDataNV := TglXNamedCopyBufferSubDataNV(ProcAddress('glXNamedCopyBufferSubDataNV'));
  glXCopyContext := TglXCopyContext(ProcAddress('glXCopyContext'));
  glXCopyImageSubDataNV := TglXCopyImageSubDataNV(ProcAddress('glXCopyImageSubDataNV'));
  glXCopySubBufferMESA := TglXCopySubBufferMESA(ProcAddress('glXCopySubBufferMESA'));
  glXCreateAssociatedContextAMD := TglXCreateAssociatedContextAMD(ProcAddress('glXCreateAssociatedContextAMD'));
  glXCreateAssociatedContextAttribsAMD := TglXCreateAssociatedContextAttribsAMD(ProcAddress('glXCreateAssociatedContextAttribsAMD'));
  glXCreateContextAttribsARB := TglXCreateContextAttribsARB(ProcAddress('glXCreateContextAttribsARB'));
  glXCreateContext := TglXCreateContext(ProcAddress('glXCreateContext'));
  glXCreateContextWithConfigSGIX := TglXCreateContextWithConfigSGIX(ProcAddress('glXCreateContextWithConfigSGIX'));
  glXCreateGLXPbufferSGIX := TglXCreateGLXPbufferSGIX(ProcAddress('glXCreateGLXPbufferSGIX'));
  glXCreateGLXPixmap := TglXCreateGLXPixmap(ProcAddress('glXCreateGLXPixmap'));
  glXCreateGLXPixmapMESA := TglXCreateGLXPixmapMESA(ProcAddress('glXCreateGLXPixmapMESA'));
  glXCreateGLXPixmapWithConfigSGIX := TglXCreateGLXPixmapWithConfigSGIX(ProcAddress('glXCreateGLXPixmapWithConfigSGIX'));
  glXCreateGLXVideoSourceSGIX := TglXCreateGLXVideoSourceSGIX(ProcAddress('glXCreateGLXVideoSourceSGIX'));
  glXCreateNewContext := TglXCreateNewContext(ProcAddress('glXCreateNewContext'));
  glXCreatePbuffer := TglXCreatePbuffer(ProcAddress('glXCreatePbuffer'));
  glXCreatePixmap := TglXCreatePixmap(ProcAddress('glXCreatePixmap'));
  glXCreateWindow := TglXCreateWindow(ProcAddress('glXCreateWindow'));
  glXCushionSGI := TglXCushionSGI(ProcAddress('glXCushionSGI'));
  glXDelayBeforeSwapNV := TglXDelayBeforeSwapNV(ProcAddress('glXDelayBeforeSwapNV'));
  glXDeleteAssociatedContextAMD := TglXDeleteAssociatedContextAMD(ProcAddress('glXDeleteAssociatedContextAMD'));
  glXDestroyContext := TglXDestroyContext(ProcAddress('glXDestroyContext'));
  glXDestroyGLXPbufferSGIX := TglXDestroyGLXPbufferSGIX(ProcAddress('glXDestroyGLXPbufferSGIX'));
  glXDestroyGLXPixmap := TglXDestroyGLXPixmap(ProcAddress('glXDestroyGLXPixmap'));
  glXDestroyGLXVideoSourceSGIX := TglXDestroyGLXVideoSourceSGIX(ProcAddress('glXDestroyGLXVideoSourceSGIX'));
  glXDestroyHyperpipeConfigSGIX := TglXDestroyHyperpipeConfigSGIX(ProcAddress('glXDestroyHyperpipeConfigSGIX'));
  glXDestroyPbuffer := TglXDestroyPbuffer(ProcAddress('glXDestroyPbuffer'));
  glXDestroyPixmap := TglXDestroyPixmap(ProcAddress('glXDestroyPixmap'));
  glXDestroyWindow := TglXDestroyWindow(ProcAddress('glXDestroyWindow'));
  glXEnumerateVideoCaptureDevicesNV := TglXEnumerateVideoCaptureDevicesNV(ProcAddress('glXEnumerateVideoCaptureDevicesNV'));
  glXEnumerateVideoDevicesNV := TglXEnumerateVideoDevicesNV(ProcAddress('glXEnumerateVideoDevicesNV'));
  glXFreeContextEXT := TglXFreeContextEXT(ProcAddress('glXFreeContextEXT'));
  glXGetAGPOffsetMESA := TglXGetAGPOffsetMESA(ProcAddress('glXGetAGPOffsetMESA'));
  glXGetClientString := TglXGetClientString(ProcAddress('glXGetClientString'));
  glXGetConfig := TglXGetConfig(ProcAddress('glXGetConfig'));
  glXGetContextGPUIDAMD := TglXGetContextGPUIDAMD(ProcAddress('glXGetContextGPUIDAMD'));
  glXGetContextIDEXT := TglXGetContextIDEXT(ProcAddress('glXGetContextIDEXT'));
  glXGetCurrentAssociatedContextAMD := TglXGetCurrentAssociatedContextAMD(ProcAddress('glXGetCurrentAssociatedContextAMD'));
  glXGetCurrentContext := TglXGetCurrentContext(ProcAddress('glXGetCurrentContext'));
  glXGetCurrentDisplayEXT := TglXGetCurrentDisplayEXT(ProcAddress('glXGetCurrentDisplayEXT'));
  glXGetCurrentDisplay := TglXGetCurrentDisplay(ProcAddress('glXGetCurrentDisplay'));
  glXGetCurrentDrawable := TglXGetCurrentDrawable(ProcAddress('glXGetCurrentDrawable'));
  glXGetCurrentReadDrawableSGI := TglXGetCurrentReadDrawableSGI(ProcAddress('glXGetCurrentReadDrawableSGI'));
  glXGetCurrentReadDrawable := TglXGetCurrentReadDrawable(ProcAddress('glXGetCurrentReadDrawable'));
  glXGetFBConfigAttrib := TglXGetFBConfigAttrib(ProcAddress('glXGetFBConfigAttrib'));
  glXGetFBConfigAttribSGIX := TglXGetFBConfigAttribSGIX(ProcAddress('glXGetFBConfigAttribSGIX'));
  glXGetFBConfigFromVisualSGIX := TglXGetFBConfigFromVisualSGIX(ProcAddress('glXGetFBConfigFromVisualSGIX'));
  glXGetFBConfigs := TglXGetFBConfigs(ProcAddress('glXGetFBConfigs'));
  glXGetGPUIDsAMD := TglXGetGPUIDsAMD(ProcAddress('glXGetGPUIDsAMD'));
  glXGetGPUInfoAMD := TglXGetGPUInfoAMD(ProcAddress('glXGetGPUInfoAMD'));
  glXGetMscRateOML := TglXGetMscRateOML(ProcAddress('glXGetMscRateOML'));
  glXGetProcAddressARB := TglXGetProcAddressARB(ProcAddress('glXGetProcAddressARB'));
  glXGetProcAddress := TglXGetProcAddress(ProcAddress('glXGetProcAddress'));
  glXGetSelectedEvent := TglXGetSelectedEvent(ProcAddress('glXGetSelectedEvent'));
  glXGetSelectedEventSGIX := TglXGetSelectedEventSGIX(ProcAddress('glXGetSelectedEventSGIX'));
  glXGetSwapIntervalMESA := TglXGetSwapIntervalMESA(ProcAddress('glXGetSwapIntervalMESA'));
  glXGetSyncValuesOML := TglXGetSyncValuesOML(ProcAddress('glXGetSyncValuesOML'));
  glXGetTransparentIndexSUN := TglXGetTransparentIndexSUN(ProcAddress('glXGetTransparentIndexSUN'));
  glXGetVideoDeviceNV := TglXGetVideoDeviceNV(ProcAddress('glXGetVideoDeviceNV'));
  glXGetVideoInfoNV := TglXGetVideoInfoNV(ProcAddress('glXGetVideoInfoNV'));
  glXGetVideoSyncSGI := TglXGetVideoSyncSGI(ProcAddress('glXGetVideoSyncSGI'));
  glXGetVisualFromFBConfig := TglXGetVisualFromFBConfig(ProcAddress('glXGetVisualFromFBConfig'));
  glXGetVisualFromFBConfigSGIX := TglXGetVisualFromFBConfigSGIX(ProcAddress('glXGetVisualFromFBConfigSGIX'));
  glXHyperpipeAttribSGIX := TglXHyperpipeAttribSGIX(ProcAddress('glXHyperpipeAttribSGIX'));
  glXHyperpipeConfigSGIX := TglXHyperpipeConfigSGIX(ProcAddress('glXHyperpipeConfigSGIX'));
  glXImportContextEXT := TglXImportContextEXT(ProcAddress('glXImportContextEXT'));
  glXIsDirect := TglXIsDirect(ProcAddress('glXIsDirect'));
  glXJoinSwapGroupNV := TglXJoinSwapGroupNV(ProcAddress('glXJoinSwapGroupNV'));
  glXJoinSwapGroupSGIX := TglXJoinSwapGroupSGIX(ProcAddress('glXJoinSwapGroupSGIX'));
  glXLockVideoCaptureDeviceNV := TglXLockVideoCaptureDeviceNV(ProcAddress('glXLockVideoCaptureDeviceNV'));
  glXMakeAssociatedContextCurrentAMD := TglXMakeAssociatedContextCurrentAMD(ProcAddress('glXMakeAssociatedContextCurrentAMD'));
  glXMakeContextCurrent := TglXMakeContextCurrent(ProcAddress('glXMakeContextCurrent'));
  glXMakeCurrent := TglXMakeCurrent(ProcAddress('glXMakeCurrent'));
  glXMakeCurrentReadSGI := TglXMakeCurrentReadSGI(ProcAddress('glXMakeCurrentReadSGI'));
  glXQueryChannelDeltasSGIX := TglXQueryChannelDeltasSGIX(ProcAddress('glXQueryChannelDeltasSGIX'));
  glXQueryChannelRectSGIX := TglXQueryChannelRectSGIX(ProcAddress('glXQueryChannelRectSGIX'));
  glXQueryContext := TglXQueryContext(ProcAddress('glXQueryContext'));
  glXQueryContextInfoEXT := TglXQueryContextInfoEXT(ProcAddress('glXQueryContextInfoEXT'));
  glXQueryCurrentRendererIntegerMESA := TglXQueryCurrentRendererIntegerMESA(ProcAddress('glXQueryCurrentRendererIntegerMESA'));
  glXQueryCurrentRendererStringMESA := TglXQueryCurrentRendererStringMESA(ProcAddress('glXQueryCurrentRendererStringMESA'));
  glXQueryDrawable := TglXQueryDrawable(ProcAddress('glXQueryDrawable'));
  glXQueryExtension := TglXQueryExtension(ProcAddress('glXQueryExtension'));
  glXQueryExtensionsString := TglXQueryExtensionsString(ProcAddress('glXQueryExtensionsString'));
  glXQueryFrameCountNV := TglXQueryFrameCountNV(ProcAddress('glXQueryFrameCountNV'));
  glXQueryGLXPbufferSGIX := TglXQueryGLXPbufferSGIX(ProcAddress('glXQueryGLXPbufferSGIX'));
  glXQueryHyperpipeAttribSGIX := TglXQueryHyperpipeAttribSGIX(ProcAddress('glXQueryHyperpipeAttribSGIX'));
  glXQueryHyperpipeBestAttribSGIX := TglXQueryHyperpipeBestAttribSGIX(ProcAddress('glXQueryHyperpipeBestAttribSGIX'));
  glXQueryHyperpipeConfigSGIX := TglXQueryHyperpipeConfigSGIX(ProcAddress('glXQueryHyperpipeConfigSGIX'));
  glXQueryHyperpipeNetworkSGIX := TglXQueryHyperpipeNetworkSGIX(ProcAddress('glXQueryHyperpipeNetworkSGIX'));
  glXQueryMaxSwapBarriersSGIX := TglXQueryMaxSwapBarriersSGIX(ProcAddress('glXQueryMaxSwapBarriersSGIX'));
  glXQueryMaxSwapGroupsNV := TglXQueryMaxSwapGroupsNV(ProcAddress('glXQueryMaxSwapGroupsNV'));
  glXQueryRendererIntegerMESA := TglXQueryRendererIntegerMESA(ProcAddress('glXQueryRendererIntegerMESA'));
  glXQueryRendererStringMESA := TglXQueryRendererStringMESA(ProcAddress('glXQueryRendererStringMESA'));
  glXQueryServerString := TglXQueryServerString(ProcAddress('glXQueryServerString'));
  glXQuerySwapGroupNV := TglXQuerySwapGroupNV(ProcAddress('glXQuerySwapGroupNV'));
  glXQueryVersion := TglXQueryVersion(ProcAddress('glXQueryVersion'));
  glXQueryVideoCaptureDeviceNV := TglXQueryVideoCaptureDeviceNV(ProcAddress('glXQueryVideoCaptureDeviceNV'));
  glXReleaseBuffersMESA := TglXReleaseBuffersMESA(ProcAddress('glXReleaseBuffersMESA'));
  glXReleaseTexImageEXT := TglXReleaseTexImageEXT(ProcAddress('glXReleaseTexImageEXT'));
  glXReleaseVideoCaptureDeviceNV := TglXReleaseVideoCaptureDeviceNV(ProcAddress('glXReleaseVideoCaptureDeviceNV'));
  glXReleaseVideoDeviceNV := TglXReleaseVideoDeviceNV(ProcAddress('glXReleaseVideoDeviceNV'));
  glXReleaseVideoImageNV := TglXReleaseVideoImageNV(ProcAddress('glXReleaseVideoImageNV'));
  glXResetFrameCountNV := TglXResetFrameCountNV(ProcAddress('glXResetFrameCountNV'));
  glXSelectEvent := TglXSelectEvent(ProcAddress('glXSelectEvent'));
  glXSelectEventSGIX := TglXSelectEventSGIX(ProcAddress('glXSelectEventSGIX'));
  glXSendPbufferToVideoNV := TglXSendPbufferToVideoNV(ProcAddress('glXSendPbufferToVideoNV'));
  glXSet3DfxModeMESA := TglXSet3DfxModeMESA(ProcAddress('glXSet3DfxModeMESA'));
  glXSwapBuffers := TglXSwapBuffers(ProcAddress('glXSwapBuffers'));
  glXSwapBuffersMscOML := TglXSwapBuffersMscOML(ProcAddress('glXSwapBuffersMscOML'));
  glXSwapIntervalMESA := TglXSwapIntervalMESA(ProcAddress('glXSwapIntervalMESA'));
  glXSwapIntervalEXT := TglXSwapIntervalEXT(ProcAddress('glXSwapIntervalEXT'));
  glXSwapIntervalSGI := TglXSwapIntervalSGI(ProcAddress('glXSwapIntervalSGI'));
  glXUseXFont := TglXUseXFont(ProcAddress('glXUseXFont'));
  glXWaitForMscOML := TglXWaitForMscOML(ProcAddress('glXWaitForMscOML'));
  glXWaitForSbcOML := TglXWaitForSbcOML(ProcAddress('glXWaitForSbcOML'));
  glXWaitGL := TglXWaitGL(ProcAddress('glXWaitGL'));
  glXWaitVideoSyncSGI := TglXWaitVideoSyncSGI(ProcAddress('glXWaitVideoSyncSGI'));
  glXWaitX := TglXWaitX(ProcAddress('glXWaitX'));
{$endif}
  glAccum := TglAccum(ProcAddress('glAccum'));
  glAccumxOES := TglAccumxOES(ProcAddress('glAccumxOES'));
  glActiveProgramEXT := TglActiveProgramEXT(ProcAddress('glActiveProgramEXT'));
  glActiveShaderProgram := TglActiveShaderProgram(ProcAddress('glActiveShaderProgram'));
  glActiveShaderProgramEXT := TglActiveShaderProgramEXT(ProcAddress('glActiveShaderProgramEXT'));
  glActiveStencilFaceEXT := TglActiveStencilFaceEXT(ProcAddress('glActiveStencilFaceEXT'));
  glActiveTexture := TglActiveTexture(ProcAddress('glActiveTexture'));
  glActiveTextureARB := TglActiveTextureARB(ProcAddress('glActiveTextureARB'));
  glActiveVaryingNV := TglActiveVaryingNV(ProcAddress('glActiveVaryingNV'));
  glAlphaFragmentOp1ATI := TglAlphaFragmentOp1ATI(ProcAddress('glAlphaFragmentOp1ATI'));
  glAlphaFragmentOp2ATI := TglAlphaFragmentOp2ATI(ProcAddress('glAlphaFragmentOp2ATI'));
  glAlphaFragmentOp3ATI := TglAlphaFragmentOp3ATI(ProcAddress('glAlphaFragmentOp3ATI'));
  glAlphaFunc := TglAlphaFunc(ProcAddress('glAlphaFunc'));
  glAlphaFuncQCOM := TglAlphaFuncQCOM(ProcAddress('glAlphaFuncQCOM'));
  glAlphaFuncx := TglAlphaFuncx(ProcAddress('glAlphaFuncx'));
  glAlphaFuncxOES := TglAlphaFuncxOES(ProcAddress('glAlphaFuncxOES'));
  glAlphaToCoverageDitherControlNV := TglAlphaToCoverageDitherControlNV(ProcAddress('glAlphaToCoverageDitherControlNV'));
  glApplyFramebufferAttachmentCMAAINTEL := TglApplyFramebufferAttachmentCMAAINTEL(ProcAddress('glApplyFramebufferAttachmentCMAAINTEL'));
  glApplyTextureEXT := TglApplyTextureEXT(ProcAddress('glApplyTextureEXT'));
  glAcquireKeyedMutexWin32EXT := TglAcquireKeyedMutexWin32EXT(ProcAddress('glAcquireKeyedMutexWin32EXT'));
  glAreProgramsResidentNV := TglAreProgramsResidentNV(ProcAddress('glAreProgramsResidentNV'));
  glAreTexturesResident := TglAreTexturesResident(ProcAddress('glAreTexturesResident'));
  glAreTexturesResidentEXT := TglAreTexturesResidentEXT(ProcAddress('glAreTexturesResidentEXT'));
  glArrayElement := TglArrayElement(ProcAddress('glArrayElement'));
  glArrayElementEXT := TglArrayElementEXT(ProcAddress('glArrayElementEXT'));
  glArrayObjectATI := TglArrayObjectATI(ProcAddress('glArrayObjectATI'));
  glAsyncCopyBufferSubDataNVX := TglAsyncCopyBufferSubDataNVX(ProcAddress('glAsyncCopyBufferSubDataNVX'));
  glAsyncCopyImageSubDataNVX := TglAsyncCopyImageSubDataNVX(ProcAddress('glAsyncCopyImageSubDataNVX'));
  glAsyncMarkerSGIX := TglAsyncMarkerSGIX(ProcAddress('glAsyncMarkerSGIX'));
  glAttachObjectARB := TglAttachObjectARB(ProcAddress('glAttachObjectARB'));
  glAttachShader := TglAttachShader(ProcAddress('glAttachShader'));
  glBegin := TglBegin(ProcAddress('glBegin'));
  glBeginConditionalRender := TglBeginConditionalRender(ProcAddress('glBeginConditionalRender'));
  glBeginConditionalRenderNV := TglBeginConditionalRenderNV(ProcAddress('glBeginConditionalRenderNV'));
  glBeginConditionalRenderNVX := TglBeginConditionalRenderNVX(ProcAddress('glBeginConditionalRenderNVX'));
  glBeginFragmentShaderATI := TglBeginFragmentShaderATI(ProcAddress('glBeginFragmentShaderATI'));
  glBeginOcclusionQueryNV := TglBeginOcclusionQueryNV(ProcAddress('glBeginOcclusionQueryNV'));
  glBeginPerfMonitorAMD := TglBeginPerfMonitorAMD(ProcAddress('glBeginPerfMonitorAMD'));
  glBeginPerfQueryINTEL := TglBeginPerfQueryINTEL(ProcAddress('glBeginPerfQueryINTEL'));
  glBeginQuery := TglBeginQuery(ProcAddress('glBeginQuery'));
  glBeginQueryARB := TglBeginQueryARB(ProcAddress('glBeginQueryARB'));
  glBeginQueryEXT := TglBeginQueryEXT(ProcAddress('glBeginQueryEXT'));
  glBeginQueryIndexed := TglBeginQueryIndexed(ProcAddress('glBeginQueryIndexed'));
  glBeginTransformFeedback := TglBeginTransformFeedback(ProcAddress('glBeginTransformFeedback'));
  glBeginTransformFeedbackEXT := TglBeginTransformFeedbackEXT(ProcAddress('glBeginTransformFeedbackEXT'));
  glBeginTransformFeedbackNV := TglBeginTransformFeedbackNV(ProcAddress('glBeginTransformFeedbackNV'));
  glBeginVertexShaderEXT := TglBeginVertexShaderEXT(ProcAddress('glBeginVertexShaderEXT'));
  glBeginVideoCaptureNV := TglBeginVideoCaptureNV(ProcAddress('glBeginVideoCaptureNV'));
  glBindAttribLocation := TglBindAttribLocation(ProcAddress('glBindAttribLocation'));
  glBindAttribLocationARB := TglBindAttribLocationARB(ProcAddress('glBindAttribLocationARB'));
  glBindBuffer := TglBindBuffer(ProcAddress('glBindBuffer'));
  glBindBufferARB := TglBindBufferARB(ProcAddress('glBindBufferARB'));
  glBindBufferBase := TglBindBufferBase(ProcAddress('glBindBufferBase'));
  glBindBufferBaseEXT := TglBindBufferBaseEXT(ProcAddress('glBindBufferBaseEXT'));
  glBindBufferBaseNV := TglBindBufferBaseNV(ProcAddress('glBindBufferBaseNV'));
  glBindBufferOffsetEXT := TglBindBufferOffsetEXT(ProcAddress('glBindBufferOffsetEXT'));
  glBindBufferOffsetNV := TglBindBufferOffsetNV(ProcAddress('glBindBufferOffsetNV'));
  glBindBufferRange := TglBindBufferRange(ProcAddress('glBindBufferRange'));
  glBindBufferRangeEXT := TglBindBufferRangeEXT(ProcAddress('glBindBufferRangeEXT'));
  glBindBufferRangeNV := TglBindBufferRangeNV(ProcAddress('glBindBufferRangeNV'));
  glBindBuffersBase := TglBindBuffersBase(ProcAddress('glBindBuffersBase'));
  glBindBuffersRange := TglBindBuffersRange(ProcAddress('glBindBuffersRange'));
  glBindFragDataLocation := TglBindFragDataLocation(ProcAddress('glBindFragDataLocation'));
  glBindFragDataLocationEXT := TglBindFragDataLocationEXT(ProcAddress('glBindFragDataLocationEXT'));
  glBindFragDataLocationIndexed := TglBindFragDataLocationIndexed(ProcAddress('glBindFragDataLocationIndexed'));
  glBindFragDataLocationIndexedEXT := TglBindFragDataLocationIndexedEXT(ProcAddress('glBindFragDataLocationIndexedEXT'));
  glBindFragmentShaderATI := TglBindFragmentShaderATI(ProcAddress('glBindFragmentShaderATI'));
  glBindFramebuffer := TglBindFramebuffer(ProcAddress('glBindFramebuffer'));
  glBindFramebufferEXT := TglBindFramebufferEXT(ProcAddress('glBindFramebufferEXT'));
  glBindFramebufferOES := TglBindFramebufferOES(ProcAddress('glBindFramebufferOES'));
  glBindImageTexture := TglBindImageTexture(ProcAddress('glBindImageTexture'));
  glBindImageTextureEXT := TglBindImageTextureEXT(ProcAddress('glBindImageTextureEXT'));
  glBindImageTextures := TglBindImageTextures(ProcAddress('glBindImageTextures'));
  glBindLightParameterEXT := TglBindLightParameterEXT(ProcAddress('glBindLightParameterEXT'));
  glBindMaterialParameterEXT := TglBindMaterialParameterEXT(ProcAddress('glBindMaterialParameterEXT'));
  glBindMultiTextureEXT := TglBindMultiTextureEXT(ProcAddress('glBindMultiTextureEXT'));
  glBindParameterEXT := TglBindParameterEXT(ProcAddress('glBindParameterEXT'));
  glBindProgramARB := TglBindProgramARB(ProcAddress('glBindProgramARB'));
  glBindProgramNV := TglBindProgramNV(ProcAddress('glBindProgramNV'));
  glBindProgramPipeline := TglBindProgramPipeline(ProcAddress('glBindProgramPipeline'));
  glBindProgramPipelineEXT := TglBindProgramPipelineEXT(ProcAddress('glBindProgramPipelineEXT'));
  glBindRenderbuffer := TglBindRenderbuffer(ProcAddress('glBindRenderbuffer'));
  glBindRenderbufferEXT := TglBindRenderbufferEXT(ProcAddress('glBindRenderbufferEXT'));
  glBindRenderbufferOES := TglBindRenderbufferOES(ProcAddress('glBindRenderbufferOES'));
  glBindSampler := TglBindSampler(ProcAddress('glBindSampler'));
  glBindSamplers := TglBindSamplers(ProcAddress('glBindSamplers'));
  glBindShadingRateImageNV := TglBindShadingRateImageNV(ProcAddress('glBindShadingRateImageNV'));
  glBindTexGenParameterEXT := TglBindTexGenParameterEXT(ProcAddress('glBindTexGenParameterEXT'));
  glBindTexture := TglBindTexture(ProcAddress('glBindTexture'));
  glBindTextureEXT := TglBindTextureEXT(ProcAddress('glBindTextureEXT'));
  glBindTextureUnit := TglBindTextureUnit(ProcAddress('glBindTextureUnit'));
  glBindTextureUnitParameterEXT := TglBindTextureUnitParameterEXT(ProcAddress('glBindTextureUnitParameterEXT'));
  glBindTextures := TglBindTextures(ProcAddress('glBindTextures'));
  glBindTransformFeedback := TglBindTransformFeedback(ProcAddress('glBindTransformFeedback'));
  glBindTransformFeedbackNV := TglBindTransformFeedbackNV(ProcAddress('glBindTransformFeedbackNV'));
  glBindVertexArray := TglBindVertexArray(ProcAddress('glBindVertexArray'));
  glBindVertexArrayAPPLE := TglBindVertexArrayAPPLE(ProcAddress('glBindVertexArrayAPPLE'));
  glBindVertexArrayOES := TglBindVertexArrayOES(ProcAddress('glBindVertexArrayOES'));
  glBindVertexBuffer := TglBindVertexBuffer(ProcAddress('glBindVertexBuffer'));
  glBindVertexBuffers := TglBindVertexBuffers(ProcAddress('glBindVertexBuffers'));
  glBindVertexShaderEXT := TglBindVertexShaderEXT(ProcAddress('glBindVertexShaderEXT'));
  glBindVideoCaptureStreamBufferNV := TglBindVideoCaptureStreamBufferNV(ProcAddress('glBindVideoCaptureStreamBufferNV'));
  glBindVideoCaptureStreamTextureNV := TglBindVideoCaptureStreamTextureNV(ProcAddress('glBindVideoCaptureStreamTextureNV'));
  glBinormal3bEXT := TglBinormal3bEXT(ProcAddress('glBinormal3bEXT'));
  glBinormal3bvEXT := TglBinormal3bvEXT(ProcAddress('glBinormal3bvEXT'));
  glBinormal3dEXT := TglBinormal3dEXT(ProcAddress('glBinormal3dEXT'));
  glBinormal3dvEXT := TglBinormal3dvEXT(ProcAddress('glBinormal3dvEXT'));
  glBinormal3fEXT := TglBinormal3fEXT(ProcAddress('glBinormal3fEXT'));
  glBinormal3fvEXT := TglBinormal3fvEXT(ProcAddress('glBinormal3fvEXT'));
  glBinormal3iEXT := TglBinormal3iEXT(ProcAddress('glBinormal3iEXT'));
  glBinormal3ivEXT := TglBinormal3ivEXT(ProcAddress('glBinormal3ivEXT'));
  glBinormal3sEXT := TglBinormal3sEXT(ProcAddress('glBinormal3sEXT'));
  glBinormal3svEXT := TglBinormal3svEXT(ProcAddress('glBinormal3svEXT'));
  glBinormalPointerEXT := TglBinormalPointerEXT(ProcAddress('glBinormalPointerEXT'));
  glBitmap := TglBitmap(ProcAddress('glBitmap'));
  glBitmapxOES := TglBitmapxOES(ProcAddress('glBitmapxOES'));
  glBlendBarrier := TglBlendBarrier(ProcAddress('glBlendBarrier'));
  glBlendBarrierKHR := TglBlendBarrierKHR(ProcAddress('glBlendBarrierKHR'));
  glBlendBarrierNV := TglBlendBarrierNV(ProcAddress('glBlendBarrierNV'));
  glBlendColor := TglBlendColor(ProcAddress('glBlendColor'));
  glBlendColorEXT := TglBlendColorEXT(ProcAddress('glBlendColorEXT'));
  glBlendColorxOES := TglBlendColorxOES(ProcAddress('glBlendColorxOES'));
  glBlendEquation := TglBlendEquation(ProcAddress('glBlendEquation'));
  glBlendEquationEXT := TglBlendEquationEXT(ProcAddress('glBlendEquationEXT'));
  glBlendEquationIndexedAMD := TglBlendEquationIndexedAMD(ProcAddress('glBlendEquationIndexedAMD'));
  glBlendEquationOES := TglBlendEquationOES(ProcAddress('glBlendEquationOES'));
  glBlendEquationSeparate := TglBlendEquationSeparate(ProcAddress('glBlendEquationSeparate'));
  glBlendEquationSeparateEXT := TglBlendEquationSeparateEXT(ProcAddress('glBlendEquationSeparateEXT'));
  glBlendEquationSeparateIndexedAMD := TglBlendEquationSeparateIndexedAMD(ProcAddress('glBlendEquationSeparateIndexedAMD'));
  glBlendEquationSeparateOES := TglBlendEquationSeparateOES(ProcAddress('glBlendEquationSeparateOES'));
  glBlendEquationSeparatei := TglBlendEquationSeparatei(ProcAddress('glBlendEquationSeparatei'));
  glBlendEquationSeparateiARB := TglBlendEquationSeparateiARB(ProcAddress('glBlendEquationSeparateiARB'));
  glBlendEquationSeparateiEXT := TglBlendEquationSeparateiEXT(ProcAddress('glBlendEquationSeparateiEXT'));
  glBlendEquationSeparateiOES := TglBlendEquationSeparateiOES(ProcAddress('glBlendEquationSeparateiOES'));
  glBlendEquationi := TglBlendEquationi(ProcAddress('glBlendEquationi'));
  glBlendEquationiARB := TglBlendEquationiARB(ProcAddress('glBlendEquationiARB'));
  glBlendEquationiEXT := TglBlendEquationiEXT(ProcAddress('glBlendEquationiEXT'));
  glBlendEquationiOES := TglBlendEquationiOES(ProcAddress('glBlendEquationiOES'));
  glBlendFunc := TglBlendFunc(ProcAddress('glBlendFunc'));
  glBlendFuncIndexedAMD := TglBlendFuncIndexedAMD(ProcAddress('glBlendFuncIndexedAMD'));
  glBlendFuncSeparate := TglBlendFuncSeparate(ProcAddress('glBlendFuncSeparate'));
  glBlendFuncSeparateEXT := TglBlendFuncSeparateEXT(ProcAddress('glBlendFuncSeparateEXT'));
  glBlendFuncSeparateINGR := TglBlendFuncSeparateINGR(ProcAddress('glBlendFuncSeparateINGR'));
  glBlendFuncSeparateIndexedAMD := TglBlendFuncSeparateIndexedAMD(ProcAddress('glBlendFuncSeparateIndexedAMD'));
  glBlendFuncSeparateOES := TglBlendFuncSeparateOES(ProcAddress('glBlendFuncSeparateOES'));
  glBlendFuncSeparatei := TglBlendFuncSeparatei(ProcAddress('glBlendFuncSeparatei'));
  glBlendFuncSeparateiARB := TglBlendFuncSeparateiARB(ProcAddress('glBlendFuncSeparateiARB'));
  glBlendFuncSeparateiEXT := TglBlendFuncSeparateiEXT(ProcAddress('glBlendFuncSeparateiEXT'));
  glBlendFuncSeparateiOES := TglBlendFuncSeparateiOES(ProcAddress('glBlendFuncSeparateiOES'));
  glBlendFunci := TglBlendFunci(ProcAddress('glBlendFunci'));
  glBlendFunciARB := TglBlendFunciARB(ProcAddress('glBlendFunciARB'));
  glBlendFunciEXT := TglBlendFunciEXT(ProcAddress('glBlendFunciEXT'));
  glBlendFunciOES := TglBlendFunciOES(ProcAddress('glBlendFunciOES'));
  glBlendParameteriNV := TglBlendParameteriNV(ProcAddress('glBlendParameteriNV'));
  glBlitFramebuffer := TglBlitFramebuffer(ProcAddress('glBlitFramebuffer'));
  glBlitFramebufferANGLE := TglBlitFramebufferANGLE(ProcAddress('glBlitFramebufferANGLE'));
  glBlitFramebufferEXT := TglBlitFramebufferEXT(ProcAddress('glBlitFramebufferEXT'));
  glBlitFramebufferLayerEXT := TglBlitFramebufferLayerEXT(ProcAddress('glBlitFramebufferLayerEXT'));
  glBlitFramebufferLayersEXT := TglBlitFramebufferLayersEXT(ProcAddress('glBlitFramebufferLayersEXT'));
  glBlitFramebufferNV := TglBlitFramebufferNV(ProcAddress('glBlitFramebufferNV'));
  glBlitNamedFramebuffer := TglBlitNamedFramebuffer(ProcAddress('glBlitNamedFramebuffer'));
  glBufferAddressRangeNV := TglBufferAddressRangeNV(ProcAddress('glBufferAddressRangeNV'));
  glBufferAttachMemoryNV := TglBufferAttachMemoryNV(ProcAddress('glBufferAttachMemoryNV'));
  glBufferData := TglBufferData(ProcAddress('glBufferData'));
  glBufferDataARB := TglBufferDataARB(ProcAddress('glBufferDataARB'));
  glBufferPageCommitmentARB := TglBufferPageCommitmentARB(ProcAddress('glBufferPageCommitmentARB'));
  glBufferPageCommitmentMemNV := TglBufferPageCommitmentMemNV(ProcAddress('glBufferPageCommitmentMemNV'));
  glBufferParameteriAPPLE := TglBufferParameteriAPPLE(ProcAddress('glBufferParameteriAPPLE'));
  glBufferStorage := TglBufferStorage(ProcAddress('glBufferStorage'));
  glBufferStorageEXT := TglBufferStorageEXT(ProcAddress('glBufferStorageEXT'));
  glBufferStorageExternalEXT := TglBufferStorageExternalEXT(ProcAddress('glBufferStorageExternalEXT'));
  glBufferStorageMemEXT := TglBufferStorageMemEXT(ProcAddress('glBufferStorageMemEXT'));
  glBufferSubData := TglBufferSubData(ProcAddress('glBufferSubData'));
  glBufferSubDataARB := TglBufferSubDataARB(ProcAddress('glBufferSubDataARB'));
  glCallCommandListNV := TglCallCommandListNV(ProcAddress('glCallCommandListNV'));
  glCallList := TglCallList(ProcAddress('glCallList'));
  glCallLists := TglCallLists(ProcAddress('glCallLists'));
  glCheckFramebufferStatus := TglCheckFramebufferStatus(ProcAddress('glCheckFramebufferStatus'));
  glCheckFramebufferStatusEXT := TglCheckFramebufferStatusEXT(ProcAddress('glCheckFramebufferStatusEXT'));
  glCheckFramebufferStatusOES := TglCheckFramebufferStatusOES(ProcAddress('glCheckFramebufferStatusOES'));
  glCheckNamedFramebufferStatus := TglCheckNamedFramebufferStatus(ProcAddress('glCheckNamedFramebufferStatus'));
  glCheckNamedFramebufferStatusEXT := TglCheckNamedFramebufferStatusEXT(ProcAddress('glCheckNamedFramebufferStatusEXT'));
  glClampColor := TglClampColor(ProcAddress('glClampColor'));
  glClampColorARB := TglClampColorARB(ProcAddress('glClampColorARB'));
  glClear := TglClear(ProcAddress('glClear'));
  glClearAccum := TglClearAccum(ProcAddress('glClearAccum'));
  glClearAccumxOES := TglClearAccumxOES(ProcAddress('glClearAccumxOES'));
  glClearBufferData := TglClearBufferData(ProcAddress('glClearBufferData'));
  glClearBufferSubData := TglClearBufferSubData(ProcAddress('glClearBufferSubData'));
  glClearBufferfi := TglClearBufferfi(ProcAddress('glClearBufferfi'));
  glClearBufferfv := TglClearBufferfv(ProcAddress('glClearBufferfv'));
  glClearBufferiv := TglClearBufferiv(ProcAddress('glClearBufferiv'));
  glClearBufferuiv := TglClearBufferuiv(ProcAddress('glClearBufferuiv'));
  glClearColor := TglClearColor(ProcAddress('glClearColor'));
  glClearColorIiEXT := TglClearColorIiEXT(ProcAddress('glClearColorIiEXT'));
  glClearColorIuiEXT := TglClearColorIuiEXT(ProcAddress('glClearColorIuiEXT'));
  glClearColorx := TglClearColorx(ProcAddress('glClearColorx'));
  glClearColorxOES := TglClearColorxOES(ProcAddress('glClearColorxOES'));
  glClearDepth := TglClearDepth(ProcAddress('glClearDepth'));
  glClearDepthdNV := TglClearDepthdNV(ProcAddress('glClearDepthdNV'));
  glClearDepthf := TglClearDepthf(ProcAddress('glClearDepthf'));
  glClearDepthfOES := TglClearDepthfOES(ProcAddress('glClearDepthfOES'));
  glClearDepthx := TglClearDepthx(ProcAddress('glClearDepthx'));
  glClearDepthxOES := TglClearDepthxOES(ProcAddress('glClearDepthxOES'));
  glClearIndex := TglClearIndex(ProcAddress('glClearIndex'));
  glClearNamedBufferData := TglClearNamedBufferData(ProcAddress('glClearNamedBufferData'));
  glClearNamedBufferDataEXT := TglClearNamedBufferDataEXT(ProcAddress('glClearNamedBufferDataEXT'));
  glClearNamedBufferSubData := TglClearNamedBufferSubData(ProcAddress('glClearNamedBufferSubData'));
  glClearNamedBufferSubDataEXT := TglClearNamedBufferSubDataEXT(ProcAddress('glClearNamedBufferSubDataEXT'));
  glClearNamedFramebufferfi := TglClearNamedFramebufferfi(ProcAddress('glClearNamedFramebufferfi'));
  glClearNamedFramebufferfv := TglClearNamedFramebufferfv(ProcAddress('glClearNamedFramebufferfv'));
  glClearNamedFramebufferiv := TglClearNamedFramebufferiv(ProcAddress('glClearNamedFramebufferiv'));
  glClearNamedFramebufferuiv := TglClearNamedFramebufferuiv(ProcAddress('glClearNamedFramebufferuiv'));
  glClearPixelLocalStorageuiEXT := TglClearPixelLocalStorageuiEXT(ProcAddress('glClearPixelLocalStorageuiEXT'));
  glClearStencil := TglClearStencil(ProcAddress('glClearStencil'));
  glClearTexImage := TglClearTexImage(ProcAddress('glClearTexImage'));
  glClearTexImageEXT := TglClearTexImageEXT(ProcAddress('glClearTexImageEXT'));
  glClearTexSubImage := TglClearTexSubImage(ProcAddress('glClearTexSubImage'));
  glClearTexSubImageEXT := TglClearTexSubImageEXT(ProcAddress('glClearTexSubImageEXT'));
  glClientActiveTexture := TglClientActiveTexture(ProcAddress('glClientActiveTexture'));
  glClientActiveTextureARB := TglClientActiveTextureARB(ProcAddress('glClientActiveTextureARB'));
  glClientActiveVertexStreamATI := TglClientActiveVertexStreamATI(ProcAddress('glClientActiveVertexStreamATI'));
  glClientAttribDefaultEXT := TglClientAttribDefaultEXT(ProcAddress('glClientAttribDefaultEXT'));
  glClientWaitSemaphoreui64NVX := TglClientWaitSemaphoreui64NVX(ProcAddress('glClientWaitSemaphoreui64NVX'));
  glClientWaitSync := TglClientWaitSync(ProcAddress('glClientWaitSync'));
  glClientWaitSyncAPPLE := TglClientWaitSyncAPPLE(ProcAddress('glClientWaitSyncAPPLE'));
  glClipControl := TglClipControl(ProcAddress('glClipControl'));
  glClipControlEXT := TglClipControlEXT(ProcAddress('glClipControlEXT'));
  glClipPlane := TglClipPlane(ProcAddress('glClipPlane'));
  glClipPlanef := TglClipPlanef(ProcAddress('glClipPlanef'));
  glClipPlanefIMG := TglClipPlanefIMG(ProcAddress('glClipPlanefIMG'));
  glClipPlanefOES := TglClipPlanefOES(ProcAddress('glClipPlanefOES'));
  glClipPlanex := TglClipPlanex(ProcAddress('glClipPlanex'));
  glClipPlanexIMG := TglClipPlanexIMG(ProcAddress('glClipPlanexIMG'));
  glClipPlanexOES := TglClipPlanexOES(ProcAddress('glClipPlanexOES'));
  glColor3b := TglColor3b(ProcAddress('glColor3b'));
  glColor3bv := TglColor3bv(ProcAddress('glColor3bv'));
  glColor3d := TglColor3d(ProcAddress('glColor3d'));
  glColor3dv := TglColor3dv(ProcAddress('glColor3dv'));
  glColor3f := TglColor3f(ProcAddress('glColor3f'));
  glColor3fVertex3fSUN := TglColor3fVertex3fSUN(ProcAddress('glColor3fVertex3fSUN'));
  glColor3fVertex3fvSUN := TglColor3fVertex3fvSUN(ProcAddress('glColor3fVertex3fvSUN'));
  glColor3fv := TglColor3fv(ProcAddress('glColor3fv'));
  glColor3hNV := TglColor3hNV(ProcAddress('glColor3hNV'));
  glColor3hvNV := TglColor3hvNV(ProcAddress('glColor3hvNV'));
  glColor3i := TglColor3i(ProcAddress('glColor3i'));
  glColor3iv := TglColor3iv(ProcAddress('glColor3iv'));
  glColor3s := TglColor3s(ProcAddress('glColor3s'));
  glColor3sv := TglColor3sv(ProcAddress('glColor3sv'));
  glColor3ub := TglColor3ub(ProcAddress('glColor3ub'));
  glColor3ubv := TglColor3ubv(ProcAddress('glColor3ubv'));
  glColor3ui := TglColor3ui(ProcAddress('glColor3ui'));
  glColor3uiv := TglColor3uiv(ProcAddress('glColor3uiv'));
  glColor3us := TglColor3us(ProcAddress('glColor3us'));
  glColor3usv := TglColor3usv(ProcAddress('glColor3usv'));
  glColor3xOES := TglColor3xOES(ProcAddress('glColor3xOES'));
  glColor3xvOES := TglColor3xvOES(ProcAddress('glColor3xvOES'));
  glColor4b := TglColor4b(ProcAddress('glColor4b'));
  glColor4bv := TglColor4bv(ProcAddress('glColor4bv'));
  glColor4d := TglColor4d(ProcAddress('glColor4d'));
  glColor4dv := TglColor4dv(ProcAddress('glColor4dv'));
  glColor4f := TglColor4f(ProcAddress('glColor4f'));
  glColor4fNormal3fVertex3fSUN := TglColor4fNormal3fVertex3fSUN(ProcAddress('glColor4fNormal3fVertex3fSUN'));
  glColor4fNormal3fVertex3fvSUN := TglColor4fNormal3fVertex3fvSUN(ProcAddress('glColor4fNormal3fVertex3fvSUN'));
  glColor4fv := TglColor4fv(ProcAddress('glColor4fv'));
  glColor4hNV := TglColor4hNV(ProcAddress('glColor4hNV'));
  glColor4hvNV := TglColor4hvNV(ProcAddress('glColor4hvNV'));
  glColor4i := TglColor4i(ProcAddress('glColor4i'));
  glColor4iv := TglColor4iv(ProcAddress('glColor4iv'));
  glColor4s := TglColor4s(ProcAddress('glColor4s'));
  glColor4sv := TglColor4sv(ProcAddress('glColor4sv'));
  glColor4ub := TglColor4ub(ProcAddress('glColor4ub'));
  glColor4ubVertex2fSUN := TglColor4ubVertex2fSUN(ProcAddress('glColor4ubVertex2fSUN'));
  glColor4ubVertex2fvSUN := TglColor4ubVertex2fvSUN(ProcAddress('glColor4ubVertex2fvSUN'));
  glColor4ubVertex3fSUN := TglColor4ubVertex3fSUN(ProcAddress('glColor4ubVertex3fSUN'));
  glColor4ubVertex3fvSUN := TglColor4ubVertex3fvSUN(ProcAddress('glColor4ubVertex3fvSUN'));
  glColor4ubv := TglColor4ubv(ProcAddress('glColor4ubv'));
  glColor4ui := TglColor4ui(ProcAddress('glColor4ui'));
  glColor4uiv := TglColor4uiv(ProcAddress('glColor4uiv'));
  glColor4us := TglColor4us(ProcAddress('glColor4us'));
  glColor4usv := TglColor4usv(ProcAddress('glColor4usv'));
  glColor4x := TglColor4x(ProcAddress('glColor4x'));
  glColor4xOES := TglColor4xOES(ProcAddress('glColor4xOES'));
  glColor4xvOES := TglColor4xvOES(ProcAddress('glColor4xvOES'));
  glColorFormatNV := TglColorFormatNV(ProcAddress('glColorFormatNV'));
  glColorFragmentOp1ATI := TglColorFragmentOp1ATI(ProcAddress('glColorFragmentOp1ATI'));
  glColorFragmentOp2ATI := TglColorFragmentOp2ATI(ProcAddress('glColorFragmentOp2ATI'));
  glColorFragmentOp3ATI := TglColorFragmentOp3ATI(ProcAddress('glColorFragmentOp3ATI'));
  glColorMask := TglColorMask(ProcAddress('glColorMask'));
  glColorMaskIndexedEXT := TglColorMaskIndexedEXT(ProcAddress('glColorMaskIndexedEXT'));
  glColorMaski := TglColorMaski(ProcAddress('glColorMaski'));
  glColorMaskiEXT := TglColorMaskiEXT(ProcAddress('glColorMaskiEXT'));
  glColorMaskiOES := TglColorMaskiOES(ProcAddress('glColorMaskiOES'));
  glColorMaterial := TglColorMaterial(ProcAddress('glColorMaterial'));
  glColorP3ui := TglColorP3ui(ProcAddress('glColorP3ui'));
  glColorP3uiv := TglColorP3uiv(ProcAddress('glColorP3uiv'));
  glColorP4ui := TglColorP4ui(ProcAddress('glColorP4ui'));
  glColorP4uiv := TglColorP4uiv(ProcAddress('glColorP4uiv'));
  glColorPointer := TglColorPointer(ProcAddress('glColorPointer'));
  glColorPointerEXT := TglColorPointerEXT(ProcAddress('glColorPointerEXT'));
  glColorPointerListIBM := TglColorPointerListIBM(ProcAddress('glColorPointerListIBM'));
  glColorPointervINTEL := TglColorPointervINTEL(ProcAddress('glColorPointervINTEL'));
  glColorSubTable := TglColorSubTable(ProcAddress('glColorSubTable'));
  glColorSubTableEXT := TglColorSubTableEXT(ProcAddress('glColorSubTableEXT'));
  glColorTable := TglColorTable(ProcAddress('glColorTable'));
  glColorTableEXT := TglColorTableEXT(ProcAddress('glColorTableEXT'));
  glColorTableParameterfv := TglColorTableParameterfv(ProcAddress('glColorTableParameterfv'));
  glColorTableParameterfvSGI := TglColorTableParameterfvSGI(ProcAddress('glColorTableParameterfvSGI'));
  glColorTableParameteriv := TglColorTableParameteriv(ProcAddress('glColorTableParameteriv'));
  glColorTableParameterivSGI := TglColorTableParameterivSGI(ProcAddress('glColorTableParameterivSGI'));
  glColorTableSGI := TglColorTableSGI(ProcAddress('glColorTableSGI'));
  glCombinerInputNV := TglCombinerInputNV(ProcAddress('glCombinerInputNV'));
  glCombinerOutputNV := TglCombinerOutputNV(ProcAddress('glCombinerOutputNV'));
  glCombinerParameterfNV := TglCombinerParameterfNV(ProcAddress('glCombinerParameterfNV'));
  glCombinerParameterfvNV := TglCombinerParameterfvNV(ProcAddress('glCombinerParameterfvNV'));
  glCombinerParameteriNV := TglCombinerParameteriNV(ProcAddress('glCombinerParameteriNV'));
  glCombinerParameterivNV := TglCombinerParameterivNV(ProcAddress('glCombinerParameterivNV'));
  glCombinerStageParameterfvNV := TglCombinerStageParameterfvNV(ProcAddress('glCombinerStageParameterfvNV'));
  glCommandListSegmentsNV := TglCommandListSegmentsNV(ProcAddress('glCommandListSegmentsNV'));
  glCompileCommandListNV := TglCompileCommandListNV(ProcAddress('glCompileCommandListNV'));
  glCompileShader := TglCompileShader(ProcAddress('glCompileShader'));
  glCompileShaderARB := TglCompileShaderARB(ProcAddress('glCompileShaderARB'));
  glCompileShaderIncludeARB := TglCompileShaderIncludeARB(ProcAddress('glCompileShaderIncludeARB'));
  glCompressedMultiTexImage1DEXT := TglCompressedMultiTexImage1DEXT(ProcAddress('glCompressedMultiTexImage1DEXT'));
  glCompressedMultiTexImage2DEXT := TglCompressedMultiTexImage2DEXT(ProcAddress('glCompressedMultiTexImage2DEXT'));
  glCompressedMultiTexImage3DEXT := TglCompressedMultiTexImage3DEXT(ProcAddress('glCompressedMultiTexImage3DEXT'));
  glCompressedMultiTexSubImage1DEXT := TglCompressedMultiTexSubImage1DEXT(ProcAddress('glCompressedMultiTexSubImage1DEXT'));
  glCompressedMultiTexSubImage2DEXT := TglCompressedMultiTexSubImage2DEXT(ProcAddress('glCompressedMultiTexSubImage2DEXT'));
  glCompressedMultiTexSubImage3DEXT := TglCompressedMultiTexSubImage3DEXT(ProcAddress('glCompressedMultiTexSubImage3DEXT'));
  glCompressedTexImage1D := TglCompressedTexImage1D(ProcAddress('glCompressedTexImage1D'));
  glCompressedTexImage1DARB := TglCompressedTexImage1DARB(ProcAddress('glCompressedTexImage1DARB'));
  glCompressedTexImage2D := TglCompressedTexImage2D(ProcAddress('glCompressedTexImage2D'));
  glCompressedTexImage2DARB := TglCompressedTexImage2DARB(ProcAddress('glCompressedTexImage2DARB'));
  glCompressedTexImage3D := TglCompressedTexImage3D(ProcAddress('glCompressedTexImage3D'));
  glCompressedTexImage3DARB := TglCompressedTexImage3DARB(ProcAddress('glCompressedTexImage3DARB'));
  glCompressedTexImage3DOES := TglCompressedTexImage3DOES(ProcAddress('glCompressedTexImage3DOES'));
  glCompressedTexSubImage1D := TglCompressedTexSubImage1D(ProcAddress('glCompressedTexSubImage1D'));
  glCompressedTexSubImage1DARB := TglCompressedTexSubImage1DARB(ProcAddress('glCompressedTexSubImage1DARB'));
  glCompressedTexSubImage2D := TglCompressedTexSubImage2D(ProcAddress('glCompressedTexSubImage2D'));
  glCompressedTexSubImage2DARB := TglCompressedTexSubImage2DARB(ProcAddress('glCompressedTexSubImage2DARB'));
  glCompressedTexSubImage3D := TglCompressedTexSubImage3D(ProcAddress('glCompressedTexSubImage3D'));
  glCompressedTexSubImage3DARB := TglCompressedTexSubImage3DARB(ProcAddress('glCompressedTexSubImage3DARB'));
  glCompressedTexSubImage3DOES := TglCompressedTexSubImage3DOES(ProcAddress('glCompressedTexSubImage3DOES'));
  glCompressedTextureImage1DEXT := TglCompressedTextureImage1DEXT(ProcAddress('glCompressedTextureImage1DEXT'));
  glCompressedTextureImage2DEXT := TglCompressedTextureImage2DEXT(ProcAddress('glCompressedTextureImage2DEXT'));
  glCompressedTextureImage3DEXT := TglCompressedTextureImage3DEXT(ProcAddress('glCompressedTextureImage3DEXT'));
  glCompressedTextureSubImage1D := TglCompressedTextureSubImage1D(ProcAddress('glCompressedTextureSubImage1D'));
  glCompressedTextureSubImage1DEXT := TglCompressedTextureSubImage1DEXT(ProcAddress('glCompressedTextureSubImage1DEXT'));
  glCompressedTextureSubImage2D := TglCompressedTextureSubImage2D(ProcAddress('glCompressedTextureSubImage2D'));
  glCompressedTextureSubImage2DEXT := TglCompressedTextureSubImage2DEXT(ProcAddress('glCompressedTextureSubImage2DEXT'));
  glCompressedTextureSubImage3D := TglCompressedTextureSubImage3D(ProcAddress('glCompressedTextureSubImage3D'));
  glCompressedTextureSubImage3DEXT := TglCompressedTextureSubImage3DEXT(ProcAddress('glCompressedTextureSubImage3DEXT'));
  glConservativeRasterParameterfNV := TglConservativeRasterParameterfNV(ProcAddress('glConservativeRasterParameterfNV'));
  glConservativeRasterParameteriNV := TglConservativeRasterParameteriNV(ProcAddress('glConservativeRasterParameteriNV'));
  glConvolutionFilter1D := TglConvolutionFilter1D(ProcAddress('glConvolutionFilter1D'));
  glConvolutionFilter1DEXT := TglConvolutionFilter1DEXT(ProcAddress('glConvolutionFilter1DEXT'));
  glConvolutionFilter2D := TglConvolutionFilter2D(ProcAddress('glConvolutionFilter2D'));
  glConvolutionFilter2DEXT := TglConvolutionFilter2DEXT(ProcAddress('glConvolutionFilter2DEXT'));
  glConvolutionParameterf := TglConvolutionParameterf(ProcAddress('glConvolutionParameterf'));
  glConvolutionParameterfEXT := TglConvolutionParameterfEXT(ProcAddress('glConvolutionParameterfEXT'));
  glConvolutionParameterfv := TglConvolutionParameterfv(ProcAddress('glConvolutionParameterfv'));
  glConvolutionParameterfvEXT := TglConvolutionParameterfvEXT(ProcAddress('glConvolutionParameterfvEXT'));
  glConvolutionParameteri := TglConvolutionParameteri(ProcAddress('glConvolutionParameteri'));
  glConvolutionParameteriEXT := TglConvolutionParameteriEXT(ProcAddress('glConvolutionParameteriEXT'));
  glConvolutionParameteriv := TglConvolutionParameteriv(ProcAddress('glConvolutionParameteriv'));
  glConvolutionParameterivEXT := TglConvolutionParameterivEXT(ProcAddress('glConvolutionParameterivEXT'));
  glConvolutionParameterxOES := TglConvolutionParameterxOES(ProcAddress('glConvolutionParameterxOES'));
  glConvolutionParameterxvOES := TglConvolutionParameterxvOES(ProcAddress('glConvolutionParameterxvOES'));
  glCopyBufferSubData := TglCopyBufferSubData(ProcAddress('glCopyBufferSubData'));
  glCopyBufferSubDataNV := TglCopyBufferSubDataNV(ProcAddress('glCopyBufferSubDataNV'));
  glCopyColorSubTable := TglCopyColorSubTable(ProcAddress('glCopyColorSubTable'));
  glCopyColorSubTableEXT := TglCopyColorSubTableEXT(ProcAddress('glCopyColorSubTableEXT'));
  glCopyColorTable := TglCopyColorTable(ProcAddress('glCopyColorTable'));
  glCopyColorTableSGI := TglCopyColorTableSGI(ProcAddress('glCopyColorTableSGI'));
  glCopyConvolutionFilter1D := TglCopyConvolutionFilter1D(ProcAddress('glCopyConvolutionFilter1D'));
  glCopyConvolutionFilter1DEXT := TglCopyConvolutionFilter1DEXT(ProcAddress('glCopyConvolutionFilter1DEXT'));
  glCopyConvolutionFilter2D := TglCopyConvolutionFilter2D(ProcAddress('glCopyConvolutionFilter2D'));
  glCopyConvolutionFilter2DEXT := TglCopyConvolutionFilter2DEXT(ProcAddress('glCopyConvolutionFilter2DEXT'));
  glCopyImageSubData := TglCopyImageSubData(ProcAddress('glCopyImageSubData'));
  glCopyImageSubDataEXT := TglCopyImageSubDataEXT(ProcAddress('glCopyImageSubDataEXT'));
  glCopyImageSubDataNV := TglCopyImageSubDataNV(ProcAddress('glCopyImageSubDataNV'));
  glCopyImageSubDataOES := TglCopyImageSubDataOES(ProcAddress('glCopyImageSubDataOES'));
  glCopyMultiTexImage1DEXT := TglCopyMultiTexImage1DEXT(ProcAddress('glCopyMultiTexImage1DEXT'));
  glCopyMultiTexImage2DEXT := TglCopyMultiTexImage2DEXT(ProcAddress('glCopyMultiTexImage2DEXT'));
  glCopyMultiTexSubImage1DEXT := TglCopyMultiTexSubImage1DEXT(ProcAddress('glCopyMultiTexSubImage1DEXT'));
  glCopyMultiTexSubImage2DEXT := TglCopyMultiTexSubImage2DEXT(ProcAddress('glCopyMultiTexSubImage2DEXT'));
  glCopyMultiTexSubImage3DEXT := TglCopyMultiTexSubImage3DEXT(ProcAddress('glCopyMultiTexSubImage3DEXT'));
  glCopyNamedBufferSubData := TglCopyNamedBufferSubData(ProcAddress('glCopyNamedBufferSubData'));
  glCopyPathNV := TglCopyPathNV(ProcAddress('glCopyPathNV'));
  glCopyPixels := TglCopyPixels(ProcAddress('glCopyPixels'));
  glCopyTexImage1D := TglCopyTexImage1D(ProcAddress('glCopyTexImage1D'));
  glCopyTexImage1DEXT := TglCopyTexImage1DEXT(ProcAddress('glCopyTexImage1DEXT'));
  glCopyTexImage2D := TglCopyTexImage2D(ProcAddress('glCopyTexImage2D'));
  glCopyTexImage2DEXT := TglCopyTexImage2DEXT(ProcAddress('glCopyTexImage2DEXT'));
  glCopyTexSubImage1D := TglCopyTexSubImage1D(ProcAddress('glCopyTexSubImage1D'));
  glCopyTexSubImage1DEXT := TglCopyTexSubImage1DEXT(ProcAddress('glCopyTexSubImage1DEXT'));
  glCopyTexSubImage2D := TglCopyTexSubImage2D(ProcAddress('glCopyTexSubImage2D'));
  glCopyTexSubImage2DEXT := TglCopyTexSubImage2DEXT(ProcAddress('glCopyTexSubImage2DEXT'));
  glCopyTexSubImage3D := TglCopyTexSubImage3D(ProcAddress('glCopyTexSubImage3D'));
  glCopyTexSubImage3DEXT := TglCopyTexSubImage3DEXT(ProcAddress('glCopyTexSubImage3DEXT'));
  glCopyTexSubImage3DOES := TglCopyTexSubImage3DOES(ProcAddress('glCopyTexSubImage3DOES'));
  glCopyTextureImage1DEXT := TglCopyTextureImage1DEXT(ProcAddress('glCopyTextureImage1DEXT'));
  glCopyTextureImage2DEXT := TglCopyTextureImage2DEXT(ProcAddress('glCopyTextureImage2DEXT'));
  glCopyTextureLevelsAPPLE := TglCopyTextureLevelsAPPLE(ProcAddress('glCopyTextureLevelsAPPLE'));
  glCopyTextureSubImage1D := TglCopyTextureSubImage1D(ProcAddress('glCopyTextureSubImage1D'));
  glCopyTextureSubImage1DEXT := TglCopyTextureSubImage1DEXT(ProcAddress('glCopyTextureSubImage1DEXT'));
  glCopyTextureSubImage2D := TglCopyTextureSubImage2D(ProcAddress('glCopyTextureSubImage2D'));
  glCopyTextureSubImage2DEXT := TglCopyTextureSubImage2DEXT(ProcAddress('glCopyTextureSubImage2DEXT'));
  glCopyTextureSubImage3D := TglCopyTextureSubImage3D(ProcAddress('glCopyTextureSubImage3D'));
  glCopyTextureSubImage3DEXT := TglCopyTextureSubImage3DEXT(ProcAddress('glCopyTextureSubImage3DEXT'));
  glCoverFillPathInstancedNV := TglCoverFillPathInstancedNV(ProcAddress('glCoverFillPathInstancedNV'));
  glCoverFillPathNV := TglCoverFillPathNV(ProcAddress('glCoverFillPathNV'));
  glCoverStrokePathInstancedNV := TglCoverStrokePathInstancedNV(ProcAddress('glCoverStrokePathInstancedNV'));
  glCoverStrokePathNV := TglCoverStrokePathNV(ProcAddress('glCoverStrokePathNV'));
  glCoverageMaskNV := TglCoverageMaskNV(ProcAddress('glCoverageMaskNV'));
  glCoverageModulationNV := TglCoverageModulationNV(ProcAddress('glCoverageModulationNV'));
  glCoverageModulationTableNV := TglCoverageModulationTableNV(ProcAddress('glCoverageModulationTableNV'));
  glCoverageOperationNV := TglCoverageOperationNV(ProcAddress('glCoverageOperationNV'));
  glCreateBuffers := TglCreateBuffers(ProcAddress('glCreateBuffers'));
  glCreateCommandListsNV := TglCreateCommandListsNV(ProcAddress('glCreateCommandListsNV'));
  glCreateFramebuffers := TglCreateFramebuffers(ProcAddress('glCreateFramebuffers'));
  glCreateMemoryObjectsEXT := TglCreateMemoryObjectsEXT(ProcAddress('glCreateMemoryObjectsEXT'));
  glCreatePerfQueryINTEL := TglCreatePerfQueryINTEL(ProcAddress('glCreatePerfQueryINTEL'));
  glCreateProgram := TglCreateProgram(ProcAddress('glCreateProgram'));
  glCreateProgramObjectARB := TglCreateProgramObjectARB(ProcAddress('glCreateProgramObjectARB'));
  glCreateProgramPipelines := TglCreateProgramPipelines(ProcAddress('glCreateProgramPipelines'));
  glCreateProgressFenceNVX := TglCreateProgressFenceNVX(ProcAddress('glCreateProgressFenceNVX'));
  glCreateQueries := TglCreateQueries(ProcAddress('glCreateQueries'));
  glCreateRenderbuffers := TglCreateRenderbuffers(ProcAddress('glCreateRenderbuffers'));
  glCreateSamplers := TglCreateSamplers(ProcAddress('glCreateSamplers'));
  glCreateSemaphoresNV := TglCreateSemaphoresNV(ProcAddress('glCreateSemaphoresNV'));
  glCreateShader := TglCreateShader(ProcAddress('glCreateShader'));
  glCreateShaderObjectARB := TglCreateShaderObjectARB(ProcAddress('glCreateShaderObjectARB'));
  glCreateShaderProgramEXT := TglCreateShaderProgramEXT(ProcAddress('glCreateShaderProgramEXT'));
  glCreateShaderProgramv := TglCreateShaderProgramv(ProcAddress('glCreateShaderProgramv'));
  glCreateShaderProgramvEXT := TglCreateShaderProgramvEXT(ProcAddress('glCreateShaderProgramvEXT'));
  glCreateStatesNV := TglCreateStatesNV(ProcAddress('glCreateStatesNV'));
  glCreateSyncFromCLeventARB := TglCreateSyncFromCLeventARB(ProcAddress('glCreateSyncFromCLeventARB'));
  glCreateTextures := TglCreateTextures(ProcAddress('glCreateTextures'));
  glCreateTransformFeedbacks := TglCreateTransformFeedbacks(ProcAddress('glCreateTransformFeedbacks'));
  glCreateVertexArrays := TglCreateVertexArrays(ProcAddress('glCreateVertexArrays'));
  glCullFace := TglCullFace(ProcAddress('glCullFace'));
  glCullParameterdvEXT := TglCullParameterdvEXT(ProcAddress('glCullParameterdvEXT'));
  glCullParameterfvEXT := TglCullParameterfvEXT(ProcAddress('glCullParameterfvEXT'));
  glCurrentPaletteMatrixARB := TglCurrentPaletteMatrixARB(ProcAddress('glCurrentPaletteMatrixARB'));
  glCurrentPaletteMatrixOES := TglCurrentPaletteMatrixOES(ProcAddress('glCurrentPaletteMatrixOES'));
  glDebugMessageCallback := TglDebugMessageCallback(ProcAddress('glDebugMessageCallback'));
  glDebugMessageCallbackAMD := TglDebugMessageCallbackAMD(ProcAddress('glDebugMessageCallbackAMD'));
  glDebugMessageCallbackARB := TglDebugMessageCallbackARB(ProcAddress('glDebugMessageCallbackARB'));
  glDebugMessageCallbackKHR := TglDebugMessageCallbackKHR(ProcAddress('glDebugMessageCallbackKHR'));
  glDebugMessageControl := TglDebugMessageControl(ProcAddress('glDebugMessageControl'));
  glDebugMessageControlARB := TglDebugMessageControlARB(ProcAddress('glDebugMessageControlARB'));
  glDebugMessageControlKHR := TglDebugMessageControlKHR(ProcAddress('glDebugMessageControlKHR'));
  glDebugMessageEnableAMD := TglDebugMessageEnableAMD(ProcAddress('glDebugMessageEnableAMD'));
  glDebugMessageInsert := TglDebugMessageInsert(ProcAddress('glDebugMessageInsert'));
  glDebugMessageInsertAMD := TglDebugMessageInsertAMD(ProcAddress('glDebugMessageInsertAMD'));
  glDebugMessageInsertARB := TglDebugMessageInsertARB(ProcAddress('glDebugMessageInsertARB'));
  glDebugMessageInsertKHR := TglDebugMessageInsertKHR(ProcAddress('glDebugMessageInsertKHR'));
  glDeformSGIX := TglDeformSGIX(ProcAddress('glDeformSGIX'));
  glDeformationMap3dSGIX := TglDeformationMap3dSGIX(ProcAddress('glDeformationMap3dSGIX'));
  glDeformationMap3fSGIX := TglDeformationMap3fSGIX(ProcAddress('glDeformationMap3fSGIX'));
  glDeleteAsyncMarkersSGIX := TglDeleteAsyncMarkersSGIX(ProcAddress('glDeleteAsyncMarkersSGIX'));
  glDeleteBuffers := TglDeleteBuffers(ProcAddress('glDeleteBuffers'));
  glDeleteBuffersARB := TglDeleteBuffersARB(ProcAddress('glDeleteBuffersARB'));
  glDeleteCommandListsNV := TglDeleteCommandListsNV(ProcAddress('glDeleteCommandListsNV'));
  glDeleteFencesAPPLE := TglDeleteFencesAPPLE(ProcAddress('glDeleteFencesAPPLE'));
  glDeleteFencesNV := TglDeleteFencesNV(ProcAddress('glDeleteFencesNV'));
  glDeleteFragmentShaderATI := TglDeleteFragmentShaderATI(ProcAddress('glDeleteFragmentShaderATI'));
  glDeleteFramebuffers := TglDeleteFramebuffers(ProcAddress('glDeleteFramebuffers'));
  glDeleteFramebuffersEXT := TglDeleteFramebuffersEXT(ProcAddress('glDeleteFramebuffersEXT'));
  glDeleteFramebuffersOES := TglDeleteFramebuffersOES(ProcAddress('glDeleteFramebuffersOES'));
  glDeleteLists := TglDeleteLists(ProcAddress('glDeleteLists'));
  glDeleteMemoryObjectsEXT := TglDeleteMemoryObjectsEXT(ProcAddress('glDeleteMemoryObjectsEXT'));
  glDeleteNamedStringARB := TglDeleteNamedStringARB(ProcAddress('glDeleteNamedStringARB'));
  glDeleteNamesAMD := TglDeleteNamesAMD(ProcAddress('glDeleteNamesAMD'));
  glDeleteObjectARB := TglDeleteObjectARB(ProcAddress('glDeleteObjectARB'));
  glDeleteOcclusionQueriesNV := TglDeleteOcclusionQueriesNV(ProcAddress('glDeleteOcclusionQueriesNV'));
  glDeletePathsNV := TglDeletePathsNV(ProcAddress('glDeletePathsNV'));
  glDeletePerfMonitorsAMD := TglDeletePerfMonitorsAMD(ProcAddress('glDeletePerfMonitorsAMD'));
  glDeletePerfQueryINTEL := TglDeletePerfQueryINTEL(ProcAddress('glDeletePerfQueryINTEL'));
  glDeleteProgram := TglDeleteProgram(ProcAddress('glDeleteProgram'));
  glDeleteProgramPipelines := TglDeleteProgramPipelines(ProcAddress('glDeleteProgramPipelines'));
  glDeleteProgramPipelinesEXT := TglDeleteProgramPipelinesEXT(ProcAddress('glDeleteProgramPipelinesEXT'));
  glDeleteProgramsARB := TglDeleteProgramsARB(ProcAddress('glDeleteProgramsARB'));
  glDeleteProgramsNV := TglDeleteProgramsNV(ProcAddress('glDeleteProgramsNV'));
  glDeleteQueries := TglDeleteQueries(ProcAddress('glDeleteQueries'));
  glDeleteQueriesARB := TglDeleteQueriesARB(ProcAddress('glDeleteQueriesARB'));
  glDeleteQueriesEXT := TglDeleteQueriesEXT(ProcAddress('glDeleteQueriesEXT'));
  glDeleteQueryResourceTagNV := TglDeleteQueryResourceTagNV(ProcAddress('glDeleteQueryResourceTagNV'));
  glDeleteRenderbuffers := TglDeleteRenderbuffers(ProcAddress('glDeleteRenderbuffers'));
  glDeleteRenderbuffersEXT := TglDeleteRenderbuffersEXT(ProcAddress('glDeleteRenderbuffersEXT'));
  glDeleteRenderbuffersOES := TglDeleteRenderbuffersOES(ProcAddress('glDeleteRenderbuffersOES'));
  glDeleteSamplers := TglDeleteSamplers(ProcAddress('glDeleteSamplers'));
  glDeleteSemaphoresEXT := TglDeleteSemaphoresEXT(ProcAddress('glDeleteSemaphoresEXT'));
  glDeleteShader := TglDeleteShader(ProcAddress('glDeleteShader'));
  glDeleteStatesNV := TglDeleteStatesNV(ProcAddress('glDeleteStatesNV'));
  glDeleteSync := TglDeleteSync(ProcAddress('glDeleteSync'));
  glDeleteSyncAPPLE := TglDeleteSyncAPPLE(ProcAddress('glDeleteSyncAPPLE'));
  glDeleteTextures := TglDeleteTextures(ProcAddress('glDeleteTextures'));
  glDeleteTexturesEXT := TglDeleteTexturesEXT(ProcAddress('glDeleteTexturesEXT'));
  glDeleteTransformFeedbacks := TglDeleteTransformFeedbacks(ProcAddress('glDeleteTransformFeedbacks'));
  glDeleteTransformFeedbacksNV := TglDeleteTransformFeedbacksNV(ProcAddress('glDeleteTransformFeedbacksNV'));
  glDeleteVertexArrays := TglDeleteVertexArrays(ProcAddress('glDeleteVertexArrays'));
  glDeleteVertexArraysAPPLE := TglDeleteVertexArraysAPPLE(ProcAddress('glDeleteVertexArraysAPPLE'));
  glDeleteVertexArraysOES := TglDeleteVertexArraysOES(ProcAddress('glDeleteVertexArraysOES'));
  glDeleteVertexShaderEXT := TglDeleteVertexShaderEXT(ProcAddress('glDeleteVertexShaderEXT'));
  glDepthBoundsEXT := TglDepthBoundsEXT(ProcAddress('glDepthBoundsEXT'));
  glDepthBoundsdNV := TglDepthBoundsdNV(ProcAddress('glDepthBoundsdNV'));
  glDepthFunc := TglDepthFunc(ProcAddress('glDepthFunc'));
  glDepthMask := TglDepthMask(ProcAddress('glDepthMask'));
  glDepthRange := TglDepthRange(ProcAddress('glDepthRange'));
  glDepthRangeArraydvNV := TglDepthRangeArraydvNV(ProcAddress('glDepthRangeArraydvNV'));
  glDepthRangeArrayfvNV := TglDepthRangeArrayfvNV(ProcAddress('glDepthRangeArrayfvNV'));
  glDepthRangeArrayfvOES := TglDepthRangeArrayfvOES(ProcAddress('glDepthRangeArrayfvOES'));
  glDepthRangeArrayv := TglDepthRangeArrayv(ProcAddress('glDepthRangeArrayv'));
  glDepthRangeIndexed := TglDepthRangeIndexed(ProcAddress('glDepthRangeIndexed'));
  glDepthRangeIndexeddNV := TglDepthRangeIndexeddNV(ProcAddress('glDepthRangeIndexeddNV'));
  glDepthRangeIndexedfNV := TglDepthRangeIndexedfNV(ProcAddress('glDepthRangeIndexedfNV'));
  glDepthRangeIndexedfOES := TglDepthRangeIndexedfOES(ProcAddress('glDepthRangeIndexedfOES'));
  glDepthRangedNV := TglDepthRangedNV(ProcAddress('glDepthRangedNV'));
  glDepthRangef := TglDepthRangef(ProcAddress('glDepthRangef'));
  glDepthRangefOES := TglDepthRangefOES(ProcAddress('glDepthRangefOES'));
  glDepthRangex := TglDepthRangex(ProcAddress('glDepthRangex'));
  glDepthRangexOES := TglDepthRangexOES(ProcAddress('glDepthRangexOES'));
  glDetachObjectARB := TglDetachObjectARB(ProcAddress('glDetachObjectARB'));
  glDetachShader := TglDetachShader(ProcAddress('glDetachShader'));
  glDetailTexFuncSGIS := TglDetailTexFuncSGIS(ProcAddress('glDetailTexFuncSGIS'));
  glDisable := TglDisable(ProcAddress('glDisable'));
  glDisableClientState := TglDisableClientState(ProcAddress('glDisableClientState'));
  glDisableClientStateIndexedEXT := TglDisableClientStateIndexedEXT(ProcAddress('glDisableClientStateIndexedEXT'));
  glDisableClientStateiEXT := TglDisableClientStateiEXT(ProcAddress('glDisableClientStateiEXT'));
  glDisableDriverControlQCOM := TglDisableDriverControlQCOM(ProcAddress('glDisableDriverControlQCOM'));
  glDisableIndexedEXT := TglDisableIndexedEXT(ProcAddress('glDisableIndexedEXT'));
  glDisableVariantClientStateEXT := TglDisableVariantClientStateEXT(ProcAddress('glDisableVariantClientStateEXT'));
  glDisableVertexArrayAttrib := TglDisableVertexArrayAttrib(ProcAddress('glDisableVertexArrayAttrib'));
  glDisableVertexArrayAttribEXT := TglDisableVertexArrayAttribEXT(ProcAddress('glDisableVertexArrayAttribEXT'));
  glDisableVertexArrayEXT := TglDisableVertexArrayEXT(ProcAddress('glDisableVertexArrayEXT'));
  glDisableVertexAttribAPPLE := TglDisableVertexAttribAPPLE(ProcAddress('glDisableVertexAttribAPPLE'));
  glDisableVertexAttribArray := TglDisableVertexAttribArray(ProcAddress('glDisableVertexAttribArray'));
  glDisableVertexAttribArrayARB := TglDisableVertexAttribArrayARB(ProcAddress('glDisableVertexAttribArrayARB'));
  glDisablei := TglDisablei(ProcAddress('glDisablei'));
  glDisableiEXT := TglDisableiEXT(ProcAddress('glDisableiEXT'));
  glDisableiNV := TglDisableiNV(ProcAddress('glDisableiNV'));
  glDisableiOES := TglDisableiOES(ProcAddress('glDisableiOES'));
  glDiscardFramebufferEXT := TglDiscardFramebufferEXT(ProcAddress('glDiscardFramebufferEXT'));
  glDispatchCompute := TglDispatchCompute(ProcAddress('glDispatchCompute'));
  glDispatchComputeGroupSizeARB := TglDispatchComputeGroupSizeARB(ProcAddress('glDispatchComputeGroupSizeARB'));
  glDispatchComputeIndirect := TglDispatchComputeIndirect(ProcAddress('glDispatchComputeIndirect'));
  glDrawArrays := TglDrawArrays(ProcAddress('glDrawArrays'));
  glDrawArraysEXT := TglDrawArraysEXT(ProcAddress('glDrawArraysEXT'));
  glDrawArraysIndirect := TglDrawArraysIndirect(ProcAddress('glDrawArraysIndirect'));
  glDrawArraysInstanced := TglDrawArraysInstanced(ProcAddress('glDrawArraysInstanced'));
  glDrawArraysInstancedANGLE := TglDrawArraysInstancedANGLE(ProcAddress('glDrawArraysInstancedANGLE'));
  glDrawArraysInstancedARB := TglDrawArraysInstancedARB(ProcAddress('glDrawArraysInstancedARB'));
  glDrawArraysInstancedBaseInstance := TglDrawArraysInstancedBaseInstance(ProcAddress('glDrawArraysInstancedBaseInstance'));
  glDrawArraysInstancedBaseInstanceEXT := TglDrawArraysInstancedBaseInstanceEXT(ProcAddress('glDrawArraysInstancedBaseInstanceEXT'));
  glDrawArraysInstancedEXT := TglDrawArraysInstancedEXT(ProcAddress('glDrawArraysInstancedEXT'));
  glDrawArraysInstancedNV := TglDrawArraysInstancedNV(ProcAddress('glDrawArraysInstancedNV'));
  glDrawBuffer := TglDrawBuffer(ProcAddress('glDrawBuffer'));
  glDrawBuffers := TglDrawBuffers(ProcAddress('glDrawBuffers'));
  glDrawBuffersARB := TglDrawBuffersARB(ProcAddress('glDrawBuffersARB'));
  glDrawBuffersATI := TglDrawBuffersATI(ProcAddress('glDrawBuffersATI'));
  glDrawBuffersEXT := TglDrawBuffersEXT(ProcAddress('glDrawBuffersEXT'));
  glDrawBuffersIndexedEXT := TglDrawBuffersIndexedEXT(ProcAddress('glDrawBuffersIndexedEXT'));
  glDrawBuffersNV := TglDrawBuffersNV(ProcAddress('glDrawBuffersNV'));
  glDrawCommandsAddressNV := TglDrawCommandsAddressNV(ProcAddress('glDrawCommandsAddressNV'));
  glDrawCommandsNV := TglDrawCommandsNV(ProcAddress('glDrawCommandsNV'));
  glDrawCommandsStatesAddressNV := TglDrawCommandsStatesAddressNV(ProcAddress('glDrawCommandsStatesAddressNV'));
  glDrawCommandsStatesNV := TglDrawCommandsStatesNV(ProcAddress('glDrawCommandsStatesNV'));
  glDrawElementArrayAPPLE := TglDrawElementArrayAPPLE(ProcAddress('glDrawElementArrayAPPLE'));
  glDrawElementArrayATI := TglDrawElementArrayATI(ProcAddress('glDrawElementArrayATI'));
  glDrawElements := TglDrawElements(ProcAddress('glDrawElements'));
  glDrawElementsBaseVertex := TglDrawElementsBaseVertex(ProcAddress('glDrawElementsBaseVertex'));
  glDrawElementsBaseVertexEXT := TglDrawElementsBaseVertexEXT(ProcAddress('glDrawElementsBaseVertexEXT'));
  glDrawElementsBaseVertexOES := TglDrawElementsBaseVertexOES(ProcAddress('glDrawElementsBaseVertexOES'));
  glDrawElementsIndirect := TglDrawElementsIndirect(ProcAddress('glDrawElementsIndirect'));
  glDrawElementsInstanced := TglDrawElementsInstanced(ProcAddress('glDrawElementsInstanced'));
  glDrawElementsInstancedANGLE := TglDrawElementsInstancedANGLE(ProcAddress('glDrawElementsInstancedANGLE'));
  glDrawElementsInstancedARB := TglDrawElementsInstancedARB(ProcAddress('glDrawElementsInstancedARB'));
  glDrawElementsInstancedBaseInstance := TglDrawElementsInstancedBaseInstance(ProcAddress('glDrawElementsInstancedBaseInstance'));
  glDrawElementsInstancedBaseInstanceEXT := TglDrawElementsInstancedBaseInstanceEXT(ProcAddress('glDrawElementsInstancedBaseInstanceEXT'));
  glDrawElementsInstancedBaseVertex := TglDrawElementsInstancedBaseVertex(ProcAddress('glDrawElementsInstancedBaseVertex'));
  glDrawElementsInstancedBaseVertexBaseInstance := TglDrawElementsInstancedBaseVertexBaseInstance(ProcAddress('glDrawElementsInstancedBaseVertexBaseInstance'));
  glDrawElementsInstancedBaseVertexBaseInstanceEXT := TglDrawElementsInstancedBaseVertexBaseInstanceEXT(ProcAddress('glDrawElementsInstancedBaseVertexBaseInstanceEXT'));
  glDrawElementsInstancedBaseVertexEXT := TglDrawElementsInstancedBaseVertexEXT(ProcAddress('glDrawElementsInstancedBaseVertexEXT'));
  glDrawElementsInstancedBaseVertexOES := TglDrawElementsInstancedBaseVertexOES(ProcAddress('glDrawElementsInstancedBaseVertexOES'));
  glDrawElementsInstancedEXT := TglDrawElementsInstancedEXT(ProcAddress('glDrawElementsInstancedEXT'));
  glDrawElementsInstancedNV := TglDrawElementsInstancedNV(ProcAddress('glDrawElementsInstancedNV'));
  glDrawMeshArraysSUN := TglDrawMeshArraysSUN(ProcAddress('glDrawMeshArraysSUN'));
  glDrawMeshTasksNV := TglDrawMeshTasksNV(ProcAddress('glDrawMeshTasksNV'));
  glDrawMeshTasksIndirectNV := TglDrawMeshTasksIndirectNV(ProcAddress('glDrawMeshTasksIndirectNV'));
  glDrawPixels := TglDrawPixels(ProcAddress('glDrawPixels'));
  glDrawRangeElementArrayAPPLE := TglDrawRangeElementArrayAPPLE(ProcAddress('glDrawRangeElementArrayAPPLE'));
  glDrawRangeElementArrayATI := TglDrawRangeElementArrayATI(ProcAddress('glDrawRangeElementArrayATI'));
  glDrawRangeElements := TglDrawRangeElements(ProcAddress('glDrawRangeElements'));
  glDrawRangeElementsBaseVertex := TglDrawRangeElementsBaseVertex(ProcAddress('glDrawRangeElementsBaseVertex'));
  glDrawRangeElementsBaseVertexEXT := TglDrawRangeElementsBaseVertexEXT(ProcAddress('glDrawRangeElementsBaseVertexEXT'));
  glDrawRangeElementsBaseVertexOES := TglDrawRangeElementsBaseVertexOES(ProcAddress('glDrawRangeElementsBaseVertexOES'));
  glDrawRangeElementsEXT := TglDrawRangeElementsEXT(ProcAddress('glDrawRangeElementsEXT'));
  glDrawTexfOES := TglDrawTexfOES(ProcAddress('glDrawTexfOES'));
  glDrawTexfvOES := TglDrawTexfvOES(ProcAddress('glDrawTexfvOES'));
  glDrawTexiOES := TglDrawTexiOES(ProcAddress('glDrawTexiOES'));
  glDrawTexivOES := TglDrawTexivOES(ProcAddress('glDrawTexivOES'));
  glDrawTexsOES := TglDrawTexsOES(ProcAddress('glDrawTexsOES'));
  glDrawTexsvOES := TglDrawTexsvOES(ProcAddress('glDrawTexsvOES'));
  glDrawTextureNV := TglDrawTextureNV(ProcAddress('glDrawTextureNV'));
  glDrawTexxOES := TglDrawTexxOES(ProcAddress('glDrawTexxOES'));
  glDrawTexxvOES := TglDrawTexxvOES(ProcAddress('glDrawTexxvOES'));
  glDrawTransformFeedback := TglDrawTransformFeedback(ProcAddress('glDrawTransformFeedback'));
  glDrawTransformFeedbackEXT := TglDrawTransformFeedbackEXT(ProcAddress('glDrawTransformFeedbackEXT'));
  glDrawTransformFeedbackInstanced := TglDrawTransformFeedbackInstanced(ProcAddress('glDrawTransformFeedbackInstanced'));
  glDrawTransformFeedbackInstancedEXT := TglDrawTransformFeedbackInstancedEXT(ProcAddress('glDrawTransformFeedbackInstancedEXT'));
  glDrawTransformFeedbackNV := TglDrawTransformFeedbackNV(ProcAddress('glDrawTransformFeedbackNV'));
  glDrawTransformFeedbackStream := TglDrawTransformFeedbackStream(ProcAddress('glDrawTransformFeedbackStream'));
  glDrawTransformFeedbackStreamInstanced := TglDrawTransformFeedbackStreamInstanced(ProcAddress('glDrawTransformFeedbackStreamInstanced'));
  glEGLImageTargetRenderbufferStorageOES := TglEGLImageTargetRenderbufferStorageOES(ProcAddress('glEGLImageTargetRenderbufferStorageOES'));
  glEGLImageTargetTexStorageEXT := TglEGLImageTargetTexStorageEXT(ProcAddress('glEGLImageTargetTexStorageEXT'));
  glEGLImageTargetTexture2DOES := TglEGLImageTargetTexture2DOES(ProcAddress('glEGLImageTargetTexture2DOES'));
  glEGLImageTargetTextureStorageEXT := TglEGLImageTargetTextureStorageEXT(ProcAddress('glEGLImageTargetTextureStorageEXT'));
  glEdgeFlag := TglEdgeFlag(ProcAddress('glEdgeFlag'));
  glEdgeFlagFormatNV := TglEdgeFlagFormatNV(ProcAddress('glEdgeFlagFormatNV'));
  glEdgeFlagPointer := TglEdgeFlagPointer(ProcAddress('glEdgeFlagPointer'));
  glEdgeFlagPointerEXT := TglEdgeFlagPointerEXT(ProcAddress('glEdgeFlagPointerEXT'));
  glEdgeFlagPointerListIBM := TglEdgeFlagPointerListIBM(ProcAddress('glEdgeFlagPointerListIBM'));
  glEdgeFlagv := TglEdgeFlagv(ProcAddress('glEdgeFlagv'));
  glElementPointerAPPLE := TglElementPointerAPPLE(ProcAddress('glElementPointerAPPLE'));
  glElementPointerATI := TglElementPointerATI(ProcAddress('glElementPointerATI'));
  glEnable := TglEnable(ProcAddress('glEnable'));
  glEnableClientState := TglEnableClientState(ProcAddress('glEnableClientState'));
  glEnableClientStateIndexedEXT := TglEnableClientStateIndexedEXT(ProcAddress('glEnableClientStateIndexedEXT'));
  glEnableClientStateiEXT := TglEnableClientStateiEXT(ProcAddress('glEnableClientStateiEXT'));
  glEnableDriverControlQCOM := TglEnableDriverControlQCOM(ProcAddress('glEnableDriverControlQCOM'));
  glEnableIndexedEXT := TglEnableIndexedEXT(ProcAddress('glEnableIndexedEXT'));
  glEnableVariantClientStateEXT := TglEnableVariantClientStateEXT(ProcAddress('glEnableVariantClientStateEXT'));
  glEnableVertexArrayAttrib := TglEnableVertexArrayAttrib(ProcAddress('glEnableVertexArrayAttrib'));
  glEnableVertexArrayAttribEXT := TglEnableVertexArrayAttribEXT(ProcAddress('glEnableVertexArrayAttribEXT'));
  glEnableVertexArrayEXT := TglEnableVertexArrayEXT(ProcAddress('glEnableVertexArrayEXT'));
  glEnableVertexAttribAPPLE := TglEnableVertexAttribAPPLE(ProcAddress('glEnableVertexAttribAPPLE'));
  glEnableVertexAttribArray := TglEnableVertexAttribArray(ProcAddress('glEnableVertexAttribArray'));
  glEnableVertexAttribArrayARB := TglEnableVertexAttribArrayARB(ProcAddress('glEnableVertexAttribArrayARB'));
  glEnablei := TglEnablei(ProcAddress('glEnablei'));
  glEnableiEXT := TglEnableiEXT(ProcAddress('glEnableiEXT'));
  glEnableiNV := TglEnableiNV(ProcAddress('glEnableiNV'));
  glEnableiOES := TglEnableiOES(ProcAddress('glEnableiOES'));
  glEnd := TglEnd(ProcAddress('glEnd'));
  glEndConditionalRender := TglEndConditionalRender(ProcAddress('glEndConditionalRender'));
  glEndConditionalRenderNV := TglEndConditionalRenderNV(ProcAddress('glEndConditionalRenderNV'));
  glEndConditionalRenderNVX := TglEndConditionalRenderNVX(ProcAddress('glEndConditionalRenderNVX'));
  glEndFragmentShaderATI := TglEndFragmentShaderATI(ProcAddress('glEndFragmentShaderATI'));
  glEndList := TglEndList(ProcAddress('glEndList'));
  glEndOcclusionQueryNV := TglEndOcclusionQueryNV(ProcAddress('glEndOcclusionQueryNV'));
  glEndPerfMonitorAMD := TglEndPerfMonitorAMD(ProcAddress('glEndPerfMonitorAMD'));
  glEndPerfQueryINTEL := TglEndPerfQueryINTEL(ProcAddress('glEndPerfQueryINTEL'));
  glEndQuery := TglEndQuery(ProcAddress('glEndQuery'));
  glEndQueryARB := TglEndQueryARB(ProcAddress('glEndQueryARB'));
  glEndQueryEXT := TglEndQueryEXT(ProcAddress('glEndQueryEXT'));
  glEndQueryIndexed := TglEndQueryIndexed(ProcAddress('glEndQueryIndexed'));
  glEndTilingQCOM := TglEndTilingQCOM(ProcAddress('glEndTilingQCOM'));
  glEndTransformFeedback := TglEndTransformFeedback(ProcAddress('glEndTransformFeedback'));
  glEndTransformFeedbackEXT := TglEndTransformFeedbackEXT(ProcAddress('glEndTransformFeedbackEXT'));
  glEndTransformFeedbackNV := TglEndTransformFeedbackNV(ProcAddress('glEndTransformFeedbackNV'));
  glEndVertexShaderEXT := TglEndVertexShaderEXT(ProcAddress('glEndVertexShaderEXT'));
  glEndVideoCaptureNV := TglEndVideoCaptureNV(ProcAddress('glEndVideoCaptureNV'));
  glEvalCoord1d := TglEvalCoord1d(ProcAddress('glEvalCoord1d'));
  glEvalCoord1dv := TglEvalCoord1dv(ProcAddress('glEvalCoord1dv'));
  glEvalCoord1f := TglEvalCoord1f(ProcAddress('glEvalCoord1f'));
  glEvalCoord1fv := TglEvalCoord1fv(ProcAddress('glEvalCoord1fv'));
  glEvalCoord1xOES := TglEvalCoord1xOES(ProcAddress('glEvalCoord1xOES'));
  glEvalCoord1xvOES := TglEvalCoord1xvOES(ProcAddress('glEvalCoord1xvOES'));
  glEvalCoord2d := TglEvalCoord2d(ProcAddress('glEvalCoord2d'));
  glEvalCoord2dv := TglEvalCoord2dv(ProcAddress('glEvalCoord2dv'));
  glEvalCoord2f := TglEvalCoord2f(ProcAddress('glEvalCoord2f'));
  glEvalCoord2fv := TglEvalCoord2fv(ProcAddress('glEvalCoord2fv'));
  glEvalCoord2xOES := TglEvalCoord2xOES(ProcAddress('glEvalCoord2xOES'));
  glEvalCoord2xvOES := TglEvalCoord2xvOES(ProcAddress('glEvalCoord2xvOES'));
  glEvalMapsNV := TglEvalMapsNV(ProcAddress('glEvalMapsNV'));
  glEvalMesh1 := TglEvalMesh1(ProcAddress('glEvalMesh1'));
  glEvalMesh2 := TglEvalMesh2(ProcAddress('glEvalMesh2'));
  glEvalPoint1 := TglEvalPoint1(ProcAddress('glEvalPoint1'));
  glEvalPoint2 := TglEvalPoint2(ProcAddress('glEvalPoint2'));
  glEvaluateDepthValuesARB := TglEvaluateDepthValuesARB(ProcAddress('glEvaluateDepthValuesARB'));
  glExecuteProgramNV := TglExecuteProgramNV(ProcAddress('glExecuteProgramNV'));
  glExtGetBufferPointervQCOM := TglExtGetBufferPointervQCOM(ProcAddress('glExtGetBufferPointervQCOM'));
  glExtGetBuffersQCOM := TglExtGetBuffersQCOM(ProcAddress('glExtGetBuffersQCOM'));
  glExtGetFramebuffersQCOM := TglExtGetFramebuffersQCOM(ProcAddress('glExtGetFramebuffersQCOM'));
  glExtGetProgramBinarySourceQCOM := TglExtGetProgramBinarySourceQCOM(ProcAddress('glExtGetProgramBinarySourceQCOM'));
  glExtGetProgramsQCOM := TglExtGetProgramsQCOM(ProcAddress('glExtGetProgramsQCOM'));
  glExtGetRenderbuffersQCOM := TglExtGetRenderbuffersQCOM(ProcAddress('glExtGetRenderbuffersQCOM'));
  glExtGetShadersQCOM := TglExtGetShadersQCOM(ProcAddress('glExtGetShadersQCOM'));
  glExtGetTexLevelParameterivQCOM := TglExtGetTexLevelParameterivQCOM(ProcAddress('glExtGetTexLevelParameterivQCOM'));
  glExtGetTexSubImageQCOM := TglExtGetTexSubImageQCOM(ProcAddress('glExtGetTexSubImageQCOM'));
  glExtGetTexturesQCOM := TglExtGetTexturesQCOM(ProcAddress('glExtGetTexturesQCOM'));
  glExtIsProgramBinaryQCOM := TglExtIsProgramBinaryQCOM(ProcAddress('glExtIsProgramBinaryQCOM'));
  glExtTexObjectStateOverrideiQCOM := TglExtTexObjectStateOverrideiQCOM(ProcAddress('glExtTexObjectStateOverrideiQCOM'));
  glExtractComponentEXT := TglExtractComponentEXT(ProcAddress('glExtractComponentEXT'));
  glFeedbackBuffer := TglFeedbackBuffer(ProcAddress('glFeedbackBuffer'));
  glFeedbackBufferxOES := TglFeedbackBufferxOES(ProcAddress('glFeedbackBufferxOES'));
  glFenceSync := TglFenceSync(ProcAddress('glFenceSync'));
  glFenceSyncAPPLE := TglFenceSyncAPPLE(ProcAddress('glFenceSyncAPPLE'));
  glFinalCombinerInputNV := TglFinalCombinerInputNV(ProcAddress('glFinalCombinerInputNV'));
  glFinish := TglFinish(ProcAddress('glFinish'));
  glFinishAsyncSGIX := TglFinishAsyncSGIX(ProcAddress('glFinishAsyncSGIX'));
  glFinishFenceAPPLE := TglFinishFenceAPPLE(ProcAddress('glFinishFenceAPPLE'));
  glFinishFenceNV := TglFinishFenceNV(ProcAddress('glFinishFenceNV'));
  glFinishObjectAPPLE := TglFinishObjectAPPLE(ProcAddress('glFinishObjectAPPLE'));
  glFinishTextureSUNX := TglFinishTextureSUNX(ProcAddress('glFinishTextureSUNX'));
  glFlush := TglFlush(ProcAddress('glFlush'));
  glFlushMappedBufferRange := TglFlushMappedBufferRange(ProcAddress('glFlushMappedBufferRange'));
  glFlushMappedBufferRangeAPPLE := TglFlushMappedBufferRangeAPPLE(ProcAddress('glFlushMappedBufferRangeAPPLE'));
  glFlushMappedBufferRangeEXT := TglFlushMappedBufferRangeEXT(ProcAddress('glFlushMappedBufferRangeEXT'));
  glFlushMappedNamedBufferRange := TglFlushMappedNamedBufferRange(ProcAddress('glFlushMappedNamedBufferRange'));
  glFlushMappedNamedBufferRangeEXT := TglFlushMappedNamedBufferRangeEXT(ProcAddress('glFlushMappedNamedBufferRangeEXT'));
  glFlushPixelDataRangeNV := TglFlushPixelDataRangeNV(ProcAddress('glFlushPixelDataRangeNV'));
  glFlushRasterSGIX := TglFlushRasterSGIX(ProcAddress('glFlushRasterSGIX'));
  glFlushStaticDataIBM := TglFlushStaticDataIBM(ProcAddress('glFlushStaticDataIBM'));
  glFlushVertexArrayRangeAPPLE := TglFlushVertexArrayRangeAPPLE(ProcAddress('glFlushVertexArrayRangeAPPLE'));
  glFlushVertexArrayRangeNV := TglFlushVertexArrayRangeNV(ProcAddress('glFlushVertexArrayRangeNV'));
  glFogCoordFormatNV := TglFogCoordFormatNV(ProcAddress('glFogCoordFormatNV'));
  glFogCoordPointer := TglFogCoordPointer(ProcAddress('glFogCoordPointer'));
  glFogCoordPointerEXT := TglFogCoordPointerEXT(ProcAddress('glFogCoordPointerEXT'));
  glFogCoordPointerListIBM := TglFogCoordPointerListIBM(ProcAddress('glFogCoordPointerListIBM'));
  glFogCoordd := TglFogCoordd(ProcAddress('glFogCoordd'));
  glFogCoorddEXT := TglFogCoorddEXT(ProcAddress('glFogCoorddEXT'));
  glFogCoorddv := TglFogCoorddv(ProcAddress('glFogCoorddv'));
  glFogCoorddvEXT := TglFogCoorddvEXT(ProcAddress('glFogCoorddvEXT'));
  glFogCoordf := TglFogCoordf(ProcAddress('glFogCoordf'));
  glFogCoordfEXT := TglFogCoordfEXT(ProcAddress('glFogCoordfEXT'));
  glFogCoordfv := TglFogCoordfv(ProcAddress('glFogCoordfv'));
  glFogCoordfvEXT := TglFogCoordfvEXT(ProcAddress('glFogCoordfvEXT'));
  glFogCoordhNV := TglFogCoordhNV(ProcAddress('glFogCoordhNV'));
  glFogCoordhvNV := TglFogCoordhvNV(ProcAddress('glFogCoordhvNV'));
  glFogFuncSGIS := TglFogFuncSGIS(ProcAddress('glFogFuncSGIS'));
  glFogf := TglFogf(ProcAddress('glFogf'));
  glFogfv := TglFogfv(ProcAddress('glFogfv'));
  glFogi := TglFogi(ProcAddress('glFogi'));
  glFogiv := TglFogiv(ProcAddress('glFogiv'));
  glFogx := TglFogx(ProcAddress('glFogx'));
  glFogxOES := TglFogxOES(ProcAddress('glFogxOES'));
  glFogxv := TglFogxv(ProcAddress('glFogxv'));
  glFogxvOES := TglFogxvOES(ProcAddress('glFogxvOES'));
  glFragmentColorMaterialSGIX := TglFragmentColorMaterialSGIX(ProcAddress('glFragmentColorMaterialSGIX'));
  glFragmentCoverageColorNV := TglFragmentCoverageColorNV(ProcAddress('glFragmentCoverageColorNV'));
  glFragmentLightModelfSGIX := TglFragmentLightModelfSGIX(ProcAddress('glFragmentLightModelfSGIX'));
  glFragmentLightModelfvSGIX := TglFragmentLightModelfvSGIX(ProcAddress('glFragmentLightModelfvSGIX'));
  glFragmentLightModeliSGIX := TglFragmentLightModeliSGIX(ProcAddress('glFragmentLightModeliSGIX'));
  glFragmentLightModelivSGIX := TglFragmentLightModelivSGIX(ProcAddress('glFragmentLightModelivSGIX'));
  glFragmentLightfSGIX := TglFragmentLightfSGIX(ProcAddress('glFragmentLightfSGIX'));
  glFragmentLightfvSGIX := TglFragmentLightfvSGIX(ProcAddress('glFragmentLightfvSGIX'));
  glFragmentLightiSGIX := TglFragmentLightiSGIX(ProcAddress('glFragmentLightiSGIX'));
  glFragmentLightivSGIX := TglFragmentLightivSGIX(ProcAddress('glFragmentLightivSGIX'));
  glFragmentMaterialfSGIX := TglFragmentMaterialfSGIX(ProcAddress('glFragmentMaterialfSGIX'));
  glFragmentMaterialfvSGIX := TglFragmentMaterialfvSGIX(ProcAddress('glFragmentMaterialfvSGIX'));
  glFragmentMaterialiSGIX := TglFragmentMaterialiSGIX(ProcAddress('glFragmentMaterialiSGIX'));
  glFragmentMaterialivSGIX := TglFragmentMaterialivSGIX(ProcAddress('glFragmentMaterialivSGIX'));
  glFrameTerminatorGREMEDY := TglFrameTerminatorGREMEDY(ProcAddress('glFrameTerminatorGREMEDY'));
  glFrameZoomSGIX := TglFrameZoomSGIX(ProcAddress('glFrameZoomSGIX'));
  glFramebufferDrawBufferEXT := TglFramebufferDrawBufferEXT(ProcAddress('glFramebufferDrawBufferEXT'));
  glFramebufferDrawBuffersEXT := TglFramebufferDrawBuffersEXT(ProcAddress('glFramebufferDrawBuffersEXT'));
  glFramebufferFetchBarrierEXT := TglFramebufferFetchBarrierEXT(ProcAddress('glFramebufferFetchBarrierEXT'));
  glFramebufferFetchBarrierQCOM := TglFramebufferFetchBarrierQCOM(ProcAddress('glFramebufferFetchBarrierQCOM'));
  glFramebufferFoveationConfigQCOM := TglFramebufferFoveationConfigQCOM(ProcAddress('glFramebufferFoveationConfigQCOM'));
  glFramebufferFoveationParametersQCOM := TglFramebufferFoveationParametersQCOM(ProcAddress('glFramebufferFoveationParametersQCOM'));
  glFramebufferParameteri := TglFramebufferParameteri(ProcAddress('glFramebufferParameteri'));
  glFramebufferPixelLocalStorageSizeEXT := TglFramebufferPixelLocalStorageSizeEXT(ProcAddress('glFramebufferPixelLocalStorageSizeEXT'));
  glFramebufferReadBufferEXT := TglFramebufferReadBufferEXT(ProcAddress('glFramebufferReadBufferEXT'));
  glFramebufferRenderbuffer := TglFramebufferRenderbuffer(ProcAddress('glFramebufferRenderbuffer'));
  glFramebufferRenderbufferEXT := TglFramebufferRenderbufferEXT(ProcAddress('glFramebufferRenderbufferEXT'));
  glFramebufferRenderbufferOES := TglFramebufferRenderbufferOES(ProcAddress('glFramebufferRenderbufferOES'));
  glFramebufferSampleLocationsfvARB := TglFramebufferSampleLocationsfvARB(ProcAddress('glFramebufferSampleLocationsfvARB'));
  glFramebufferSampleLocationsfvNV := TglFramebufferSampleLocationsfvNV(ProcAddress('glFramebufferSampleLocationsfvNV'));
  glFramebufferSamplePositionsfvAMD := TglFramebufferSamplePositionsfvAMD(ProcAddress('glFramebufferSamplePositionsfvAMD'));
  glFramebufferShadingRateEXT := TglFramebufferShadingRateEXT(ProcAddress('glFramebufferShadingRateEXT'));
  glFramebufferTexture := TglFramebufferTexture(ProcAddress('glFramebufferTexture'));
  glFramebufferTexture1D := TglFramebufferTexture1D(ProcAddress('glFramebufferTexture1D'));
  glFramebufferTexture1DEXT := TglFramebufferTexture1DEXT(ProcAddress('glFramebufferTexture1DEXT'));
  glFramebufferTexture2D := TglFramebufferTexture2D(ProcAddress('glFramebufferTexture2D'));
  glFramebufferTexture2DEXT := TglFramebufferTexture2DEXT(ProcAddress('glFramebufferTexture2DEXT'));
  glFramebufferTexture2DDownsampleIMG := TglFramebufferTexture2DDownsampleIMG(ProcAddress('glFramebufferTexture2DDownsampleIMG'));
  glFramebufferTexture2DMultisampleEXT := TglFramebufferTexture2DMultisampleEXT(ProcAddress('glFramebufferTexture2DMultisampleEXT'));
  glFramebufferTexture2DMultisampleIMG := TglFramebufferTexture2DMultisampleIMG(ProcAddress('glFramebufferTexture2DMultisampleIMG'));
  glFramebufferTexture2DOES := TglFramebufferTexture2DOES(ProcAddress('glFramebufferTexture2DOES'));
  glFramebufferTexture3D := TglFramebufferTexture3D(ProcAddress('glFramebufferTexture3D'));
  glFramebufferTexture3DEXT := TglFramebufferTexture3DEXT(ProcAddress('glFramebufferTexture3DEXT'));
  glFramebufferTexture3DOES := TglFramebufferTexture3DOES(ProcAddress('glFramebufferTexture3DOES'));
  glFramebufferTextureARB := TglFramebufferTextureARB(ProcAddress('glFramebufferTextureARB'));
  glFramebufferTextureEXT := TglFramebufferTextureEXT(ProcAddress('glFramebufferTextureEXT'));
  glFramebufferTextureFaceARB := TglFramebufferTextureFaceARB(ProcAddress('glFramebufferTextureFaceARB'));
  glFramebufferTextureFaceEXT := TglFramebufferTextureFaceEXT(ProcAddress('glFramebufferTextureFaceEXT'));
  glFramebufferTextureLayer := TglFramebufferTextureLayer(ProcAddress('glFramebufferTextureLayer'));
  glFramebufferTextureLayerARB := TglFramebufferTextureLayerARB(ProcAddress('glFramebufferTextureLayerARB'));
  glFramebufferTextureLayerEXT := TglFramebufferTextureLayerEXT(ProcAddress('glFramebufferTextureLayerEXT'));
  glFramebufferTextureLayerDownsampleIMG := TglFramebufferTextureLayerDownsampleIMG(ProcAddress('glFramebufferTextureLayerDownsampleIMG'));
  glFramebufferTextureMultisampleMultiviewOVR := TglFramebufferTextureMultisampleMultiviewOVR(ProcAddress('glFramebufferTextureMultisampleMultiviewOVR'));
  glFramebufferTextureMultiviewOVR := TglFramebufferTextureMultiviewOVR(ProcAddress('glFramebufferTextureMultiviewOVR'));
  glFramebufferTextureOES := TglFramebufferTextureOES(ProcAddress('glFramebufferTextureOES'));
  glFreeObjectBufferATI := TglFreeObjectBufferATI(ProcAddress('glFreeObjectBufferATI'));
  glFrontFace := TglFrontFace(ProcAddress('glFrontFace'));
  glFrustum := TglFrustum(ProcAddress('glFrustum'));
  glFrustumf := TglFrustumf(ProcAddress('glFrustumf'));
  glFrustumfOES := TglFrustumfOES(ProcAddress('glFrustumfOES'));
  glFrustumx := TglFrustumx(ProcAddress('glFrustumx'));
  glFrustumxOES := TglFrustumxOES(ProcAddress('glFrustumxOES'));
  glGenAsyncMarkersSGIX := TglGenAsyncMarkersSGIX(ProcAddress('glGenAsyncMarkersSGIX'));
  glGenBuffers := TglGenBuffers(ProcAddress('glGenBuffers'));
  glGenBuffersARB := TglGenBuffersARB(ProcAddress('glGenBuffersARB'));
  glGenFencesAPPLE := TglGenFencesAPPLE(ProcAddress('glGenFencesAPPLE'));
  glGenFencesNV := TglGenFencesNV(ProcAddress('glGenFencesNV'));
  glGenFragmentShadersATI := TglGenFragmentShadersATI(ProcAddress('glGenFragmentShadersATI'));
  glGenFramebuffers := TglGenFramebuffers(ProcAddress('glGenFramebuffers'));
  glGenFramebuffersEXT := TglGenFramebuffersEXT(ProcAddress('glGenFramebuffersEXT'));
  glGenFramebuffersOES := TglGenFramebuffersOES(ProcAddress('glGenFramebuffersOES'));
  glGenLists := TglGenLists(ProcAddress('glGenLists'));
  glGenNamesAMD := TglGenNamesAMD(ProcAddress('glGenNamesAMD'));
  glGenOcclusionQueriesNV := TglGenOcclusionQueriesNV(ProcAddress('glGenOcclusionQueriesNV'));
  glGenPathsNV := TglGenPathsNV(ProcAddress('glGenPathsNV'));
  glGenPerfMonitorsAMD := TglGenPerfMonitorsAMD(ProcAddress('glGenPerfMonitorsAMD'));
  glGenProgramPipelines := TglGenProgramPipelines(ProcAddress('glGenProgramPipelines'));
  glGenProgramPipelinesEXT := TglGenProgramPipelinesEXT(ProcAddress('glGenProgramPipelinesEXT'));
  glGenProgramsARB := TglGenProgramsARB(ProcAddress('glGenProgramsARB'));
  glGenProgramsNV := TglGenProgramsNV(ProcAddress('glGenProgramsNV'));
  glGenQueries := TglGenQueries(ProcAddress('glGenQueries'));
  glGenQueriesARB := TglGenQueriesARB(ProcAddress('glGenQueriesARB'));
  glGenQueriesEXT := TglGenQueriesEXT(ProcAddress('glGenQueriesEXT'));
  glGenQueryResourceTagNV := TglGenQueryResourceTagNV(ProcAddress('glGenQueryResourceTagNV'));
  glGenRenderbuffers := TglGenRenderbuffers(ProcAddress('glGenRenderbuffers'));
  glGenRenderbuffersEXT := TglGenRenderbuffersEXT(ProcAddress('glGenRenderbuffersEXT'));
  glGenRenderbuffersOES := TglGenRenderbuffersOES(ProcAddress('glGenRenderbuffersOES'));
  glGenSamplers := TglGenSamplers(ProcAddress('glGenSamplers'));
  glGenSemaphoresEXT := TglGenSemaphoresEXT(ProcAddress('glGenSemaphoresEXT'));
  glGenSymbolsEXT := TglGenSymbolsEXT(ProcAddress('glGenSymbolsEXT'));
  glGenTextures := TglGenTextures(ProcAddress('glGenTextures'));
  glGenTexturesEXT := TglGenTexturesEXT(ProcAddress('glGenTexturesEXT'));
  glGenTransformFeedbacks := TglGenTransformFeedbacks(ProcAddress('glGenTransformFeedbacks'));
  glGenTransformFeedbacksNV := TglGenTransformFeedbacksNV(ProcAddress('glGenTransformFeedbacksNV'));
  glGenVertexArrays := TglGenVertexArrays(ProcAddress('glGenVertexArrays'));
  glGenVertexArraysAPPLE := TglGenVertexArraysAPPLE(ProcAddress('glGenVertexArraysAPPLE'));
  glGenVertexArraysOES := TglGenVertexArraysOES(ProcAddress('glGenVertexArraysOES'));
  glGenVertexShadersEXT := TglGenVertexShadersEXT(ProcAddress('glGenVertexShadersEXT'));
  glGenerateMipmap := TglGenerateMipmap(ProcAddress('glGenerateMipmap'));
  glGenerateMipmapEXT := TglGenerateMipmapEXT(ProcAddress('glGenerateMipmapEXT'));
  glGenerateMipmapOES := TglGenerateMipmapOES(ProcAddress('glGenerateMipmapOES'));
  glGenerateMultiTexMipmapEXT := TglGenerateMultiTexMipmapEXT(ProcAddress('glGenerateMultiTexMipmapEXT'));
  glGenerateTextureMipmap := TglGenerateTextureMipmap(ProcAddress('glGenerateTextureMipmap'));
  glGenerateTextureMipmapEXT := TglGenerateTextureMipmapEXT(ProcAddress('glGenerateTextureMipmapEXT'));
  glGetActiveAtomicCounterBufferiv := TglGetActiveAtomicCounterBufferiv(ProcAddress('glGetActiveAtomicCounterBufferiv'));
  glGetActiveAttrib := TglGetActiveAttrib(ProcAddress('glGetActiveAttrib'));
  glGetActiveAttribARB := TglGetActiveAttribARB(ProcAddress('glGetActiveAttribARB'));
  glGetActiveSubroutineName := TglGetActiveSubroutineName(ProcAddress('glGetActiveSubroutineName'));
  glGetActiveSubroutineUniformName := TglGetActiveSubroutineUniformName(ProcAddress('glGetActiveSubroutineUniformName'));
  glGetActiveSubroutineUniformiv := TglGetActiveSubroutineUniformiv(ProcAddress('glGetActiveSubroutineUniformiv'));
  glGetActiveUniform := TglGetActiveUniform(ProcAddress('glGetActiveUniform'));
  glGetActiveUniformARB := TglGetActiveUniformARB(ProcAddress('glGetActiveUniformARB'));
  glGetActiveUniformBlockName := TglGetActiveUniformBlockName(ProcAddress('glGetActiveUniformBlockName'));
  glGetActiveUniformBlockiv := TglGetActiveUniformBlockiv(ProcAddress('glGetActiveUniformBlockiv'));
  glGetActiveUniformName := TglGetActiveUniformName(ProcAddress('glGetActiveUniformName'));
  glGetActiveUniformsiv := TglGetActiveUniformsiv(ProcAddress('glGetActiveUniformsiv'));
  glGetActiveVaryingNV := TglGetActiveVaryingNV(ProcAddress('glGetActiveVaryingNV'));
  glGetArrayObjectfvATI := TglGetArrayObjectfvATI(ProcAddress('glGetArrayObjectfvATI'));
  glGetArrayObjectivATI := TglGetArrayObjectivATI(ProcAddress('glGetArrayObjectivATI'));
  glGetAttachedObjectsARB := TglGetAttachedObjectsARB(ProcAddress('glGetAttachedObjectsARB'));
  glGetAttachedShaders := TglGetAttachedShaders(ProcAddress('glGetAttachedShaders'));
  glGetAttribLocation := TglGetAttribLocation(ProcAddress('glGetAttribLocation'));
  glGetAttribLocationARB := TglGetAttribLocationARB(ProcAddress('glGetAttribLocationARB'));
  glGetBooleanIndexedvEXT := TglGetBooleanIndexedvEXT(ProcAddress('glGetBooleanIndexedvEXT'));
  glGetBooleani_v := TglGetBooleani_v(ProcAddress('glGetBooleani_v'));
  glGetBooleanv := TglGetBooleanv(ProcAddress('glGetBooleanv'));
  glGetBufferParameteri64v := TglGetBufferParameteri64v(ProcAddress('glGetBufferParameteri64v'));
  glGetBufferParameteriv := TglGetBufferParameteriv(ProcAddress('glGetBufferParameteriv'));
  glGetBufferParameterivARB := TglGetBufferParameterivARB(ProcAddress('glGetBufferParameterivARB'));
  glGetBufferParameterui64vNV := TglGetBufferParameterui64vNV(ProcAddress('glGetBufferParameterui64vNV'));
  glGetBufferPointerv := TglGetBufferPointerv(ProcAddress('glGetBufferPointerv'));
  glGetBufferPointervARB := TglGetBufferPointervARB(ProcAddress('glGetBufferPointervARB'));
  glGetBufferPointervOES := TglGetBufferPointervOES(ProcAddress('glGetBufferPointervOES'));
  glGetBufferSubData := TglGetBufferSubData(ProcAddress('glGetBufferSubData'));
  glGetBufferSubDataARB := TglGetBufferSubDataARB(ProcAddress('glGetBufferSubDataARB'));
  glGetClipPlane := TglGetClipPlane(ProcAddress('glGetClipPlane'));
  glGetClipPlanef := TglGetClipPlanef(ProcAddress('glGetClipPlanef'));
  glGetClipPlanefOES := TglGetClipPlanefOES(ProcAddress('glGetClipPlanefOES'));
  glGetClipPlanex := TglGetClipPlanex(ProcAddress('glGetClipPlanex'));
  glGetClipPlanexOES := TglGetClipPlanexOES(ProcAddress('glGetClipPlanexOES'));
  glGetColorTable := TglGetColorTable(ProcAddress('glGetColorTable'));
  glGetColorTableEXT := TglGetColorTableEXT(ProcAddress('glGetColorTableEXT'));
  glGetColorTableParameterfv := TglGetColorTableParameterfv(ProcAddress('glGetColorTableParameterfv'));
  glGetColorTableParameterfvEXT := TglGetColorTableParameterfvEXT(ProcAddress('glGetColorTableParameterfvEXT'));
  glGetColorTableParameterfvSGI := TglGetColorTableParameterfvSGI(ProcAddress('glGetColorTableParameterfvSGI'));
  glGetColorTableParameteriv := TglGetColorTableParameteriv(ProcAddress('glGetColorTableParameteriv'));
  glGetColorTableParameterivEXT := TglGetColorTableParameterivEXT(ProcAddress('glGetColorTableParameterivEXT'));
  glGetColorTableParameterivSGI := TglGetColorTableParameterivSGI(ProcAddress('glGetColorTableParameterivSGI'));
  glGetColorTableSGI := TglGetColorTableSGI(ProcAddress('glGetColorTableSGI'));
  glGetCombinerInputParameterfvNV := TglGetCombinerInputParameterfvNV(ProcAddress('glGetCombinerInputParameterfvNV'));
  glGetCombinerInputParameterivNV := TglGetCombinerInputParameterivNV(ProcAddress('glGetCombinerInputParameterivNV'));
  glGetCombinerOutputParameterfvNV := TglGetCombinerOutputParameterfvNV(ProcAddress('glGetCombinerOutputParameterfvNV'));
  glGetCombinerOutputParameterivNV := TglGetCombinerOutputParameterivNV(ProcAddress('glGetCombinerOutputParameterivNV'));
  glGetCombinerStageParameterfvNV := TglGetCombinerStageParameterfvNV(ProcAddress('glGetCombinerStageParameterfvNV'));
  glGetCommandHeaderNV := TglGetCommandHeaderNV(ProcAddress('glGetCommandHeaderNV'));
  glGetCompressedMultiTexImageEXT := TglGetCompressedMultiTexImageEXT(ProcAddress('glGetCompressedMultiTexImageEXT'));
  glGetCompressedTexImage := TglGetCompressedTexImage(ProcAddress('glGetCompressedTexImage'));
  glGetCompressedTexImageARB := TglGetCompressedTexImageARB(ProcAddress('glGetCompressedTexImageARB'));
  glGetCompressedTextureImage := TglGetCompressedTextureImage(ProcAddress('glGetCompressedTextureImage'));
  glGetCompressedTextureImageEXT := TglGetCompressedTextureImageEXT(ProcAddress('glGetCompressedTextureImageEXT'));
  glGetCompressedTextureSubImage := TglGetCompressedTextureSubImage(ProcAddress('glGetCompressedTextureSubImage'));
  glGetConvolutionFilter := TglGetConvolutionFilter(ProcAddress('glGetConvolutionFilter'));
  glGetConvolutionFilterEXT := TglGetConvolutionFilterEXT(ProcAddress('glGetConvolutionFilterEXT'));
  glGetConvolutionParameterfv := TglGetConvolutionParameterfv(ProcAddress('glGetConvolutionParameterfv'));
  glGetConvolutionParameterfvEXT := TglGetConvolutionParameterfvEXT(ProcAddress('glGetConvolutionParameterfvEXT'));
  glGetConvolutionParameteriv := TglGetConvolutionParameteriv(ProcAddress('glGetConvolutionParameteriv'));
  glGetConvolutionParameterivEXT := TglGetConvolutionParameterivEXT(ProcAddress('glGetConvolutionParameterivEXT'));
  glGetConvolutionParameterxvOES := TglGetConvolutionParameterxvOES(ProcAddress('glGetConvolutionParameterxvOES'));
  glGetCoverageModulationTableNV := TglGetCoverageModulationTableNV(ProcAddress('glGetCoverageModulationTableNV'));
  glGetDebugMessageLog := TglGetDebugMessageLog(ProcAddress('glGetDebugMessageLog'));
  glGetDebugMessageLogAMD := TglGetDebugMessageLogAMD(ProcAddress('glGetDebugMessageLogAMD'));
  glGetDebugMessageLogARB := TglGetDebugMessageLogARB(ProcAddress('glGetDebugMessageLogARB'));
  glGetDebugMessageLogKHR := TglGetDebugMessageLogKHR(ProcAddress('glGetDebugMessageLogKHR'));
  glGetDetailTexFuncSGIS := TglGetDetailTexFuncSGIS(ProcAddress('glGetDetailTexFuncSGIS'));
  glGetDoubleIndexedvEXT := TglGetDoubleIndexedvEXT(ProcAddress('glGetDoubleIndexedvEXT'));
  glGetDoublei_v := TglGetDoublei_v(ProcAddress('glGetDoublei_v'));
  glGetDoublei_vEXT := TglGetDoublei_vEXT(ProcAddress('glGetDoublei_vEXT'));
  glGetDoublev := TglGetDoublev(ProcAddress('glGetDoublev'));
  glGetDriverControlStringQCOM := TglGetDriverControlStringQCOM(ProcAddress('glGetDriverControlStringQCOM'));
  glGetDriverControlsQCOM := TglGetDriverControlsQCOM(ProcAddress('glGetDriverControlsQCOM'));
  glGetError := TglGetError(ProcAddress('glGetError'));
  glGetFenceivNV := TglGetFenceivNV(ProcAddress('glGetFenceivNV'));
  glGetFinalCombinerInputParameterfvNV := TglGetFinalCombinerInputParameterfvNV(ProcAddress('glGetFinalCombinerInputParameterfvNV'));
  glGetFinalCombinerInputParameterivNV := TglGetFinalCombinerInputParameterivNV(ProcAddress('glGetFinalCombinerInputParameterivNV'));
  glGetFirstPerfQueryIdINTEL := TglGetFirstPerfQueryIdINTEL(ProcAddress('glGetFirstPerfQueryIdINTEL'));
  glGetFixedv := TglGetFixedv(ProcAddress('glGetFixedv'));
  glGetFixedvOES := TglGetFixedvOES(ProcAddress('glGetFixedvOES'));
  glGetFloatIndexedvEXT := TglGetFloatIndexedvEXT(ProcAddress('glGetFloatIndexedvEXT'));
  glGetFloati_v := TglGetFloati_v(ProcAddress('glGetFloati_v'));
  glGetFloati_vEXT := TglGetFloati_vEXT(ProcAddress('glGetFloati_vEXT'));
  glGetFloati_vNV := TglGetFloati_vNV(ProcAddress('glGetFloati_vNV'));
  glGetFloati_vOES := TglGetFloati_vOES(ProcAddress('glGetFloati_vOES'));
  glGetFloatv := TglGetFloatv(ProcAddress('glGetFloatv'));
  glGetFogFuncSGIS := TglGetFogFuncSGIS(ProcAddress('glGetFogFuncSGIS'));
  glGetFragDataIndex := TglGetFragDataIndex(ProcAddress('glGetFragDataIndex'));
  glGetFragDataIndexEXT := TglGetFragDataIndexEXT(ProcAddress('glGetFragDataIndexEXT'));
  glGetFragDataLocation := TglGetFragDataLocation(ProcAddress('glGetFragDataLocation'));
  glGetFragDataLocationEXT := TglGetFragDataLocationEXT(ProcAddress('glGetFragDataLocationEXT'));
  glGetFragmentLightfvSGIX := TglGetFragmentLightfvSGIX(ProcAddress('glGetFragmentLightfvSGIX'));
  glGetFragmentLightivSGIX := TglGetFragmentLightivSGIX(ProcAddress('glGetFragmentLightivSGIX'));
  glGetFragmentMaterialfvSGIX := TglGetFragmentMaterialfvSGIX(ProcAddress('glGetFragmentMaterialfvSGIX'));
  glGetFragmentMaterialivSGIX := TglGetFragmentMaterialivSGIX(ProcAddress('glGetFragmentMaterialivSGIX'));
  glGetFragmentShadingRatesEXT := TglGetFragmentShadingRatesEXT(ProcAddress('glGetFragmentShadingRatesEXT'));
  glGetFramebufferAttachmentParameteriv := TglGetFramebufferAttachmentParameteriv(ProcAddress('glGetFramebufferAttachmentParameteriv'));
  glGetFramebufferAttachmentParameterivEXT := TglGetFramebufferAttachmentParameterivEXT(ProcAddress('glGetFramebufferAttachmentParameterivEXT'));
  glGetFramebufferAttachmentParameterivOES := TglGetFramebufferAttachmentParameterivOES(ProcAddress('glGetFramebufferAttachmentParameterivOES'));
  glGetFramebufferParameterfvAMD := TglGetFramebufferParameterfvAMD(ProcAddress('glGetFramebufferParameterfvAMD'));
  glGetFramebufferParameteriv := TglGetFramebufferParameteriv(ProcAddress('glGetFramebufferParameteriv'));
  glGetFramebufferParameterivEXT := TglGetFramebufferParameterivEXT(ProcAddress('glGetFramebufferParameterivEXT'));
  glGetFramebufferPixelLocalStorageSizeEXT := TglGetFramebufferPixelLocalStorageSizeEXT(ProcAddress('glGetFramebufferPixelLocalStorageSizeEXT'));
  glGetGraphicsResetStatus := TglGetGraphicsResetStatus(ProcAddress('glGetGraphicsResetStatus'));
  glGetGraphicsResetStatusARB := TglGetGraphicsResetStatusARB(ProcAddress('glGetGraphicsResetStatusARB'));
  glGetGraphicsResetStatusEXT := TglGetGraphicsResetStatusEXT(ProcAddress('glGetGraphicsResetStatusEXT'));
  glGetGraphicsResetStatusKHR := TglGetGraphicsResetStatusKHR(ProcAddress('glGetGraphicsResetStatusKHR'));
  glGetHandleARB := TglGetHandleARB(ProcAddress('glGetHandleARB'));
  glGetHistogram := TglGetHistogram(ProcAddress('glGetHistogram'));
  glGetHistogramEXT := TglGetHistogramEXT(ProcAddress('glGetHistogramEXT'));
  glGetHistogramParameterfv := TglGetHistogramParameterfv(ProcAddress('glGetHistogramParameterfv'));
  glGetHistogramParameterfvEXT := TglGetHistogramParameterfvEXT(ProcAddress('glGetHistogramParameterfvEXT'));
  glGetHistogramParameteriv := TglGetHistogramParameteriv(ProcAddress('glGetHistogramParameteriv'));
  glGetHistogramParameterivEXT := TglGetHistogramParameterivEXT(ProcAddress('glGetHistogramParameterivEXT'));
  glGetHistogramParameterxvOES := TglGetHistogramParameterxvOES(ProcAddress('glGetHistogramParameterxvOES'));
  glGetImageHandleARB := TglGetImageHandleARB(ProcAddress('glGetImageHandleARB'));
  glGetImageHandleNV := TglGetImageHandleNV(ProcAddress('glGetImageHandleNV'));
  glGetImageTransformParameterfvHP := TglGetImageTransformParameterfvHP(ProcAddress('glGetImageTransformParameterfvHP'));
  glGetImageTransformParameterivHP := TglGetImageTransformParameterivHP(ProcAddress('glGetImageTransformParameterivHP'));
  glGetInfoLogARB := TglGetInfoLogARB(ProcAddress('glGetInfoLogARB'));
  glGetInstrumentsSGIX := TglGetInstrumentsSGIX(ProcAddress('glGetInstrumentsSGIX'));
  glGetInteger64i_v := TglGetInteger64i_v(ProcAddress('glGetInteger64i_v'));
  glGetInteger64v := TglGetInteger64v(ProcAddress('glGetInteger64v'));
  glGetInteger64vAPPLE := TglGetInteger64vAPPLE(ProcAddress('glGetInteger64vAPPLE'));
  glGetInteger64vEXT := TglGetInteger64vEXT(ProcAddress('glGetInteger64vEXT'));
  glGetIntegerIndexedvEXT := TglGetIntegerIndexedvEXT(ProcAddress('glGetIntegerIndexedvEXT'));
  glGetIntegeri_v := TglGetIntegeri_v(ProcAddress('glGetIntegeri_v'));
  glGetIntegeri_vEXT := TglGetIntegeri_vEXT(ProcAddress('glGetIntegeri_vEXT'));
  glGetIntegerui64i_vNV := TglGetIntegerui64i_vNV(ProcAddress('glGetIntegerui64i_vNV'));
  glGetIntegerui64vNV := TglGetIntegerui64vNV(ProcAddress('glGetIntegerui64vNV'));
  glGetIntegerv := TglGetIntegerv(ProcAddress('glGetIntegerv'));
  glGetInternalformatSampleivNV := TglGetInternalformatSampleivNV(ProcAddress('glGetInternalformatSampleivNV'));
  glGetInternalformati64v := TglGetInternalformati64v(ProcAddress('glGetInternalformati64v'));
  glGetInternalformativ := TglGetInternalformativ(ProcAddress('glGetInternalformativ'));
  glGetInvariantBooleanvEXT := TglGetInvariantBooleanvEXT(ProcAddress('glGetInvariantBooleanvEXT'));
  glGetInvariantFloatvEXT := TglGetInvariantFloatvEXT(ProcAddress('glGetInvariantFloatvEXT'));
  glGetInvariantIntegervEXT := TglGetInvariantIntegervEXT(ProcAddress('glGetInvariantIntegervEXT'));
  glGetLightfv := TglGetLightfv(ProcAddress('glGetLightfv'));
  glGetLightiv := TglGetLightiv(ProcAddress('glGetLightiv'));
  glGetLightxOES := TglGetLightxOES(ProcAddress('glGetLightxOES'));
  glGetLightxv := TglGetLightxv(ProcAddress('glGetLightxv'));
  glGetLightxvOES := TglGetLightxvOES(ProcAddress('glGetLightxvOES'));
  glGetListParameterfvSGIX := TglGetListParameterfvSGIX(ProcAddress('glGetListParameterfvSGIX'));
  glGetListParameterivSGIX := TglGetListParameterivSGIX(ProcAddress('glGetListParameterivSGIX'));
  glGetLocalConstantBooleanvEXT := TglGetLocalConstantBooleanvEXT(ProcAddress('glGetLocalConstantBooleanvEXT'));
  glGetLocalConstantFloatvEXT := TglGetLocalConstantFloatvEXT(ProcAddress('glGetLocalConstantFloatvEXT'));
  glGetLocalConstantIntegervEXT := TglGetLocalConstantIntegervEXT(ProcAddress('glGetLocalConstantIntegervEXT'));
  glGetMapAttribParameterfvNV := TglGetMapAttribParameterfvNV(ProcAddress('glGetMapAttribParameterfvNV'));
  glGetMapAttribParameterivNV := TglGetMapAttribParameterivNV(ProcAddress('glGetMapAttribParameterivNV'));
  glGetMapControlPointsNV := TglGetMapControlPointsNV(ProcAddress('glGetMapControlPointsNV'));
  glGetMapParameterfvNV := TglGetMapParameterfvNV(ProcAddress('glGetMapParameterfvNV'));
  glGetMapParameterivNV := TglGetMapParameterivNV(ProcAddress('glGetMapParameterivNV'));
  glGetMapdv := TglGetMapdv(ProcAddress('glGetMapdv'));
  glGetMapfv := TglGetMapfv(ProcAddress('glGetMapfv'));
  glGetMapiv := TglGetMapiv(ProcAddress('glGetMapiv'));
  glGetMapxvOES := TglGetMapxvOES(ProcAddress('glGetMapxvOES'));
  glGetMaterialfv := TglGetMaterialfv(ProcAddress('glGetMaterialfv'));
  glGetMaterialiv := TglGetMaterialiv(ProcAddress('glGetMaterialiv'));
  glGetMaterialxOES := TglGetMaterialxOES(ProcAddress('glGetMaterialxOES'));
  glGetMaterialxv := TglGetMaterialxv(ProcAddress('glGetMaterialxv'));
  glGetMaterialxvOES := TglGetMaterialxvOES(ProcAddress('glGetMaterialxvOES'));
  glGetMemoryObjectDetachedResourcesuivNV := TglGetMemoryObjectDetachedResourcesuivNV(ProcAddress('glGetMemoryObjectDetachedResourcesuivNV'));
  glGetMemoryObjectParameterivEXT := TglGetMemoryObjectParameterivEXT(ProcAddress('glGetMemoryObjectParameterivEXT'));
  glGetMinmax := TglGetMinmax(ProcAddress('glGetMinmax'));
  glGetMinmaxEXT := TglGetMinmaxEXT(ProcAddress('glGetMinmaxEXT'));
  glGetMinmaxParameterfv := TglGetMinmaxParameterfv(ProcAddress('glGetMinmaxParameterfv'));
  glGetMinmaxParameterfvEXT := TglGetMinmaxParameterfvEXT(ProcAddress('glGetMinmaxParameterfvEXT'));
  glGetMinmaxParameteriv := TglGetMinmaxParameteriv(ProcAddress('glGetMinmaxParameteriv'));
  glGetMinmaxParameterivEXT := TglGetMinmaxParameterivEXT(ProcAddress('glGetMinmaxParameterivEXT'));
  glGetMultiTexEnvfvEXT := TglGetMultiTexEnvfvEXT(ProcAddress('glGetMultiTexEnvfvEXT'));
  glGetMultiTexEnvivEXT := TglGetMultiTexEnvivEXT(ProcAddress('glGetMultiTexEnvivEXT'));
  glGetMultiTexGendvEXT := TglGetMultiTexGendvEXT(ProcAddress('glGetMultiTexGendvEXT'));
  glGetMultiTexGenfvEXT := TglGetMultiTexGenfvEXT(ProcAddress('glGetMultiTexGenfvEXT'));
  glGetMultiTexGenivEXT := TglGetMultiTexGenivEXT(ProcAddress('glGetMultiTexGenivEXT'));
  glGetMultiTexImageEXT := TglGetMultiTexImageEXT(ProcAddress('glGetMultiTexImageEXT'));
  glGetMultiTexLevelParameterfvEXT := TglGetMultiTexLevelParameterfvEXT(ProcAddress('glGetMultiTexLevelParameterfvEXT'));
  glGetMultiTexLevelParameterivEXT := TglGetMultiTexLevelParameterivEXT(ProcAddress('glGetMultiTexLevelParameterivEXT'));
  glGetMultiTexParameterIivEXT := TglGetMultiTexParameterIivEXT(ProcAddress('glGetMultiTexParameterIivEXT'));
  glGetMultiTexParameterIuivEXT := TglGetMultiTexParameterIuivEXT(ProcAddress('glGetMultiTexParameterIuivEXT'));
  glGetMultiTexParameterfvEXT := TglGetMultiTexParameterfvEXT(ProcAddress('glGetMultiTexParameterfvEXT'));
  glGetMultiTexParameterivEXT := TglGetMultiTexParameterivEXT(ProcAddress('glGetMultiTexParameterivEXT'));
  glGetMultisamplefv := TglGetMultisamplefv(ProcAddress('glGetMultisamplefv'));
  glGetMultisamplefvNV := TglGetMultisamplefvNV(ProcAddress('glGetMultisamplefvNV'));
  glGetNamedBufferParameteri64v := TglGetNamedBufferParameteri64v(ProcAddress('glGetNamedBufferParameteri64v'));
  glGetNamedBufferParameteriv := TglGetNamedBufferParameteriv(ProcAddress('glGetNamedBufferParameteriv'));
  glGetNamedBufferParameterivEXT := TglGetNamedBufferParameterivEXT(ProcAddress('glGetNamedBufferParameterivEXT'));
  glGetNamedBufferParameterui64vNV := TglGetNamedBufferParameterui64vNV(ProcAddress('glGetNamedBufferParameterui64vNV'));
  glGetNamedBufferPointerv := TglGetNamedBufferPointerv(ProcAddress('glGetNamedBufferPointerv'));
  glGetNamedBufferPointervEXT := TglGetNamedBufferPointervEXT(ProcAddress('glGetNamedBufferPointervEXT'));
  glGetNamedBufferSubData := TglGetNamedBufferSubData(ProcAddress('glGetNamedBufferSubData'));
  glGetNamedBufferSubDataEXT := TglGetNamedBufferSubDataEXT(ProcAddress('glGetNamedBufferSubDataEXT'));
  glGetNamedFramebufferParameterfvAMD := TglGetNamedFramebufferParameterfvAMD(ProcAddress('glGetNamedFramebufferParameterfvAMD'));
  glGetNamedFramebufferAttachmentParameteriv := TglGetNamedFramebufferAttachmentParameteriv(ProcAddress('glGetNamedFramebufferAttachmentParameteriv'));
  glGetNamedFramebufferAttachmentParameterivEXT := TglGetNamedFramebufferAttachmentParameterivEXT(ProcAddress('glGetNamedFramebufferAttachmentParameterivEXT'));
  glGetNamedFramebufferParameteriv := TglGetNamedFramebufferParameteriv(ProcAddress('glGetNamedFramebufferParameteriv'));
  glGetNamedFramebufferParameterivEXT := TglGetNamedFramebufferParameterivEXT(ProcAddress('glGetNamedFramebufferParameterivEXT'));
  glGetNamedProgramLocalParameterIivEXT := TglGetNamedProgramLocalParameterIivEXT(ProcAddress('glGetNamedProgramLocalParameterIivEXT'));
  glGetNamedProgramLocalParameterIuivEXT := TglGetNamedProgramLocalParameterIuivEXT(ProcAddress('glGetNamedProgramLocalParameterIuivEXT'));
  glGetNamedProgramLocalParameterdvEXT := TglGetNamedProgramLocalParameterdvEXT(ProcAddress('glGetNamedProgramLocalParameterdvEXT'));
  glGetNamedProgramLocalParameterfvEXT := TglGetNamedProgramLocalParameterfvEXT(ProcAddress('glGetNamedProgramLocalParameterfvEXT'));
  glGetNamedProgramStringEXT := TglGetNamedProgramStringEXT(ProcAddress('glGetNamedProgramStringEXT'));
  glGetNamedProgramivEXT := TglGetNamedProgramivEXT(ProcAddress('glGetNamedProgramivEXT'));
  glGetNamedRenderbufferParameteriv := TglGetNamedRenderbufferParameteriv(ProcAddress('glGetNamedRenderbufferParameteriv'));
  glGetNamedRenderbufferParameterivEXT := TglGetNamedRenderbufferParameterivEXT(ProcAddress('glGetNamedRenderbufferParameterivEXT'));
  glGetNamedStringARB := TglGetNamedStringARB(ProcAddress('glGetNamedStringARB'));
  glGetNamedStringivARB := TglGetNamedStringivARB(ProcAddress('glGetNamedStringivARB'));
  glGetNextPerfQueryIdINTEL := TglGetNextPerfQueryIdINTEL(ProcAddress('glGetNextPerfQueryIdINTEL'));
  glGetObjectBufferfvATI := TglGetObjectBufferfvATI(ProcAddress('glGetObjectBufferfvATI'));
  glGetObjectBufferivATI := TglGetObjectBufferivATI(ProcAddress('glGetObjectBufferivATI'));
  glGetObjectLabel := TglGetObjectLabel(ProcAddress('glGetObjectLabel'));
  glGetObjectLabelEXT := TglGetObjectLabelEXT(ProcAddress('glGetObjectLabelEXT'));
  glGetObjectLabelKHR := TglGetObjectLabelKHR(ProcAddress('glGetObjectLabelKHR'));
  glGetObjectParameterfvARB := TglGetObjectParameterfvARB(ProcAddress('glGetObjectParameterfvARB'));
  glGetObjectParameterivAPPLE := TglGetObjectParameterivAPPLE(ProcAddress('glGetObjectParameterivAPPLE'));
  glGetObjectParameterivARB := TglGetObjectParameterivARB(ProcAddress('glGetObjectParameterivARB'));
  glGetObjectPtrLabel := TglGetObjectPtrLabel(ProcAddress('glGetObjectPtrLabel'));
  glGetObjectPtrLabelKHR := TglGetObjectPtrLabelKHR(ProcAddress('glGetObjectPtrLabelKHR'));
  glGetOcclusionQueryivNV := TglGetOcclusionQueryivNV(ProcAddress('glGetOcclusionQueryivNV'));
  glGetOcclusionQueryuivNV := TglGetOcclusionQueryuivNV(ProcAddress('glGetOcclusionQueryuivNV'));
  glGetPathColorGenfvNV := TglGetPathColorGenfvNV(ProcAddress('glGetPathColorGenfvNV'));
  glGetPathColorGenivNV := TglGetPathColorGenivNV(ProcAddress('glGetPathColorGenivNV'));
  glGetPathCommandsNV := TglGetPathCommandsNV(ProcAddress('glGetPathCommandsNV'));
  glGetPathCoordsNV := TglGetPathCoordsNV(ProcAddress('glGetPathCoordsNV'));
  glGetPathDashArrayNV := TglGetPathDashArrayNV(ProcAddress('glGetPathDashArrayNV'));
  glGetPathLengthNV := TglGetPathLengthNV(ProcAddress('glGetPathLengthNV'));
  glGetPathMetricRangeNV := TglGetPathMetricRangeNV(ProcAddress('glGetPathMetricRangeNV'));
  glGetPathMetricsNV := TglGetPathMetricsNV(ProcAddress('glGetPathMetricsNV'));
  glGetPathParameterfvNV := TglGetPathParameterfvNV(ProcAddress('glGetPathParameterfvNV'));
  glGetPathParameterivNV := TglGetPathParameterivNV(ProcAddress('glGetPathParameterivNV'));
  glGetPathSpacingNV := TglGetPathSpacingNV(ProcAddress('glGetPathSpacingNV'));
  glGetPathTexGenfvNV := TglGetPathTexGenfvNV(ProcAddress('glGetPathTexGenfvNV'));
  glGetPathTexGenivNV := TglGetPathTexGenivNV(ProcAddress('glGetPathTexGenivNV'));
  glGetPerfCounterInfoINTEL := TglGetPerfCounterInfoINTEL(ProcAddress('glGetPerfCounterInfoINTEL'));
  glGetPerfMonitorCounterDataAMD := TglGetPerfMonitorCounterDataAMD(ProcAddress('glGetPerfMonitorCounterDataAMD'));
  glGetPerfMonitorCounterInfoAMD := TglGetPerfMonitorCounterInfoAMD(ProcAddress('glGetPerfMonitorCounterInfoAMD'));
  glGetPerfMonitorCounterStringAMD := TglGetPerfMonitorCounterStringAMD(ProcAddress('glGetPerfMonitorCounterStringAMD'));
  glGetPerfMonitorCountersAMD := TglGetPerfMonitorCountersAMD(ProcAddress('glGetPerfMonitorCountersAMD'));
  glGetPerfMonitorGroupStringAMD := TglGetPerfMonitorGroupStringAMD(ProcAddress('glGetPerfMonitorGroupStringAMD'));
  glGetPerfMonitorGroupsAMD := TglGetPerfMonitorGroupsAMD(ProcAddress('glGetPerfMonitorGroupsAMD'));
  glGetPerfQueryDataINTEL := TglGetPerfQueryDataINTEL(ProcAddress('glGetPerfQueryDataINTEL'));
  glGetPerfQueryIdByNameINTEL := TglGetPerfQueryIdByNameINTEL(ProcAddress('glGetPerfQueryIdByNameINTEL'));
  glGetPerfQueryInfoINTEL := TglGetPerfQueryInfoINTEL(ProcAddress('glGetPerfQueryInfoINTEL'));
  glGetPixelMapfv := TglGetPixelMapfv(ProcAddress('glGetPixelMapfv'));
  glGetPixelMapuiv := TglGetPixelMapuiv(ProcAddress('glGetPixelMapuiv'));
  glGetPixelMapusv := TglGetPixelMapusv(ProcAddress('glGetPixelMapusv'));
  glGetPixelMapxv := TglGetPixelMapxv(ProcAddress('glGetPixelMapxv'));
  glGetPixelTexGenParameterfvSGIS := TglGetPixelTexGenParameterfvSGIS(ProcAddress('glGetPixelTexGenParameterfvSGIS'));
  glGetPixelTexGenParameterivSGIS := TglGetPixelTexGenParameterivSGIS(ProcAddress('glGetPixelTexGenParameterivSGIS'));
  glGetPixelTransformParameterfvEXT := TglGetPixelTransformParameterfvEXT(ProcAddress('glGetPixelTransformParameterfvEXT'));
  glGetPixelTransformParameterivEXT := TglGetPixelTransformParameterivEXT(ProcAddress('glGetPixelTransformParameterivEXT'));
  glGetPointerIndexedvEXT := TglGetPointerIndexedvEXT(ProcAddress('glGetPointerIndexedvEXT'));
  glGetPointeri_vEXT := TglGetPointeri_vEXT(ProcAddress('glGetPointeri_vEXT'));
  glGetPointerv := TglGetPointerv(ProcAddress('glGetPointerv'));
  glGetPointervEXT := TglGetPointervEXT(ProcAddress('glGetPointervEXT'));
  glGetPointervKHR := TglGetPointervKHR(ProcAddress('glGetPointervKHR'));
  glGetPolygonStipple := TglGetPolygonStipple(ProcAddress('glGetPolygonStipple'));
  glGetProgramBinary := TglGetProgramBinary(ProcAddress('glGetProgramBinary'));
  glGetProgramBinaryOES := TglGetProgramBinaryOES(ProcAddress('glGetProgramBinaryOES'));
  glGetProgramEnvParameterIivNV := TglGetProgramEnvParameterIivNV(ProcAddress('glGetProgramEnvParameterIivNV'));
  glGetProgramEnvParameterIuivNV := TglGetProgramEnvParameterIuivNV(ProcAddress('glGetProgramEnvParameterIuivNV'));
  glGetProgramEnvParameterdvARB := TglGetProgramEnvParameterdvARB(ProcAddress('glGetProgramEnvParameterdvARB'));
  glGetProgramEnvParameterfvARB := TglGetProgramEnvParameterfvARB(ProcAddress('glGetProgramEnvParameterfvARB'));
  glGetProgramInfoLog := TglGetProgramInfoLog(ProcAddress('glGetProgramInfoLog'));
  glGetProgramInterfaceiv := TglGetProgramInterfaceiv(ProcAddress('glGetProgramInterfaceiv'));
  glGetProgramLocalParameterIivNV := TglGetProgramLocalParameterIivNV(ProcAddress('glGetProgramLocalParameterIivNV'));
  glGetProgramLocalParameterIuivNV := TglGetProgramLocalParameterIuivNV(ProcAddress('glGetProgramLocalParameterIuivNV'));
  glGetProgramLocalParameterdvARB := TglGetProgramLocalParameterdvARB(ProcAddress('glGetProgramLocalParameterdvARB'));
  glGetProgramLocalParameterfvARB := TglGetProgramLocalParameterfvARB(ProcAddress('glGetProgramLocalParameterfvARB'));
  glGetProgramNamedParameterdvNV := TglGetProgramNamedParameterdvNV(ProcAddress('glGetProgramNamedParameterdvNV'));
  glGetProgramNamedParameterfvNV := TglGetProgramNamedParameterfvNV(ProcAddress('glGetProgramNamedParameterfvNV'));
  glGetProgramParameterdvNV := TglGetProgramParameterdvNV(ProcAddress('glGetProgramParameterdvNV'));
  glGetProgramParameterfvNV := TglGetProgramParameterfvNV(ProcAddress('glGetProgramParameterfvNV'));
  glGetProgramPipelineInfoLog := TglGetProgramPipelineInfoLog(ProcAddress('glGetProgramPipelineInfoLog'));
  glGetProgramPipelineInfoLogEXT := TglGetProgramPipelineInfoLogEXT(ProcAddress('glGetProgramPipelineInfoLogEXT'));
  glGetProgramPipelineiv := TglGetProgramPipelineiv(ProcAddress('glGetProgramPipelineiv'));
  glGetProgramPipelineivEXT := TglGetProgramPipelineivEXT(ProcAddress('glGetProgramPipelineivEXT'));
  glGetProgramResourceIndex := TglGetProgramResourceIndex(ProcAddress('glGetProgramResourceIndex'));
  glGetProgramResourceLocation := TglGetProgramResourceLocation(ProcAddress('glGetProgramResourceLocation'));
  glGetProgramResourceLocationIndex := TglGetProgramResourceLocationIndex(ProcAddress('glGetProgramResourceLocationIndex'));
  glGetProgramResourceLocationIndexEXT := TglGetProgramResourceLocationIndexEXT(ProcAddress('glGetProgramResourceLocationIndexEXT'));
  glGetProgramResourceName := TglGetProgramResourceName(ProcAddress('glGetProgramResourceName'));
  glGetProgramResourcefvNV := TglGetProgramResourcefvNV(ProcAddress('glGetProgramResourcefvNV'));
  glGetProgramResourceiv := TglGetProgramResourceiv(ProcAddress('glGetProgramResourceiv'));
  glGetProgramStageiv := TglGetProgramStageiv(ProcAddress('glGetProgramStageiv'));
  glGetProgramStringARB := TglGetProgramStringARB(ProcAddress('glGetProgramStringARB'));
  glGetProgramStringNV := TglGetProgramStringNV(ProcAddress('glGetProgramStringNV'));
  glGetProgramSubroutineParameteruivNV := TglGetProgramSubroutineParameteruivNV(ProcAddress('glGetProgramSubroutineParameteruivNV'));
  glGetProgramiv := TglGetProgramiv(ProcAddress('glGetProgramiv'));
  glGetProgramivARB := TglGetProgramivARB(ProcAddress('glGetProgramivARB'));
  glGetProgramivNV := TglGetProgramivNV(ProcAddress('glGetProgramivNV'));
  glGetQueryBufferObjecti64v := TglGetQueryBufferObjecti64v(ProcAddress('glGetQueryBufferObjecti64v'));
  glGetQueryBufferObjectiv := TglGetQueryBufferObjectiv(ProcAddress('glGetQueryBufferObjectiv'));
  glGetQueryBufferObjectui64v := TglGetQueryBufferObjectui64v(ProcAddress('glGetQueryBufferObjectui64v'));
  glGetQueryBufferObjectuiv := TglGetQueryBufferObjectuiv(ProcAddress('glGetQueryBufferObjectuiv'));
  glGetQueryIndexediv := TglGetQueryIndexediv(ProcAddress('glGetQueryIndexediv'));
  glGetQueryObjecti64v := TglGetQueryObjecti64v(ProcAddress('glGetQueryObjecti64v'));
  glGetQueryObjecti64vEXT := TglGetQueryObjecti64vEXT(ProcAddress('glGetQueryObjecti64vEXT'));
  glGetQueryObjectiv := TglGetQueryObjectiv(ProcAddress('glGetQueryObjectiv'));
  glGetQueryObjectivARB := TglGetQueryObjectivARB(ProcAddress('glGetQueryObjectivARB'));
  glGetQueryObjectivEXT := TglGetQueryObjectivEXT(ProcAddress('glGetQueryObjectivEXT'));
  glGetQueryObjectui64v := TglGetQueryObjectui64v(ProcAddress('glGetQueryObjectui64v'));
  glGetQueryObjectui64vEXT := TglGetQueryObjectui64vEXT(ProcAddress('glGetQueryObjectui64vEXT'));
  glGetQueryObjectuiv := TglGetQueryObjectuiv(ProcAddress('glGetQueryObjectuiv'));
  glGetQueryObjectuivARB := TglGetQueryObjectuivARB(ProcAddress('glGetQueryObjectuivARB'));
  glGetQueryObjectuivEXT := TglGetQueryObjectuivEXT(ProcAddress('glGetQueryObjectuivEXT'));
  glGetQueryiv := TglGetQueryiv(ProcAddress('glGetQueryiv'));
  glGetQueryivARB := TglGetQueryivARB(ProcAddress('glGetQueryivARB'));
  glGetQueryivEXT := TglGetQueryivEXT(ProcAddress('glGetQueryivEXT'));
  glGetRenderbufferParameteriv := TglGetRenderbufferParameteriv(ProcAddress('glGetRenderbufferParameteriv'));
  glGetRenderbufferParameterivEXT := TglGetRenderbufferParameterivEXT(ProcAddress('glGetRenderbufferParameterivEXT'));
  glGetRenderbufferParameterivOES := TglGetRenderbufferParameterivOES(ProcAddress('glGetRenderbufferParameterivOES'));
  glGetSamplerParameterIiv := TglGetSamplerParameterIiv(ProcAddress('glGetSamplerParameterIiv'));
  glGetSamplerParameterIivEXT := TglGetSamplerParameterIivEXT(ProcAddress('glGetSamplerParameterIivEXT'));
  glGetSamplerParameterIivOES := TglGetSamplerParameterIivOES(ProcAddress('glGetSamplerParameterIivOES'));
  glGetSamplerParameterIuiv := TglGetSamplerParameterIuiv(ProcAddress('glGetSamplerParameterIuiv'));
  glGetSamplerParameterIuivEXT := TglGetSamplerParameterIuivEXT(ProcAddress('glGetSamplerParameterIuivEXT'));
  glGetSamplerParameterIuivOES := TglGetSamplerParameterIuivOES(ProcAddress('glGetSamplerParameterIuivOES'));
  glGetSamplerParameterfv := TglGetSamplerParameterfv(ProcAddress('glGetSamplerParameterfv'));
  glGetSamplerParameteriv := TglGetSamplerParameteriv(ProcAddress('glGetSamplerParameteriv'));
  glGetSemaphoreParameterivNV := TglGetSemaphoreParameterivNV(ProcAddress('glGetSemaphoreParameterivNV'));
  glGetSemaphoreParameterui64vEXT := TglGetSemaphoreParameterui64vEXT(ProcAddress('glGetSemaphoreParameterui64vEXT'));
  glGetSeparableFilter := TglGetSeparableFilter(ProcAddress('glGetSeparableFilter'));
  glGetSeparableFilterEXT := TglGetSeparableFilterEXT(ProcAddress('glGetSeparableFilterEXT'));
  glGetShaderInfoLog := TglGetShaderInfoLog(ProcAddress('glGetShaderInfoLog'));
  glGetShaderPrecisionFormat := TglGetShaderPrecisionFormat(ProcAddress('glGetShaderPrecisionFormat'));
  glGetShaderSource := TglGetShaderSource(ProcAddress('glGetShaderSource'));
  glGetShaderSourceARB := TglGetShaderSourceARB(ProcAddress('glGetShaderSourceARB'));
  glGetShaderiv := TglGetShaderiv(ProcAddress('glGetShaderiv'));
  glGetShadingRateImagePaletteNV := TglGetShadingRateImagePaletteNV(ProcAddress('glGetShadingRateImagePaletteNV'));
  glGetShadingRateSampleLocationivNV := TglGetShadingRateSampleLocationivNV(ProcAddress('glGetShadingRateSampleLocationivNV'));
  glGetSharpenTexFuncSGIS := TglGetSharpenTexFuncSGIS(ProcAddress('glGetSharpenTexFuncSGIS'));
  glGetStageIndexNV := TglGetStageIndexNV(ProcAddress('glGetStageIndexNV'));
  glGetString := TglGetString(ProcAddress('glGetString'));
  glGetStringi := TglGetStringi(ProcAddress('glGetStringi'));
  glGetSubroutineIndex := TglGetSubroutineIndex(ProcAddress('glGetSubroutineIndex'));
  glGetSubroutineUniformLocation := TglGetSubroutineUniformLocation(ProcAddress('glGetSubroutineUniformLocation'));
  glGetSynciv := TglGetSynciv(ProcAddress('glGetSynciv'));
  glGetSyncivAPPLE := TglGetSyncivAPPLE(ProcAddress('glGetSyncivAPPLE'));
  glGetTexBumpParameterfvATI := TglGetTexBumpParameterfvATI(ProcAddress('glGetTexBumpParameterfvATI'));
  glGetTexBumpParameterivATI := TglGetTexBumpParameterivATI(ProcAddress('glGetTexBumpParameterivATI'));
  glGetTexEnvfv := TglGetTexEnvfv(ProcAddress('glGetTexEnvfv'));
  glGetTexEnviv := TglGetTexEnviv(ProcAddress('glGetTexEnviv'));
  glGetTexEnvxv := TglGetTexEnvxv(ProcAddress('glGetTexEnvxv'));
  glGetTexEnvxvOES := TglGetTexEnvxvOES(ProcAddress('glGetTexEnvxvOES'));
  glGetTexFilterFuncSGIS := TglGetTexFilterFuncSGIS(ProcAddress('glGetTexFilterFuncSGIS'));
  glGetTexGendv := TglGetTexGendv(ProcAddress('glGetTexGendv'));
  glGetTexGenfv := TglGetTexGenfv(ProcAddress('glGetTexGenfv'));
  glGetTexGenfvOES := TglGetTexGenfvOES(ProcAddress('glGetTexGenfvOES'));
  glGetTexGeniv := TglGetTexGeniv(ProcAddress('glGetTexGeniv'));
  glGetTexGenivOES := TglGetTexGenivOES(ProcAddress('glGetTexGenivOES'));
  glGetTexGenxvOES := TglGetTexGenxvOES(ProcAddress('glGetTexGenxvOES'));
  glGetTexImage := TglGetTexImage(ProcAddress('glGetTexImage'));
  glGetTexLevelParameterfv := TglGetTexLevelParameterfv(ProcAddress('glGetTexLevelParameterfv'));
  glGetTexLevelParameteriv := TglGetTexLevelParameteriv(ProcAddress('glGetTexLevelParameteriv'));
  glGetTexLevelParameterxvOES := TglGetTexLevelParameterxvOES(ProcAddress('glGetTexLevelParameterxvOES'));
  glGetTexParameterIiv := TglGetTexParameterIiv(ProcAddress('glGetTexParameterIiv'));
  glGetTexParameterIivEXT := TglGetTexParameterIivEXT(ProcAddress('glGetTexParameterIivEXT'));
  glGetTexParameterIivOES := TglGetTexParameterIivOES(ProcAddress('glGetTexParameterIivOES'));
  glGetTexParameterIuiv := TglGetTexParameterIuiv(ProcAddress('glGetTexParameterIuiv'));
  glGetTexParameterIuivEXT := TglGetTexParameterIuivEXT(ProcAddress('glGetTexParameterIuivEXT'));
  glGetTexParameterIuivOES := TglGetTexParameterIuivOES(ProcAddress('glGetTexParameterIuivOES'));
  glGetTexParameterPointervAPPLE := TglGetTexParameterPointervAPPLE(ProcAddress('glGetTexParameterPointervAPPLE'));
  glGetTexParameterfv := TglGetTexParameterfv(ProcAddress('glGetTexParameterfv'));
  glGetTexParameteriv := TglGetTexParameteriv(ProcAddress('glGetTexParameteriv'));
  glGetTexParameterxv := TglGetTexParameterxv(ProcAddress('glGetTexParameterxv'));
  glGetTexParameterxvOES := TglGetTexParameterxvOES(ProcAddress('glGetTexParameterxvOES'));
  glGetTextureHandleARB := TglGetTextureHandleARB(ProcAddress('glGetTextureHandleARB'));
  glGetTextureHandleIMG := TglGetTextureHandleIMG(ProcAddress('glGetTextureHandleIMG'));
  glGetTextureHandleNV := TglGetTextureHandleNV(ProcAddress('glGetTextureHandleNV'));
  glGetTextureImage := TglGetTextureImage(ProcAddress('glGetTextureImage'));
  glGetTextureImageEXT := TglGetTextureImageEXT(ProcAddress('glGetTextureImageEXT'));
  glGetTextureLevelParameterfv := TglGetTextureLevelParameterfv(ProcAddress('glGetTextureLevelParameterfv'));
  glGetTextureLevelParameterfvEXT := TglGetTextureLevelParameterfvEXT(ProcAddress('glGetTextureLevelParameterfvEXT'));
  glGetTextureLevelParameteriv := TglGetTextureLevelParameteriv(ProcAddress('glGetTextureLevelParameteriv'));
  glGetTextureLevelParameterivEXT := TglGetTextureLevelParameterivEXT(ProcAddress('glGetTextureLevelParameterivEXT'));
  glGetTextureParameterIiv := TglGetTextureParameterIiv(ProcAddress('glGetTextureParameterIiv'));
  glGetTextureParameterIivEXT := TglGetTextureParameterIivEXT(ProcAddress('glGetTextureParameterIivEXT'));
  glGetTextureParameterIuiv := TglGetTextureParameterIuiv(ProcAddress('glGetTextureParameterIuiv'));
  glGetTextureParameterIuivEXT := TglGetTextureParameterIuivEXT(ProcAddress('glGetTextureParameterIuivEXT'));
  glGetTextureParameterfv := TglGetTextureParameterfv(ProcAddress('glGetTextureParameterfv'));
  glGetTextureParameterfvEXT := TglGetTextureParameterfvEXT(ProcAddress('glGetTextureParameterfvEXT'));
  glGetTextureParameteriv := TglGetTextureParameteriv(ProcAddress('glGetTextureParameteriv'));
  glGetTextureParameterivEXT := TglGetTextureParameterivEXT(ProcAddress('glGetTextureParameterivEXT'));
  glGetTextureSamplerHandleARB := TglGetTextureSamplerHandleARB(ProcAddress('glGetTextureSamplerHandleARB'));
  glGetTextureSamplerHandleIMG := TglGetTextureSamplerHandleIMG(ProcAddress('glGetTextureSamplerHandleIMG'));
  glGetTextureSamplerHandleNV := TglGetTextureSamplerHandleNV(ProcAddress('glGetTextureSamplerHandleNV'));
  glGetTextureSubImage := TglGetTextureSubImage(ProcAddress('glGetTextureSubImage'));
  glGetTrackMatrixivNV := TglGetTrackMatrixivNV(ProcAddress('glGetTrackMatrixivNV'));
  glGetTransformFeedbackVarying := TglGetTransformFeedbackVarying(ProcAddress('glGetTransformFeedbackVarying'));
  glGetTransformFeedbackVaryingEXT := TglGetTransformFeedbackVaryingEXT(ProcAddress('glGetTransformFeedbackVaryingEXT'));
  glGetTransformFeedbackVaryingNV := TglGetTransformFeedbackVaryingNV(ProcAddress('glGetTransformFeedbackVaryingNV'));
  glGetTransformFeedbacki64_v := TglGetTransformFeedbacki64_v(ProcAddress('glGetTransformFeedbacki64_v'));
  glGetTransformFeedbacki_v := TglGetTransformFeedbacki_v(ProcAddress('glGetTransformFeedbacki_v'));
  glGetTransformFeedbackiv := TglGetTransformFeedbackiv(ProcAddress('glGetTransformFeedbackiv'));
  glGetTranslatedShaderSourceANGLE := TglGetTranslatedShaderSourceANGLE(ProcAddress('glGetTranslatedShaderSourceANGLE'));
  glGetUniformBlockIndex := TglGetUniformBlockIndex(ProcAddress('glGetUniformBlockIndex'));
  glGetUniformBufferSizeEXT := TglGetUniformBufferSizeEXT(ProcAddress('glGetUniformBufferSizeEXT'));
  glGetUniformIndices := TglGetUniformIndices(ProcAddress('glGetUniformIndices'));
  glGetUniformLocation := TglGetUniformLocation(ProcAddress('glGetUniformLocation'));
  glGetUniformLocationARB := TglGetUniformLocationARB(ProcAddress('glGetUniformLocationARB'));
  glGetUniformOffsetEXT := TglGetUniformOffsetEXT(ProcAddress('glGetUniformOffsetEXT'));
  glGetUniformSubroutineuiv := TglGetUniformSubroutineuiv(ProcAddress('glGetUniformSubroutineuiv'));
  glGetUniformdv := TglGetUniformdv(ProcAddress('glGetUniformdv'));
  glGetUniformfv := TglGetUniformfv(ProcAddress('glGetUniformfv'));
  glGetUniformfvARB := TglGetUniformfvARB(ProcAddress('glGetUniformfvARB'));
  glGetUniformi64vARB := TglGetUniformi64vARB(ProcAddress('glGetUniformi64vARB'));
  glGetUniformi64vNV := TglGetUniformi64vNV(ProcAddress('glGetUniformi64vNV'));
  glGetUniformiv := TglGetUniformiv(ProcAddress('glGetUniformiv'));
  glGetUniformivARB := TglGetUniformivARB(ProcAddress('glGetUniformivARB'));
  glGetUniformui64vARB := TglGetUniformui64vARB(ProcAddress('glGetUniformui64vARB'));
  glGetUniformui64vNV := TglGetUniformui64vNV(ProcAddress('glGetUniformui64vNV'));
  glGetUniformuiv := TglGetUniformuiv(ProcAddress('glGetUniformuiv'));
  glGetUniformuivEXT := TglGetUniformuivEXT(ProcAddress('glGetUniformuivEXT'));
  glGetUnsignedBytevEXT := TglGetUnsignedBytevEXT(ProcAddress('glGetUnsignedBytevEXT'));
  glGetUnsignedBytei_vEXT := TglGetUnsignedBytei_vEXT(ProcAddress('glGetUnsignedBytei_vEXT'));
  glGetVariantArrayObjectfvATI := TglGetVariantArrayObjectfvATI(ProcAddress('glGetVariantArrayObjectfvATI'));
  glGetVariantArrayObjectivATI := TglGetVariantArrayObjectivATI(ProcAddress('glGetVariantArrayObjectivATI'));
  glGetVariantBooleanvEXT := TglGetVariantBooleanvEXT(ProcAddress('glGetVariantBooleanvEXT'));
  glGetVariantFloatvEXT := TglGetVariantFloatvEXT(ProcAddress('glGetVariantFloatvEXT'));
  glGetVariantIntegervEXT := TglGetVariantIntegervEXT(ProcAddress('glGetVariantIntegervEXT'));
  glGetVariantPointervEXT := TglGetVariantPointervEXT(ProcAddress('glGetVariantPointervEXT'));
  glGetVaryingLocationNV := TglGetVaryingLocationNV(ProcAddress('glGetVaryingLocationNV'));
  glGetVertexArrayIndexed64iv := TglGetVertexArrayIndexed64iv(ProcAddress('glGetVertexArrayIndexed64iv'));
  glGetVertexArrayIndexediv := TglGetVertexArrayIndexediv(ProcAddress('glGetVertexArrayIndexediv'));
  glGetVertexArrayIntegeri_vEXT := TglGetVertexArrayIntegeri_vEXT(ProcAddress('glGetVertexArrayIntegeri_vEXT'));
  glGetVertexArrayIntegervEXT := TglGetVertexArrayIntegervEXT(ProcAddress('glGetVertexArrayIntegervEXT'));
  glGetVertexArrayPointeri_vEXT := TglGetVertexArrayPointeri_vEXT(ProcAddress('glGetVertexArrayPointeri_vEXT'));
  glGetVertexArrayPointervEXT := TglGetVertexArrayPointervEXT(ProcAddress('glGetVertexArrayPointervEXT'));
  glGetVertexArrayiv := TglGetVertexArrayiv(ProcAddress('glGetVertexArrayiv'));
  glGetVertexAttribArrayObjectfvATI := TglGetVertexAttribArrayObjectfvATI(ProcAddress('glGetVertexAttribArrayObjectfvATI'));
  glGetVertexAttribArrayObjectivATI := TglGetVertexAttribArrayObjectivATI(ProcAddress('glGetVertexAttribArrayObjectivATI'));
  glGetVertexAttribIiv := TglGetVertexAttribIiv(ProcAddress('glGetVertexAttribIiv'));
  glGetVertexAttribIivEXT := TglGetVertexAttribIivEXT(ProcAddress('glGetVertexAttribIivEXT'));
  glGetVertexAttribIuiv := TglGetVertexAttribIuiv(ProcAddress('glGetVertexAttribIuiv'));
  glGetVertexAttribIuivEXT := TglGetVertexAttribIuivEXT(ProcAddress('glGetVertexAttribIuivEXT'));
  glGetVertexAttribLdv := TglGetVertexAttribLdv(ProcAddress('glGetVertexAttribLdv'));
  glGetVertexAttribLdvEXT := TglGetVertexAttribLdvEXT(ProcAddress('glGetVertexAttribLdvEXT'));
  glGetVertexAttribLi64vNV := TglGetVertexAttribLi64vNV(ProcAddress('glGetVertexAttribLi64vNV'));
  glGetVertexAttribLui64vARB := TglGetVertexAttribLui64vARB(ProcAddress('glGetVertexAttribLui64vARB'));
  glGetVertexAttribLui64vNV := TglGetVertexAttribLui64vNV(ProcAddress('glGetVertexAttribLui64vNV'));
  glGetVertexAttribPointerv := TglGetVertexAttribPointerv(ProcAddress('glGetVertexAttribPointerv'));
  glGetVertexAttribPointervARB := TglGetVertexAttribPointervARB(ProcAddress('glGetVertexAttribPointervARB'));
  glGetVertexAttribPointervNV := TglGetVertexAttribPointervNV(ProcAddress('glGetVertexAttribPointervNV'));
  glGetVertexAttribdv := TglGetVertexAttribdv(ProcAddress('glGetVertexAttribdv'));
  glGetVertexAttribdvARB := TglGetVertexAttribdvARB(ProcAddress('glGetVertexAttribdvARB'));
  glGetVertexAttribdvNV := TglGetVertexAttribdvNV(ProcAddress('glGetVertexAttribdvNV'));
  glGetVertexAttribfv := TglGetVertexAttribfv(ProcAddress('glGetVertexAttribfv'));
  glGetVertexAttribfvARB := TglGetVertexAttribfvARB(ProcAddress('glGetVertexAttribfvARB'));
  glGetVertexAttribfvNV := TglGetVertexAttribfvNV(ProcAddress('glGetVertexAttribfvNV'));
  glGetVertexAttribiv := TglGetVertexAttribiv(ProcAddress('glGetVertexAttribiv'));
  glGetVertexAttribivARB := TglGetVertexAttribivARB(ProcAddress('glGetVertexAttribivARB'));
  glGetVertexAttribivNV := TglGetVertexAttribivNV(ProcAddress('glGetVertexAttribivNV'));
  glGetVideoCaptureStreamdvNV := TglGetVideoCaptureStreamdvNV(ProcAddress('glGetVideoCaptureStreamdvNV'));
  glGetVideoCaptureStreamfvNV := TglGetVideoCaptureStreamfvNV(ProcAddress('glGetVideoCaptureStreamfvNV'));
  glGetVideoCaptureStreamivNV := TglGetVideoCaptureStreamivNV(ProcAddress('glGetVideoCaptureStreamivNV'));
  glGetVideoCaptureivNV := TglGetVideoCaptureivNV(ProcAddress('glGetVideoCaptureivNV'));
  glGetVideoi64vNV := TglGetVideoi64vNV(ProcAddress('glGetVideoi64vNV'));
  glGetVideoivNV := TglGetVideoivNV(ProcAddress('glGetVideoivNV'));
  glGetVideoui64vNV := TglGetVideoui64vNV(ProcAddress('glGetVideoui64vNV'));
  glGetVideouivNV := TglGetVideouivNV(ProcAddress('glGetVideouivNV'));
  glGetnColorTable := TglGetnColorTable(ProcAddress('glGetnColorTable'));
  glGetnColorTableARB := TglGetnColorTableARB(ProcAddress('glGetnColorTableARB'));
  glGetnCompressedTexImage := TglGetnCompressedTexImage(ProcAddress('glGetnCompressedTexImage'));
  glGetnCompressedTexImageARB := TglGetnCompressedTexImageARB(ProcAddress('glGetnCompressedTexImageARB'));
  glGetnConvolutionFilter := TglGetnConvolutionFilter(ProcAddress('glGetnConvolutionFilter'));
  glGetnConvolutionFilterARB := TglGetnConvolutionFilterARB(ProcAddress('glGetnConvolutionFilterARB'));
  glGetnHistogram := TglGetnHistogram(ProcAddress('glGetnHistogram'));
  glGetnHistogramARB := TglGetnHistogramARB(ProcAddress('glGetnHistogramARB'));
  glGetnMapdv := TglGetnMapdv(ProcAddress('glGetnMapdv'));
  glGetnMapdvARB := TglGetnMapdvARB(ProcAddress('glGetnMapdvARB'));
  glGetnMapfv := TglGetnMapfv(ProcAddress('glGetnMapfv'));
  glGetnMapfvARB := TglGetnMapfvARB(ProcAddress('glGetnMapfvARB'));
  glGetnMapiv := TglGetnMapiv(ProcAddress('glGetnMapiv'));
  glGetnMapivARB := TglGetnMapivARB(ProcAddress('glGetnMapivARB'));
  glGetnMinmax := TglGetnMinmax(ProcAddress('glGetnMinmax'));
  glGetnMinmaxARB := TglGetnMinmaxARB(ProcAddress('glGetnMinmaxARB'));
  glGetnPixelMapfv := TglGetnPixelMapfv(ProcAddress('glGetnPixelMapfv'));
  glGetnPixelMapfvARB := TglGetnPixelMapfvARB(ProcAddress('glGetnPixelMapfvARB'));
  glGetnPixelMapuiv := TglGetnPixelMapuiv(ProcAddress('glGetnPixelMapuiv'));
  glGetnPixelMapuivARB := TglGetnPixelMapuivARB(ProcAddress('glGetnPixelMapuivARB'));
  glGetnPixelMapusv := TglGetnPixelMapusv(ProcAddress('glGetnPixelMapusv'));
  glGetnPixelMapusvARB := TglGetnPixelMapusvARB(ProcAddress('glGetnPixelMapusvARB'));
  glGetnPolygonStipple := TglGetnPolygonStipple(ProcAddress('glGetnPolygonStipple'));
  glGetnPolygonStippleARB := TglGetnPolygonStippleARB(ProcAddress('glGetnPolygonStippleARB'));
  glGetnSeparableFilter := TglGetnSeparableFilter(ProcAddress('glGetnSeparableFilter'));
  glGetnSeparableFilterARB := TglGetnSeparableFilterARB(ProcAddress('glGetnSeparableFilterARB'));
  glGetnTexImage := TglGetnTexImage(ProcAddress('glGetnTexImage'));
  glGetnTexImageARB := TglGetnTexImageARB(ProcAddress('glGetnTexImageARB'));
  glGetnUniformdv := TglGetnUniformdv(ProcAddress('glGetnUniformdv'));
  glGetnUniformdvARB := TglGetnUniformdvARB(ProcAddress('glGetnUniformdvARB'));
  glGetnUniformfv := TglGetnUniformfv(ProcAddress('glGetnUniformfv'));
  glGetnUniformfvARB := TglGetnUniformfvARB(ProcAddress('glGetnUniformfvARB'));
  glGetnUniformfvEXT := TglGetnUniformfvEXT(ProcAddress('glGetnUniformfvEXT'));
  glGetnUniformfvKHR := TglGetnUniformfvKHR(ProcAddress('glGetnUniformfvKHR'));
  glGetnUniformi64vARB := TglGetnUniformi64vARB(ProcAddress('glGetnUniformi64vARB'));
  glGetnUniformiv := TglGetnUniformiv(ProcAddress('glGetnUniformiv'));
  glGetnUniformivARB := TglGetnUniformivARB(ProcAddress('glGetnUniformivARB'));
  glGetnUniformivEXT := TglGetnUniformivEXT(ProcAddress('glGetnUniformivEXT'));
  glGetnUniformivKHR := TglGetnUniformivKHR(ProcAddress('glGetnUniformivKHR'));
  glGetnUniformui64vARB := TglGetnUniformui64vARB(ProcAddress('glGetnUniformui64vARB'));
  glGetnUniformuiv := TglGetnUniformuiv(ProcAddress('glGetnUniformuiv'));
  glGetnUniformuivARB := TglGetnUniformuivARB(ProcAddress('glGetnUniformuivARB'));
  glGetnUniformuivKHR := TglGetnUniformuivKHR(ProcAddress('glGetnUniformuivKHR'));
  glGlobalAlphaFactorbSUN := TglGlobalAlphaFactorbSUN(ProcAddress('glGlobalAlphaFactorbSUN'));
  glGlobalAlphaFactordSUN := TglGlobalAlphaFactordSUN(ProcAddress('glGlobalAlphaFactordSUN'));
  glGlobalAlphaFactorfSUN := TglGlobalAlphaFactorfSUN(ProcAddress('glGlobalAlphaFactorfSUN'));
  glGlobalAlphaFactoriSUN := TglGlobalAlphaFactoriSUN(ProcAddress('glGlobalAlphaFactoriSUN'));
  glGlobalAlphaFactorsSUN := TglGlobalAlphaFactorsSUN(ProcAddress('glGlobalAlphaFactorsSUN'));
  glGlobalAlphaFactorubSUN := TglGlobalAlphaFactorubSUN(ProcAddress('glGlobalAlphaFactorubSUN'));
  glGlobalAlphaFactoruiSUN := TglGlobalAlphaFactoruiSUN(ProcAddress('glGlobalAlphaFactoruiSUN'));
  glGlobalAlphaFactorusSUN := TglGlobalAlphaFactorusSUN(ProcAddress('glGlobalAlphaFactorusSUN'));
  glHint := TglHint(ProcAddress('glHint'));
  glHintPGI := TglHintPGI(ProcAddress('glHintPGI'));
  glHistogram := TglHistogram(ProcAddress('glHistogram'));
  glHistogramEXT := TglHistogramEXT(ProcAddress('glHistogramEXT'));
  glIglooInterfaceSGIX := TglIglooInterfaceSGIX(ProcAddress('glIglooInterfaceSGIX'));
  glImageTransformParameterfHP := TglImageTransformParameterfHP(ProcAddress('glImageTransformParameterfHP'));
  glImageTransformParameterfvHP := TglImageTransformParameterfvHP(ProcAddress('glImageTransformParameterfvHP'));
  glImageTransformParameteriHP := TglImageTransformParameteriHP(ProcAddress('glImageTransformParameteriHP'));
  glImageTransformParameterivHP := TglImageTransformParameterivHP(ProcAddress('glImageTransformParameterivHP'));
  glImportMemoryFdEXT := TglImportMemoryFdEXT(ProcAddress('glImportMemoryFdEXT'));
  glImportMemoryWin32HandleEXT := TglImportMemoryWin32HandleEXT(ProcAddress('glImportMemoryWin32HandleEXT'));
  glImportMemoryWin32NameEXT := TglImportMemoryWin32NameEXT(ProcAddress('glImportMemoryWin32NameEXT'));
  glImportSemaphoreFdEXT := TglImportSemaphoreFdEXT(ProcAddress('glImportSemaphoreFdEXT'));
  glImportSemaphoreWin32HandleEXT := TglImportSemaphoreWin32HandleEXT(ProcAddress('glImportSemaphoreWin32HandleEXT'));
  glImportSemaphoreWin32NameEXT := TglImportSemaphoreWin32NameEXT(ProcAddress('glImportSemaphoreWin32NameEXT'));
  glImportSyncEXT := TglImportSyncEXT(ProcAddress('glImportSyncEXT'));
  glIndexFormatNV := TglIndexFormatNV(ProcAddress('glIndexFormatNV'));
  glIndexFuncEXT := TglIndexFuncEXT(ProcAddress('glIndexFuncEXT'));
  glIndexMask := TglIndexMask(ProcAddress('glIndexMask'));
  glIndexMaterialEXT := TglIndexMaterialEXT(ProcAddress('glIndexMaterialEXT'));
  glIndexPointer := TglIndexPointer(ProcAddress('glIndexPointer'));
  glIndexPointerEXT := TglIndexPointerEXT(ProcAddress('glIndexPointerEXT'));
  glIndexPointerListIBM := TglIndexPointerListIBM(ProcAddress('glIndexPointerListIBM'));
  glIndexd := TglIndexd(ProcAddress('glIndexd'));
  glIndexdv := TglIndexdv(ProcAddress('glIndexdv'));
  glIndexf := TglIndexf(ProcAddress('glIndexf'));
  glIndexfv := TglIndexfv(ProcAddress('glIndexfv'));
  glIndexi := TglIndexi(ProcAddress('glIndexi'));
  glIndexiv := TglIndexiv(ProcAddress('glIndexiv'));
  glIndexs := TglIndexs(ProcAddress('glIndexs'));
  glIndexsv := TglIndexsv(ProcAddress('glIndexsv'));
  glIndexub := TglIndexub(ProcAddress('glIndexub'));
  glIndexubv := TglIndexubv(ProcAddress('glIndexubv'));
  glIndexxOES := TglIndexxOES(ProcAddress('glIndexxOES'));
  glIndexxvOES := TglIndexxvOES(ProcAddress('glIndexxvOES'));
  glInitNames := TglInitNames(ProcAddress('glInitNames'));
  glInsertComponentEXT := TglInsertComponentEXT(ProcAddress('glInsertComponentEXT'));
  glInsertEventMarkerEXT := TglInsertEventMarkerEXT(ProcAddress('glInsertEventMarkerEXT'));
  glInstrumentsBufferSGIX := TglInstrumentsBufferSGIX(ProcAddress('glInstrumentsBufferSGIX'));
  glInterleavedArrays := TglInterleavedArrays(ProcAddress('glInterleavedArrays'));
  glInterpolatePathsNV := TglInterpolatePathsNV(ProcAddress('glInterpolatePathsNV'));
  glInvalidateBufferData := TglInvalidateBufferData(ProcAddress('glInvalidateBufferData'));
  glInvalidateBufferSubData := TglInvalidateBufferSubData(ProcAddress('glInvalidateBufferSubData'));
  glInvalidateFramebuffer := TglInvalidateFramebuffer(ProcAddress('glInvalidateFramebuffer'));
  glInvalidateNamedFramebufferData := TglInvalidateNamedFramebufferData(ProcAddress('glInvalidateNamedFramebufferData'));
  glInvalidateNamedFramebufferSubData := TglInvalidateNamedFramebufferSubData(ProcAddress('glInvalidateNamedFramebufferSubData'));
  glInvalidateSubFramebuffer := TglInvalidateSubFramebuffer(ProcAddress('glInvalidateSubFramebuffer'));
  glInvalidateTexImage := TglInvalidateTexImage(ProcAddress('glInvalidateTexImage'));
  glInvalidateTexSubImage := TglInvalidateTexSubImage(ProcAddress('glInvalidateTexSubImage'));
  glIsAsyncMarkerSGIX := TglIsAsyncMarkerSGIX(ProcAddress('glIsAsyncMarkerSGIX'));
  glIsBuffer := TglIsBuffer(ProcAddress('glIsBuffer'));
  glIsBufferARB := TglIsBufferARB(ProcAddress('glIsBufferARB'));
  glIsBufferResidentNV := TglIsBufferResidentNV(ProcAddress('glIsBufferResidentNV'));
  glIsCommandListNV := TglIsCommandListNV(ProcAddress('glIsCommandListNV'));
  glIsEnabled := TglIsEnabled(ProcAddress('glIsEnabled'));
  glIsEnabledIndexedEXT := TglIsEnabledIndexedEXT(ProcAddress('glIsEnabledIndexedEXT'));
  glIsEnabledi := TglIsEnabledi(ProcAddress('glIsEnabledi'));
  glIsEnablediEXT := TglIsEnablediEXT(ProcAddress('glIsEnablediEXT'));
  glIsEnablediNV := TglIsEnablediNV(ProcAddress('glIsEnablediNV'));
  glIsEnablediOES := TglIsEnablediOES(ProcAddress('glIsEnablediOES'));
  glIsFenceAPPLE := TglIsFenceAPPLE(ProcAddress('glIsFenceAPPLE'));
  glIsFenceNV := TglIsFenceNV(ProcAddress('glIsFenceNV'));
  glIsFramebuffer := TglIsFramebuffer(ProcAddress('glIsFramebuffer'));
  glIsFramebufferEXT := TglIsFramebufferEXT(ProcAddress('glIsFramebufferEXT'));
  glIsFramebufferOES := TglIsFramebufferOES(ProcAddress('glIsFramebufferOES'));
  glIsImageHandleResidentARB := TglIsImageHandleResidentARB(ProcAddress('glIsImageHandleResidentARB'));
  glIsImageHandleResidentNV := TglIsImageHandleResidentNV(ProcAddress('glIsImageHandleResidentNV'));
  glIsList := TglIsList(ProcAddress('glIsList'));
  glIsMemoryObjectEXT := TglIsMemoryObjectEXT(ProcAddress('glIsMemoryObjectEXT'));
  glIsNameAMD := TglIsNameAMD(ProcAddress('glIsNameAMD'));
  glIsNamedBufferResidentNV := TglIsNamedBufferResidentNV(ProcAddress('glIsNamedBufferResidentNV'));
  glIsNamedStringARB := TglIsNamedStringARB(ProcAddress('glIsNamedStringARB'));
  glIsObjectBufferATI := TglIsObjectBufferATI(ProcAddress('glIsObjectBufferATI'));
  glIsOcclusionQueryNV := TglIsOcclusionQueryNV(ProcAddress('glIsOcclusionQueryNV'));
  glIsPathNV := TglIsPathNV(ProcAddress('glIsPathNV'));
  glIsPointInFillPathNV := TglIsPointInFillPathNV(ProcAddress('glIsPointInFillPathNV'));
  glIsPointInStrokePathNV := TglIsPointInStrokePathNV(ProcAddress('glIsPointInStrokePathNV'));
  glIsProgram := TglIsProgram(ProcAddress('glIsProgram'));
  glIsProgramARB := TglIsProgramARB(ProcAddress('glIsProgramARB'));
  glIsProgramNV := TglIsProgramNV(ProcAddress('glIsProgramNV'));
  glIsProgramPipeline := TglIsProgramPipeline(ProcAddress('glIsProgramPipeline'));
  glIsProgramPipelineEXT := TglIsProgramPipelineEXT(ProcAddress('glIsProgramPipelineEXT'));
  glIsQuery := TglIsQuery(ProcAddress('glIsQuery'));
  glIsQueryARB := TglIsQueryARB(ProcAddress('glIsQueryARB'));
  glIsQueryEXT := TglIsQueryEXT(ProcAddress('glIsQueryEXT'));
  glIsRenderbuffer := TglIsRenderbuffer(ProcAddress('glIsRenderbuffer'));
  glIsRenderbufferEXT := TglIsRenderbufferEXT(ProcAddress('glIsRenderbufferEXT'));
  glIsRenderbufferOES := TglIsRenderbufferOES(ProcAddress('glIsRenderbufferOES'));
  glIsSemaphoreEXT := TglIsSemaphoreEXT(ProcAddress('glIsSemaphoreEXT'));
  glIsSampler := TglIsSampler(ProcAddress('glIsSampler'));
  glIsShader := TglIsShader(ProcAddress('glIsShader'));
  glIsStateNV := TglIsStateNV(ProcAddress('glIsStateNV'));
  glIsSync := TglIsSync(ProcAddress('glIsSync'));
  glIsSyncAPPLE := TglIsSyncAPPLE(ProcAddress('glIsSyncAPPLE'));
  glIsTexture := TglIsTexture(ProcAddress('glIsTexture'));
  glIsTextureEXT := TglIsTextureEXT(ProcAddress('glIsTextureEXT'));
  glIsTextureHandleResidentARB := TglIsTextureHandleResidentARB(ProcAddress('glIsTextureHandleResidentARB'));
  glIsTextureHandleResidentNV := TglIsTextureHandleResidentNV(ProcAddress('glIsTextureHandleResidentNV'));
  glIsTransformFeedback := TglIsTransformFeedback(ProcAddress('glIsTransformFeedback'));
  glIsTransformFeedbackNV := TglIsTransformFeedbackNV(ProcAddress('glIsTransformFeedbackNV'));
  glIsVariantEnabledEXT := TglIsVariantEnabledEXT(ProcAddress('glIsVariantEnabledEXT'));
  glIsVertexArray := TglIsVertexArray(ProcAddress('glIsVertexArray'));
  glIsVertexArrayAPPLE := TglIsVertexArrayAPPLE(ProcAddress('glIsVertexArrayAPPLE'));
  glIsVertexArrayOES := TglIsVertexArrayOES(ProcAddress('glIsVertexArrayOES'));
  glIsVertexAttribEnabledAPPLE := TglIsVertexAttribEnabledAPPLE(ProcAddress('glIsVertexAttribEnabledAPPLE'));
  glLGPUCopyImageSubDataNVX := TglLGPUCopyImageSubDataNVX(ProcAddress('glLGPUCopyImageSubDataNVX'));
  glLGPUInterlockNVX := TglLGPUInterlockNVX(ProcAddress('glLGPUInterlockNVX'));
  glLGPUNamedBufferSubDataNVX := TglLGPUNamedBufferSubDataNVX(ProcAddress('glLGPUNamedBufferSubDataNVX'));
  glLabelObjectEXT := TglLabelObjectEXT(ProcAddress('glLabelObjectEXT'));
  glLightEnviSGIX := TglLightEnviSGIX(ProcAddress('glLightEnviSGIX'));
  glLightModelf := TglLightModelf(ProcAddress('glLightModelf'));
  glLightModelfv := TglLightModelfv(ProcAddress('glLightModelfv'));
  glLightModeli := TglLightModeli(ProcAddress('glLightModeli'));
  glLightModeliv := TglLightModeliv(ProcAddress('glLightModeliv'));
  glLightModelx := TglLightModelx(ProcAddress('glLightModelx'));
  glLightModelxOES := TglLightModelxOES(ProcAddress('glLightModelxOES'));
  glLightModelxv := TglLightModelxv(ProcAddress('glLightModelxv'));
  glLightModelxvOES := TglLightModelxvOES(ProcAddress('glLightModelxvOES'));
  glLightf := TglLightf(ProcAddress('glLightf'));
  glLightfv := TglLightfv(ProcAddress('glLightfv'));
  glLighti := TglLighti(ProcAddress('glLighti'));
  glLightiv := TglLightiv(ProcAddress('glLightiv'));
  glLightx := TglLightx(ProcAddress('glLightx'));
  glLightxOES := TglLightxOES(ProcAddress('glLightxOES'));
  glLightxv := TglLightxv(ProcAddress('glLightxv'));
  glLightxvOES := TglLightxvOES(ProcAddress('glLightxvOES'));
  glLineStipple := TglLineStipple(ProcAddress('glLineStipple'));
  glLineWidth := TglLineWidth(ProcAddress('glLineWidth'));
  glLineWidthx := TglLineWidthx(ProcAddress('glLineWidthx'));
  glLineWidthxOES := TglLineWidthxOES(ProcAddress('glLineWidthxOES'));
  glLinkProgram := TglLinkProgram(ProcAddress('glLinkProgram'));
  glLinkProgramARB := TglLinkProgramARB(ProcAddress('glLinkProgramARB'));
  glListBase := TglListBase(ProcAddress('glListBase'));
  glListDrawCommandsStatesClientNV := TglListDrawCommandsStatesClientNV(ProcAddress('glListDrawCommandsStatesClientNV'));
  glListParameterfSGIX := TglListParameterfSGIX(ProcAddress('glListParameterfSGIX'));
  glListParameterfvSGIX := TglListParameterfvSGIX(ProcAddress('glListParameterfvSGIX'));
  glListParameteriSGIX := TglListParameteriSGIX(ProcAddress('glListParameteriSGIX'));
  glListParameterivSGIX := TglListParameterivSGIX(ProcAddress('glListParameterivSGIX'));
  glLoadIdentity := TglLoadIdentity(ProcAddress('glLoadIdentity'));
  glLoadIdentityDeformationMapSGIX := TglLoadIdentityDeformationMapSGIX(ProcAddress('glLoadIdentityDeformationMapSGIX'));
  glLoadMatrixd := TglLoadMatrixd(ProcAddress('glLoadMatrixd'));
  glLoadMatrixf := TglLoadMatrixf(ProcAddress('glLoadMatrixf'));
  glLoadMatrixx := TglLoadMatrixx(ProcAddress('glLoadMatrixx'));
  glLoadMatrixxOES := TglLoadMatrixxOES(ProcAddress('glLoadMatrixxOES'));
  glLoadName := TglLoadName(ProcAddress('glLoadName'));
  glLoadPaletteFromModelViewMatrixOES := TglLoadPaletteFromModelViewMatrixOES(ProcAddress('glLoadPaletteFromModelViewMatrixOES'));
  glLoadProgramNV := TglLoadProgramNV(ProcAddress('glLoadProgramNV'));
  glLoadTransposeMatrixd := TglLoadTransposeMatrixd(ProcAddress('glLoadTransposeMatrixd'));
  glLoadTransposeMatrixdARB := TglLoadTransposeMatrixdARB(ProcAddress('glLoadTransposeMatrixdARB'));
  glLoadTransposeMatrixf := TglLoadTransposeMatrixf(ProcAddress('glLoadTransposeMatrixf'));
  glLoadTransposeMatrixfARB := TglLoadTransposeMatrixfARB(ProcAddress('glLoadTransposeMatrixfARB'));
  glLoadTransposeMatrixxOES := TglLoadTransposeMatrixxOES(ProcAddress('glLoadTransposeMatrixxOES'));
  glLockArraysEXT := TglLockArraysEXT(ProcAddress('glLockArraysEXT'));
  glLogicOp := TglLogicOp(ProcAddress('glLogicOp'));
  glMakeBufferNonResidentNV := TglMakeBufferNonResidentNV(ProcAddress('glMakeBufferNonResidentNV'));
  glMakeBufferResidentNV := TglMakeBufferResidentNV(ProcAddress('glMakeBufferResidentNV'));
  glMakeImageHandleNonResidentARB := TglMakeImageHandleNonResidentARB(ProcAddress('glMakeImageHandleNonResidentARB'));
  glMakeImageHandleNonResidentNV := TglMakeImageHandleNonResidentNV(ProcAddress('glMakeImageHandleNonResidentNV'));
  glMakeImageHandleResidentARB := TglMakeImageHandleResidentARB(ProcAddress('glMakeImageHandleResidentARB'));
  glMakeImageHandleResidentNV := TglMakeImageHandleResidentNV(ProcAddress('glMakeImageHandleResidentNV'));
  glMakeNamedBufferNonResidentNV := TglMakeNamedBufferNonResidentNV(ProcAddress('glMakeNamedBufferNonResidentNV'));
  glMakeNamedBufferResidentNV := TglMakeNamedBufferResidentNV(ProcAddress('glMakeNamedBufferResidentNV'));
  glMakeTextureHandleNonResidentARB := TglMakeTextureHandleNonResidentARB(ProcAddress('glMakeTextureHandleNonResidentARB'));
  glMakeTextureHandleNonResidentNV := TglMakeTextureHandleNonResidentNV(ProcAddress('glMakeTextureHandleNonResidentNV'));
  glMakeTextureHandleResidentARB := TglMakeTextureHandleResidentARB(ProcAddress('glMakeTextureHandleResidentARB'));
  glMakeTextureHandleResidentNV := TglMakeTextureHandleResidentNV(ProcAddress('glMakeTextureHandleResidentNV'));
  glMap1d := TglMap1d(ProcAddress('glMap1d'));
  glMap1f := TglMap1f(ProcAddress('glMap1f'));
  glMap1xOES := TglMap1xOES(ProcAddress('glMap1xOES'));
  glMap2d := TglMap2d(ProcAddress('glMap2d'));
  glMap2f := TglMap2f(ProcAddress('glMap2f'));
  glMap2xOES := TglMap2xOES(ProcAddress('glMap2xOES'));
  glMapBuffer := TglMapBuffer(ProcAddress('glMapBuffer'));
  glMapBufferARB := TglMapBufferARB(ProcAddress('glMapBufferARB'));
  glMapBufferOES := TglMapBufferOES(ProcAddress('glMapBufferOES'));
  glMapBufferRange := TglMapBufferRange(ProcAddress('glMapBufferRange'));
  glMapBufferRangeEXT := TglMapBufferRangeEXT(ProcAddress('glMapBufferRangeEXT'));
  glMapControlPointsNV := TglMapControlPointsNV(ProcAddress('glMapControlPointsNV'));
  glMapGrid1d := TglMapGrid1d(ProcAddress('glMapGrid1d'));
  glMapGrid1f := TglMapGrid1f(ProcAddress('glMapGrid1f'));
  glMapGrid1xOES := TglMapGrid1xOES(ProcAddress('glMapGrid1xOES'));
  glMapGrid2d := TglMapGrid2d(ProcAddress('glMapGrid2d'));
  glMapGrid2f := TglMapGrid2f(ProcAddress('glMapGrid2f'));
  glMapGrid2xOES := TglMapGrid2xOES(ProcAddress('glMapGrid2xOES'));
  glMapNamedBuffer := TglMapNamedBuffer(ProcAddress('glMapNamedBuffer'));
  glMapNamedBufferEXT := TglMapNamedBufferEXT(ProcAddress('glMapNamedBufferEXT'));
  glMapNamedBufferRange := TglMapNamedBufferRange(ProcAddress('glMapNamedBufferRange'));
  glMapNamedBufferRangeEXT := TglMapNamedBufferRangeEXT(ProcAddress('glMapNamedBufferRangeEXT'));
  glMapObjectBufferATI := TglMapObjectBufferATI(ProcAddress('glMapObjectBufferATI'));
  glMapParameterfvNV := TglMapParameterfvNV(ProcAddress('glMapParameterfvNV'));
  glMapParameterivNV := TglMapParameterivNV(ProcAddress('glMapParameterivNV'));
  glMapTexture2DINTEL := TglMapTexture2DINTEL(ProcAddress('glMapTexture2DINTEL'));
  glMapVertexAttrib1dAPPLE := TglMapVertexAttrib1dAPPLE(ProcAddress('glMapVertexAttrib1dAPPLE'));
  glMapVertexAttrib1fAPPLE := TglMapVertexAttrib1fAPPLE(ProcAddress('glMapVertexAttrib1fAPPLE'));
  glMapVertexAttrib2dAPPLE := TglMapVertexAttrib2dAPPLE(ProcAddress('glMapVertexAttrib2dAPPLE'));
  glMapVertexAttrib2fAPPLE := TglMapVertexAttrib2fAPPLE(ProcAddress('glMapVertexAttrib2fAPPLE'));
  glMaterialf := TglMaterialf(ProcAddress('glMaterialf'));
  glMaterialfv := TglMaterialfv(ProcAddress('glMaterialfv'));
  glMateriali := TglMateriali(ProcAddress('glMateriali'));
  glMaterialiv := TglMaterialiv(ProcAddress('glMaterialiv'));
  glMaterialx := TglMaterialx(ProcAddress('glMaterialx'));
  glMaterialxOES := TglMaterialxOES(ProcAddress('glMaterialxOES'));
  glMaterialxv := TglMaterialxv(ProcAddress('glMaterialxv'));
  glMaterialxvOES := TglMaterialxvOES(ProcAddress('glMaterialxvOES'));
  glMatrixFrustumEXT := TglMatrixFrustumEXT(ProcAddress('glMatrixFrustumEXT'));
  glMatrixIndexPointerARB := TglMatrixIndexPointerARB(ProcAddress('glMatrixIndexPointerARB'));
  glMatrixIndexPointerOES := TglMatrixIndexPointerOES(ProcAddress('glMatrixIndexPointerOES'));
  glMatrixIndexubvARB := TglMatrixIndexubvARB(ProcAddress('glMatrixIndexubvARB'));
  glMatrixIndexuivARB := TglMatrixIndexuivARB(ProcAddress('glMatrixIndexuivARB'));
  glMatrixIndexusvARB := TglMatrixIndexusvARB(ProcAddress('glMatrixIndexusvARB'));
  glMatrixLoad3x2fNV := TglMatrixLoad3x2fNV(ProcAddress('glMatrixLoad3x2fNV'));
  glMatrixLoad3x3fNV := TglMatrixLoad3x3fNV(ProcAddress('glMatrixLoad3x3fNV'));
  glMatrixLoadIdentityEXT := TglMatrixLoadIdentityEXT(ProcAddress('glMatrixLoadIdentityEXT'));
  glMatrixLoadTranspose3x3fNV := TglMatrixLoadTranspose3x3fNV(ProcAddress('glMatrixLoadTranspose3x3fNV'));
  glMatrixLoadTransposedEXT := TglMatrixLoadTransposedEXT(ProcAddress('glMatrixLoadTransposedEXT'));
  glMatrixLoadTransposefEXT := TglMatrixLoadTransposefEXT(ProcAddress('glMatrixLoadTransposefEXT'));
  glMatrixLoaddEXT := TglMatrixLoaddEXT(ProcAddress('glMatrixLoaddEXT'));
  glMatrixLoadfEXT := TglMatrixLoadfEXT(ProcAddress('glMatrixLoadfEXT'));
  glMatrixMode := TglMatrixMode(ProcAddress('glMatrixMode'));
  glMatrixMult3x2fNV := TglMatrixMult3x2fNV(ProcAddress('glMatrixMult3x2fNV'));
  glMatrixMult3x3fNV := TglMatrixMult3x3fNV(ProcAddress('glMatrixMult3x3fNV'));
  glMatrixMultTranspose3x3fNV := TglMatrixMultTranspose3x3fNV(ProcAddress('glMatrixMultTranspose3x3fNV'));
  glMatrixMultTransposedEXT := TglMatrixMultTransposedEXT(ProcAddress('glMatrixMultTransposedEXT'));
  glMatrixMultTransposefEXT := TglMatrixMultTransposefEXT(ProcAddress('glMatrixMultTransposefEXT'));
  glMatrixMultdEXT := TglMatrixMultdEXT(ProcAddress('glMatrixMultdEXT'));
  glMatrixMultfEXT := TglMatrixMultfEXT(ProcAddress('glMatrixMultfEXT'));
  glMatrixOrthoEXT := TglMatrixOrthoEXT(ProcAddress('glMatrixOrthoEXT'));
  glMatrixPopEXT := TglMatrixPopEXT(ProcAddress('glMatrixPopEXT'));
  glMatrixPushEXT := TglMatrixPushEXT(ProcAddress('glMatrixPushEXT'));
  glMatrixRotatedEXT := TglMatrixRotatedEXT(ProcAddress('glMatrixRotatedEXT'));
  glMatrixRotatefEXT := TglMatrixRotatefEXT(ProcAddress('glMatrixRotatefEXT'));
  glMatrixScaledEXT := TglMatrixScaledEXT(ProcAddress('glMatrixScaledEXT'));
  glMatrixScalefEXT := TglMatrixScalefEXT(ProcAddress('glMatrixScalefEXT'));
  glMatrixTranslatedEXT := TglMatrixTranslatedEXT(ProcAddress('glMatrixTranslatedEXT'));
  glMatrixTranslatefEXT := TglMatrixTranslatefEXT(ProcAddress('glMatrixTranslatefEXT'));
  glMaxShaderCompilerThreadsKHR := TglMaxShaderCompilerThreadsKHR(ProcAddress('glMaxShaderCompilerThreadsKHR'));
  glMaxShaderCompilerThreadsARB := TglMaxShaderCompilerThreadsARB(ProcAddress('glMaxShaderCompilerThreadsARB'));
  glMemoryBarrier := TglMemoryBarrier(ProcAddress('glMemoryBarrier'));
  glMemoryBarrierByRegion := TglMemoryBarrierByRegion(ProcAddress('glMemoryBarrierByRegion'));
  glMemoryBarrierEXT := TglMemoryBarrierEXT(ProcAddress('glMemoryBarrierEXT'));
  glMemoryObjectParameterivEXT := TglMemoryObjectParameterivEXT(ProcAddress('glMemoryObjectParameterivEXT'));
  glMinSampleShading := TglMinSampleShading(ProcAddress('glMinSampleShading'));
  glMinSampleShadingARB := TglMinSampleShadingARB(ProcAddress('glMinSampleShadingARB'));
  glMinSampleShadingOES := TglMinSampleShadingOES(ProcAddress('glMinSampleShadingOES'));
  glMinmax := TglMinmax(ProcAddress('glMinmax'));
  glMinmaxEXT := TglMinmaxEXT(ProcAddress('glMinmaxEXT'));
  glMultMatrixd := TglMultMatrixd(ProcAddress('glMultMatrixd'));
  glMultMatrixf := TglMultMatrixf(ProcAddress('glMultMatrixf'));
  glMultMatrixx := TglMultMatrixx(ProcAddress('glMultMatrixx'));
  glMultMatrixxOES := TglMultMatrixxOES(ProcAddress('glMultMatrixxOES'));
  glMultTransposeMatrixd := TglMultTransposeMatrixd(ProcAddress('glMultTransposeMatrixd'));
  glMultTransposeMatrixdARB := TglMultTransposeMatrixdARB(ProcAddress('glMultTransposeMatrixdARB'));
  glMultTransposeMatrixf := TglMultTransposeMatrixf(ProcAddress('glMultTransposeMatrixf'));
  glMultTransposeMatrixfARB := TglMultTransposeMatrixfARB(ProcAddress('glMultTransposeMatrixfARB'));
  glMultTransposeMatrixxOES := TglMultTransposeMatrixxOES(ProcAddress('glMultTransposeMatrixxOES'));
  glMultiDrawArrays := TglMultiDrawArrays(ProcAddress('glMultiDrawArrays'));
  glMultiDrawArraysEXT := TglMultiDrawArraysEXT(ProcAddress('glMultiDrawArraysEXT'));
  glMultiDrawArraysIndirect := TglMultiDrawArraysIndirect(ProcAddress('glMultiDrawArraysIndirect'));
  glMultiDrawArraysIndirectAMD := TglMultiDrawArraysIndirectAMD(ProcAddress('glMultiDrawArraysIndirectAMD'));
  glMultiDrawArraysIndirectBindlessCountNV := TglMultiDrawArraysIndirectBindlessCountNV(ProcAddress('glMultiDrawArraysIndirectBindlessCountNV'));
  glMultiDrawArraysIndirectBindlessNV := TglMultiDrawArraysIndirectBindlessNV(ProcAddress('glMultiDrawArraysIndirectBindlessNV'));
  glMultiDrawArraysIndirectCount := TglMultiDrawArraysIndirectCount(ProcAddress('glMultiDrawArraysIndirectCount'));
  glMultiDrawArraysIndirectCountARB := TglMultiDrawArraysIndirectCountARB(ProcAddress('glMultiDrawArraysIndirectCountARB'));
  glMultiDrawArraysIndirectEXT := TglMultiDrawArraysIndirectEXT(ProcAddress('glMultiDrawArraysIndirectEXT'));
  glMultiDrawElementArrayAPPLE := TglMultiDrawElementArrayAPPLE(ProcAddress('glMultiDrawElementArrayAPPLE'));
  glMultiDrawElements := TglMultiDrawElements(ProcAddress('glMultiDrawElements'));
  glMultiDrawElementsBaseVertex := TglMultiDrawElementsBaseVertex(ProcAddress('glMultiDrawElementsBaseVertex'));
  glMultiDrawElementsBaseVertexEXT := TglMultiDrawElementsBaseVertexEXT(ProcAddress('glMultiDrawElementsBaseVertexEXT'));
  glMultiDrawElementsEXT := TglMultiDrawElementsEXT(ProcAddress('glMultiDrawElementsEXT'));
  glMultiDrawElementsIndirect := TglMultiDrawElementsIndirect(ProcAddress('glMultiDrawElementsIndirect'));
  glMultiDrawElementsIndirectAMD := TglMultiDrawElementsIndirectAMD(ProcAddress('glMultiDrawElementsIndirectAMD'));
  glMultiDrawElementsIndirectBindlessCountNV := TglMultiDrawElementsIndirectBindlessCountNV(ProcAddress('glMultiDrawElementsIndirectBindlessCountNV'));
  glMultiDrawElementsIndirectBindlessNV := TglMultiDrawElementsIndirectBindlessNV(ProcAddress('glMultiDrawElementsIndirectBindlessNV'));
  glMultiDrawElementsIndirectCount := TglMultiDrawElementsIndirectCount(ProcAddress('glMultiDrawElementsIndirectCount'));
  glMultiDrawElementsIndirectCountARB := TglMultiDrawElementsIndirectCountARB(ProcAddress('glMultiDrawElementsIndirectCountARB'));
  glMultiDrawElementsIndirectEXT := TglMultiDrawElementsIndirectEXT(ProcAddress('glMultiDrawElementsIndirectEXT'));
  glMultiDrawMeshTasksIndirectNV := TglMultiDrawMeshTasksIndirectNV(ProcAddress('glMultiDrawMeshTasksIndirectNV'));
  glMultiDrawMeshTasksIndirectCountNV := TglMultiDrawMeshTasksIndirectCountNV(ProcAddress('glMultiDrawMeshTasksIndirectCountNV'));
  glMultiDrawRangeElementArrayAPPLE := TglMultiDrawRangeElementArrayAPPLE(ProcAddress('glMultiDrawRangeElementArrayAPPLE'));
  glMultiModeDrawArraysIBM := TglMultiModeDrawArraysIBM(ProcAddress('glMultiModeDrawArraysIBM'));
  glMultiModeDrawElementsIBM := TglMultiModeDrawElementsIBM(ProcAddress('glMultiModeDrawElementsIBM'));
  glMultiTexBufferEXT := TglMultiTexBufferEXT(ProcAddress('glMultiTexBufferEXT'));
  glMultiTexCoord1bOES := TglMultiTexCoord1bOES(ProcAddress('glMultiTexCoord1bOES'));
  glMultiTexCoord1bvOES := TglMultiTexCoord1bvOES(ProcAddress('glMultiTexCoord1bvOES'));
  glMultiTexCoord1d := TglMultiTexCoord1d(ProcAddress('glMultiTexCoord1d'));
  glMultiTexCoord1dARB := TglMultiTexCoord1dARB(ProcAddress('glMultiTexCoord1dARB'));
  glMultiTexCoord1dv := TglMultiTexCoord1dv(ProcAddress('glMultiTexCoord1dv'));
  glMultiTexCoord1dvARB := TglMultiTexCoord1dvARB(ProcAddress('glMultiTexCoord1dvARB'));
  glMultiTexCoord1f := TglMultiTexCoord1f(ProcAddress('glMultiTexCoord1f'));
  glMultiTexCoord1fARB := TglMultiTexCoord1fARB(ProcAddress('glMultiTexCoord1fARB'));
  glMultiTexCoord1fv := TglMultiTexCoord1fv(ProcAddress('glMultiTexCoord1fv'));
  glMultiTexCoord1fvARB := TglMultiTexCoord1fvARB(ProcAddress('glMultiTexCoord1fvARB'));
  glMultiTexCoord1hNV := TglMultiTexCoord1hNV(ProcAddress('glMultiTexCoord1hNV'));
  glMultiTexCoord1hvNV := TglMultiTexCoord1hvNV(ProcAddress('glMultiTexCoord1hvNV'));
  glMultiTexCoord1i := TglMultiTexCoord1i(ProcAddress('glMultiTexCoord1i'));
  glMultiTexCoord1iARB := TglMultiTexCoord1iARB(ProcAddress('glMultiTexCoord1iARB'));
  glMultiTexCoord1iv := TglMultiTexCoord1iv(ProcAddress('glMultiTexCoord1iv'));
  glMultiTexCoord1ivARB := TglMultiTexCoord1ivARB(ProcAddress('glMultiTexCoord1ivARB'));
  glMultiTexCoord1s := TglMultiTexCoord1s(ProcAddress('glMultiTexCoord1s'));
  glMultiTexCoord1sARB := TglMultiTexCoord1sARB(ProcAddress('glMultiTexCoord1sARB'));
  glMultiTexCoord1sv := TglMultiTexCoord1sv(ProcAddress('glMultiTexCoord1sv'));
  glMultiTexCoord1svARB := TglMultiTexCoord1svARB(ProcAddress('glMultiTexCoord1svARB'));
  glMultiTexCoord1xOES := TglMultiTexCoord1xOES(ProcAddress('glMultiTexCoord1xOES'));
  glMultiTexCoord1xvOES := TglMultiTexCoord1xvOES(ProcAddress('glMultiTexCoord1xvOES'));
  glMultiTexCoord2bOES := TglMultiTexCoord2bOES(ProcAddress('glMultiTexCoord2bOES'));
  glMultiTexCoord2bvOES := TglMultiTexCoord2bvOES(ProcAddress('glMultiTexCoord2bvOES'));
  glMultiTexCoord2d := TglMultiTexCoord2d(ProcAddress('glMultiTexCoord2d'));
  glMultiTexCoord2dARB := TglMultiTexCoord2dARB(ProcAddress('glMultiTexCoord2dARB'));
  glMultiTexCoord2dv := TglMultiTexCoord2dv(ProcAddress('glMultiTexCoord2dv'));
  glMultiTexCoord2dvARB := TglMultiTexCoord2dvARB(ProcAddress('glMultiTexCoord2dvARB'));
  glMultiTexCoord2f := TglMultiTexCoord2f(ProcAddress('glMultiTexCoord2f'));
  glMultiTexCoord2fARB := TglMultiTexCoord2fARB(ProcAddress('glMultiTexCoord2fARB'));
  glMultiTexCoord2fv := TglMultiTexCoord2fv(ProcAddress('glMultiTexCoord2fv'));
  glMultiTexCoord2fvARB := TglMultiTexCoord2fvARB(ProcAddress('glMultiTexCoord2fvARB'));
  glMultiTexCoord2hNV := TglMultiTexCoord2hNV(ProcAddress('glMultiTexCoord2hNV'));
  glMultiTexCoord2hvNV := TglMultiTexCoord2hvNV(ProcAddress('glMultiTexCoord2hvNV'));
  glMultiTexCoord2i := TglMultiTexCoord2i(ProcAddress('glMultiTexCoord2i'));
  glMultiTexCoord2iARB := TglMultiTexCoord2iARB(ProcAddress('glMultiTexCoord2iARB'));
  glMultiTexCoord2iv := TglMultiTexCoord2iv(ProcAddress('glMultiTexCoord2iv'));
  glMultiTexCoord2ivARB := TglMultiTexCoord2ivARB(ProcAddress('glMultiTexCoord2ivARB'));
  glMultiTexCoord2s := TglMultiTexCoord2s(ProcAddress('glMultiTexCoord2s'));
  glMultiTexCoord2sARB := TglMultiTexCoord2sARB(ProcAddress('glMultiTexCoord2sARB'));
  glMultiTexCoord2sv := TglMultiTexCoord2sv(ProcAddress('glMultiTexCoord2sv'));
  glMultiTexCoord2svARB := TglMultiTexCoord2svARB(ProcAddress('glMultiTexCoord2svARB'));
  glMultiTexCoord2xOES := TglMultiTexCoord2xOES(ProcAddress('glMultiTexCoord2xOES'));
  glMultiTexCoord2xvOES := TglMultiTexCoord2xvOES(ProcAddress('glMultiTexCoord2xvOES'));
  glMultiTexCoord3bOES := TglMultiTexCoord3bOES(ProcAddress('glMultiTexCoord3bOES'));
  glMultiTexCoord3bvOES := TglMultiTexCoord3bvOES(ProcAddress('glMultiTexCoord3bvOES'));
  glMultiTexCoord3d := TglMultiTexCoord3d(ProcAddress('glMultiTexCoord3d'));
  glMultiTexCoord3dARB := TglMultiTexCoord3dARB(ProcAddress('glMultiTexCoord3dARB'));
  glMultiTexCoord3dv := TglMultiTexCoord3dv(ProcAddress('glMultiTexCoord3dv'));
  glMultiTexCoord3dvARB := TglMultiTexCoord3dvARB(ProcAddress('glMultiTexCoord3dvARB'));
  glMultiTexCoord3f := TglMultiTexCoord3f(ProcAddress('glMultiTexCoord3f'));
  glMultiTexCoord3fARB := TglMultiTexCoord3fARB(ProcAddress('glMultiTexCoord3fARB'));
  glMultiTexCoord3fv := TglMultiTexCoord3fv(ProcAddress('glMultiTexCoord3fv'));
  glMultiTexCoord3fvARB := TglMultiTexCoord3fvARB(ProcAddress('glMultiTexCoord3fvARB'));
  glMultiTexCoord3hNV := TglMultiTexCoord3hNV(ProcAddress('glMultiTexCoord3hNV'));
  glMultiTexCoord3hvNV := TglMultiTexCoord3hvNV(ProcAddress('glMultiTexCoord3hvNV'));
  glMultiTexCoord3i := TglMultiTexCoord3i(ProcAddress('glMultiTexCoord3i'));
  glMultiTexCoord3iARB := TglMultiTexCoord3iARB(ProcAddress('glMultiTexCoord3iARB'));
  glMultiTexCoord3iv := TglMultiTexCoord3iv(ProcAddress('glMultiTexCoord3iv'));
  glMultiTexCoord3ivARB := TglMultiTexCoord3ivARB(ProcAddress('glMultiTexCoord3ivARB'));
  glMultiTexCoord3s := TglMultiTexCoord3s(ProcAddress('glMultiTexCoord3s'));
  glMultiTexCoord3sARB := TglMultiTexCoord3sARB(ProcAddress('glMultiTexCoord3sARB'));
  glMultiTexCoord3sv := TglMultiTexCoord3sv(ProcAddress('glMultiTexCoord3sv'));
  glMultiTexCoord3svARB := TglMultiTexCoord3svARB(ProcAddress('glMultiTexCoord3svARB'));
  glMultiTexCoord3xOES := TglMultiTexCoord3xOES(ProcAddress('glMultiTexCoord3xOES'));
  glMultiTexCoord3xvOES := TglMultiTexCoord3xvOES(ProcAddress('glMultiTexCoord3xvOES'));
  glMultiTexCoord4bOES := TglMultiTexCoord4bOES(ProcAddress('glMultiTexCoord4bOES'));
  glMultiTexCoord4bvOES := TglMultiTexCoord4bvOES(ProcAddress('glMultiTexCoord4bvOES'));
  glMultiTexCoord4d := TglMultiTexCoord4d(ProcAddress('glMultiTexCoord4d'));
  glMultiTexCoord4dARB := TglMultiTexCoord4dARB(ProcAddress('glMultiTexCoord4dARB'));
  glMultiTexCoord4dv := TglMultiTexCoord4dv(ProcAddress('glMultiTexCoord4dv'));
  glMultiTexCoord4dvARB := TglMultiTexCoord4dvARB(ProcAddress('glMultiTexCoord4dvARB'));
  glMultiTexCoord4f := TglMultiTexCoord4f(ProcAddress('glMultiTexCoord4f'));
  glMultiTexCoord4fARB := TglMultiTexCoord4fARB(ProcAddress('glMultiTexCoord4fARB'));
  glMultiTexCoord4fv := TglMultiTexCoord4fv(ProcAddress('glMultiTexCoord4fv'));
  glMultiTexCoord4fvARB := TglMultiTexCoord4fvARB(ProcAddress('glMultiTexCoord4fvARB'));
  glMultiTexCoord4hNV := TglMultiTexCoord4hNV(ProcAddress('glMultiTexCoord4hNV'));
  glMultiTexCoord4hvNV := TglMultiTexCoord4hvNV(ProcAddress('glMultiTexCoord4hvNV'));
  glMultiTexCoord4i := TglMultiTexCoord4i(ProcAddress('glMultiTexCoord4i'));
  glMultiTexCoord4iARB := TglMultiTexCoord4iARB(ProcAddress('glMultiTexCoord4iARB'));
  glMultiTexCoord4iv := TglMultiTexCoord4iv(ProcAddress('glMultiTexCoord4iv'));
  glMultiTexCoord4ivARB := TglMultiTexCoord4ivARB(ProcAddress('glMultiTexCoord4ivARB'));
  glMultiTexCoord4s := TglMultiTexCoord4s(ProcAddress('glMultiTexCoord4s'));
  glMultiTexCoord4sARB := TglMultiTexCoord4sARB(ProcAddress('glMultiTexCoord4sARB'));
  glMultiTexCoord4sv := TglMultiTexCoord4sv(ProcAddress('glMultiTexCoord4sv'));
  glMultiTexCoord4svARB := TglMultiTexCoord4svARB(ProcAddress('glMultiTexCoord4svARB'));
  glMultiTexCoord4x := TglMultiTexCoord4x(ProcAddress('glMultiTexCoord4x'));
  glMultiTexCoord4xOES := TglMultiTexCoord4xOES(ProcAddress('glMultiTexCoord4xOES'));
  glMultiTexCoord4xvOES := TglMultiTexCoord4xvOES(ProcAddress('glMultiTexCoord4xvOES'));
  glMultiTexCoordP1ui := TglMultiTexCoordP1ui(ProcAddress('glMultiTexCoordP1ui'));
  glMultiTexCoordP1uiv := TglMultiTexCoordP1uiv(ProcAddress('glMultiTexCoordP1uiv'));
  glMultiTexCoordP2ui := TglMultiTexCoordP2ui(ProcAddress('glMultiTexCoordP2ui'));
  glMultiTexCoordP2uiv := TglMultiTexCoordP2uiv(ProcAddress('glMultiTexCoordP2uiv'));
  glMultiTexCoordP3ui := TglMultiTexCoordP3ui(ProcAddress('glMultiTexCoordP3ui'));
  glMultiTexCoordP3uiv := TglMultiTexCoordP3uiv(ProcAddress('glMultiTexCoordP3uiv'));
  glMultiTexCoordP4ui := TglMultiTexCoordP4ui(ProcAddress('glMultiTexCoordP4ui'));
  glMultiTexCoordP4uiv := TglMultiTexCoordP4uiv(ProcAddress('glMultiTexCoordP4uiv'));
  glMultiTexCoordPointerEXT := TglMultiTexCoordPointerEXT(ProcAddress('glMultiTexCoordPointerEXT'));
  glMultiTexEnvfEXT := TglMultiTexEnvfEXT(ProcAddress('glMultiTexEnvfEXT'));
  glMultiTexEnvfvEXT := TglMultiTexEnvfvEXT(ProcAddress('glMultiTexEnvfvEXT'));
  glMultiTexEnviEXT := TglMultiTexEnviEXT(ProcAddress('glMultiTexEnviEXT'));
  glMultiTexEnvivEXT := TglMultiTexEnvivEXT(ProcAddress('glMultiTexEnvivEXT'));
  glMultiTexGendEXT := TglMultiTexGendEXT(ProcAddress('glMultiTexGendEXT'));
  glMultiTexGendvEXT := TglMultiTexGendvEXT(ProcAddress('glMultiTexGendvEXT'));
  glMultiTexGenfEXT := TglMultiTexGenfEXT(ProcAddress('glMultiTexGenfEXT'));
  glMultiTexGenfvEXT := TglMultiTexGenfvEXT(ProcAddress('glMultiTexGenfvEXT'));
  glMultiTexGeniEXT := TglMultiTexGeniEXT(ProcAddress('glMultiTexGeniEXT'));
  glMultiTexGenivEXT := TglMultiTexGenivEXT(ProcAddress('glMultiTexGenivEXT'));
  glMultiTexImage1DEXT := TglMultiTexImage1DEXT(ProcAddress('glMultiTexImage1DEXT'));
  glMultiTexImage2DEXT := TglMultiTexImage2DEXT(ProcAddress('glMultiTexImage2DEXT'));
  glMultiTexImage3DEXT := TglMultiTexImage3DEXT(ProcAddress('glMultiTexImage3DEXT'));
  glMultiTexParameterIivEXT := TglMultiTexParameterIivEXT(ProcAddress('glMultiTexParameterIivEXT'));
  glMultiTexParameterIuivEXT := TglMultiTexParameterIuivEXT(ProcAddress('glMultiTexParameterIuivEXT'));
  glMultiTexParameterfEXT := TglMultiTexParameterfEXT(ProcAddress('glMultiTexParameterfEXT'));
  glMultiTexParameterfvEXT := TglMultiTexParameterfvEXT(ProcAddress('glMultiTexParameterfvEXT'));
  glMultiTexParameteriEXT := TglMultiTexParameteriEXT(ProcAddress('glMultiTexParameteriEXT'));
  glMultiTexParameterivEXT := TglMultiTexParameterivEXT(ProcAddress('glMultiTexParameterivEXT'));
  glMultiTexRenderbufferEXT := TglMultiTexRenderbufferEXT(ProcAddress('glMultiTexRenderbufferEXT'));
  glMultiTexSubImage1DEXT := TglMultiTexSubImage1DEXT(ProcAddress('glMultiTexSubImage1DEXT'));
  glMultiTexSubImage2DEXT := TglMultiTexSubImage2DEXT(ProcAddress('glMultiTexSubImage2DEXT'));
  glMultiTexSubImage3DEXT := TglMultiTexSubImage3DEXT(ProcAddress('glMultiTexSubImage3DEXT'));
  glMulticastBarrierNV := TglMulticastBarrierNV(ProcAddress('glMulticastBarrierNV'));
  glMulticastBlitFramebufferNV := TglMulticastBlitFramebufferNV(ProcAddress('glMulticastBlitFramebufferNV'));
  glMulticastBufferSubDataNV := TglMulticastBufferSubDataNV(ProcAddress('glMulticastBufferSubDataNV'));
  glMulticastCopyBufferSubDataNV := TglMulticastCopyBufferSubDataNV(ProcAddress('glMulticastCopyBufferSubDataNV'));
  glMulticastCopyImageSubDataNV := TglMulticastCopyImageSubDataNV(ProcAddress('glMulticastCopyImageSubDataNV'));
  glMulticastFramebufferSampleLocationsfvNV := TglMulticastFramebufferSampleLocationsfvNV(ProcAddress('glMulticastFramebufferSampleLocationsfvNV'));
  glMulticastGetQueryObjecti64vNV := TglMulticastGetQueryObjecti64vNV(ProcAddress('glMulticastGetQueryObjecti64vNV'));
  glMulticastGetQueryObjectivNV := TglMulticastGetQueryObjectivNV(ProcAddress('glMulticastGetQueryObjectivNV'));
  glMulticastGetQueryObjectui64vNV := TglMulticastGetQueryObjectui64vNV(ProcAddress('glMulticastGetQueryObjectui64vNV'));
  glMulticastGetQueryObjectuivNV := TglMulticastGetQueryObjectuivNV(ProcAddress('glMulticastGetQueryObjectuivNV'));
  glMulticastScissorArrayvNVX := TglMulticastScissorArrayvNVX(ProcAddress('glMulticastScissorArrayvNVX'));
  glMulticastViewportArrayvNVX := TglMulticastViewportArrayvNVX(ProcAddress('glMulticastViewportArrayvNVX'));
  glMulticastViewportPositionWScaleNVX := TglMulticastViewportPositionWScaleNVX(ProcAddress('glMulticastViewportPositionWScaleNVX'));
  glMulticastWaitSyncNV := TglMulticastWaitSyncNV(ProcAddress('glMulticastWaitSyncNV'));
  glNamedBufferAttachMemoryNV := TglNamedBufferAttachMemoryNV(ProcAddress('glNamedBufferAttachMemoryNV'));
  glNamedBufferData := TglNamedBufferData(ProcAddress('glNamedBufferData'));
  glNamedBufferDataEXT := TglNamedBufferDataEXT(ProcAddress('glNamedBufferDataEXT'));
  glNamedBufferPageCommitmentARB := TglNamedBufferPageCommitmentARB(ProcAddress('glNamedBufferPageCommitmentARB'));
  glNamedBufferPageCommitmentEXT := TglNamedBufferPageCommitmentEXT(ProcAddress('glNamedBufferPageCommitmentEXT'));
  glNamedBufferPageCommitmentMemNV := TglNamedBufferPageCommitmentMemNV(ProcAddress('glNamedBufferPageCommitmentMemNV'));
  glNamedBufferStorage := TglNamedBufferStorage(ProcAddress('glNamedBufferStorage'));
  glNamedBufferStorageExternalEXT := TglNamedBufferStorageExternalEXT(ProcAddress('glNamedBufferStorageExternalEXT'));
  glNamedBufferStorageEXT := TglNamedBufferStorageEXT(ProcAddress('glNamedBufferStorageEXT'));
  glNamedBufferStorageMemEXT := TglNamedBufferStorageMemEXT(ProcAddress('glNamedBufferStorageMemEXT'));
  glNamedBufferSubData := TglNamedBufferSubData(ProcAddress('glNamedBufferSubData'));
  glNamedBufferSubDataEXT := TglNamedBufferSubDataEXT(ProcAddress('glNamedBufferSubDataEXT'));
  glNamedCopyBufferSubDataEXT := TglNamedCopyBufferSubDataEXT(ProcAddress('glNamedCopyBufferSubDataEXT'));
  glNamedFramebufferDrawBuffer := TglNamedFramebufferDrawBuffer(ProcAddress('glNamedFramebufferDrawBuffer'));
  glNamedFramebufferDrawBuffers := TglNamedFramebufferDrawBuffers(ProcAddress('glNamedFramebufferDrawBuffers'));
  glNamedFramebufferParameteri := TglNamedFramebufferParameteri(ProcAddress('glNamedFramebufferParameteri'));
  glNamedFramebufferParameteriEXT := TglNamedFramebufferParameteriEXT(ProcAddress('glNamedFramebufferParameteriEXT'));
  glNamedFramebufferReadBuffer := TglNamedFramebufferReadBuffer(ProcAddress('glNamedFramebufferReadBuffer'));
  glNamedFramebufferRenderbuffer := TglNamedFramebufferRenderbuffer(ProcAddress('glNamedFramebufferRenderbuffer'));
  glNamedFramebufferRenderbufferEXT := TglNamedFramebufferRenderbufferEXT(ProcAddress('glNamedFramebufferRenderbufferEXT'));
  glNamedFramebufferSampleLocationsfvARB := TglNamedFramebufferSampleLocationsfvARB(ProcAddress('glNamedFramebufferSampleLocationsfvARB'));
  glNamedFramebufferSampleLocationsfvNV := TglNamedFramebufferSampleLocationsfvNV(ProcAddress('glNamedFramebufferSampleLocationsfvNV'));
  glNamedFramebufferTexture := TglNamedFramebufferTexture(ProcAddress('glNamedFramebufferTexture'));
  glNamedFramebufferSamplePositionsfvAMD := TglNamedFramebufferSamplePositionsfvAMD(ProcAddress('glNamedFramebufferSamplePositionsfvAMD'));
  glNamedFramebufferTexture1DEXT := TglNamedFramebufferTexture1DEXT(ProcAddress('glNamedFramebufferTexture1DEXT'));
  glNamedFramebufferTexture2DEXT := TglNamedFramebufferTexture2DEXT(ProcAddress('glNamedFramebufferTexture2DEXT'));
  glNamedFramebufferTexture3DEXT := TglNamedFramebufferTexture3DEXT(ProcAddress('glNamedFramebufferTexture3DEXT'));
  glNamedFramebufferTextureEXT := TglNamedFramebufferTextureEXT(ProcAddress('glNamedFramebufferTextureEXT'));
  glNamedFramebufferTextureFaceEXT := TglNamedFramebufferTextureFaceEXT(ProcAddress('glNamedFramebufferTextureFaceEXT'));
  glNamedFramebufferTextureLayer := TglNamedFramebufferTextureLayer(ProcAddress('glNamedFramebufferTextureLayer'));
  glNamedFramebufferTextureLayerEXT := TglNamedFramebufferTextureLayerEXT(ProcAddress('glNamedFramebufferTextureLayerEXT'));
  glNamedProgramLocalParameter4dEXT := TglNamedProgramLocalParameter4dEXT(ProcAddress('glNamedProgramLocalParameter4dEXT'));
  glNamedProgramLocalParameter4dvEXT := TglNamedProgramLocalParameter4dvEXT(ProcAddress('glNamedProgramLocalParameter4dvEXT'));
  glNamedProgramLocalParameter4fEXT := TglNamedProgramLocalParameter4fEXT(ProcAddress('glNamedProgramLocalParameter4fEXT'));
  glNamedProgramLocalParameter4fvEXT := TglNamedProgramLocalParameter4fvEXT(ProcAddress('glNamedProgramLocalParameter4fvEXT'));
  glNamedProgramLocalParameterI4iEXT := TglNamedProgramLocalParameterI4iEXT(ProcAddress('glNamedProgramLocalParameterI4iEXT'));
  glNamedProgramLocalParameterI4ivEXT := TglNamedProgramLocalParameterI4ivEXT(ProcAddress('glNamedProgramLocalParameterI4ivEXT'));
  glNamedProgramLocalParameterI4uiEXT := TglNamedProgramLocalParameterI4uiEXT(ProcAddress('glNamedProgramLocalParameterI4uiEXT'));
  glNamedProgramLocalParameterI4uivEXT := TglNamedProgramLocalParameterI4uivEXT(ProcAddress('glNamedProgramLocalParameterI4uivEXT'));
  glNamedProgramLocalParameters4fvEXT := TglNamedProgramLocalParameters4fvEXT(ProcAddress('glNamedProgramLocalParameters4fvEXT'));
  glNamedProgramLocalParametersI4ivEXT := TglNamedProgramLocalParametersI4ivEXT(ProcAddress('glNamedProgramLocalParametersI4ivEXT'));
  glNamedProgramLocalParametersI4uivEXT := TglNamedProgramLocalParametersI4uivEXT(ProcAddress('glNamedProgramLocalParametersI4uivEXT'));
  glNamedProgramStringEXT := TglNamedProgramStringEXT(ProcAddress('glNamedProgramStringEXT'));
  glNamedRenderbufferStorage := TglNamedRenderbufferStorage(ProcAddress('glNamedRenderbufferStorage'));
  glNamedRenderbufferStorageEXT := TglNamedRenderbufferStorageEXT(ProcAddress('glNamedRenderbufferStorageEXT'));
  glNamedRenderbufferStorageMultisample := TglNamedRenderbufferStorageMultisample(ProcAddress('glNamedRenderbufferStorageMultisample'));
  glNamedRenderbufferStorageMultisampleAdvancedAMD := TglNamedRenderbufferStorageMultisampleAdvancedAMD(ProcAddress('glNamedRenderbufferStorageMultisampleAdvancedAMD'));
  glNamedRenderbufferStorageMultisampleCoverageEXT := TglNamedRenderbufferStorageMultisampleCoverageEXT(ProcAddress('glNamedRenderbufferStorageMultisampleCoverageEXT'));
  glNamedRenderbufferStorageMultisampleEXT := TglNamedRenderbufferStorageMultisampleEXT(ProcAddress('glNamedRenderbufferStorageMultisampleEXT'));
  glNamedStringARB := TglNamedStringARB(ProcAddress('glNamedStringARB'));
  glNewList := TglNewList(ProcAddress('glNewList'));
  glNewObjectBufferATI := TglNewObjectBufferATI(ProcAddress('glNewObjectBufferATI'));
  glNormal3b := TglNormal3b(ProcAddress('glNormal3b'));
  glNormal3bv := TglNormal3bv(ProcAddress('glNormal3bv'));
  glNormal3d := TglNormal3d(ProcAddress('glNormal3d'));
  glNormal3dv := TglNormal3dv(ProcAddress('glNormal3dv'));
  glNormal3f := TglNormal3f(ProcAddress('glNormal3f'));
  glNormal3fVertex3fSUN := TglNormal3fVertex3fSUN(ProcAddress('glNormal3fVertex3fSUN'));
  glNormal3fVertex3fvSUN := TglNormal3fVertex3fvSUN(ProcAddress('glNormal3fVertex3fvSUN'));
  glNormal3fv := TglNormal3fv(ProcAddress('glNormal3fv'));
  glNormal3hNV := TglNormal3hNV(ProcAddress('glNormal3hNV'));
  glNormal3hvNV := TglNormal3hvNV(ProcAddress('glNormal3hvNV'));
  glNormal3i := TglNormal3i(ProcAddress('glNormal3i'));
  glNormal3iv := TglNormal3iv(ProcAddress('glNormal3iv'));
  glNormal3s := TglNormal3s(ProcAddress('glNormal3s'));
  glNormal3sv := TglNormal3sv(ProcAddress('glNormal3sv'));
  glNormal3x := TglNormal3x(ProcAddress('glNormal3x'));
  glNormal3xOES := TglNormal3xOES(ProcAddress('glNormal3xOES'));
  glNormal3xvOES := TglNormal3xvOES(ProcAddress('glNormal3xvOES'));
  glNormalFormatNV := TglNormalFormatNV(ProcAddress('glNormalFormatNV'));
  glNormalP3ui := TglNormalP3ui(ProcAddress('glNormalP3ui'));
  glNormalP3uiv := TglNormalP3uiv(ProcAddress('glNormalP3uiv'));
  glNormalPointer := TglNormalPointer(ProcAddress('glNormalPointer'));
  glNormalPointerEXT := TglNormalPointerEXT(ProcAddress('glNormalPointerEXT'));
  glNormalPointerListIBM := TglNormalPointerListIBM(ProcAddress('glNormalPointerListIBM'));
  glNormalPointervINTEL := TglNormalPointervINTEL(ProcAddress('glNormalPointervINTEL'));
  glNormalStream3bATI := TglNormalStream3bATI(ProcAddress('glNormalStream3bATI'));
  glNormalStream3bvATI := TglNormalStream3bvATI(ProcAddress('glNormalStream3bvATI'));
  glNormalStream3dATI := TglNormalStream3dATI(ProcAddress('glNormalStream3dATI'));
  glNormalStream3dvATI := TglNormalStream3dvATI(ProcAddress('glNormalStream3dvATI'));
  glNormalStream3fATI := TglNormalStream3fATI(ProcAddress('glNormalStream3fATI'));
  glNormalStream3fvATI := TglNormalStream3fvATI(ProcAddress('glNormalStream3fvATI'));
  glNormalStream3iATI := TglNormalStream3iATI(ProcAddress('glNormalStream3iATI'));
  glNormalStream3ivATI := TglNormalStream3ivATI(ProcAddress('glNormalStream3ivATI'));
  glNormalStream3sATI := TglNormalStream3sATI(ProcAddress('glNormalStream3sATI'));
  glNormalStream3svATI := TglNormalStream3svATI(ProcAddress('glNormalStream3svATI'));
  glObjectLabel := TglObjectLabel(ProcAddress('glObjectLabel'));
  glObjectLabelKHR := TglObjectLabelKHR(ProcAddress('glObjectLabelKHR'));
  glObjectPtrLabel := TglObjectPtrLabel(ProcAddress('glObjectPtrLabel'));
  glObjectPtrLabelKHR := TglObjectPtrLabelKHR(ProcAddress('glObjectPtrLabelKHR'));
  glObjectPurgeableAPPLE := TglObjectPurgeableAPPLE(ProcAddress('glObjectPurgeableAPPLE'));
  glObjectUnpurgeableAPPLE := TglObjectUnpurgeableAPPLE(ProcAddress('glObjectUnpurgeableAPPLE'));
  glOrtho := TglOrtho(ProcAddress('glOrtho'));
  glOrthof := TglOrthof(ProcAddress('glOrthof'));
  glOrthofOES := TglOrthofOES(ProcAddress('glOrthofOES'));
  glOrthox := TglOrthox(ProcAddress('glOrthox'));
  glOrthoxOES := TglOrthoxOES(ProcAddress('glOrthoxOES'));
  glPNTrianglesfATI := TglPNTrianglesfATI(ProcAddress('glPNTrianglesfATI'));
  glPNTrianglesiATI := TglPNTrianglesiATI(ProcAddress('glPNTrianglesiATI'));
  glPassTexCoordATI := TglPassTexCoordATI(ProcAddress('glPassTexCoordATI'));
  glPassThrough := TglPassThrough(ProcAddress('glPassThrough'));
  glPassThroughxOES := TglPassThroughxOES(ProcAddress('glPassThroughxOES'));
  glPatchParameterfv := TglPatchParameterfv(ProcAddress('glPatchParameterfv'));
  glPatchParameteri := TglPatchParameteri(ProcAddress('glPatchParameteri'));
  glPatchParameteriEXT := TglPatchParameteriEXT(ProcAddress('glPatchParameteriEXT'));
  glPatchParameteriOES := TglPatchParameteriOES(ProcAddress('glPatchParameteriOES'));
  glPathColorGenNV := TglPathColorGenNV(ProcAddress('glPathColorGenNV'));
  glPathCommandsNV := TglPathCommandsNV(ProcAddress('glPathCommandsNV'));
  glPathCoordsNV := TglPathCoordsNV(ProcAddress('glPathCoordsNV'));
  glPathCoverDepthFuncNV := TglPathCoverDepthFuncNV(ProcAddress('glPathCoverDepthFuncNV'));
  glPathDashArrayNV := TglPathDashArrayNV(ProcAddress('glPathDashArrayNV'));
  glPathFogGenNV := TglPathFogGenNV(ProcAddress('glPathFogGenNV'));
  glPathGlyphIndexArrayNV := TglPathGlyphIndexArrayNV(ProcAddress('glPathGlyphIndexArrayNV'));
  glPathGlyphIndexRangeNV := TglPathGlyphIndexRangeNV(ProcAddress('glPathGlyphIndexRangeNV'));
  glPathGlyphRangeNV := TglPathGlyphRangeNV(ProcAddress('glPathGlyphRangeNV'));
  glPathGlyphsNV := TglPathGlyphsNV(ProcAddress('glPathGlyphsNV'));
  glPathMemoryGlyphIndexArrayNV := TglPathMemoryGlyphIndexArrayNV(ProcAddress('glPathMemoryGlyphIndexArrayNV'));
  glPathParameterfNV := TglPathParameterfNV(ProcAddress('glPathParameterfNV'));
  glPathParameterfvNV := TglPathParameterfvNV(ProcAddress('glPathParameterfvNV'));
  glPathParameteriNV := TglPathParameteriNV(ProcAddress('glPathParameteriNV'));
  glPathParameterivNV := TglPathParameterivNV(ProcAddress('glPathParameterivNV'));
  glPathStencilDepthOffsetNV := TglPathStencilDepthOffsetNV(ProcAddress('glPathStencilDepthOffsetNV'));
  glPathStencilFuncNV := TglPathStencilFuncNV(ProcAddress('glPathStencilFuncNV'));
  glPathStringNV := TglPathStringNV(ProcAddress('glPathStringNV'));
  glPathSubCommandsNV := TglPathSubCommandsNV(ProcAddress('glPathSubCommandsNV'));
  glPathSubCoordsNV := TglPathSubCoordsNV(ProcAddress('glPathSubCoordsNV'));
  glPathTexGenNV := TglPathTexGenNV(ProcAddress('glPathTexGenNV'));
  glPauseTransformFeedback := TglPauseTransformFeedback(ProcAddress('glPauseTransformFeedback'));
  glPauseTransformFeedbackNV := TglPauseTransformFeedbackNV(ProcAddress('glPauseTransformFeedbackNV'));
  glPixelDataRangeNV := TglPixelDataRangeNV(ProcAddress('glPixelDataRangeNV'));
  glPixelMapfv := TglPixelMapfv(ProcAddress('glPixelMapfv'));
  glPixelMapuiv := TglPixelMapuiv(ProcAddress('glPixelMapuiv'));
  glPixelMapusv := TglPixelMapusv(ProcAddress('glPixelMapusv'));
  glPixelMapx := TglPixelMapx(ProcAddress('glPixelMapx'));
  glPixelStoref := TglPixelStoref(ProcAddress('glPixelStoref'));
  glPixelStorei := TglPixelStorei(ProcAddress('glPixelStorei'));
  glPixelStorex := TglPixelStorex(ProcAddress('glPixelStorex'));
  glPixelTexGenParameterfSGIS := TglPixelTexGenParameterfSGIS(ProcAddress('glPixelTexGenParameterfSGIS'));
  glPixelTexGenParameterfvSGIS := TglPixelTexGenParameterfvSGIS(ProcAddress('glPixelTexGenParameterfvSGIS'));
  glPixelTexGenParameteriSGIS := TglPixelTexGenParameteriSGIS(ProcAddress('glPixelTexGenParameteriSGIS'));
  glPixelTexGenParameterivSGIS := TglPixelTexGenParameterivSGIS(ProcAddress('glPixelTexGenParameterivSGIS'));
  glPixelTexGenSGIX := TglPixelTexGenSGIX(ProcAddress('glPixelTexGenSGIX'));
  glPixelTransferf := TglPixelTransferf(ProcAddress('glPixelTransferf'));
  glPixelTransferi := TglPixelTransferi(ProcAddress('glPixelTransferi'));
  glPixelTransferxOES := TglPixelTransferxOES(ProcAddress('glPixelTransferxOES'));
  glPixelTransformParameterfEXT := TglPixelTransformParameterfEXT(ProcAddress('glPixelTransformParameterfEXT'));
  glPixelTransformParameterfvEXT := TglPixelTransformParameterfvEXT(ProcAddress('glPixelTransformParameterfvEXT'));
  glPixelTransformParameteriEXT := TglPixelTransformParameteriEXT(ProcAddress('glPixelTransformParameteriEXT'));
  glPixelTransformParameterivEXT := TglPixelTransformParameterivEXT(ProcAddress('glPixelTransformParameterivEXT'));
  glPixelZoom := TglPixelZoom(ProcAddress('glPixelZoom'));
  glPixelZoomxOES := TglPixelZoomxOES(ProcAddress('glPixelZoomxOES'));
  glPointAlongPathNV := TglPointAlongPathNV(ProcAddress('glPointAlongPathNV'));
  glPointParameterf := TglPointParameterf(ProcAddress('glPointParameterf'));
  glPointParameterfARB := TglPointParameterfARB(ProcAddress('glPointParameterfARB'));
  glPointParameterfEXT := TglPointParameterfEXT(ProcAddress('glPointParameterfEXT'));
  glPointParameterfSGIS := TglPointParameterfSGIS(ProcAddress('glPointParameterfSGIS'));
  glPointParameterfv := TglPointParameterfv(ProcAddress('glPointParameterfv'));
  glPointParameterfvARB := TglPointParameterfvARB(ProcAddress('glPointParameterfvARB'));
  glPointParameterfvEXT := TglPointParameterfvEXT(ProcAddress('glPointParameterfvEXT'));
  glPointParameterfvSGIS := TglPointParameterfvSGIS(ProcAddress('glPointParameterfvSGIS'));
  glPointParameteri := TglPointParameteri(ProcAddress('glPointParameteri'));
  glPointParameteriNV := TglPointParameteriNV(ProcAddress('glPointParameteriNV'));
  glPointParameteriv := TglPointParameteriv(ProcAddress('glPointParameteriv'));
  glPointParameterivNV := TglPointParameterivNV(ProcAddress('glPointParameterivNV'));
  glPointParameterx := TglPointParameterx(ProcAddress('glPointParameterx'));
  glPointParameterxOES := TglPointParameterxOES(ProcAddress('glPointParameterxOES'));
  glPointParameterxv := TglPointParameterxv(ProcAddress('glPointParameterxv'));
  glPointParameterxvOES := TglPointParameterxvOES(ProcAddress('glPointParameterxvOES'));
  glPointSize := TglPointSize(ProcAddress('glPointSize'));
  glPointSizePointerOES := TglPointSizePointerOES(ProcAddress('glPointSizePointerOES'));
  glPointSizex := TglPointSizex(ProcAddress('glPointSizex'));
  glPointSizexOES := TglPointSizexOES(ProcAddress('glPointSizexOES'));
  glPollAsyncSGIX := TglPollAsyncSGIX(ProcAddress('glPollAsyncSGIX'));
  glPollInstrumentsSGIX := TglPollInstrumentsSGIX(ProcAddress('glPollInstrumentsSGIX'));
  glPolygonMode := TglPolygonMode(ProcAddress('glPolygonMode'));
  glPolygonModeNV := TglPolygonModeNV(ProcAddress('glPolygonModeNV'));
  glPolygonOffset := TglPolygonOffset(ProcAddress('glPolygonOffset'));
  glPolygonOffsetClamp := TglPolygonOffsetClamp(ProcAddress('glPolygonOffsetClamp'));
  glPolygonOffsetClampEXT := TglPolygonOffsetClampEXT(ProcAddress('glPolygonOffsetClampEXT'));
  glPolygonOffsetEXT := TglPolygonOffsetEXT(ProcAddress('glPolygonOffsetEXT'));
  glPolygonOffsetx := TglPolygonOffsetx(ProcAddress('glPolygonOffsetx'));
  glPolygonOffsetxOES := TglPolygonOffsetxOES(ProcAddress('glPolygonOffsetxOES'));
  glPolygonStipple := TglPolygonStipple(ProcAddress('glPolygonStipple'));
  glPopAttrib := TglPopAttrib(ProcAddress('glPopAttrib'));
  glPopClientAttrib := TglPopClientAttrib(ProcAddress('glPopClientAttrib'));
  glPopDebugGroup := TglPopDebugGroup(ProcAddress('glPopDebugGroup'));
  glPopDebugGroupKHR := TglPopDebugGroupKHR(ProcAddress('glPopDebugGroupKHR'));
  glPopGroupMarkerEXT := TglPopGroupMarkerEXT(ProcAddress('glPopGroupMarkerEXT'));
  glPopMatrix := TglPopMatrix(ProcAddress('glPopMatrix'));
  glPopName := TglPopName(ProcAddress('glPopName'));
  glPresentFrameDualFillNV := TglPresentFrameDualFillNV(ProcAddress('glPresentFrameDualFillNV'));
  glPresentFrameKeyedNV := TglPresentFrameKeyedNV(ProcAddress('glPresentFrameKeyedNV'));
  glPrimitiveBoundingBox := TglPrimitiveBoundingBox(ProcAddress('glPrimitiveBoundingBox'));
  glPrimitiveBoundingBoxARB := TglPrimitiveBoundingBoxARB(ProcAddress('glPrimitiveBoundingBoxARB'));
  glPrimitiveBoundingBoxEXT := TglPrimitiveBoundingBoxEXT(ProcAddress('glPrimitiveBoundingBoxEXT'));
  glPrimitiveBoundingBoxOES := TglPrimitiveBoundingBoxOES(ProcAddress('glPrimitiveBoundingBoxOES'));
  glPrimitiveRestartIndex := TglPrimitiveRestartIndex(ProcAddress('glPrimitiveRestartIndex'));
  glPrimitiveRestartIndexNV := TglPrimitiveRestartIndexNV(ProcAddress('glPrimitiveRestartIndexNV'));
  glPrimitiveRestartNV := TglPrimitiveRestartNV(ProcAddress('glPrimitiveRestartNV'));
  glPrioritizeTextures := TglPrioritizeTextures(ProcAddress('glPrioritizeTextures'));
  glPrioritizeTexturesEXT := TglPrioritizeTexturesEXT(ProcAddress('glPrioritizeTexturesEXT'));
  glPrioritizeTexturesxOES := TglPrioritizeTexturesxOES(ProcAddress('glPrioritizeTexturesxOES'));
  glProgramBinary := TglProgramBinary(ProcAddress('glProgramBinary'));
  glProgramBinaryOES := TglProgramBinaryOES(ProcAddress('glProgramBinaryOES'));
  glProgramBufferParametersIivNV := TglProgramBufferParametersIivNV(ProcAddress('glProgramBufferParametersIivNV'));
  glProgramBufferParametersIuivNV := TglProgramBufferParametersIuivNV(ProcAddress('glProgramBufferParametersIuivNV'));
  glProgramBufferParametersfvNV := TglProgramBufferParametersfvNV(ProcAddress('glProgramBufferParametersfvNV'));
  glProgramEnvParameter4dARB := TglProgramEnvParameter4dARB(ProcAddress('glProgramEnvParameter4dARB'));
  glProgramEnvParameter4dvARB := TglProgramEnvParameter4dvARB(ProcAddress('glProgramEnvParameter4dvARB'));
  glProgramEnvParameter4fARB := TglProgramEnvParameter4fARB(ProcAddress('glProgramEnvParameter4fARB'));
  glProgramEnvParameter4fvARB := TglProgramEnvParameter4fvARB(ProcAddress('glProgramEnvParameter4fvARB'));
  glProgramEnvParameterI4iNV := TglProgramEnvParameterI4iNV(ProcAddress('glProgramEnvParameterI4iNV'));
  glProgramEnvParameterI4ivNV := TglProgramEnvParameterI4ivNV(ProcAddress('glProgramEnvParameterI4ivNV'));
  glProgramEnvParameterI4uiNV := TglProgramEnvParameterI4uiNV(ProcAddress('glProgramEnvParameterI4uiNV'));
  glProgramEnvParameterI4uivNV := TglProgramEnvParameterI4uivNV(ProcAddress('glProgramEnvParameterI4uivNV'));
  glProgramEnvParameters4fvEXT := TglProgramEnvParameters4fvEXT(ProcAddress('glProgramEnvParameters4fvEXT'));
  glProgramEnvParametersI4ivNV := TglProgramEnvParametersI4ivNV(ProcAddress('glProgramEnvParametersI4ivNV'));
  glProgramEnvParametersI4uivNV := TglProgramEnvParametersI4uivNV(ProcAddress('glProgramEnvParametersI4uivNV'));
  glProgramLocalParameter4dARB := TglProgramLocalParameter4dARB(ProcAddress('glProgramLocalParameter4dARB'));
  glProgramLocalParameter4dvARB := TglProgramLocalParameter4dvARB(ProcAddress('glProgramLocalParameter4dvARB'));
  glProgramLocalParameter4fARB := TglProgramLocalParameter4fARB(ProcAddress('glProgramLocalParameter4fARB'));
  glProgramLocalParameter4fvARB := TglProgramLocalParameter4fvARB(ProcAddress('glProgramLocalParameter4fvARB'));
  glProgramLocalParameterI4iNV := TglProgramLocalParameterI4iNV(ProcAddress('glProgramLocalParameterI4iNV'));
  glProgramLocalParameterI4ivNV := TglProgramLocalParameterI4ivNV(ProcAddress('glProgramLocalParameterI4ivNV'));
  glProgramLocalParameterI4uiNV := TglProgramLocalParameterI4uiNV(ProcAddress('glProgramLocalParameterI4uiNV'));
  glProgramLocalParameterI4uivNV := TglProgramLocalParameterI4uivNV(ProcAddress('glProgramLocalParameterI4uivNV'));
  glProgramLocalParameters4fvEXT := TglProgramLocalParameters4fvEXT(ProcAddress('glProgramLocalParameters4fvEXT'));
  glProgramLocalParametersI4ivNV := TglProgramLocalParametersI4ivNV(ProcAddress('glProgramLocalParametersI4ivNV'));
  glProgramLocalParametersI4uivNV := TglProgramLocalParametersI4uivNV(ProcAddress('glProgramLocalParametersI4uivNV'));
  glProgramNamedParameter4dNV := TglProgramNamedParameter4dNV(ProcAddress('glProgramNamedParameter4dNV'));
  glProgramNamedParameter4dvNV := TglProgramNamedParameter4dvNV(ProcAddress('glProgramNamedParameter4dvNV'));
  glProgramNamedParameter4fNV := TglProgramNamedParameter4fNV(ProcAddress('glProgramNamedParameter4fNV'));
  glProgramNamedParameter4fvNV := TglProgramNamedParameter4fvNV(ProcAddress('glProgramNamedParameter4fvNV'));
  glProgramParameter4dNV := TglProgramParameter4dNV(ProcAddress('glProgramParameter4dNV'));
  glProgramParameter4dvNV := TglProgramParameter4dvNV(ProcAddress('glProgramParameter4dvNV'));
  glProgramParameter4fNV := TglProgramParameter4fNV(ProcAddress('glProgramParameter4fNV'));
  glProgramParameter4fvNV := TglProgramParameter4fvNV(ProcAddress('glProgramParameter4fvNV'));
  glProgramParameteri := TglProgramParameteri(ProcAddress('glProgramParameteri'));
  glProgramParameteriARB := TglProgramParameteriARB(ProcAddress('glProgramParameteriARB'));
  glProgramParameteriEXT := TglProgramParameteriEXT(ProcAddress('glProgramParameteriEXT'));
  glProgramParameters4dvNV := TglProgramParameters4dvNV(ProcAddress('glProgramParameters4dvNV'));
  glProgramParameters4fvNV := TglProgramParameters4fvNV(ProcAddress('glProgramParameters4fvNV'));
  glProgramPathFragmentInputGenNV := TglProgramPathFragmentInputGenNV(ProcAddress('glProgramPathFragmentInputGenNV'));
  glProgramStringARB := TglProgramStringARB(ProcAddress('glProgramStringARB'));
  glProgramSubroutineParametersuivNV := TglProgramSubroutineParametersuivNV(ProcAddress('glProgramSubroutineParametersuivNV'));
  glProgramUniform1d := TglProgramUniform1d(ProcAddress('glProgramUniform1d'));
  glProgramUniform1dEXT := TglProgramUniform1dEXT(ProcAddress('glProgramUniform1dEXT'));
  glProgramUniform1dv := TglProgramUniform1dv(ProcAddress('glProgramUniform1dv'));
  glProgramUniform1dvEXT := TglProgramUniform1dvEXT(ProcAddress('glProgramUniform1dvEXT'));
  glProgramUniform1f := TglProgramUniform1f(ProcAddress('glProgramUniform1f'));
  glProgramUniform1fEXT := TglProgramUniform1fEXT(ProcAddress('glProgramUniform1fEXT'));
  glProgramUniform1fv := TglProgramUniform1fv(ProcAddress('glProgramUniform1fv'));
  glProgramUniform1fvEXT := TglProgramUniform1fvEXT(ProcAddress('glProgramUniform1fvEXT'));
  glProgramUniform1i := TglProgramUniform1i(ProcAddress('glProgramUniform1i'));
  glProgramUniform1i64ARB := TglProgramUniform1i64ARB(ProcAddress('glProgramUniform1i64ARB'));
  glProgramUniform1i64NV := TglProgramUniform1i64NV(ProcAddress('glProgramUniform1i64NV'));
  glProgramUniform1i64vARB := TglProgramUniform1i64vARB(ProcAddress('glProgramUniform1i64vARB'));
  glProgramUniform1i64vNV := TglProgramUniform1i64vNV(ProcAddress('glProgramUniform1i64vNV'));
  glProgramUniform1iEXT := TglProgramUniform1iEXT(ProcAddress('glProgramUniform1iEXT'));
  glProgramUniform1iv := TglProgramUniform1iv(ProcAddress('glProgramUniform1iv'));
  glProgramUniform1ivEXT := TglProgramUniform1ivEXT(ProcAddress('glProgramUniform1ivEXT'));
  glProgramUniform1ui := TglProgramUniform1ui(ProcAddress('glProgramUniform1ui'));
  glProgramUniform1ui64ARB := TglProgramUniform1ui64ARB(ProcAddress('glProgramUniform1ui64ARB'));
  glProgramUniform1ui64NV := TglProgramUniform1ui64NV(ProcAddress('glProgramUniform1ui64NV'));
  glProgramUniform1ui64vARB := TglProgramUniform1ui64vARB(ProcAddress('glProgramUniform1ui64vARB'));
  glProgramUniform1ui64vNV := TglProgramUniform1ui64vNV(ProcAddress('glProgramUniform1ui64vNV'));
  glProgramUniform1uiEXT := TglProgramUniform1uiEXT(ProcAddress('glProgramUniform1uiEXT'));
  glProgramUniform1uiv := TglProgramUniform1uiv(ProcAddress('glProgramUniform1uiv'));
  glProgramUniform1uivEXT := TglProgramUniform1uivEXT(ProcAddress('glProgramUniform1uivEXT'));
  glProgramUniform2d := TglProgramUniform2d(ProcAddress('glProgramUniform2d'));
  glProgramUniform2dEXT := TglProgramUniform2dEXT(ProcAddress('glProgramUniform2dEXT'));
  glProgramUniform2dv := TglProgramUniform2dv(ProcAddress('glProgramUniform2dv'));
  glProgramUniform2dvEXT := TglProgramUniform2dvEXT(ProcAddress('glProgramUniform2dvEXT'));
  glProgramUniform2f := TglProgramUniform2f(ProcAddress('glProgramUniform2f'));
  glProgramUniform2fEXT := TglProgramUniform2fEXT(ProcAddress('glProgramUniform2fEXT'));
  glProgramUniform2fv := TglProgramUniform2fv(ProcAddress('glProgramUniform2fv'));
  glProgramUniform2fvEXT := TglProgramUniform2fvEXT(ProcAddress('glProgramUniform2fvEXT'));
  glProgramUniform2i := TglProgramUniform2i(ProcAddress('glProgramUniform2i'));
  glProgramUniform2i64ARB := TglProgramUniform2i64ARB(ProcAddress('glProgramUniform2i64ARB'));
  glProgramUniform2i64NV := TglProgramUniform2i64NV(ProcAddress('glProgramUniform2i64NV'));
  glProgramUniform2i64vARB := TglProgramUniform2i64vARB(ProcAddress('glProgramUniform2i64vARB'));
  glProgramUniform2i64vNV := TglProgramUniform2i64vNV(ProcAddress('glProgramUniform2i64vNV'));
  glProgramUniform2iEXT := TglProgramUniform2iEXT(ProcAddress('glProgramUniform2iEXT'));
  glProgramUniform2iv := TglProgramUniform2iv(ProcAddress('glProgramUniform2iv'));
  glProgramUniform2ivEXT := TglProgramUniform2ivEXT(ProcAddress('glProgramUniform2ivEXT'));
  glProgramUniform2ui := TglProgramUniform2ui(ProcAddress('glProgramUniform2ui'));
  glProgramUniform2ui64ARB := TglProgramUniform2ui64ARB(ProcAddress('glProgramUniform2ui64ARB'));
  glProgramUniform2ui64NV := TglProgramUniform2ui64NV(ProcAddress('glProgramUniform2ui64NV'));
  glProgramUniform2ui64vARB := TglProgramUniform2ui64vARB(ProcAddress('glProgramUniform2ui64vARB'));
  glProgramUniform2ui64vNV := TglProgramUniform2ui64vNV(ProcAddress('glProgramUniform2ui64vNV'));
  glProgramUniform2uiEXT := TglProgramUniform2uiEXT(ProcAddress('glProgramUniform2uiEXT'));
  glProgramUniform2uiv := TglProgramUniform2uiv(ProcAddress('glProgramUniform2uiv'));
  glProgramUniform2uivEXT := TglProgramUniform2uivEXT(ProcAddress('glProgramUniform2uivEXT'));
  glProgramUniform3d := TglProgramUniform3d(ProcAddress('glProgramUniform3d'));
  glProgramUniform3dEXT := TglProgramUniform3dEXT(ProcAddress('glProgramUniform3dEXT'));
  glProgramUniform3dv := TglProgramUniform3dv(ProcAddress('glProgramUniform3dv'));
  glProgramUniform3dvEXT := TglProgramUniform3dvEXT(ProcAddress('glProgramUniform3dvEXT'));
  glProgramUniform3f := TglProgramUniform3f(ProcAddress('glProgramUniform3f'));
  glProgramUniform3fEXT := TglProgramUniform3fEXT(ProcAddress('glProgramUniform3fEXT'));
  glProgramUniform3fv := TglProgramUniform3fv(ProcAddress('glProgramUniform3fv'));
  glProgramUniform3fvEXT := TglProgramUniform3fvEXT(ProcAddress('glProgramUniform3fvEXT'));
  glProgramUniform3i := TglProgramUniform3i(ProcAddress('glProgramUniform3i'));
  glProgramUniform3i64ARB := TglProgramUniform3i64ARB(ProcAddress('glProgramUniform3i64ARB'));
  glProgramUniform3i64NV := TglProgramUniform3i64NV(ProcAddress('glProgramUniform3i64NV'));
  glProgramUniform3i64vARB := TglProgramUniform3i64vARB(ProcAddress('glProgramUniform3i64vARB'));
  glProgramUniform3i64vNV := TglProgramUniform3i64vNV(ProcAddress('glProgramUniform3i64vNV'));
  glProgramUniform3iEXT := TglProgramUniform3iEXT(ProcAddress('glProgramUniform3iEXT'));
  glProgramUniform3iv := TglProgramUniform3iv(ProcAddress('glProgramUniform3iv'));
  glProgramUniform3ivEXT := TglProgramUniform3ivEXT(ProcAddress('glProgramUniform3ivEXT'));
  glProgramUniform3ui := TglProgramUniform3ui(ProcAddress('glProgramUniform3ui'));
  glProgramUniform3ui64ARB := TglProgramUniform3ui64ARB(ProcAddress('glProgramUniform3ui64ARB'));
  glProgramUniform3ui64NV := TglProgramUniform3ui64NV(ProcAddress('glProgramUniform3ui64NV'));
  glProgramUniform3ui64vARB := TglProgramUniform3ui64vARB(ProcAddress('glProgramUniform3ui64vARB'));
  glProgramUniform3ui64vNV := TglProgramUniform3ui64vNV(ProcAddress('glProgramUniform3ui64vNV'));
  glProgramUniform3uiEXT := TglProgramUniform3uiEXT(ProcAddress('glProgramUniform3uiEXT'));
  glProgramUniform3uiv := TglProgramUniform3uiv(ProcAddress('glProgramUniform3uiv'));
  glProgramUniform3uivEXT := TglProgramUniform3uivEXT(ProcAddress('glProgramUniform3uivEXT'));
  glProgramUniform4d := TglProgramUniform4d(ProcAddress('glProgramUniform4d'));
  glProgramUniform4dEXT := TglProgramUniform4dEXT(ProcAddress('glProgramUniform4dEXT'));
  glProgramUniform4dv := TglProgramUniform4dv(ProcAddress('glProgramUniform4dv'));
  glProgramUniform4dvEXT := TglProgramUniform4dvEXT(ProcAddress('glProgramUniform4dvEXT'));
  glProgramUniform4f := TglProgramUniform4f(ProcAddress('glProgramUniform4f'));
  glProgramUniform4fEXT := TglProgramUniform4fEXT(ProcAddress('glProgramUniform4fEXT'));
  glProgramUniform4fv := TglProgramUniform4fv(ProcAddress('glProgramUniform4fv'));
  glProgramUniform4fvEXT := TglProgramUniform4fvEXT(ProcAddress('glProgramUniform4fvEXT'));
  glProgramUniform4i := TglProgramUniform4i(ProcAddress('glProgramUniform4i'));
  glProgramUniform4i64ARB := TglProgramUniform4i64ARB(ProcAddress('glProgramUniform4i64ARB'));
  glProgramUniform4i64NV := TglProgramUniform4i64NV(ProcAddress('glProgramUniform4i64NV'));
  glProgramUniform4i64vARB := TglProgramUniform4i64vARB(ProcAddress('glProgramUniform4i64vARB'));
  glProgramUniform4i64vNV := TglProgramUniform4i64vNV(ProcAddress('glProgramUniform4i64vNV'));
  glProgramUniform4iEXT := TglProgramUniform4iEXT(ProcAddress('glProgramUniform4iEXT'));
  glProgramUniform4iv := TglProgramUniform4iv(ProcAddress('glProgramUniform4iv'));
  glProgramUniform4ivEXT := TglProgramUniform4ivEXT(ProcAddress('glProgramUniform4ivEXT'));
  glProgramUniform4ui := TglProgramUniform4ui(ProcAddress('glProgramUniform4ui'));
  glProgramUniform4ui64ARB := TglProgramUniform4ui64ARB(ProcAddress('glProgramUniform4ui64ARB'));
  glProgramUniform4ui64NV := TglProgramUniform4ui64NV(ProcAddress('glProgramUniform4ui64NV'));
  glProgramUniform4ui64vARB := TglProgramUniform4ui64vARB(ProcAddress('glProgramUniform4ui64vARB'));
  glProgramUniform4ui64vNV := TglProgramUniform4ui64vNV(ProcAddress('glProgramUniform4ui64vNV'));
  glProgramUniform4uiEXT := TglProgramUniform4uiEXT(ProcAddress('glProgramUniform4uiEXT'));
  glProgramUniform4uiv := TglProgramUniform4uiv(ProcAddress('glProgramUniform4uiv'));
  glProgramUniform4uivEXT := TglProgramUniform4uivEXT(ProcAddress('glProgramUniform4uivEXT'));
  glProgramUniformHandleui64ARB := TglProgramUniformHandleui64ARB(ProcAddress('glProgramUniformHandleui64ARB'));
  glProgramUniformHandleui64IMG := TglProgramUniformHandleui64IMG(ProcAddress('glProgramUniformHandleui64IMG'));
  glProgramUniformHandleui64NV := TglProgramUniformHandleui64NV(ProcAddress('glProgramUniformHandleui64NV'));
  glProgramUniformHandleui64vARB := TglProgramUniformHandleui64vARB(ProcAddress('glProgramUniformHandleui64vARB'));
  glProgramUniformHandleui64vIMG := TglProgramUniformHandleui64vIMG(ProcAddress('glProgramUniformHandleui64vIMG'));
  glProgramUniformHandleui64vNV := TglProgramUniformHandleui64vNV(ProcAddress('glProgramUniformHandleui64vNV'));
  glProgramUniformMatrix2dv := TglProgramUniformMatrix2dv(ProcAddress('glProgramUniformMatrix2dv'));
  glProgramUniformMatrix2dvEXT := TglProgramUniformMatrix2dvEXT(ProcAddress('glProgramUniformMatrix2dvEXT'));
  glProgramUniformMatrix2fv := TglProgramUniformMatrix2fv(ProcAddress('glProgramUniformMatrix2fv'));
  glProgramUniformMatrix2fvEXT := TglProgramUniformMatrix2fvEXT(ProcAddress('glProgramUniformMatrix2fvEXT'));
  glProgramUniformMatrix2x3dv := TglProgramUniformMatrix2x3dv(ProcAddress('glProgramUniformMatrix2x3dv'));
  glProgramUniformMatrix2x3dvEXT := TglProgramUniformMatrix2x3dvEXT(ProcAddress('glProgramUniformMatrix2x3dvEXT'));
  glProgramUniformMatrix2x3fv := TglProgramUniformMatrix2x3fv(ProcAddress('glProgramUniformMatrix2x3fv'));
  glProgramUniformMatrix2x3fvEXT := TglProgramUniformMatrix2x3fvEXT(ProcAddress('glProgramUniformMatrix2x3fvEXT'));
  glProgramUniformMatrix2x4dv := TglProgramUniformMatrix2x4dv(ProcAddress('glProgramUniformMatrix2x4dv'));
  glProgramUniformMatrix2x4dvEXT := TglProgramUniformMatrix2x4dvEXT(ProcAddress('glProgramUniformMatrix2x4dvEXT'));
  glProgramUniformMatrix2x4fv := TglProgramUniformMatrix2x4fv(ProcAddress('glProgramUniformMatrix2x4fv'));
  glProgramUniformMatrix2x4fvEXT := TglProgramUniformMatrix2x4fvEXT(ProcAddress('glProgramUniformMatrix2x4fvEXT'));
  glProgramUniformMatrix3dv := TglProgramUniformMatrix3dv(ProcAddress('glProgramUniformMatrix3dv'));
  glProgramUniformMatrix3dvEXT := TglProgramUniformMatrix3dvEXT(ProcAddress('glProgramUniformMatrix3dvEXT'));
  glProgramUniformMatrix3fv := TglProgramUniformMatrix3fv(ProcAddress('glProgramUniformMatrix3fv'));
  glProgramUniformMatrix3fvEXT := TglProgramUniformMatrix3fvEXT(ProcAddress('glProgramUniformMatrix3fvEXT'));
  glProgramUniformMatrix3x2dv := TglProgramUniformMatrix3x2dv(ProcAddress('glProgramUniformMatrix3x2dv'));
  glProgramUniformMatrix3x2dvEXT := TglProgramUniformMatrix3x2dvEXT(ProcAddress('glProgramUniformMatrix3x2dvEXT'));
  glProgramUniformMatrix3x2fv := TglProgramUniformMatrix3x2fv(ProcAddress('glProgramUniformMatrix3x2fv'));
  glProgramUniformMatrix3x2fvEXT := TglProgramUniformMatrix3x2fvEXT(ProcAddress('glProgramUniformMatrix3x2fvEXT'));
  glProgramUniformMatrix3x4dv := TglProgramUniformMatrix3x4dv(ProcAddress('glProgramUniformMatrix3x4dv'));
  glProgramUniformMatrix3x4dvEXT := TglProgramUniformMatrix3x4dvEXT(ProcAddress('glProgramUniformMatrix3x4dvEXT'));
  glProgramUniformMatrix3x4fv := TglProgramUniformMatrix3x4fv(ProcAddress('glProgramUniformMatrix3x4fv'));
  glProgramUniformMatrix3x4fvEXT := TglProgramUniformMatrix3x4fvEXT(ProcAddress('glProgramUniformMatrix3x4fvEXT'));
  glProgramUniformMatrix4dv := TglProgramUniformMatrix4dv(ProcAddress('glProgramUniformMatrix4dv'));
  glProgramUniformMatrix4dvEXT := TglProgramUniformMatrix4dvEXT(ProcAddress('glProgramUniformMatrix4dvEXT'));
  glProgramUniformMatrix4fv := TglProgramUniformMatrix4fv(ProcAddress('glProgramUniformMatrix4fv'));
  glProgramUniformMatrix4fvEXT := TglProgramUniformMatrix4fvEXT(ProcAddress('glProgramUniformMatrix4fvEXT'));
  glProgramUniformMatrix4x2dv := TglProgramUniformMatrix4x2dv(ProcAddress('glProgramUniformMatrix4x2dv'));
  glProgramUniformMatrix4x2dvEXT := TglProgramUniformMatrix4x2dvEXT(ProcAddress('glProgramUniformMatrix4x2dvEXT'));
  glProgramUniformMatrix4x2fv := TglProgramUniformMatrix4x2fv(ProcAddress('glProgramUniformMatrix4x2fv'));
  glProgramUniformMatrix4x2fvEXT := TglProgramUniformMatrix4x2fvEXT(ProcAddress('glProgramUniformMatrix4x2fvEXT'));
  glProgramUniformMatrix4x3dv := TglProgramUniformMatrix4x3dv(ProcAddress('glProgramUniformMatrix4x3dv'));
  glProgramUniformMatrix4x3dvEXT := TglProgramUniformMatrix4x3dvEXT(ProcAddress('glProgramUniformMatrix4x3dvEXT'));
  glProgramUniformMatrix4x3fv := TglProgramUniformMatrix4x3fv(ProcAddress('glProgramUniformMatrix4x3fv'));
  glProgramUniformMatrix4x3fvEXT := TglProgramUniformMatrix4x3fvEXT(ProcAddress('glProgramUniformMatrix4x3fvEXT'));
  glProgramUniformui64NV := TglProgramUniformui64NV(ProcAddress('glProgramUniformui64NV'));
  glProgramUniformui64vNV := TglProgramUniformui64vNV(ProcAddress('glProgramUniformui64vNV'));
  glProgramVertexLimitNV := TglProgramVertexLimitNV(ProcAddress('glProgramVertexLimitNV'));
  glProvokingVertex := TglProvokingVertex(ProcAddress('glProvokingVertex'));
  glProvokingVertexEXT := TglProvokingVertexEXT(ProcAddress('glProvokingVertexEXT'));
  glPushAttrib := TglPushAttrib(ProcAddress('glPushAttrib'));
  glPushClientAttrib := TglPushClientAttrib(ProcAddress('glPushClientAttrib'));
  glPushClientAttribDefaultEXT := TglPushClientAttribDefaultEXT(ProcAddress('glPushClientAttribDefaultEXT'));
  glPushDebugGroup := TglPushDebugGroup(ProcAddress('glPushDebugGroup'));
  glPushDebugGroupKHR := TglPushDebugGroupKHR(ProcAddress('glPushDebugGroupKHR'));
  glPushGroupMarkerEXT := TglPushGroupMarkerEXT(ProcAddress('glPushGroupMarkerEXT'));
  glPushMatrix := TglPushMatrix(ProcAddress('glPushMatrix'));
  glPushName := TglPushName(ProcAddress('glPushName'));
  glQueryCounter := TglQueryCounter(ProcAddress('glQueryCounter'));
  glQueryCounterEXT := TglQueryCounterEXT(ProcAddress('glQueryCounterEXT'));
  glQueryMatrixxOES := TglQueryMatrixxOES(ProcAddress('glQueryMatrixxOES'));
  glQueryObjectParameteruiAMD := TglQueryObjectParameteruiAMD(ProcAddress('glQueryObjectParameteruiAMD'));
  glQueryResourceNV := TglQueryResourceNV(ProcAddress('glQueryResourceNV'));
  glQueryResourceTagNV := TglQueryResourceTagNV(ProcAddress('glQueryResourceTagNV'));
  glRasterPos2d := TglRasterPos2d(ProcAddress('glRasterPos2d'));
  glRasterPos2dv := TglRasterPos2dv(ProcAddress('glRasterPos2dv'));
  glRasterPos2f := TglRasterPos2f(ProcAddress('glRasterPos2f'));
  glRasterPos2fv := TglRasterPos2fv(ProcAddress('glRasterPos2fv'));
  glRasterPos2i := TglRasterPos2i(ProcAddress('glRasterPos2i'));
  glRasterPos2iv := TglRasterPos2iv(ProcAddress('glRasterPos2iv'));
  glRasterPos2s := TglRasterPos2s(ProcAddress('glRasterPos2s'));
  glRasterPos2sv := TglRasterPos2sv(ProcAddress('glRasterPos2sv'));
  glRasterPos2xOES := TglRasterPos2xOES(ProcAddress('glRasterPos2xOES'));
  glRasterPos2xvOES := TglRasterPos2xvOES(ProcAddress('glRasterPos2xvOES'));
  glRasterPos3d := TglRasterPos3d(ProcAddress('glRasterPos3d'));
  glRasterPos3dv := TglRasterPos3dv(ProcAddress('glRasterPos3dv'));
  glRasterPos3f := TglRasterPos3f(ProcAddress('glRasterPos3f'));
  glRasterPos3fv := TglRasterPos3fv(ProcAddress('glRasterPos3fv'));
  glRasterPos3i := TglRasterPos3i(ProcAddress('glRasterPos3i'));
  glRasterPos3iv := TglRasterPos3iv(ProcAddress('glRasterPos3iv'));
  glRasterPos3s := TglRasterPos3s(ProcAddress('glRasterPos3s'));
  glRasterPos3sv := TglRasterPos3sv(ProcAddress('glRasterPos3sv'));
  glRasterPos3xOES := TglRasterPos3xOES(ProcAddress('glRasterPos3xOES'));
  glRasterPos3xvOES := TglRasterPos3xvOES(ProcAddress('glRasterPos3xvOES'));
  glRasterPos4d := TglRasterPos4d(ProcAddress('glRasterPos4d'));
  glRasterPos4dv := TglRasterPos4dv(ProcAddress('glRasterPos4dv'));
  glRasterPos4f := TglRasterPos4f(ProcAddress('glRasterPos4f'));
  glRasterPos4fv := TglRasterPos4fv(ProcAddress('glRasterPos4fv'));
  glRasterPos4i := TglRasterPos4i(ProcAddress('glRasterPos4i'));
  glRasterPos4iv := TglRasterPos4iv(ProcAddress('glRasterPos4iv'));
  glRasterPos4s := TglRasterPos4s(ProcAddress('glRasterPos4s'));
  glRasterPos4sv := TglRasterPos4sv(ProcAddress('glRasterPos4sv'));
  glRasterPos4xOES := TglRasterPos4xOES(ProcAddress('glRasterPos4xOES'));
  glRasterPos4xvOES := TglRasterPos4xvOES(ProcAddress('glRasterPos4xvOES'));
  glRasterSamplesEXT := TglRasterSamplesEXT(ProcAddress('glRasterSamplesEXT'));
  glReadBuffer := TglReadBuffer(ProcAddress('glReadBuffer'));
  glReadBufferIndexedEXT := TglReadBufferIndexedEXT(ProcAddress('glReadBufferIndexedEXT'));
  glReadBufferNV := TglReadBufferNV(ProcAddress('glReadBufferNV'));
  glReadInstrumentsSGIX := TglReadInstrumentsSGIX(ProcAddress('glReadInstrumentsSGIX'));
  glReadPixels := TglReadPixels(ProcAddress('glReadPixels'));
  glReadnPixels := TglReadnPixels(ProcAddress('glReadnPixels'));
  glReadnPixelsARB := TglReadnPixelsARB(ProcAddress('glReadnPixelsARB'));
  glReadnPixelsEXT := TglReadnPixelsEXT(ProcAddress('glReadnPixelsEXT'));
  glReadnPixelsKHR := TglReadnPixelsKHR(ProcAddress('glReadnPixelsKHR'));
  glReleaseKeyedMutexWin32EXT := TglReleaseKeyedMutexWin32EXT(ProcAddress('glReleaseKeyedMutexWin32EXT'));
  glRectd := TglRectd(ProcAddress('glRectd'));
  glRectdv := TglRectdv(ProcAddress('glRectdv'));
  glRectf := TglRectf(ProcAddress('glRectf'));
  glRectfv := TglRectfv(ProcAddress('glRectfv'));
  glRecti := TglRecti(ProcAddress('glRecti'));
  glRectiv := TglRectiv(ProcAddress('glRectiv'));
  glRects := TglRects(ProcAddress('glRects'));
  glRectsv := TglRectsv(ProcAddress('glRectsv'));
  glRectxOES := TglRectxOES(ProcAddress('glRectxOES'));
  glRectxvOES := TglRectxvOES(ProcAddress('glRectxvOES'));
  glReferencePlaneSGIX := TglReferencePlaneSGIX(ProcAddress('glReferencePlaneSGIX'));
  glReleaseShaderCompiler := TglReleaseShaderCompiler(ProcAddress('glReleaseShaderCompiler'));
  glRenderGpuMaskNV := TglRenderGpuMaskNV(ProcAddress('glRenderGpuMaskNV'));
  glRenderMode := TglRenderMode(ProcAddress('glRenderMode'));
  glRenderbufferStorage := TglRenderbufferStorage(ProcAddress('glRenderbufferStorage'));
  glRenderbufferStorageEXT := TglRenderbufferStorageEXT(ProcAddress('glRenderbufferStorageEXT'));
  glRenderbufferStorageMultisample := TglRenderbufferStorageMultisample(ProcAddress('glRenderbufferStorageMultisample'));
  glRenderbufferStorageMultisampleANGLE := TglRenderbufferStorageMultisampleANGLE(ProcAddress('glRenderbufferStorageMultisampleANGLE'));
  glRenderbufferStorageMultisampleAPPLE := TglRenderbufferStorageMultisampleAPPLE(ProcAddress('glRenderbufferStorageMultisampleAPPLE'));
  glRenderbufferStorageMultisampleAdvancedAMD := TglRenderbufferStorageMultisampleAdvancedAMD(ProcAddress('glRenderbufferStorageMultisampleAdvancedAMD'));
  glRenderbufferStorageMultisampleCoverageNV := TglRenderbufferStorageMultisampleCoverageNV(ProcAddress('glRenderbufferStorageMultisampleCoverageNV'));
  glRenderbufferStorageMultisampleEXT := TglRenderbufferStorageMultisampleEXT(ProcAddress('glRenderbufferStorageMultisampleEXT'));
  glRenderbufferStorageMultisampleIMG := TglRenderbufferStorageMultisampleIMG(ProcAddress('glRenderbufferStorageMultisampleIMG'));
  glRenderbufferStorageMultisampleNV := TglRenderbufferStorageMultisampleNV(ProcAddress('glRenderbufferStorageMultisampleNV'));
  glRenderbufferStorageOES := TglRenderbufferStorageOES(ProcAddress('glRenderbufferStorageOES'));
  glReplacementCodePointerSUN := TglReplacementCodePointerSUN(ProcAddress('glReplacementCodePointerSUN'));
  glReplacementCodeubSUN := TglReplacementCodeubSUN(ProcAddress('glReplacementCodeubSUN'));
  glReplacementCodeubvSUN := TglReplacementCodeubvSUN(ProcAddress('glReplacementCodeubvSUN'));
  glReplacementCodeuiColor3fVertex3fSUN := TglReplacementCodeuiColor3fVertex3fSUN(ProcAddress('glReplacementCodeuiColor3fVertex3fSUN'));
  glReplacementCodeuiColor3fVertex3fvSUN := TglReplacementCodeuiColor3fVertex3fvSUN(ProcAddress('glReplacementCodeuiColor3fVertex3fvSUN'));
  glReplacementCodeuiColor4fNormal3fVertex3fSUN := TglReplacementCodeuiColor4fNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiColor4fNormal3fVertex3fSUN'));
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN := TglReplacementCodeuiColor4fNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiColor4fNormal3fVertex3fvSUN'));
  glReplacementCodeuiColor4ubVertex3fSUN := TglReplacementCodeuiColor4ubVertex3fSUN(ProcAddress('glReplacementCodeuiColor4ubVertex3fSUN'));
  glReplacementCodeuiColor4ubVertex3fvSUN := TglReplacementCodeuiColor4ubVertex3fvSUN(ProcAddress('glReplacementCodeuiColor4ubVertex3fvSUN'));
  glReplacementCodeuiNormal3fVertex3fSUN := TglReplacementCodeuiNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiNormal3fVertex3fSUN'));
  glReplacementCodeuiNormal3fVertex3fvSUN := TglReplacementCodeuiNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiNormal3fVertex3fvSUN'));
  glReplacementCodeuiSUN := TglReplacementCodeuiSUN(ProcAddress('glReplacementCodeuiSUN'));
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN := TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN'));
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN := TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN'));
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN := TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN'));
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN := TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN'));
  glReplacementCodeuiTexCoord2fVertex3fSUN := TglReplacementCodeuiTexCoord2fVertex3fSUN(ProcAddress('glReplacementCodeuiTexCoord2fVertex3fSUN'));
  glReplacementCodeuiTexCoord2fVertex3fvSUN := TglReplacementCodeuiTexCoord2fVertex3fvSUN(ProcAddress('glReplacementCodeuiTexCoord2fVertex3fvSUN'));
  glReplacementCodeuiVertex3fSUN := TglReplacementCodeuiVertex3fSUN(ProcAddress('glReplacementCodeuiVertex3fSUN'));
  glReplacementCodeuiVertex3fvSUN := TglReplacementCodeuiVertex3fvSUN(ProcAddress('glReplacementCodeuiVertex3fvSUN'));
  glReplacementCodeuivSUN := TglReplacementCodeuivSUN(ProcAddress('glReplacementCodeuivSUN'));
  glReplacementCodeusSUN := TglReplacementCodeusSUN(ProcAddress('glReplacementCodeusSUN'));
  glReplacementCodeusvSUN := TglReplacementCodeusvSUN(ProcAddress('glReplacementCodeusvSUN'));
  glRequestResidentProgramsNV := TglRequestResidentProgramsNV(ProcAddress('glRequestResidentProgramsNV'));
  glResetHistogram := TglResetHistogram(ProcAddress('glResetHistogram'));
  glResetHistogramEXT := TglResetHistogramEXT(ProcAddress('glResetHistogramEXT'));
  glResetMemoryObjectParameterNV := TglResetMemoryObjectParameterNV(ProcAddress('glResetMemoryObjectParameterNV'));
  glResetMinmax := TglResetMinmax(ProcAddress('glResetMinmax'));
  glResetMinmaxEXT := TglResetMinmaxEXT(ProcAddress('glResetMinmaxEXT'));
  glResizeBuffersMESA := TglResizeBuffersMESA(ProcAddress('glResizeBuffersMESA'));
  glResolveDepthValuesNV := TglResolveDepthValuesNV(ProcAddress('glResolveDepthValuesNV'));
  glResolveMultisampleFramebufferAPPLE := TglResolveMultisampleFramebufferAPPLE(ProcAddress('glResolveMultisampleFramebufferAPPLE'));
  glResumeTransformFeedback := TglResumeTransformFeedback(ProcAddress('glResumeTransformFeedback'));
  glResumeTransformFeedbackNV := TglResumeTransformFeedbackNV(ProcAddress('glResumeTransformFeedbackNV'));
  glRotated := TglRotated(ProcAddress('glRotated'));
  glRotatef := TglRotatef(ProcAddress('glRotatef'));
  glRotatex := TglRotatex(ProcAddress('glRotatex'));
  glRotatexOES := TglRotatexOES(ProcAddress('glRotatexOES'));
  glSampleCoverage := TglSampleCoverage(ProcAddress('glSampleCoverage'));
  glSampleCoverageARB := TglSampleCoverageARB(ProcAddress('glSampleCoverageARB'));
  glSampleCoveragex := TglSampleCoveragex(ProcAddress('glSampleCoveragex'));
  glSampleCoveragexOES := TglSampleCoveragexOES(ProcAddress('glSampleCoveragexOES'));
  glSampleMapATI := TglSampleMapATI(ProcAddress('glSampleMapATI'));
  glSampleMaskEXT := TglSampleMaskEXT(ProcAddress('glSampleMaskEXT'));
  glSampleMaskIndexedNV := TglSampleMaskIndexedNV(ProcAddress('glSampleMaskIndexedNV'));
  glSampleMaskSGIS := TglSampleMaskSGIS(ProcAddress('glSampleMaskSGIS'));
  glSampleMaski := TglSampleMaski(ProcAddress('glSampleMaski'));
  glSamplePatternEXT := TglSamplePatternEXT(ProcAddress('glSamplePatternEXT'));
  glSamplePatternSGIS := TglSamplePatternSGIS(ProcAddress('glSamplePatternSGIS'));
  glSamplerParameterIiv := TglSamplerParameterIiv(ProcAddress('glSamplerParameterIiv'));
  glSamplerParameterIivEXT := TglSamplerParameterIivEXT(ProcAddress('glSamplerParameterIivEXT'));
  glSamplerParameterIivOES := TglSamplerParameterIivOES(ProcAddress('glSamplerParameterIivOES'));
  glSamplerParameterIuiv := TglSamplerParameterIuiv(ProcAddress('glSamplerParameterIuiv'));
  glSamplerParameterIuivEXT := TglSamplerParameterIuivEXT(ProcAddress('glSamplerParameterIuivEXT'));
  glSamplerParameterIuivOES := TglSamplerParameterIuivOES(ProcAddress('glSamplerParameterIuivOES'));
  glSamplerParameterf := TglSamplerParameterf(ProcAddress('glSamplerParameterf'));
  glSamplerParameterfv := TglSamplerParameterfv(ProcAddress('glSamplerParameterfv'));
  glSamplerParameteri := TglSamplerParameteri(ProcAddress('glSamplerParameteri'));
  glSamplerParameteriv := TglSamplerParameteriv(ProcAddress('glSamplerParameteriv'));
  glScaled := TglScaled(ProcAddress('glScaled'));
  glScalef := TglScalef(ProcAddress('glScalef'));
  glScalex := TglScalex(ProcAddress('glScalex'));
  glScalexOES := TglScalexOES(ProcAddress('glScalexOES'));
  glScissor := TglScissor(ProcAddress('glScissor'));
  glScissorArrayv := TglScissorArrayv(ProcAddress('glScissorArrayv'));
  glScissorArrayvNV := TglScissorArrayvNV(ProcAddress('glScissorArrayvNV'));
  glScissorArrayvOES := TglScissorArrayvOES(ProcAddress('glScissorArrayvOES'));
  glScissorExclusiveArrayvNV := TglScissorExclusiveArrayvNV(ProcAddress('glScissorExclusiveArrayvNV'));
  glScissorExclusiveNV := TglScissorExclusiveNV(ProcAddress('glScissorExclusiveNV'));
  glScissorIndexed := TglScissorIndexed(ProcAddress('glScissorIndexed'));
  glScissorIndexedNV := TglScissorIndexedNV(ProcAddress('glScissorIndexedNV'));
  glScissorIndexedOES := TglScissorIndexedOES(ProcAddress('glScissorIndexedOES'));
  glScissorIndexedv := TglScissorIndexedv(ProcAddress('glScissorIndexedv'));
  glScissorIndexedvNV := TglScissorIndexedvNV(ProcAddress('glScissorIndexedvNV'));
  glScissorIndexedvOES := TglScissorIndexedvOES(ProcAddress('glScissorIndexedvOES'));
  glSecondaryColor3b := TglSecondaryColor3b(ProcAddress('glSecondaryColor3b'));
  glSecondaryColor3bEXT := TglSecondaryColor3bEXT(ProcAddress('glSecondaryColor3bEXT'));
  glSecondaryColor3bv := TglSecondaryColor3bv(ProcAddress('glSecondaryColor3bv'));
  glSecondaryColor3bvEXT := TglSecondaryColor3bvEXT(ProcAddress('glSecondaryColor3bvEXT'));
  glSecondaryColor3d := TglSecondaryColor3d(ProcAddress('glSecondaryColor3d'));
  glSecondaryColor3dEXT := TglSecondaryColor3dEXT(ProcAddress('glSecondaryColor3dEXT'));
  glSecondaryColor3dv := TglSecondaryColor3dv(ProcAddress('glSecondaryColor3dv'));
  glSecondaryColor3dvEXT := TglSecondaryColor3dvEXT(ProcAddress('glSecondaryColor3dvEXT'));
  glSecondaryColor3f := TglSecondaryColor3f(ProcAddress('glSecondaryColor3f'));
  glSecondaryColor3fEXT := TglSecondaryColor3fEXT(ProcAddress('glSecondaryColor3fEXT'));
  glSecondaryColor3fv := TglSecondaryColor3fv(ProcAddress('glSecondaryColor3fv'));
  glSecondaryColor3fvEXT := TglSecondaryColor3fvEXT(ProcAddress('glSecondaryColor3fvEXT'));
  glSecondaryColor3hNV := TglSecondaryColor3hNV(ProcAddress('glSecondaryColor3hNV'));
  glSecondaryColor3hvNV := TglSecondaryColor3hvNV(ProcAddress('glSecondaryColor3hvNV'));
  glSecondaryColor3i := TglSecondaryColor3i(ProcAddress('glSecondaryColor3i'));
  glSecondaryColor3iEXT := TglSecondaryColor3iEXT(ProcAddress('glSecondaryColor3iEXT'));
  glSecondaryColor3iv := TglSecondaryColor3iv(ProcAddress('glSecondaryColor3iv'));
  glSecondaryColor3ivEXT := TglSecondaryColor3ivEXT(ProcAddress('glSecondaryColor3ivEXT'));
  glSecondaryColor3s := TglSecondaryColor3s(ProcAddress('glSecondaryColor3s'));
  glSecondaryColor3sEXT := TglSecondaryColor3sEXT(ProcAddress('glSecondaryColor3sEXT'));
  glSecondaryColor3sv := TglSecondaryColor3sv(ProcAddress('glSecondaryColor3sv'));
  glSecondaryColor3svEXT := TglSecondaryColor3svEXT(ProcAddress('glSecondaryColor3svEXT'));
  glSecondaryColor3ub := TglSecondaryColor3ub(ProcAddress('glSecondaryColor3ub'));
  glSecondaryColor3ubEXT := TglSecondaryColor3ubEXT(ProcAddress('glSecondaryColor3ubEXT'));
  glSecondaryColor3ubv := TglSecondaryColor3ubv(ProcAddress('glSecondaryColor3ubv'));
  glSecondaryColor3ubvEXT := TglSecondaryColor3ubvEXT(ProcAddress('glSecondaryColor3ubvEXT'));
  glSecondaryColor3ui := TglSecondaryColor3ui(ProcAddress('glSecondaryColor3ui'));
  glSecondaryColor3uiEXT := TglSecondaryColor3uiEXT(ProcAddress('glSecondaryColor3uiEXT'));
  glSecondaryColor3uiv := TglSecondaryColor3uiv(ProcAddress('glSecondaryColor3uiv'));
  glSecondaryColor3uivEXT := TglSecondaryColor3uivEXT(ProcAddress('glSecondaryColor3uivEXT'));
  glSecondaryColor3us := TglSecondaryColor3us(ProcAddress('glSecondaryColor3us'));
  glSecondaryColor3usEXT := TglSecondaryColor3usEXT(ProcAddress('glSecondaryColor3usEXT'));
  glSecondaryColor3usv := TglSecondaryColor3usv(ProcAddress('glSecondaryColor3usv'));
  glSecondaryColor3usvEXT := TglSecondaryColor3usvEXT(ProcAddress('glSecondaryColor3usvEXT'));
  glSecondaryColorFormatNV := TglSecondaryColorFormatNV(ProcAddress('glSecondaryColorFormatNV'));
  glSecondaryColorP3ui := TglSecondaryColorP3ui(ProcAddress('glSecondaryColorP3ui'));
  glSecondaryColorP3uiv := TglSecondaryColorP3uiv(ProcAddress('glSecondaryColorP3uiv'));
  glSecondaryColorPointer := TglSecondaryColorPointer(ProcAddress('glSecondaryColorPointer'));
  glSecondaryColorPointerEXT := TglSecondaryColorPointerEXT(ProcAddress('glSecondaryColorPointerEXT'));
  glSecondaryColorPointerListIBM := TglSecondaryColorPointerListIBM(ProcAddress('glSecondaryColorPointerListIBM'));
  glSelectBuffer := TglSelectBuffer(ProcAddress('glSelectBuffer'));
  glSelectPerfMonitorCountersAMD := TglSelectPerfMonitorCountersAMD(ProcAddress('glSelectPerfMonitorCountersAMD'));
  glSemaphoreParameterivNV := TglSemaphoreParameterivNV(ProcAddress('glSemaphoreParameterivNV'));
  glSemaphoreParameterui64vEXT := TglSemaphoreParameterui64vEXT(ProcAddress('glSemaphoreParameterui64vEXT'));
  glSeparableFilter2D := TglSeparableFilter2D(ProcAddress('glSeparableFilter2D'));
  glSeparableFilter2DEXT := TglSeparableFilter2DEXT(ProcAddress('glSeparableFilter2DEXT'));
  glSetFenceAPPLE := TglSetFenceAPPLE(ProcAddress('glSetFenceAPPLE'));
  glSetFenceNV := TglSetFenceNV(ProcAddress('glSetFenceNV'));
  glSetFragmentShaderConstantATI := TglSetFragmentShaderConstantATI(ProcAddress('glSetFragmentShaderConstantATI'));
  glSetInvariantEXT := TglSetInvariantEXT(ProcAddress('glSetInvariantEXT'));
  glSetLocalConstantEXT := TglSetLocalConstantEXT(ProcAddress('glSetLocalConstantEXT'));
  glSetMultisamplefvAMD := TglSetMultisamplefvAMD(ProcAddress('glSetMultisamplefvAMD'));
  glShadeModel := TglShadeModel(ProcAddress('glShadeModel'));
  glShaderBinary := TglShaderBinary(ProcAddress('glShaderBinary'));
  glShaderOp1EXT := TglShaderOp1EXT(ProcAddress('glShaderOp1EXT'));
  glShaderOp2EXT := TglShaderOp2EXT(ProcAddress('glShaderOp2EXT'));
  glShaderOp3EXT := TglShaderOp3EXT(ProcAddress('glShaderOp3EXT'));
  glShaderSource := TglShaderSource(ProcAddress('glShaderSource'));
  glShaderSourceARB := TglShaderSourceARB(ProcAddress('glShaderSourceARB'));
  glShaderStorageBlockBinding := TglShaderStorageBlockBinding(ProcAddress('glShaderStorageBlockBinding'));
  glShadingRateEXT := TglShadingRateEXT(ProcAddress('glShadingRateEXT'));
  glShadingRateCombinerOpsEXT := TglShadingRateCombinerOpsEXT(ProcAddress('glShadingRateCombinerOpsEXT'));
  glShadingRateImageBarrierNV := TglShadingRateImageBarrierNV(ProcAddress('glShadingRateImageBarrierNV'));
  glShadingRateQCOM := TglShadingRateQCOM(ProcAddress('glShadingRateQCOM'));
  glShadingRateImagePaletteNV := TglShadingRateImagePaletteNV(ProcAddress('glShadingRateImagePaletteNV'));
  glShadingRateSampleOrderNV := TglShadingRateSampleOrderNV(ProcAddress('glShadingRateSampleOrderNV'));
  glShadingRateSampleOrderCustomNV := TglShadingRateSampleOrderCustomNV(ProcAddress('glShadingRateSampleOrderCustomNV'));
  glSharpenTexFuncSGIS := TglSharpenTexFuncSGIS(ProcAddress('glSharpenTexFuncSGIS'));
  glSignalSemaphoreEXT := TglSignalSemaphoreEXT(ProcAddress('glSignalSemaphoreEXT'));
  glSignalSemaphoreui64NVX := TglSignalSemaphoreui64NVX(ProcAddress('glSignalSemaphoreui64NVX'));
  glSpecializeShader := TglSpecializeShader(ProcAddress('glSpecializeShader'));
  glSpecializeShaderARB := TglSpecializeShaderARB(ProcAddress('glSpecializeShaderARB'));
  glSpriteParameterfSGIX := TglSpriteParameterfSGIX(ProcAddress('glSpriteParameterfSGIX'));
  glSpriteParameterfvSGIX := TglSpriteParameterfvSGIX(ProcAddress('glSpriteParameterfvSGIX'));
  glSpriteParameteriSGIX := TglSpriteParameteriSGIX(ProcAddress('glSpriteParameteriSGIX'));
  glSpriteParameterivSGIX := TglSpriteParameterivSGIX(ProcAddress('glSpriteParameterivSGIX'));
  glStartInstrumentsSGIX := TglStartInstrumentsSGIX(ProcAddress('glStartInstrumentsSGIX'));
  glStartTilingQCOM := TglStartTilingQCOM(ProcAddress('glStartTilingQCOM'));
  glStateCaptureNV := TglStateCaptureNV(ProcAddress('glStateCaptureNV'));
  glStencilClearTagEXT := TglStencilClearTagEXT(ProcAddress('glStencilClearTagEXT'));
  glStencilFillPathInstancedNV := TglStencilFillPathInstancedNV(ProcAddress('glStencilFillPathInstancedNV'));
  glStencilFillPathNV := TglStencilFillPathNV(ProcAddress('glStencilFillPathNV'));
  glStencilFunc := TglStencilFunc(ProcAddress('glStencilFunc'));
  glStencilFuncSeparate := TglStencilFuncSeparate(ProcAddress('glStencilFuncSeparate'));
  glStencilFuncSeparateATI := TglStencilFuncSeparateATI(ProcAddress('glStencilFuncSeparateATI'));
  glStencilMask := TglStencilMask(ProcAddress('glStencilMask'));
  glStencilMaskSeparate := TglStencilMaskSeparate(ProcAddress('glStencilMaskSeparate'));
  glStencilOp := TglStencilOp(ProcAddress('glStencilOp'));
  glStencilOpSeparate := TglStencilOpSeparate(ProcAddress('glStencilOpSeparate'));
  glStencilOpSeparateATI := TglStencilOpSeparateATI(ProcAddress('glStencilOpSeparateATI'));
  glStencilOpValueAMD := TglStencilOpValueAMD(ProcAddress('glStencilOpValueAMD'));
  glStencilStrokePathInstancedNV := TglStencilStrokePathInstancedNV(ProcAddress('glStencilStrokePathInstancedNV'));
  glStencilStrokePathNV := TglStencilStrokePathNV(ProcAddress('glStencilStrokePathNV'));
  glStencilThenCoverFillPathInstancedNV := TglStencilThenCoverFillPathInstancedNV(ProcAddress('glStencilThenCoverFillPathInstancedNV'));
  glStencilThenCoverFillPathNV := TglStencilThenCoverFillPathNV(ProcAddress('glStencilThenCoverFillPathNV'));
  glStencilThenCoverStrokePathInstancedNV := TglStencilThenCoverStrokePathInstancedNV(ProcAddress('glStencilThenCoverStrokePathInstancedNV'));
  glStencilThenCoverStrokePathNV := TglStencilThenCoverStrokePathNV(ProcAddress('glStencilThenCoverStrokePathNV'));
  glStopInstrumentsSGIX := TglStopInstrumentsSGIX(ProcAddress('glStopInstrumentsSGIX'));
  glStringMarkerGREMEDY := TglStringMarkerGREMEDY(ProcAddress('glStringMarkerGREMEDY'));
  glSubpixelPrecisionBiasNV := TglSubpixelPrecisionBiasNV(ProcAddress('glSubpixelPrecisionBiasNV'));
  glSwizzleEXT := TglSwizzleEXT(ProcAddress('glSwizzleEXT'));
  glSyncTextureINTEL := TglSyncTextureINTEL(ProcAddress('glSyncTextureINTEL'));
  glTagSampleBufferSGIX := TglTagSampleBufferSGIX(ProcAddress('glTagSampleBufferSGIX'));
  glTangent3bEXT := TglTangent3bEXT(ProcAddress('glTangent3bEXT'));
  glTangent3bvEXT := TglTangent3bvEXT(ProcAddress('glTangent3bvEXT'));
  glTangent3dEXT := TglTangent3dEXT(ProcAddress('glTangent3dEXT'));
  glTangent3dvEXT := TglTangent3dvEXT(ProcAddress('glTangent3dvEXT'));
  glTangent3fEXT := TglTangent3fEXT(ProcAddress('glTangent3fEXT'));
  glTangent3fvEXT := TglTangent3fvEXT(ProcAddress('glTangent3fvEXT'));
  glTangent3iEXT := TglTangent3iEXT(ProcAddress('glTangent3iEXT'));
  glTangent3ivEXT := TglTangent3ivEXT(ProcAddress('glTangent3ivEXT'));
  glTangent3sEXT := TglTangent3sEXT(ProcAddress('glTangent3sEXT'));
  glTangent3svEXT := TglTangent3svEXT(ProcAddress('glTangent3svEXT'));
  glTangentPointerEXT := TglTangentPointerEXT(ProcAddress('glTangentPointerEXT'));
  glTbufferMask3DFX := TglTbufferMask3DFX(ProcAddress('glTbufferMask3DFX'));
  glTessellationFactorAMD := TglTessellationFactorAMD(ProcAddress('glTessellationFactorAMD'));
  glTessellationModeAMD := TglTessellationModeAMD(ProcAddress('glTessellationModeAMD'));
  glTestFenceAPPLE := TglTestFenceAPPLE(ProcAddress('glTestFenceAPPLE'));
  glTestFenceNV := TglTestFenceNV(ProcAddress('glTestFenceNV'));
  glTestObjectAPPLE := TglTestObjectAPPLE(ProcAddress('glTestObjectAPPLE'));
  glTexAttachMemoryNV := TglTexAttachMemoryNV(ProcAddress('glTexAttachMemoryNV'));
  glTexBuffer := TglTexBuffer(ProcAddress('glTexBuffer'));
  glTexBufferARB := TglTexBufferARB(ProcAddress('glTexBufferARB'));
  glTexBufferEXT := TglTexBufferEXT(ProcAddress('glTexBufferEXT'));
  glTexBufferOES := TglTexBufferOES(ProcAddress('glTexBufferOES'));
  glTexBufferRange := TglTexBufferRange(ProcAddress('glTexBufferRange'));
  glTexBufferRangeEXT := TglTexBufferRangeEXT(ProcAddress('glTexBufferRangeEXT'));
  glTexBufferRangeOES := TglTexBufferRangeOES(ProcAddress('glTexBufferRangeOES'));
  glTexBumpParameterfvATI := TglTexBumpParameterfvATI(ProcAddress('glTexBumpParameterfvATI'));
  glTexBumpParameterivATI := TglTexBumpParameterivATI(ProcAddress('glTexBumpParameterivATI'));
  glTexCoord1bOES := TglTexCoord1bOES(ProcAddress('glTexCoord1bOES'));
  glTexCoord1bvOES := TglTexCoord1bvOES(ProcAddress('glTexCoord1bvOES'));
  glTexCoord1d := TglTexCoord1d(ProcAddress('glTexCoord1d'));
  glTexCoord1dv := TglTexCoord1dv(ProcAddress('glTexCoord1dv'));
  glTexCoord1f := TglTexCoord1f(ProcAddress('glTexCoord1f'));
  glTexCoord1fv := TglTexCoord1fv(ProcAddress('glTexCoord1fv'));
  glTexCoord1hNV := TglTexCoord1hNV(ProcAddress('glTexCoord1hNV'));
  glTexCoord1hvNV := TglTexCoord1hvNV(ProcAddress('glTexCoord1hvNV'));
  glTexCoord1i := TglTexCoord1i(ProcAddress('glTexCoord1i'));
  glTexCoord1iv := TglTexCoord1iv(ProcAddress('glTexCoord1iv'));
  glTexCoord1s := TglTexCoord1s(ProcAddress('glTexCoord1s'));
  glTexCoord1sv := TglTexCoord1sv(ProcAddress('glTexCoord1sv'));
  glTexCoord1xOES := TglTexCoord1xOES(ProcAddress('glTexCoord1xOES'));
  glTexCoord1xvOES := TglTexCoord1xvOES(ProcAddress('glTexCoord1xvOES'));
  glTexCoord2bOES := TglTexCoord2bOES(ProcAddress('glTexCoord2bOES'));
  glTexCoord2bvOES := TglTexCoord2bvOES(ProcAddress('glTexCoord2bvOES'));
  glTexCoord2d := TglTexCoord2d(ProcAddress('glTexCoord2d'));
  glTexCoord2dv := TglTexCoord2dv(ProcAddress('glTexCoord2dv'));
  glTexCoord2f := TglTexCoord2f(ProcAddress('glTexCoord2f'));
  glTexCoord2fColor3fVertex3fSUN := TglTexCoord2fColor3fVertex3fSUN(ProcAddress('glTexCoord2fColor3fVertex3fSUN'));
  glTexCoord2fColor3fVertex3fvSUN := TglTexCoord2fColor3fVertex3fvSUN(ProcAddress('glTexCoord2fColor3fVertex3fvSUN'));
  glTexCoord2fColor4fNormal3fVertex3fSUN := TglTexCoord2fColor4fNormal3fVertex3fSUN(ProcAddress('glTexCoord2fColor4fNormal3fVertex3fSUN'));
  glTexCoord2fColor4fNormal3fVertex3fvSUN := TglTexCoord2fColor4fNormal3fVertex3fvSUN(ProcAddress('glTexCoord2fColor4fNormal3fVertex3fvSUN'));
  glTexCoord2fColor4ubVertex3fSUN := TglTexCoord2fColor4ubVertex3fSUN(ProcAddress('glTexCoord2fColor4ubVertex3fSUN'));
  glTexCoord2fColor4ubVertex3fvSUN := TglTexCoord2fColor4ubVertex3fvSUN(ProcAddress('glTexCoord2fColor4ubVertex3fvSUN'));
  glTexCoord2fNormal3fVertex3fSUN := TglTexCoord2fNormal3fVertex3fSUN(ProcAddress('glTexCoord2fNormal3fVertex3fSUN'));
  glTexCoord2fNormal3fVertex3fvSUN := TglTexCoord2fNormal3fVertex3fvSUN(ProcAddress('glTexCoord2fNormal3fVertex3fvSUN'));
  glTexCoord2fVertex3fSUN := TglTexCoord2fVertex3fSUN(ProcAddress('glTexCoord2fVertex3fSUN'));
  glTexCoord2fVertex3fvSUN := TglTexCoord2fVertex3fvSUN(ProcAddress('glTexCoord2fVertex3fvSUN'));
  glTexCoord2fv := TglTexCoord2fv(ProcAddress('glTexCoord2fv'));
  glTexCoord2hNV := TglTexCoord2hNV(ProcAddress('glTexCoord2hNV'));
  glTexCoord2hvNV := TglTexCoord2hvNV(ProcAddress('glTexCoord2hvNV'));
  glTexCoord2i := TglTexCoord2i(ProcAddress('glTexCoord2i'));
  glTexCoord2iv := TglTexCoord2iv(ProcAddress('glTexCoord2iv'));
  glTexCoord2s := TglTexCoord2s(ProcAddress('glTexCoord2s'));
  glTexCoord2sv := TglTexCoord2sv(ProcAddress('glTexCoord2sv'));
  glTexCoord2xOES := TglTexCoord2xOES(ProcAddress('glTexCoord2xOES'));
  glTexCoord2xvOES := TglTexCoord2xvOES(ProcAddress('glTexCoord2xvOES'));
  glTexCoord3bOES := TglTexCoord3bOES(ProcAddress('glTexCoord3bOES'));
  glTexCoord3bvOES := TglTexCoord3bvOES(ProcAddress('glTexCoord3bvOES'));
  glTexCoord3d := TglTexCoord3d(ProcAddress('glTexCoord3d'));
  glTexCoord3dv := TglTexCoord3dv(ProcAddress('glTexCoord3dv'));
  glTexCoord3f := TglTexCoord3f(ProcAddress('glTexCoord3f'));
  glTexCoord3fv := TglTexCoord3fv(ProcAddress('glTexCoord3fv'));
  glTexCoord3hNV := TglTexCoord3hNV(ProcAddress('glTexCoord3hNV'));
  glTexCoord3hvNV := TglTexCoord3hvNV(ProcAddress('glTexCoord3hvNV'));
  glTexCoord3i := TglTexCoord3i(ProcAddress('glTexCoord3i'));
  glTexCoord3iv := TglTexCoord3iv(ProcAddress('glTexCoord3iv'));
  glTexCoord3s := TglTexCoord3s(ProcAddress('glTexCoord3s'));
  glTexCoord3sv := TglTexCoord3sv(ProcAddress('glTexCoord3sv'));
  glTexCoord3xOES := TglTexCoord3xOES(ProcAddress('glTexCoord3xOES'));
  glTexCoord3xvOES := TglTexCoord3xvOES(ProcAddress('glTexCoord3xvOES'));
  glTexCoord4bOES := TglTexCoord4bOES(ProcAddress('glTexCoord4bOES'));
  glTexCoord4bvOES := TglTexCoord4bvOES(ProcAddress('glTexCoord4bvOES'));
  glTexCoord4d := TglTexCoord4d(ProcAddress('glTexCoord4d'));
  glTexCoord4dv := TglTexCoord4dv(ProcAddress('glTexCoord4dv'));
  glTexCoord4f := TglTexCoord4f(ProcAddress('glTexCoord4f'));
  glTexCoord4fColor4fNormal3fVertex4fSUN := TglTexCoord4fColor4fNormal3fVertex4fSUN(ProcAddress('glTexCoord4fColor4fNormal3fVertex4fSUN'));
  glTexCoord4fColor4fNormal3fVertex4fvSUN := TglTexCoord4fColor4fNormal3fVertex4fvSUN(ProcAddress('glTexCoord4fColor4fNormal3fVertex4fvSUN'));
  glTexCoord4fVertex4fSUN := TglTexCoord4fVertex4fSUN(ProcAddress('glTexCoord4fVertex4fSUN'));
  glTexCoord4fVertex4fvSUN := TglTexCoord4fVertex4fvSUN(ProcAddress('glTexCoord4fVertex4fvSUN'));
  glTexCoord4fv := TglTexCoord4fv(ProcAddress('glTexCoord4fv'));
  glTexCoord4hNV := TglTexCoord4hNV(ProcAddress('glTexCoord4hNV'));
  glTexCoord4hvNV := TglTexCoord4hvNV(ProcAddress('glTexCoord4hvNV'));
  glTexCoord4i := TglTexCoord4i(ProcAddress('glTexCoord4i'));
  glTexCoord4iv := TglTexCoord4iv(ProcAddress('glTexCoord4iv'));
  glTexCoord4s := TglTexCoord4s(ProcAddress('glTexCoord4s'));
  glTexCoord4sv := TglTexCoord4sv(ProcAddress('glTexCoord4sv'));
  glTexCoord4xOES := TglTexCoord4xOES(ProcAddress('glTexCoord4xOES'));
  glTexCoord4xvOES := TglTexCoord4xvOES(ProcAddress('glTexCoord4xvOES'));
  glTexCoordFormatNV := TglTexCoordFormatNV(ProcAddress('glTexCoordFormatNV'));
  glTexCoordP1ui := TglTexCoordP1ui(ProcAddress('glTexCoordP1ui'));
  glTexCoordP1uiv := TglTexCoordP1uiv(ProcAddress('glTexCoordP1uiv'));
  glTexCoordP2ui := TglTexCoordP2ui(ProcAddress('glTexCoordP2ui'));
  glTexCoordP2uiv := TglTexCoordP2uiv(ProcAddress('glTexCoordP2uiv'));
  glTexCoordP3ui := TglTexCoordP3ui(ProcAddress('glTexCoordP3ui'));
  glTexCoordP3uiv := TglTexCoordP3uiv(ProcAddress('glTexCoordP3uiv'));
  glTexCoordP4ui := TglTexCoordP4ui(ProcAddress('glTexCoordP4ui'));
  glTexCoordP4uiv := TglTexCoordP4uiv(ProcAddress('glTexCoordP4uiv'));
  glTexCoordPointer := TglTexCoordPointer(ProcAddress('glTexCoordPointer'));
  glTexCoordPointerEXT := TglTexCoordPointerEXT(ProcAddress('glTexCoordPointerEXT'));
  glTexCoordPointerListIBM := TglTexCoordPointerListIBM(ProcAddress('glTexCoordPointerListIBM'));
  glTexCoordPointervINTEL := TglTexCoordPointervINTEL(ProcAddress('glTexCoordPointervINTEL'));
  glTexEnvf := TglTexEnvf(ProcAddress('glTexEnvf'));
  glTexEnvfv := TglTexEnvfv(ProcAddress('glTexEnvfv'));
  glTexEnvi := TglTexEnvi(ProcAddress('glTexEnvi'));
  glTexEnviv := TglTexEnviv(ProcAddress('glTexEnviv'));
  glTexEnvx := TglTexEnvx(ProcAddress('glTexEnvx'));
  glTexEnvxOES := TglTexEnvxOES(ProcAddress('glTexEnvxOES'));
  glTexEnvxv := TglTexEnvxv(ProcAddress('glTexEnvxv'));
  glTexEnvxvOES := TglTexEnvxvOES(ProcAddress('glTexEnvxvOES'));
  glTexEstimateMotionQCOM := TglTexEstimateMotionQCOM(ProcAddress('glTexEstimateMotionQCOM'));
  glTexEstimateMotionRegionsQCOM := TglTexEstimateMotionRegionsQCOM(ProcAddress('glTexEstimateMotionRegionsQCOM'));
  glExtrapolateTex2DQCOM := TglExtrapolateTex2DQCOM(ProcAddress('glExtrapolateTex2DQCOM'));
  glTexFilterFuncSGIS := TglTexFilterFuncSGIS(ProcAddress('glTexFilterFuncSGIS'));
  glTexGend := TglTexGend(ProcAddress('glTexGend'));
  glTexGendv := TglTexGendv(ProcAddress('glTexGendv'));
  glTexGenf := TglTexGenf(ProcAddress('glTexGenf'));
  glTexGenfOES := TglTexGenfOES(ProcAddress('glTexGenfOES'));
  glTexGenfv := TglTexGenfv(ProcAddress('glTexGenfv'));
  glTexGenfvOES := TglTexGenfvOES(ProcAddress('glTexGenfvOES'));
  glTexGeni := TglTexGeni(ProcAddress('glTexGeni'));
  glTexGeniOES := TglTexGeniOES(ProcAddress('glTexGeniOES'));
  glTexGeniv := TglTexGeniv(ProcAddress('glTexGeniv'));
  glTexGenivOES := TglTexGenivOES(ProcAddress('glTexGenivOES'));
  glTexGenxOES := TglTexGenxOES(ProcAddress('glTexGenxOES'));
  glTexGenxvOES := TglTexGenxvOES(ProcAddress('glTexGenxvOES'));
  glTexImage1D := TglTexImage1D(ProcAddress('glTexImage1D'));
  glTexImage2D := TglTexImage2D(ProcAddress('glTexImage2D'));
  glTexImage2DMultisample := TglTexImage2DMultisample(ProcAddress('glTexImage2DMultisample'));
  glTexImage2DMultisampleCoverageNV := TglTexImage2DMultisampleCoverageNV(ProcAddress('glTexImage2DMultisampleCoverageNV'));
  glTexImage3D := TglTexImage3D(ProcAddress('glTexImage3D'));
  glTexImage3DEXT := TglTexImage3DEXT(ProcAddress('glTexImage3DEXT'));
  glTexImage3DMultisample := TglTexImage3DMultisample(ProcAddress('glTexImage3DMultisample'));
  glTexImage3DMultisampleCoverageNV := TglTexImage3DMultisampleCoverageNV(ProcAddress('glTexImage3DMultisampleCoverageNV'));
  glTexImage3DOES := TglTexImage3DOES(ProcAddress('glTexImage3DOES'));
  glTexImage4DSGIS := TglTexImage4DSGIS(ProcAddress('glTexImage4DSGIS'));
  glTexPageCommitmentARB := TglTexPageCommitmentARB(ProcAddress('glTexPageCommitmentARB'));
  glTexPageCommitmentEXT := TglTexPageCommitmentEXT(ProcAddress('glTexPageCommitmentEXT'));
  glTexPageCommitmentMemNV := TglTexPageCommitmentMemNV(ProcAddress('glTexPageCommitmentMemNV'));
  glTexParameterIiv := TglTexParameterIiv(ProcAddress('glTexParameterIiv'));
  glTexParameterIivEXT := TglTexParameterIivEXT(ProcAddress('glTexParameterIivEXT'));
  glTexParameterIivOES := TglTexParameterIivOES(ProcAddress('glTexParameterIivOES'));
  glTexParameterIuiv := TglTexParameterIuiv(ProcAddress('glTexParameterIuiv'));
  glTexParameterIuivEXT := TglTexParameterIuivEXT(ProcAddress('glTexParameterIuivEXT'));
  glTexParameterIuivOES := TglTexParameterIuivOES(ProcAddress('glTexParameterIuivOES'));
  glTexParameterf := TglTexParameterf(ProcAddress('glTexParameterf'));
  glTexParameterfv := TglTexParameterfv(ProcAddress('glTexParameterfv'));
  glTexParameteri := TglTexParameteri(ProcAddress('glTexParameteri'));
  glTexParameteriv := TglTexParameteriv(ProcAddress('glTexParameteriv'));
  glTexParameterx := TglTexParameterx(ProcAddress('glTexParameterx'));
  glTexParameterxOES := TglTexParameterxOES(ProcAddress('glTexParameterxOES'));
  glTexParameterxv := TglTexParameterxv(ProcAddress('glTexParameterxv'));
  glTexParameterxvOES := TglTexParameterxvOES(ProcAddress('glTexParameterxvOES'));
  glTexRenderbufferNV := TglTexRenderbufferNV(ProcAddress('glTexRenderbufferNV'));
  glTexStorage1D := TglTexStorage1D(ProcAddress('glTexStorage1D'));
  glTexStorage1DEXT := TglTexStorage1DEXT(ProcAddress('glTexStorage1DEXT'));
  glTexStorage2D := TglTexStorage2D(ProcAddress('glTexStorage2D'));
  glTexStorage2DEXT := TglTexStorage2DEXT(ProcAddress('glTexStorage2DEXT'));
  glTexStorage2DMultisample := TglTexStorage2DMultisample(ProcAddress('glTexStorage2DMultisample'));
  glTexStorage3D := TglTexStorage3D(ProcAddress('glTexStorage3D'));
  glTexStorage3DEXT := TglTexStorage3DEXT(ProcAddress('glTexStorage3DEXT'));
  glTexStorage3DMultisample := TglTexStorage3DMultisample(ProcAddress('glTexStorage3DMultisample'));
  glTexStorage3DMultisampleOES := TglTexStorage3DMultisampleOES(ProcAddress('glTexStorage3DMultisampleOES'));
  glTexStorageAttribs2DEXT := TglTexStorageAttribs2DEXT(ProcAddress('glTexStorageAttribs2DEXT'));
  glTexStorageAttribs3DEXT := TglTexStorageAttribs3DEXT(ProcAddress('glTexStorageAttribs3DEXT'));
  glTexStorageMem1DEXT := TglTexStorageMem1DEXT(ProcAddress('glTexStorageMem1DEXT'));
  glTexStorageMem2DEXT := TglTexStorageMem2DEXT(ProcAddress('glTexStorageMem2DEXT'));
  glTexStorageMem2DMultisampleEXT := TglTexStorageMem2DMultisampleEXT(ProcAddress('glTexStorageMem2DMultisampleEXT'));
  glTexStorageMem3DEXT := TglTexStorageMem3DEXT(ProcAddress('glTexStorageMem3DEXT'));
  glTexStorageMem3DMultisampleEXT := TglTexStorageMem3DMultisampleEXT(ProcAddress('glTexStorageMem3DMultisampleEXT'));
  glTexStorageSparseAMD := TglTexStorageSparseAMD(ProcAddress('glTexStorageSparseAMD'));
  glTexSubImage1D := TglTexSubImage1D(ProcAddress('glTexSubImage1D'));
  glTexSubImage1DEXT := TglTexSubImage1DEXT(ProcAddress('glTexSubImage1DEXT'));
  glTexSubImage2D := TglTexSubImage2D(ProcAddress('glTexSubImage2D'));
  glTexSubImage2DEXT := TglTexSubImage2DEXT(ProcAddress('glTexSubImage2DEXT'));
  glTexSubImage3D := TglTexSubImage3D(ProcAddress('glTexSubImage3D'));
  glTexSubImage3DEXT := TglTexSubImage3DEXT(ProcAddress('glTexSubImage3DEXT'));
  glTexSubImage3DOES := TglTexSubImage3DOES(ProcAddress('glTexSubImage3DOES'));
  glTexSubImage4DSGIS := TglTexSubImage4DSGIS(ProcAddress('glTexSubImage4DSGIS'));
  glTextureAttachMemoryNV := TglTextureAttachMemoryNV(ProcAddress('glTextureAttachMemoryNV'));
  glTextureBarrier := TglTextureBarrier(ProcAddress('glTextureBarrier'));
  glTextureBarrierNV := TglTextureBarrierNV(ProcAddress('glTextureBarrierNV'));
  glTextureBuffer := TglTextureBuffer(ProcAddress('glTextureBuffer'));
  glTextureBufferEXT := TglTextureBufferEXT(ProcAddress('glTextureBufferEXT'));
  glTextureBufferRange := TglTextureBufferRange(ProcAddress('glTextureBufferRange'));
  glTextureBufferRangeEXT := TglTextureBufferRangeEXT(ProcAddress('glTextureBufferRangeEXT'));
  glTextureColorMaskSGIS := TglTextureColorMaskSGIS(ProcAddress('glTextureColorMaskSGIS'));
  glTextureFoveationParametersQCOM := TglTextureFoveationParametersQCOM(ProcAddress('glTextureFoveationParametersQCOM'));
  glTextureImage1DEXT := TglTextureImage1DEXT(ProcAddress('glTextureImage1DEXT'));
  glTextureImage2DEXT := TglTextureImage2DEXT(ProcAddress('glTextureImage2DEXT'));
  glTextureImage2DMultisampleCoverageNV := TglTextureImage2DMultisampleCoverageNV(ProcAddress('glTextureImage2DMultisampleCoverageNV'));
  glTextureImage2DMultisampleNV := TglTextureImage2DMultisampleNV(ProcAddress('glTextureImage2DMultisampleNV'));
  glTextureImage3DEXT := TglTextureImage3DEXT(ProcAddress('glTextureImage3DEXT'));
  glTextureImage3DMultisampleCoverageNV := TglTextureImage3DMultisampleCoverageNV(ProcAddress('glTextureImage3DMultisampleCoverageNV'));
  glTextureImage3DMultisampleNV := TglTextureImage3DMultisampleNV(ProcAddress('glTextureImage3DMultisampleNV'));
  glTextureLightEXT := TglTextureLightEXT(ProcAddress('glTextureLightEXT'));
  glTextureMaterialEXT := TglTextureMaterialEXT(ProcAddress('glTextureMaterialEXT'));
  glTextureNormalEXT := TglTextureNormalEXT(ProcAddress('glTextureNormalEXT'));
  glTexturePageCommitmentEXT := TglTexturePageCommitmentEXT(ProcAddress('glTexturePageCommitmentEXT'));
  glTexturePageCommitmentMemNV := TglTexturePageCommitmentMemNV(ProcAddress('glTexturePageCommitmentMemNV'));
  glTextureParameterIiv := TglTextureParameterIiv(ProcAddress('glTextureParameterIiv'));
  glTextureParameterIivEXT := TglTextureParameterIivEXT(ProcAddress('glTextureParameterIivEXT'));
  glTextureParameterIuiv := TglTextureParameterIuiv(ProcAddress('glTextureParameterIuiv'));
  glTextureParameterIuivEXT := TglTextureParameterIuivEXT(ProcAddress('glTextureParameterIuivEXT'));
  glTextureParameterf := TglTextureParameterf(ProcAddress('glTextureParameterf'));
  glTextureParameterfEXT := TglTextureParameterfEXT(ProcAddress('glTextureParameterfEXT'));
  glTextureParameterfv := TglTextureParameterfv(ProcAddress('glTextureParameterfv'));
  glTextureParameterfvEXT := TglTextureParameterfvEXT(ProcAddress('glTextureParameterfvEXT'));
  glTextureParameteri := TglTextureParameteri(ProcAddress('glTextureParameteri'));
  glTextureParameteriEXT := TglTextureParameteriEXT(ProcAddress('glTextureParameteriEXT'));
  glTextureParameteriv := TglTextureParameteriv(ProcAddress('glTextureParameteriv'));
  glTextureParameterivEXT := TglTextureParameterivEXT(ProcAddress('glTextureParameterivEXT'));
  glTextureRangeAPPLE := TglTextureRangeAPPLE(ProcAddress('glTextureRangeAPPLE'));
  glTextureRenderbufferEXT := TglTextureRenderbufferEXT(ProcAddress('glTextureRenderbufferEXT'));
  glTextureStorage1D := TglTextureStorage1D(ProcAddress('glTextureStorage1D'));
  glTextureStorage1DEXT := TglTextureStorage1DEXT(ProcAddress('glTextureStorage1DEXT'));
  glTextureStorage2D := TglTextureStorage2D(ProcAddress('glTextureStorage2D'));
  glTextureStorage2DEXT := TglTextureStorage2DEXT(ProcAddress('glTextureStorage2DEXT'));
  glTextureStorage2DMultisample := TglTextureStorage2DMultisample(ProcAddress('glTextureStorage2DMultisample'));
  glTextureStorage2DMultisampleEXT := TglTextureStorage2DMultisampleEXT(ProcAddress('glTextureStorage2DMultisampleEXT'));
  glTextureStorage3D := TglTextureStorage3D(ProcAddress('glTextureStorage3D'));
  glTextureStorage3DEXT := TglTextureStorage3DEXT(ProcAddress('glTextureStorage3DEXT'));
  glTextureStorage3DMultisample := TglTextureStorage3DMultisample(ProcAddress('glTextureStorage3DMultisample'));
  glTextureStorage3DMultisampleEXT := TglTextureStorage3DMultisampleEXT(ProcAddress('glTextureStorage3DMultisampleEXT'));
  glTextureStorageMem1DEXT := TglTextureStorageMem1DEXT(ProcAddress('glTextureStorageMem1DEXT'));
  glTextureStorageMem2DEXT := TglTextureStorageMem2DEXT(ProcAddress('glTextureStorageMem2DEXT'));
  glTextureStorageMem2DMultisampleEXT := TglTextureStorageMem2DMultisampleEXT(ProcAddress('glTextureStorageMem2DMultisampleEXT'));
  glTextureStorageMem3DEXT := TglTextureStorageMem3DEXT(ProcAddress('glTextureStorageMem3DEXT'));
  glTextureStorageMem3DMultisampleEXT := TglTextureStorageMem3DMultisampleEXT(ProcAddress('glTextureStorageMem3DMultisampleEXT'));
  glTextureStorageSparseAMD := TglTextureStorageSparseAMD(ProcAddress('glTextureStorageSparseAMD'));
  glTextureSubImage1D := TglTextureSubImage1D(ProcAddress('glTextureSubImage1D'));
  glTextureSubImage1DEXT := TglTextureSubImage1DEXT(ProcAddress('glTextureSubImage1DEXT'));
  glTextureSubImage2D := TglTextureSubImage2D(ProcAddress('glTextureSubImage2D'));
  glTextureSubImage2DEXT := TglTextureSubImage2DEXT(ProcAddress('glTextureSubImage2DEXT'));
  glTextureSubImage3D := TglTextureSubImage3D(ProcAddress('glTextureSubImage3D'));
  glTextureSubImage3DEXT := TglTextureSubImage3DEXT(ProcAddress('glTextureSubImage3DEXT'));
  glTextureView := TglTextureView(ProcAddress('glTextureView'));
  glTextureViewEXT := TglTextureViewEXT(ProcAddress('glTextureViewEXT'));
  glTextureViewOES := TglTextureViewOES(ProcAddress('glTextureViewOES'));
  glTrackMatrixNV := TglTrackMatrixNV(ProcAddress('glTrackMatrixNV'));
  glTransformFeedbackAttribsNV := TglTransformFeedbackAttribsNV(ProcAddress('glTransformFeedbackAttribsNV'));
  glTransformFeedbackBufferBase := TglTransformFeedbackBufferBase(ProcAddress('glTransformFeedbackBufferBase'));
  glTransformFeedbackBufferRange := TglTransformFeedbackBufferRange(ProcAddress('glTransformFeedbackBufferRange'));
  glTransformFeedbackStreamAttribsNV := TglTransformFeedbackStreamAttribsNV(ProcAddress('glTransformFeedbackStreamAttribsNV'));
  glTransformFeedbackVaryings := TglTransformFeedbackVaryings(ProcAddress('glTransformFeedbackVaryings'));
  glTransformFeedbackVaryingsEXT := TglTransformFeedbackVaryingsEXT(ProcAddress('glTransformFeedbackVaryingsEXT'));
  glTransformFeedbackVaryingsNV := TglTransformFeedbackVaryingsNV(ProcAddress('glTransformFeedbackVaryingsNV'));
  glTransformPathNV := TglTransformPathNV(ProcAddress('glTransformPathNV'));
  glTranslated := TglTranslated(ProcAddress('glTranslated'));
  glTranslatef := TglTranslatef(ProcAddress('glTranslatef'));
  glTranslatex := TglTranslatex(ProcAddress('glTranslatex'));
  glTranslatexOES := TglTranslatexOES(ProcAddress('glTranslatexOES'));
  glUniform1d := TglUniform1d(ProcAddress('glUniform1d'));
  glUniform1dv := TglUniform1dv(ProcAddress('glUniform1dv'));
  glUniform1f := TglUniform1f(ProcAddress('glUniform1f'));
  glUniform1fARB := TglUniform1fARB(ProcAddress('glUniform1fARB'));
  glUniform1fv := TglUniform1fv(ProcAddress('glUniform1fv'));
  glUniform1fvARB := TglUniform1fvARB(ProcAddress('glUniform1fvARB'));
  glUniform1i := TglUniform1i(ProcAddress('glUniform1i'));
  glUniform1i64ARB := TglUniform1i64ARB(ProcAddress('glUniform1i64ARB'));
  glUniform1i64NV := TglUniform1i64NV(ProcAddress('glUniform1i64NV'));
  glUniform1i64vARB := TglUniform1i64vARB(ProcAddress('glUniform1i64vARB'));
  glUniform1i64vNV := TglUniform1i64vNV(ProcAddress('glUniform1i64vNV'));
  glUniform1iARB := TglUniform1iARB(ProcAddress('glUniform1iARB'));
  glUniform1iv := TglUniform1iv(ProcAddress('glUniform1iv'));
  glUniform1ivARB := TglUniform1ivARB(ProcAddress('glUniform1ivARB'));
  glUniform1ui := TglUniform1ui(ProcAddress('glUniform1ui'));
  glUniform1ui64ARB := TglUniform1ui64ARB(ProcAddress('glUniform1ui64ARB'));
  glUniform1ui64NV := TglUniform1ui64NV(ProcAddress('glUniform1ui64NV'));
  glUniform1ui64vARB := TglUniform1ui64vARB(ProcAddress('glUniform1ui64vARB'));
  glUniform1ui64vNV := TglUniform1ui64vNV(ProcAddress('glUniform1ui64vNV'));
  glUniform1uiEXT := TglUniform1uiEXT(ProcAddress('glUniform1uiEXT'));
  glUniform1uiv := TglUniform1uiv(ProcAddress('glUniform1uiv'));
  glUniform1uivEXT := TglUniform1uivEXT(ProcAddress('glUniform1uivEXT'));
  glUniform2d := TglUniform2d(ProcAddress('glUniform2d'));
  glUniform2dv := TglUniform2dv(ProcAddress('glUniform2dv'));
  glUniform2f := TglUniform2f(ProcAddress('glUniform2f'));
  glUniform2fARB := TglUniform2fARB(ProcAddress('glUniform2fARB'));
  glUniform2fv := TglUniform2fv(ProcAddress('glUniform2fv'));
  glUniform2fvARB := TglUniform2fvARB(ProcAddress('glUniform2fvARB'));
  glUniform2i := TglUniform2i(ProcAddress('glUniform2i'));
  glUniform2i64ARB := TglUniform2i64ARB(ProcAddress('glUniform2i64ARB'));
  glUniform2i64NV := TglUniform2i64NV(ProcAddress('glUniform2i64NV'));
  glUniform2i64vARB := TglUniform2i64vARB(ProcAddress('glUniform2i64vARB'));
  glUniform2i64vNV := TglUniform2i64vNV(ProcAddress('glUniform2i64vNV'));
  glUniform2iARB := TglUniform2iARB(ProcAddress('glUniform2iARB'));
  glUniform2iv := TglUniform2iv(ProcAddress('glUniform2iv'));
  glUniform2ivARB := TglUniform2ivARB(ProcAddress('glUniform2ivARB'));
  glUniform2ui := TglUniform2ui(ProcAddress('glUniform2ui'));
  glUniform2ui64ARB := TglUniform2ui64ARB(ProcAddress('glUniform2ui64ARB'));
  glUniform2ui64NV := TglUniform2ui64NV(ProcAddress('glUniform2ui64NV'));
  glUniform2ui64vARB := TglUniform2ui64vARB(ProcAddress('glUniform2ui64vARB'));
  glUniform2ui64vNV := TglUniform2ui64vNV(ProcAddress('glUniform2ui64vNV'));
  glUniform2uiEXT := TglUniform2uiEXT(ProcAddress('glUniform2uiEXT'));
  glUniform2uiv := TglUniform2uiv(ProcAddress('glUniform2uiv'));
  glUniform2uivEXT := TglUniform2uivEXT(ProcAddress('glUniform2uivEXT'));
  glUniform3d := TglUniform3d(ProcAddress('glUniform3d'));
  glUniform3dv := TglUniform3dv(ProcAddress('glUniform3dv'));
  glUniform3f := TglUniform3f(ProcAddress('glUniform3f'));
  glUniform3fARB := TglUniform3fARB(ProcAddress('glUniform3fARB'));
  glUniform3fv := TglUniform3fv(ProcAddress('glUniform3fv'));
  glUniform3fvARB := TglUniform3fvARB(ProcAddress('glUniform3fvARB'));
  glUniform3i := TglUniform3i(ProcAddress('glUniform3i'));
  glUniform3i64ARB := TglUniform3i64ARB(ProcAddress('glUniform3i64ARB'));
  glUniform3i64NV := TglUniform3i64NV(ProcAddress('glUniform3i64NV'));
  glUniform3i64vARB := TglUniform3i64vARB(ProcAddress('glUniform3i64vARB'));
  glUniform3i64vNV := TglUniform3i64vNV(ProcAddress('glUniform3i64vNV'));
  glUniform3iARB := TglUniform3iARB(ProcAddress('glUniform3iARB'));
  glUniform3iv := TglUniform3iv(ProcAddress('glUniform3iv'));
  glUniform3ivARB := TglUniform3ivARB(ProcAddress('glUniform3ivARB'));
  glUniform3ui := TglUniform3ui(ProcAddress('glUniform3ui'));
  glUniform3ui64ARB := TglUniform3ui64ARB(ProcAddress('glUniform3ui64ARB'));
  glUniform3ui64NV := TglUniform3ui64NV(ProcAddress('glUniform3ui64NV'));
  glUniform3ui64vARB := TglUniform3ui64vARB(ProcAddress('glUniform3ui64vARB'));
  glUniform3ui64vNV := TglUniform3ui64vNV(ProcAddress('glUniform3ui64vNV'));
  glUniform3uiEXT := TglUniform3uiEXT(ProcAddress('glUniform3uiEXT'));
  glUniform3uiv := TglUniform3uiv(ProcAddress('glUniform3uiv'));
  glUniform3uivEXT := TglUniform3uivEXT(ProcAddress('glUniform3uivEXT'));
  glUniform4d := TglUniform4d(ProcAddress('glUniform4d'));
  glUniform4dv := TglUniform4dv(ProcAddress('glUniform4dv'));
  glUniform4f := TglUniform4f(ProcAddress('glUniform4f'));
  glUniform4fARB := TglUniform4fARB(ProcAddress('glUniform4fARB'));
  glUniform4fv := TglUniform4fv(ProcAddress('glUniform4fv'));
  glUniform4fvARB := TglUniform4fvARB(ProcAddress('glUniform4fvARB'));
  glUniform4i := TglUniform4i(ProcAddress('glUniform4i'));
  glUniform4i64ARB := TglUniform4i64ARB(ProcAddress('glUniform4i64ARB'));
  glUniform4i64NV := TglUniform4i64NV(ProcAddress('glUniform4i64NV'));
  glUniform4i64vARB := TglUniform4i64vARB(ProcAddress('glUniform4i64vARB'));
  glUniform4i64vNV := TglUniform4i64vNV(ProcAddress('glUniform4i64vNV'));
  glUniform4iARB := TglUniform4iARB(ProcAddress('glUniform4iARB'));
  glUniform4iv := TglUniform4iv(ProcAddress('glUniform4iv'));
  glUniform4ivARB := TglUniform4ivARB(ProcAddress('glUniform4ivARB'));
  glUniform4ui := TglUniform4ui(ProcAddress('glUniform4ui'));
  glUniform4ui64ARB := TglUniform4ui64ARB(ProcAddress('glUniform4ui64ARB'));
  glUniform4ui64NV := TglUniform4ui64NV(ProcAddress('glUniform4ui64NV'));
  glUniform4ui64vARB := TglUniform4ui64vARB(ProcAddress('glUniform4ui64vARB'));
  glUniform4ui64vNV := TglUniform4ui64vNV(ProcAddress('glUniform4ui64vNV'));
  glUniform4uiEXT := TglUniform4uiEXT(ProcAddress('glUniform4uiEXT'));
  glUniform4uiv := TglUniform4uiv(ProcAddress('glUniform4uiv'));
  glUniform4uivEXT := TglUniform4uivEXT(ProcAddress('glUniform4uivEXT'));
  glUniformBlockBinding := TglUniformBlockBinding(ProcAddress('glUniformBlockBinding'));
  glUniformBufferEXT := TglUniformBufferEXT(ProcAddress('glUniformBufferEXT'));
  glUniformHandleui64ARB := TglUniformHandleui64ARB(ProcAddress('glUniformHandleui64ARB'));
  glUniformHandleui64IMG := TglUniformHandleui64IMG(ProcAddress('glUniformHandleui64IMG'));
  glUniformHandleui64NV := TglUniformHandleui64NV(ProcAddress('glUniformHandleui64NV'));
  glUniformHandleui64vARB := TglUniformHandleui64vARB(ProcAddress('glUniformHandleui64vARB'));
  glUniformHandleui64vIMG := TglUniformHandleui64vIMG(ProcAddress('glUniformHandleui64vIMG'));
  glUniformHandleui64vNV := TglUniformHandleui64vNV(ProcAddress('glUniformHandleui64vNV'));
  glUniformMatrix2dv := TglUniformMatrix2dv(ProcAddress('glUniformMatrix2dv'));
  glUniformMatrix2fv := TglUniformMatrix2fv(ProcAddress('glUniformMatrix2fv'));
  glUniformMatrix2fvARB := TglUniformMatrix2fvARB(ProcAddress('glUniformMatrix2fvARB'));
  glUniformMatrix2x3dv := TglUniformMatrix2x3dv(ProcAddress('glUniformMatrix2x3dv'));
  glUniformMatrix2x3fv := TglUniformMatrix2x3fv(ProcAddress('glUniformMatrix2x3fv'));
  glUniformMatrix2x3fvNV := TglUniformMatrix2x3fvNV(ProcAddress('glUniformMatrix2x3fvNV'));
  glUniformMatrix2x4dv := TglUniformMatrix2x4dv(ProcAddress('glUniformMatrix2x4dv'));
  glUniformMatrix2x4fv := TglUniformMatrix2x4fv(ProcAddress('glUniformMatrix2x4fv'));
  glUniformMatrix2x4fvNV := TglUniformMatrix2x4fvNV(ProcAddress('glUniformMatrix2x4fvNV'));
  glUniformMatrix3dv := TglUniformMatrix3dv(ProcAddress('glUniformMatrix3dv'));
  glUniformMatrix3fv := TglUniformMatrix3fv(ProcAddress('glUniformMatrix3fv'));
  glUniformMatrix3fvARB := TglUniformMatrix3fvARB(ProcAddress('glUniformMatrix3fvARB'));
  glUniformMatrix3x2dv := TglUniformMatrix3x2dv(ProcAddress('glUniformMatrix3x2dv'));
  glUniformMatrix3x2fv := TglUniformMatrix3x2fv(ProcAddress('glUniformMatrix3x2fv'));
  glUniformMatrix3x2fvNV := TglUniformMatrix3x2fvNV(ProcAddress('glUniformMatrix3x2fvNV'));
  glUniformMatrix3x4dv := TglUniformMatrix3x4dv(ProcAddress('glUniformMatrix3x4dv'));
  glUniformMatrix3x4fv := TglUniformMatrix3x4fv(ProcAddress('glUniformMatrix3x4fv'));
  glUniformMatrix3x4fvNV := TglUniformMatrix3x4fvNV(ProcAddress('glUniformMatrix3x4fvNV'));
  glUniformMatrix4dv := TglUniformMatrix4dv(ProcAddress('glUniformMatrix4dv'));
  glUniformMatrix4fv := TglUniformMatrix4fv(ProcAddress('glUniformMatrix4fv'));
  glUniformMatrix4fvARB := TglUniformMatrix4fvARB(ProcAddress('glUniformMatrix4fvARB'));
  glUniformMatrix4x2dv := TglUniformMatrix4x2dv(ProcAddress('glUniformMatrix4x2dv'));
  glUniformMatrix4x2fv := TglUniformMatrix4x2fv(ProcAddress('glUniformMatrix4x2fv'));
  glUniformMatrix4x2fvNV := TglUniformMatrix4x2fvNV(ProcAddress('glUniformMatrix4x2fvNV'));
  glUniformMatrix4x3dv := TglUniformMatrix4x3dv(ProcAddress('glUniformMatrix4x3dv'));
  glUniformMatrix4x3fv := TglUniformMatrix4x3fv(ProcAddress('glUniformMatrix4x3fv'));
  glUniformMatrix4x3fvNV := TglUniformMatrix4x3fvNV(ProcAddress('glUniformMatrix4x3fvNV'));
  glUniformSubroutinesuiv := TglUniformSubroutinesuiv(ProcAddress('glUniformSubroutinesuiv'));
  glUniformui64NV := TglUniformui64NV(ProcAddress('glUniformui64NV'));
  glUniformui64vNV := TglUniformui64vNV(ProcAddress('glUniformui64vNV'));
  glUnlockArraysEXT := TglUnlockArraysEXT(ProcAddress('glUnlockArraysEXT'));
  glUnmapBuffer := TglUnmapBuffer(ProcAddress('glUnmapBuffer'));
  glUnmapBufferARB := TglUnmapBufferARB(ProcAddress('glUnmapBufferARB'));
  glUnmapBufferOES := TglUnmapBufferOES(ProcAddress('glUnmapBufferOES'));
  glUnmapNamedBuffer := TglUnmapNamedBuffer(ProcAddress('glUnmapNamedBuffer'));
  glUnmapNamedBufferEXT := TglUnmapNamedBufferEXT(ProcAddress('glUnmapNamedBufferEXT'));
  glUnmapObjectBufferATI := TglUnmapObjectBufferATI(ProcAddress('glUnmapObjectBufferATI'));
  glUnmapTexture2DINTEL := TglUnmapTexture2DINTEL(ProcAddress('glUnmapTexture2DINTEL'));
  glUpdateObjectBufferATI := TglUpdateObjectBufferATI(ProcAddress('glUpdateObjectBufferATI'));
  glUploadGpuMaskNVX := TglUploadGpuMaskNVX(ProcAddress('glUploadGpuMaskNVX'));
  glUseProgram := TglUseProgram(ProcAddress('glUseProgram'));
  glUseProgramObjectARB := TglUseProgramObjectARB(ProcAddress('glUseProgramObjectARB'));
  glUseProgramStages := TglUseProgramStages(ProcAddress('glUseProgramStages'));
  glUseProgramStagesEXT := TglUseProgramStagesEXT(ProcAddress('glUseProgramStagesEXT'));
  glUseShaderProgramEXT := TglUseShaderProgramEXT(ProcAddress('glUseShaderProgramEXT'));
  glVDPAUFiniNV := TglVDPAUFiniNV(ProcAddress('glVDPAUFiniNV'));
  glVDPAUGetSurfaceivNV := TglVDPAUGetSurfaceivNV(ProcAddress('glVDPAUGetSurfaceivNV'));
  glVDPAUInitNV := TglVDPAUInitNV(ProcAddress('glVDPAUInitNV'));
  glVDPAUIsSurfaceNV := TglVDPAUIsSurfaceNV(ProcAddress('glVDPAUIsSurfaceNV'));
  glVDPAUMapSurfacesNV := TglVDPAUMapSurfacesNV(ProcAddress('glVDPAUMapSurfacesNV'));
  glVDPAURegisterOutputSurfaceNV := TglVDPAURegisterOutputSurfaceNV(ProcAddress('glVDPAURegisterOutputSurfaceNV'));
  glVDPAURegisterVideoSurfaceNV := TglVDPAURegisterVideoSurfaceNV(ProcAddress('glVDPAURegisterVideoSurfaceNV'));
  glVDPAURegisterVideoSurfaceWithPictureStructureNV := TglVDPAURegisterVideoSurfaceWithPictureStructureNV(ProcAddress('glVDPAURegisterVideoSurfaceWithPictureStructureNV'));
  glVDPAUSurfaceAccessNV := TglVDPAUSurfaceAccessNV(ProcAddress('glVDPAUSurfaceAccessNV'));
  glVDPAUUnmapSurfacesNV := TglVDPAUUnmapSurfacesNV(ProcAddress('glVDPAUUnmapSurfacesNV'));
  glVDPAUUnregisterSurfaceNV := TglVDPAUUnregisterSurfaceNV(ProcAddress('glVDPAUUnregisterSurfaceNV'));
  glValidateProgram := TglValidateProgram(ProcAddress('glValidateProgram'));
  glValidateProgramARB := TglValidateProgramARB(ProcAddress('glValidateProgramARB'));
  glValidateProgramPipeline := TglValidateProgramPipeline(ProcAddress('glValidateProgramPipeline'));
  glValidateProgramPipelineEXT := TglValidateProgramPipelineEXT(ProcAddress('glValidateProgramPipelineEXT'));
  glVariantArrayObjectATI := TglVariantArrayObjectATI(ProcAddress('glVariantArrayObjectATI'));
  glVariantPointerEXT := TglVariantPointerEXT(ProcAddress('glVariantPointerEXT'));
  glVariantbvEXT := TglVariantbvEXT(ProcAddress('glVariantbvEXT'));
  glVariantdvEXT := TglVariantdvEXT(ProcAddress('glVariantdvEXT'));
  glVariantfvEXT := TglVariantfvEXT(ProcAddress('glVariantfvEXT'));
  glVariantivEXT := TglVariantivEXT(ProcAddress('glVariantivEXT'));
  glVariantsvEXT := TglVariantsvEXT(ProcAddress('glVariantsvEXT'));
  glVariantubvEXT := TglVariantubvEXT(ProcAddress('glVariantubvEXT'));
  glVariantuivEXT := TglVariantuivEXT(ProcAddress('glVariantuivEXT'));
  glVariantusvEXT := TglVariantusvEXT(ProcAddress('glVariantusvEXT'));
  glVertex2bOES := TglVertex2bOES(ProcAddress('glVertex2bOES'));
  glVertex2bvOES := TglVertex2bvOES(ProcAddress('glVertex2bvOES'));
  glVertex2d := TglVertex2d(ProcAddress('glVertex2d'));
  glVertex2dv := TglVertex2dv(ProcAddress('glVertex2dv'));
  glVertex2f := TglVertex2f(ProcAddress('glVertex2f'));
  glVertex2fv := TglVertex2fv(ProcAddress('glVertex2fv'));
  glVertex2hNV := TglVertex2hNV(ProcAddress('glVertex2hNV'));
  glVertex2hvNV := TglVertex2hvNV(ProcAddress('glVertex2hvNV'));
  glVertex2i := TglVertex2i(ProcAddress('glVertex2i'));
  glVertex2iv := TglVertex2iv(ProcAddress('glVertex2iv'));
  glVertex2s := TglVertex2s(ProcAddress('glVertex2s'));
  glVertex2sv := TglVertex2sv(ProcAddress('glVertex2sv'));
  glVertex2xOES := TglVertex2xOES(ProcAddress('glVertex2xOES'));
  glVertex2xvOES := TglVertex2xvOES(ProcAddress('glVertex2xvOES'));
  glVertex3bOES := TglVertex3bOES(ProcAddress('glVertex3bOES'));
  glVertex3bvOES := TglVertex3bvOES(ProcAddress('glVertex3bvOES'));
  glVertex3d := TglVertex3d(ProcAddress('glVertex3d'));
  glVertex3dv := TglVertex3dv(ProcAddress('glVertex3dv'));
  glVertex3f := TglVertex3f(ProcAddress('glVertex3f'));
  glVertex3fv := TglVertex3fv(ProcAddress('glVertex3fv'));
  glVertex3hNV := TglVertex3hNV(ProcAddress('glVertex3hNV'));
  glVertex3hvNV := TglVertex3hvNV(ProcAddress('glVertex3hvNV'));
  glVertex3i := TglVertex3i(ProcAddress('glVertex3i'));
  glVertex3iv := TglVertex3iv(ProcAddress('glVertex3iv'));
  glVertex3s := TglVertex3s(ProcAddress('glVertex3s'));
  glVertex3sv := TglVertex3sv(ProcAddress('glVertex3sv'));
  glVertex3xOES := TglVertex3xOES(ProcAddress('glVertex3xOES'));
  glVertex3xvOES := TglVertex3xvOES(ProcAddress('glVertex3xvOES'));
  glVertex4bOES := TglVertex4bOES(ProcAddress('glVertex4bOES'));
  glVertex4bvOES := TglVertex4bvOES(ProcAddress('glVertex4bvOES'));
  glVertex4d := TglVertex4d(ProcAddress('glVertex4d'));
  glVertex4dv := TglVertex4dv(ProcAddress('glVertex4dv'));
  glVertex4f := TglVertex4f(ProcAddress('glVertex4f'));
  glVertex4fv := TglVertex4fv(ProcAddress('glVertex4fv'));
  glVertex4hNV := TglVertex4hNV(ProcAddress('glVertex4hNV'));
  glVertex4hvNV := TglVertex4hvNV(ProcAddress('glVertex4hvNV'));
  glVertex4i := TglVertex4i(ProcAddress('glVertex4i'));
  glVertex4iv := TglVertex4iv(ProcAddress('glVertex4iv'));
  glVertex4s := TglVertex4s(ProcAddress('glVertex4s'));
  glVertex4sv := TglVertex4sv(ProcAddress('glVertex4sv'));
  glVertex4xOES := TglVertex4xOES(ProcAddress('glVertex4xOES'));
  glVertex4xvOES := TglVertex4xvOES(ProcAddress('glVertex4xvOES'));
  glVertexArrayAttribBinding := TglVertexArrayAttribBinding(ProcAddress('glVertexArrayAttribBinding'));
  glVertexArrayAttribFormat := TglVertexArrayAttribFormat(ProcAddress('glVertexArrayAttribFormat'));
  glVertexArrayAttribIFormat := TglVertexArrayAttribIFormat(ProcAddress('glVertexArrayAttribIFormat'));
  glVertexArrayAttribLFormat := TglVertexArrayAttribLFormat(ProcAddress('glVertexArrayAttribLFormat'));
  glVertexArrayBindVertexBufferEXT := TglVertexArrayBindVertexBufferEXT(ProcAddress('glVertexArrayBindVertexBufferEXT'));
  glVertexArrayBindingDivisor := TglVertexArrayBindingDivisor(ProcAddress('glVertexArrayBindingDivisor'));
  glVertexArrayColorOffsetEXT := TglVertexArrayColorOffsetEXT(ProcAddress('glVertexArrayColorOffsetEXT'));
  glVertexArrayEdgeFlagOffsetEXT := TglVertexArrayEdgeFlagOffsetEXT(ProcAddress('glVertexArrayEdgeFlagOffsetEXT'));
  glVertexArrayElementBuffer := TglVertexArrayElementBuffer(ProcAddress('glVertexArrayElementBuffer'));
  glVertexArrayFogCoordOffsetEXT := TglVertexArrayFogCoordOffsetEXT(ProcAddress('glVertexArrayFogCoordOffsetEXT'));
  glVertexArrayIndexOffsetEXT := TglVertexArrayIndexOffsetEXT(ProcAddress('glVertexArrayIndexOffsetEXT'));
  glVertexArrayMultiTexCoordOffsetEXT := TglVertexArrayMultiTexCoordOffsetEXT(ProcAddress('glVertexArrayMultiTexCoordOffsetEXT'));
  glVertexArrayNormalOffsetEXT := TglVertexArrayNormalOffsetEXT(ProcAddress('glVertexArrayNormalOffsetEXT'));
  glVertexArrayParameteriAPPLE := TglVertexArrayParameteriAPPLE(ProcAddress('glVertexArrayParameteriAPPLE'));
  glVertexArrayRangeAPPLE := TglVertexArrayRangeAPPLE(ProcAddress('glVertexArrayRangeAPPLE'));
  glVertexArrayRangeNV := TglVertexArrayRangeNV(ProcAddress('glVertexArrayRangeNV'));
  glVertexArraySecondaryColorOffsetEXT := TglVertexArraySecondaryColorOffsetEXT(ProcAddress('glVertexArraySecondaryColorOffsetEXT'));
  glVertexArrayTexCoordOffsetEXT := TglVertexArrayTexCoordOffsetEXT(ProcAddress('glVertexArrayTexCoordOffsetEXT'));
  glVertexArrayVertexAttribBindingEXT := TglVertexArrayVertexAttribBindingEXT(ProcAddress('glVertexArrayVertexAttribBindingEXT'));
  glVertexArrayVertexAttribDivisorEXT := TglVertexArrayVertexAttribDivisorEXT(ProcAddress('glVertexArrayVertexAttribDivisorEXT'));
  glVertexArrayVertexAttribFormatEXT := TglVertexArrayVertexAttribFormatEXT(ProcAddress('glVertexArrayVertexAttribFormatEXT'));
  glVertexArrayVertexAttribIFormatEXT := TglVertexArrayVertexAttribIFormatEXT(ProcAddress('glVertexArrayVertexAttribIFormatEXT'));
  glVertexArrayVertexAttribIOffsetEXT := TglVertexArrayVertexAttribIOffsetEXT(ProcAddress('glVertexArrayVertexAttribIOffsetEXT'));
  glVertexArrayVertexAttribLFormatEXT := TglVertexArrayVertexAttribLFormatEXT(ProcAddress('glVertexArrayVertexAttribLFormatEXT'));
  glVertexArrayVertexAttribLOffsetEXT := TglVertexArrayVertexAttribLOffsetEXT(ProcAddress('glVertexArrayVertexAttribLOffsetEXT'));
  glVertexArrayVertexAttribOffsetEXT := TglVertexArrayVertexAttribOffsetEXT(ProcAddress('glVertexArrayVertexAttribOffsetEXT'));
  glVertexArrayVertexBindingDivisorEXT := TglVertexArrayVertexBindingDivisorEXT(ProcAddress('glVertexArrayVertexBindingDivisorEXT'));
  glVertexArrayVertexBuffer := TglVertexArrayVertexBuffer(ProcAddress('glVertexArrayVertexBuffer'));
  glVertexArrayVertexBuffers := TglVertexArrayVertexBuffers(ProcAddress('glVertexArrayVertexBuffers'));
  glVertexArrayVertexOffsetEXT := TglVertexArrayVertexOffsetEXT(ProcAddress('glVertexArrayVertexOffsetEXT'));
  glVertexAttrib1d := TglVertexAttrib1d(ProcAddress('glVertexAttrib1d'));
  glVertexAttrib1dARB := TglVertexAttrib1dARB(ProcAddress('glVertexAttrib1dARB'));
  glVertexAttrib1dNV := TglVertexAttrib1dNV(ProcAddress('glVertexAttrib1dNV'));
  glVertexAttrib1dv := TglVertexAttrib1dv(ProcAddress('glVertexAttrib1dv'));
  glVertexAttrib1dvARB := TglVertexAttrib1dvARB(ProcAddress('glVertexAttrib1dvARB'));
  glVertexAttrib1dvNV := TglVertexAttrib1dvNV(ProcAddress('glVertexAttrib1dvNV'));
  glVertexAttrib1f := TglVertexAttrib1f(ProcAddress('glVertexAttrib1f'));
  glVertexAttrib1fARB := TglVertexAttrib1fARB(ProcAddress('glVertexAttrib1fARB'));
  glVertexAttrib1fNV := TglVertexAttrib1fNV(ProcAddress('glVertexAttrib1fNV'));
  glVertexAttrib1fv := TglVertexAttrib1fv(ProcAddress('glVertexAttrib1fv'));
  glVertexAttrib1fvARB := TglVertexAttrib1fvARB(ProcAddress('glVertexAttrib1fvARB'));
  glVertexAttrib1fvNV := TglVertexAttrib1fvNV(ProcAddress('glVertexAttrib1fvNV'));
  glVertexAttrib1hNV := TglVertexAttrib1hNV(ProcAddress('glVertexAttrib1hNV'));
  glVertexAttrib1hvNV := TglVertexAttrib1hvNV(ProcAddress('glVertexAttrib1hvNV'));
  glVertexAttrib1s := TglVertexAttrib1s(ProcAddress('glVertexAttrib1s'));
  glVertexAttrib1sARB := TglVertexAttrib1sARB(ProcAddress('glVertexAttrib1sARB'));
  glVertexAttrib1sNV := TglVertexAttrib1sNV(ProcAddress('glVertexAttrib1sNV'));
  glVertexAttrib1sv := TglVertexAttrib1sv(ProcAddress('glVertexAttrib1sv'));
  glVertexAttrib1svARB := TglVertexAttrib1svARB(ProcAddress('glVertexAttrib1svARB'));
  glVertexAttrib1svNV := TglVertexAttrib1svNV(ProcAddress('glVertexAttrib1svNV'));
  glVertexAttrib2d := TglVertexAttrib2d(ProcAddress('glVertexAttrib2d'));
  glVertexAttrib2dARB := TglVertexAttrib2dARB(ProcAddress('glVertexAttrib2dARB'));
  glVertexAttrib2dNV := TglVertexAttrib2dNV(ProcAddress('glVertexAttrib2dNV'));
  glVertexAttrib2dv := TglVertexAttrib2dv(ProcAddress('glVertexAttrib2dv'));
  glVertexAttrib2dvARB := TglVertexAttrib2dvARB(ProcAddress('glVertexAttrib2dvARB'));
  glVertexAttrib2dvNV := TglVertexAttrib2dvNV(ProcAddress('glVertexAttrib2dvNV'));
  glVertexAttrib2f := TglVertexAttrib2f(ProcAddress('glVertexAttrib2f'));
  glVertexAttrib2fARB := TglVertexAttrib2fARB(ProcAddress('glVertexAttrib2fARB'));
  glVertexAttrib2fNV := TglVertexAttrib2fNV(ProcAddress('glVertexAttrib2fNV'));
  glVertexAttrib2fv := TglVertexAttrib2fv(ProcAddress('glVertexAttrib2fv'));
  glVertexAttrib2fvARB := TglVertexAttrib2fvARB(ProcAddress('glVertexAttrib2fvARB'));
  glVertexAttrib2fvNV := TglVertexAttrib2fvNV(ProcAddress('glVertexAttrib2fvNV'));
  glVertexAttrib2hNV := TglVertexAttrib2hNV(ProcAddress('glVertexAttrib2hNV'));
  glVertexAttrib2hvNV := TglVertexAttrib2hvNV(ProcAddress('glVertexAttrib2hvNV'));
  glVertexAttrib2s := TglVertexAttrib2s(ProcAddress('glVertexAttrib2s'));
  glVertexAttrib2sARB := TglVertexAttrib2sARB(ProcAddress('glVertexAttrib2sARB'));
  glVertexAttrib2sNV := TglVertexAttrib2sNV(ProcAddress('glVertexAttrib2sNV'));
  glVertexAttrib2sv := TglVertexAttrib2sv(ProcAddress('glVertexAttrib2sv'));
  glVertexAttrib2svARB := TglVertexAttrib2svARB(ProcAddress('glVertexAttrib2svARB'));
  glVertexAttrib2svNV := TglVertexAttrib2svNV(ProcAddress('glVertexAttrib2svNV'));
  glVertexAttrib3d := TglVertexAttrib3d(ProcAddress('glVertexAttrib3d'));
  glVertexAttrib3dARB := TglVertexAttrib3dARB(ProcAddress('glVertexAttrib3dARB'));
  glVertexAttrib3dNV := TglVertexAttrib3dNV(ProcAddress('glVertexAttrib3dNV'));
  glVertexAttrib3dv := TglVertexAttrib3dv(ProcAddress('glVertexAttrib3dv'));
  glVertexAttrib3dvARB := TglVertexAttrib3dvARB(ProcAddress('glVertexAttrib3dvARB'));
  glVertexAttrib3dvNV := TglVertexAttrib3dvNV(ProcAddress('glVertexAttrib3dvNV'));
  glVertexAttrib3f := TglVertexAttrib3f(ProcAddress('glVertexAttrib3f'));
  glVertexAttrib3fARB := TglVertexAttrib3fARB(ProcAddress('glVertexAttrib3fARB'));
  glVertexAttrib3fNV := TglVertexAttrib3fNV(ProcAddress('glVertexAttrib3fNV'));
  glVertexAttrib3fv := TglVertexAttrib3fv(ProcAddress('glVertexAttrib3fv'));
  glVertexAttrib3fvARB := TglVertexAttrib3fvARB(ProcAddress('glVertexAttrib3fvARB'));
  glVertexAttrib3fvNV := TglVertexAttrib3fvNV(ProcAddress('glVertexAttrib3fvNV'));
  glVertexAttrib3hNV := TglVertexAttrib3hNV(ProcAddress('glVertexAttrib3hNV'));
  glVertexAttrib3hvNV := TglVertexAttrib3hvNV(ProcAddress('glVertexAttrib3hvNV'));
  glVertexAttrib3s := TglVertexAttrib3s(ProcAddress('glVertexAttrib3s'));
  glVertexAttrib3sARB := TglVertexAttrib3sARB(ProcAddress('glVertexAttrib3sARB'));
  glVertexAttrib3sNV := TglVertexAttrib3sNV(ProcAddress('glVertexAttrib3sNV'));
  glVertexAttrib3sv := TglVertexAttrib3sv(ProcAddress('glVertexAttrib3sv'));
  glVertexAttrib3svARB := TglVertexAttrib3svARB(ProcAddress('glVertexAttrib3svARB'));
  glVertexAttrib3svNV := TglVertexAttrib3svNV(ProcAddress('glVertexAttrib3svNV'));
  glVertexAttrib4Nbv := TglVertexAttrib4Nbv(ProcAddress('glVertexAttrib4Nbv'));
  glVertexAttrib4NbvARB := TglVertexAttrib4NbvARB(ProcAddress('glVertexAttrib4NbvARB'));
  glVertexAttrib4Niv := TglVertexAttrib4Niv(ProcAddress('glVertexAttrib4Niv'));
  glVertexAttrib4NivARB := TglVertexAttrib4NivARB(ProcAddress('glVertexAttrib4NivARB'));
  glVertexAttrib4Nsv := TglVertexAttrib4Nsv(ProcAddress('glVertexAttrib4Nsv'));
  glVertexAttrib4NsvARB := TglVertexAttrib4NsvARB(ProcAddress('glVertexAttrib4NsvARB'));
  glVertexAttrib4Nub := TglVertexAttrib4Nub(ProcAddress('glVertexAttrib4Nub'));
  glVertexAttrib4NubARB := TglVertexAttrib4NubARB(ProcAddress('glVertexAttrib4NubARB'));
  glVertexAttrib4Nubv := TglVertexAttrib4Nubv(ProcAddress('glVertexAttrib4Nubv'));
  glVertexAttrib4NubvARB := TglVertexAttrib4NubvARB(ProcAddress('glVertexAttrib4NubvARB'));
  glVertexAttrib4Nuiv := TglVertexAttrib4Nuiv(ProcAddress('glVertexAttrib4Nuiv'));
  glVertexAttrib4NuivARB := TglVertexAttrib4NuivARB(ProcAddress('glVertexAttrib4NuivARB'));
  glVertexAttrib4Nusv := TglVertexAttrib4Nusv(ProcAddress('glVertexAttrib4Nusv'));
  glVertexAttrib4NusvARB := TglVertexAttrib4NusvARB(ProcAddress('glVertexAttrib4NusvARB'));
  glVertexAttrib4bv := TglVertexAttrib4bv(ProcAddress('glVertexAttrib4bv'));
  glVertexAttrib4bvARB := TglVertexAttrib4bvARB(ProcAddress('glVertexAttrib4bvARB'));
  glVertexAttrib4d := TglVertexAttrib4d(ProcAddress('glVertexAttrib4d'));
  glVertexAttrib4dARB := TglVertexAttrib4dARB(ProcAddress('glVertexAttrib4dARB'));
  glVertexAttrib4dNV := TglVertexAttrib4dNV(ProcAddress('glVertexAttrib4dNV'));
  glVertexAttrib4dv := TglVertexAttrib4dv(ProcAddress('glVertexAttrib4dv'));
  glVertexAttrib4dvARB := TglVertexAttrib4dvARB(ProcAddress('glVertexAttrib4dvARB'));
  glVertexAttrib4dvNV := TglVertexAttrib4dvNV(ProcAddress('glVertexAttrib4dvNV'));
  glVertexAttrib4f := TglVertexAttrib4f(ProcAddress('glVertexAttrib4f'));
  glVertexAttrib4fARB := TglVertexAttrib4fARB(ProcAddress('glVertexAttrib4fARB'));
  glVertexAttrib4fNV := TglVertexAttrib4fNV(ProcAddress('glVertexAttrib4fNV'));
  glVertexAttrib4fv := TglVertexAttrib4fv(ProcAddress('glVertexAttrib4fv'));
  glVertexAttrib4fvARB := TglVertexAttrib4fvARB(ProcAddress('glVertexAttrib4fvARB'));
  glVertexAttrib4fvNV := TglVertexAttrib4fvNV(ProcAddress('glVertexAttrib4fvNV'));
  glVertexAttrib4hNV := TglVertexAttrib4hNV(ProcAddress('glVertexAttrib4hNV'));
  glVertexAttrib4hvNV := TglVertexAttrib4hvNV(ProcAddress('glVertexAttrib4hvNV'));
  glVertexAttrib4iv := TglVertexAttrib4iv(ProcAddress('glVertexAttrib4iv'));
  glVertexAttrib4ivARB := TglVertexAttrib4ivARB(ProcAddress('glVertexAttrib4ivARB'));
  glVertexAttrib4s := TglVertexAttrib4s(ProcAddress('glVertexAttrib4s'));
  glVertexAttrib4sARB := TglVertexAttrib4sARB(ProcAddress('glVertexAttrib4sARB'));
  glVertexAttrib4sNV := TglVertexAttrib4sNV(ProcAddress('glVertexAttrib4sNV'));
  glVertexAttrib4sv := TglVertexAttrib4sv(ProcAddress('glVertexAttrib4sv'));
  glVertexAttrib4svARB := TglVertexAttrib4svARB(ProcAddress('glVertexAttrib4svARB'));
  glVertexAttrib4svNV := TglVertexAttrib4svNV(ProcAddress('glVertexAttrib4svNV'));
  glVertexAttrib4ubNV := TglVertexAttrib4ubNV(ProcAddress('glVertexAttrib4ubNV'));
  glVertexAttrib4ubv := TglVertexAttrib4ubv(ProcAddress('glVertexAttrib4ubv'));
  glVertexAttrib4ubvARB := TglVertexAttrib4ubvARB(ProcAddress('glVertexAttrib4ubvARB'));
  glVertexAttrib4ubvNV := TglVertexAttrib4ubvNV(ProcAddress('glVertexAttrib4ubvNV'));
  glVertexAttrib4uiv := TglVertexAttrib4uiv(ProcAddress('glVertexAttrib4uiv'));
  glVertexAttrib4uivARB := TglVertexAttrib4uivARB(ProcAddress('glVertexAttrib4uivARB'));
  glVertexAttrib4usv := TglVertexAttrib4usv(ProcAddress('glVertexAttrib4usv'));
  glVertexAttrib4usvARB := TglVertexAttrib4usvARB(ProcAddress('glVertexAttrib4usvARB'));
  glVertexAttribArrayObjectATI := TglVertexAttribArrayObjectATI(ProcAddress('glVertexAttribArrayObjectATI'));
  glVertexAttribBinding := TglVertexAttribBinding(ProcAddress('glVertexAttribBinding'));
  glVertexAttribDivisor := TglVertexAttribDivisor(ProcAddress('glVertexAttribDivisor'));
  glVertexAttribDivisorANGLE := TglVertexAttribDivisorANGLE(ProcAddress('glVertexAttribDivisorANGLE'));
  glVertexAttribDivisorARB := TglVertexAttribDivisorARB(ProcAddress('glVertexAttribDivisorARB'));
  glVertexAttribDivisorEXT := TglVertexAttribDivisorEXT(ProcAddress('glVertexAttribDivisorEXT'));
  glVertexAttribDivisorNV := TglVertexAttribDivisorNV(ProcAddress('glVertexAttribDivisorNV'));
  glVertexAttribFormat := TglVertexAttribFormat(ProcAddress('glVertexAttribFormat'));
  glVertexAttribFormatNV := TglVertexAttribFormatNV(ProcAddress('glVertexAttribFormatNV'));
  glVertexAttribI1i := TglVertexAttribI1i(ProcAddress('glVertexAttribI1i'));
  glVertexAttribI1iEXT := TglVertexAttribI1iEXT(ProcAddress('glVertexAttribI1iEXT'));
  glVertexAttribI1iv := TglVertexAttribI1iv(ProcAddress('glVertexAttribI1iv'));
  glVertexAttribI1ivEXT := TglVertexAttribI1ivEXT(ProcAddress('glVertexAttribI1ivEXT'));
  glVertexAttribI1ui := TglVertexAttribI1ui(ProcAddress('glVertexAttribI1ui'));
  glVertexAttribI1uiEXT := TglVertexAttribI1uiEXT(ProcAddress('glVertexAttribI1uiEXT'));
  glVertexAttribI1uiv := TglVertexAttribI1uiv(ProcAddress('glVertexAttribI1uiv'));
  glVertexAttribI1uivEXT := TglVertexAttribI1uivEXT(ProcAddress('glVertexAttribI1uivEXT'));
  glVertexAttribI2i := TglVertexAttribI2i(ProcAddress('glVertexAttribI2i'));
  glVertexAttribI2iEXT := TglVertexAttribI2iEXT(ProcAddress('glVertexAttribI2iEXT'));
  glVertexAttribI2iv := TglVertexAttribI2iv(ProcAddress('glVertexAttribI2iv'));
  glVertexAttribI2ivEXT := TglVertexAttribI2ivEXT(ProcAddress('glVertexAttribI2ivEXT'));
  glVertexAttribI2ui := TglVertexAttribI2ui(ProcAddress('glVertexAttribI2ui'));
  glVertexAttribI2uiEXT := TglVertexAttribI2uiEXT(ProcAddress('glVertexAttribI2uiEXT'));
  glVertexAttribI2uiv := TglVertexAttribI2uiv(ProcAddress('glVertexAttribI2uiv'));
  glVertexAttribI2uivEXT := TglVertexAttribI2uivEXT(ProcAddress('glVertexAttribI2uivEXT'));
  glVertexAttribI3i := TglVertexAttribI3i(ProcAddress('glVertexAttribI3i'));
  glVertexAttribI3iEXT := TglVertexAttribI3iEXT(ProcAddress('glVertexAttribI3iEXT'));
  glVertexAttribI3iv := TglVertexAttribI3iv(ProcAddress('glVertexAttribI3iv'));
  glVertexAttribI3ivEXT := TglVertexAttribI3ivEXT(ProcAddress('glVertexAttribI3ivEXT'));
  glVertexAttribI3ui := TglVertexAttribI3ui(ProcAddress('glVertexAttribI3ui'));
  glVertexAttribI3uiEXT := TglVertexAttribI3uiEXT(ProcAddress('glVertexAttribI3uiEXT'));
  glVertexAttribI3uiv := TglVertexAttribI3uiv(ProcAddress('glVertexAttribI3uiv'));
  glVertexAttribI3uivEXT := TglVertexAttribI3uivEXT(ProcAddress('glVertexAttribI3uivEXT'));
  glVertexAttribI4bv := TglVertexAttribI4bv(ProcAddress('glVertexAttribI4bv'));
  glVertexAttribI4bvEXT := TglVertexAttribI4bvEXT(ProcAddress('glVertexAttribI4bvEXT'));
  glVertexAttribI4i := TglVertexAttribI4i(ProcAddress('glVertexAttribI4i'));
  glVertexAttribI4iEXT := TglVertexAttribI4iEXT(ProcAddress('glVertexAttribI4iEXT'));
  glVertexAttribI4iv := TglVertexAttribI4iv(ProcAddress('glVertexAttribI4iv'));
  glVertexAttribI4ivEXT := TglVertexAttribI4ivEXT(ProcAddress('glVertexAttribI4ivEXT'));
  glVertexAttribI4sv := TglVertexAttribI4sv(ProcAddress('glVertexAttribI4sv'));
  glVertexAttribI4svEXT := TglVertexAttribI4svEXT(ProcAddress('glVertexAttribI4svEXT'));
  glVertexAttribI4ubv := TglVertexAttribI4ubv(ProcAddress('glVertexAttribI4ubv'));
  glVertexAttribI4ubvEXT := TglVertexAttribI4ubvEXT(ProcAddress('glVertexAttribI4ubvEXT'));
  glVertexAttribI4ui := TglVertexAttribI4ui(ProcAddress('glVertexAttribI4ui'));
  glVertexAttribI4uiEXT := TglVertexAttribI4uiEXT(ProcAddress('glVertexAttribI4uiEXT'));
  glVertexAttribI4uiv := TglVertexAttribI4uiv(ProcAddress('glVertexAttribI4uiv'));
  glVertexAttribI4uivEXT := TglVertexAttribI4uivEXT(ProcAddress('glVertexAttribI4uivEXT'));
  glVertexAttribI4usv := TglVertexAttribI4usv(ProcAddress('glVertexAttribI4usv'));
  glVertexAttribI4usvEXT := TglVertexAttribI4usvEXT(ProcAddress('glVertexAttribI4usvEXT'));
  glVertexAttribIFormat := TglVertexAttribIFormat(ProcAddress('glVertexAttribIFormat'));
  glVertexAttribIFormatNV := TglVertexAttribIFormatNV(ProcAddress('glVertexAttribIFormatNV'));
  glVertexAttribIPointer := TglVertexAttribIPointer(ProcAddress('glVertexAttribIPointer'));
  glVertexAttribIPointerEXT := TglVertexAttribIPointerEXT(ProcAddress('glVertexAttribIPointerEXT'));
  glVertexAttribL1d := TglVertexAttribL1d(ProcAddress('glVertexAttribL1d'));
  glVertexAttribL1dEXT := TglVertexAttribL1dEXT(ProcAddress('glVertexAttribL1dEXT'));
  glVertexAttribL1dv := TglVertexAttribL1dv(ProcAddress('glVertexAttribL1dv'));
  glVertexAttribL1dvEXT := TglVertexAttribL1dvEXT(ProcAddress('glVertexAttribL1dvEXT'));
  glVertexAttribL1i64NV := TglVertexAttribL1i64NV(ProcAddress('glVertexAttribL1i64NV'));
  glVertexAttribL1i64vNV := TglVertexAttribL1i64vNV(ProcAddress('glVertexAttribL1i64vNV'));
  glVertexAttribL1ui64ARB := TglVertexAttribL1ui64ARB(ProcAddress('glVertexAttribL1ui64ARB'));
  glVertexAttribL1ui64NV := TglVertexAttribL1ui64NV(ProcAddress('glVertexAttribL1ui64NV'));
  glVertexAttribL1ui64vARB := TglVertexAttribL1ui64vARB(ProcAddress('glVertexAttribL1ui64vARB'));
  glVertexAttribL1ui64vNV := TglVertexAttribL1ui64vNV(ProcAddress('glVertexAttribL1ui64vNV'));
  glVertexAttribL2d := TglVertexAttribL2d(ProcAddress('glVertexAttribL2d'));
  glVertexAttribL2dEXT := TglVertexAttribL2dEXT(ProcAddress('glVertexAttribL2dEXT'));
  glVertexAttribL2dv := TglVertexAttribL2dv(ProcAddress('glVertexAttribL2dv'));
  glVertexAttribL2dvEXT := TglVertexAttribL2dvEXT(ProcAddress('glVertexAttribL2dvEXT'));
  glVertexAttribL2i64NV := TglVertexAttribL2i64NV(ProcAddress('glVertexAttribL2i64NV'));
  glVertexAttribL2i64vNV := TglVertexAttribL2i64vNV(ProcAddress('glVertexAttribL2i64vNV'));
  glVertexAttribL2ui64NV := TglVertexAttribL2ui64NV(ProcAddress('glVertexAttribL2ui64NV'));
  glVertexAttribL2ui64vNV := TglVertexAttribL2ui64vNV(ProcAddress('glVertexAttribL2ui64vNV'));
  glVertexAttribL3d := TglVertexAttribL3d(ProcAddress('glVertexAttribL3d'));
  glVertexAttribL3dEXT := TglVertexAttribL3dEXT(ProcAddress('glVertexAttribL3dEXT'));
  glVertexAttribL3dv := TglVertexAttribL3dv(ProcAddress('glVertexAttribL3dv'));
  glVertexAttribL3dvEXT := TglVertexAttribL3dvEXT(ProcAddress('glVertexAttribL3dvEXT'));
  glVertexAttribL3i64NV := TglVertexAttribL3i64NV(ProcAddress('glVertexAttribL3i64NV'));
  glVertexAttribL3i64vNV := TglVertexAttribL3i64vNV(ProcAddress('glVertexAttribL3i64vNV'));
  glVertexAttribL3ui64NV := TglVertexAttribL3ui64NV(ProcAddress('glVertexAttribL3ui64NV'));
  glVertexAttribL3ui64vNV := TglVertexAttribL3ui64vNV(ProcAddress('glVertexAttribL3ui64vNV'));
  glVertexAttribL4d := TglVertexAttribL4d(ProcAddress('glVertexAttribL4d'));
  glVertexAttribL4dEXT := TglVertexAttribL4dEXT(ProcAddress('glVertexAttribL4dEXT'));
  glVertexAttribL4dv := TglVertexAttribL4dv(ProcAddress('glVertexAttribL4dv'));
  glVertexAttribL4dvEXT := TglVertexAttribL4dvEXT(ProcAddress('glVertexAttribL4dvEXT'));
  glVertexAttribL4i64NV := TglVertexAttribL4i64NV(ProcAddress('glVertexAttribL4i64NV'));
  glVertexAttribL4i64vNV := TglVertexAttribL4i64vNV(ProcAddress('glVertexAttribL4i64vNV'));
  glVertexAttribL4ui64NV := TglVertexAttribL4ui64NV(ProcAddress('glVertexAttribL4ui64NV'));
  glVertexAttribL4ui64vNV := TglVertexAttribL4ui64vNV(ProcAddress('glVertexAttribL4ui64vNV'));
  glVertexAttribLFormat := TglVertexAttribLFormat(ProcAddress('glVertexAttribLFormat'));
  glVertexAttribLFormatNV := TglVertexAttribLFormatNV(ProcAddress('glVertexAttribLFormatNV'));
  glVertexAttribLPointer := TglVertexAttribLPointer(ProcAddress('glVertexAttribLPointer'));
  glVertexAttribLPointerEXT := TglVertexAttribLPointerEXT(ProcAddress('glVertexAttribLPointerEXT'));
  glVertexAttribP1ui := TglVertexAttribP1ui(ProcAddress('glVertexAttribP1ui'));
  glVertexAttribP1uiv := TglVertexAttribP1uiv(ProcAddress('glVertexAttribP1uiv'));
  glVertexAttribP2ui := TglVertexAttribP2ui(ProcAddress('glVertexAttribP2ui'));
  glVertexAttribP2uiv := TglVertexAttribP2uiv(ProcAddress('glVertexAttribP2uiv'));
  glVertexAttribP3ui := TglVertexAttribP3ui(ProcAddress('glVertexAttribP3ui'));
  glVertexAttribP3uiv := TglVertexAttribP3uiv(ProcAddress('glVertexAttribP3uiv'));
  glVertexAttribP4ui := TglVertexAttribP4ui(ProcAddress('glVertexAttribP4ui'));
  glVertexAttribP4uiv := TglVertexAttribP4uiv(ProcAddress('glVertexAttribP4uiv'));
  glVertexAttribParameteriAMD := TglVertexAttribParameteriAMD(ProcAddress('glVertexAttribParameteriAMD'));
  glVertexAttribPointer := TglVertexAttribPointer(ProcAddress('glVertexAttribPointer'));
  glVertexAttribPointerARB := TglVertexAttribPointerARB(ProcAddress('glVertexAttribPointerARB'));
  glVertexAttribPointerNV := TglVertexAttribPointerNV(ProcAddress('glVertexAttribPointerNV'));
  glVertexAttribs1dvNV := TglVertexAttribs1dvNV(ProcAddress('glVertexAttribs1dvNV'));
  glVertexAttribs1fvNV := TglVertexAttribs1fvNV(ProcAddress('glVertexAttribs1fvNV'));
  glVertexAttribs1hvNV := TglVertexAttribs1hvNV(ProcAddress('glVertexAttribs1hvNV'));
  glVertexAttribs1svNV := TglVertexAttribs1svNV(ProcAddress('glVertexAttribs1svNV'));
  glVertexAttribs2dvNV := TglVertexAttribs2dvNV(ProcAddress('glVertexAttribs2dvNV'));
  glVertexAttribs2fvNV := TglVertexAttribs2fvNV(ProcAddress('glVertexAttribs2fvNV'));
  glVertexAttribs2hvNV := TglVertexAttribs2hvNV(ProcAddress('glVertexAttribs2hvNV'));
  glVertexAttribs2svNV := TglVertexAttribs2svNV(ProcAddress('glVertexAttribs2svNV'));
  glVertexAttribs3dvNV := TglVertexAttribs3dvNV(ProcAddress('glVertexAttribs3dvNV'));
  glVertexAttribs3fvNV := TglVertexAttribs3fvNV(ProcAddress('glVertexAttribs3fvNV'));
  glVertexAttribs3hvNV := TglVertexAttribs3hvNV(ProcAddress('glVertexAttribs3hvNV'));
  glVertexAttribs3svNV := TglVertexAttribs3svNV(ProcAddress('glVertexAttribs3svNV'));
  glVertexAttribs4dvNV := TglVertexAttribs4dvNV(ProcAddress('glVertexAttribs4dvNV'));
  glVertexAttribs4fvNV := TglVertexAttribs4fvNV(ProcAddress('glVertexAttribs4fvNV'));
  glVertexAttribs4hvNV := TglVertexAttribs4hvNV(ProcAddress('glVertexAttribs4hvNV'));
  glVertexAttribs4svNV := TglVertexAttribs4svNV(ProcAddress('glVertexAttribs4svNV'));
  glVertexAttribs4ubvNV := TglVertexAttribs4ubvNV(ProcAddress('glVertexAttribs4ubvNV'));
  glVertexBindingDivisor := TglVertexBindingDivisor(ProcAddress('glVertexBindingDivisor'));
  glVertexBlendARB := TglVertexBlendARB(ProcAddress('glVertexBlendARB'));
  glVertexBlendEnvfATI := TglVertexBlendEnvfATI(ProcAddress('glVertexBlendEnvfATI'));
  glVertexBlendEnviATI := TglVertexBlendEnviATI(ProcAddress('glVertexBlendEnviATI'));
  glVertexFormatNV := TglVertexFormatNV(ProcAddress('glVertexFormatNV'));
  glVertexP2ui := TglVertexP2ui(ProcAddress('glVertexP2ui'));
  glVertexP2uiv := TglVertexP2uiv(ProcAddress('glVertexP2uiv'));
  glVertexP3ui := TglVertexP3ui(ProcAddress('glVertexP3ui'));
  glVertexP3uiv := TglVertexP3uiv(ProcAddress('glVertexP3uiv'));
  glVertexP4ui := TglVertexP4ui(ProcAddress('glVertexP4ui'));
  glVertexP4uiv := TglVertexP4uiv(ProcAddress('glVertexP4uiv'));
  glVertexPointer := TglVertexPointer(ProcAddress('glVertexPointer'));
  glVertexPointerEXT := TglVertexPointerEXT(ProcAddress('glVertexPointerEXT'));
  glVertexPointerListIBM := TglVertexPointerListIBM(ProcAddress('glVertexPointerListIBM'));
  glVertexPointervINTEL := TglVertexPointervINTEL(ProcAddress('glVertexPointervINTEL'));
  glVertexStream1dATI := TglVertexStream1dATI(ProcAddress('glVertexStream1dATI'));
  glVertexStream1dvATI := TglVertexStream1dvATI(ProcAddress('glVertexStream1dvATI'));
  glVertexStream1fATI := TglVertexStream1fATI(ProcAddress('glVertexStream1fATI'));
  glVertexStream1fvATI := TglVertexStream1fvATI(ProcAddress('glVertexStream1fvATI'));
  glVertexStream1iATI := TglVertexStream1iATI(ProcAddress('glVertexStream1iATI'));
  glVertexStream1ivATI := TglVertexStream1ivATI(ProcAddress('glVertexStream1ivATI'));
  glVertexStream1sATI := TglVertexStream1sATI(ProcAddress('glVertexStream1sATI'));
  glVertexStream1svATI := TglVertexStream1svATI(ProcAddress('glVertexStream1svATI'));
  glVertexStream2dATI := TglVertexStream2dATI(ProcAddress('glVertexStream2dATI'));
  glVertexStream2dvATI := TglVertexStream2dvATI(ProcAddress('glVertexStream2dvATI'));
  glVertexStream2fATI := TglVertexStream2fATI(ProcAddress('glVertexStream2fATI'));
  glVertexStream2fvATI := TglVertexStream2fvATI(ProcAddress('glVertexStream2fvATI'));
  glVertexStream2iATI := TglVertexStream2iATI(ProcAddress('glVertexStream2iATI'));
  glVertexStream2ivATI := TglVertexStream2ivATI(ProcAddress('glVertexStream2ivATI'));
  glVertexStream2sATI := TglVertexStream2sATI(ProcAddress('glVertexStream2sATI'));
  glVertexStream2svATI := TglVertexStream2svATI(ProcAddress('glVertexStream2svATI'));
  glVertexStream3dATI := TglVertexStream3dATI(ProcAddress('glVertexStream3dATI'));
  glVertexStream3dvATI := TglVertexStream3dvATI(ProcAddress('glVertexStream3dvATI'));
  glVertexStream3fATI := TglVertexStream3fATI(ProcAddress('glVertexStream3fATI'));
  glVertexStream3fvATI := TglVertexStream3fvATI(ProcAddress('glVertexStream3fvATI'));
  glVertexStream3iATI := TglVertexStream3iATI(ProcAddress('glVertexStream3iATI'));
  glVertexStream3ivATI := TglVertexStream3ivATI(ProcAddress('glVertexStream3ivATI'));
  glVertexStream3sATI := TglVertexStream3sATI(ProcAddress('glVertexStream3sATI'));
  glVertexStream3svATI := TglVertexStream3svATI(ProcAddress('glVertexStream3svATI'));
  glVertexStream4dATI := TglVertexStream4dATI(ProcAddress('glVertexStream4dATI'));
  glVertexStream4dvATI := TglVertexStream4dvATI(ProcAddress('glVertexStream4dvATI'));
  glVertexStream4fATI := TglVertexStream4fATI(ProcAddress('glVertexStream4fATI'));
  glVertexStream4fvATI := TglVertexStream4fvATI(ProcAddress('glVertexStream4fvATI'));
  glVertexStream4iATI := TglVertexStream4iATI(ProcAddress('glVertexStream4iATI'));
  glVertexStream4ivATI := TglVertexStream4ivATI(ProcAddress('glVertexStream4ivATI'));
  glVertexStream4sATI := TglVertexStream4sATI(ProcAddress('glVertexStream4sATI'));
  glVertexStream4svATI := TglVertexStream4svATI(ProcAddress('glVertexStream4svATI'));
  glVertexWeightPointerEXT := TglVertexWeightPointerEXT(ProcAddress('glVertexWeightPointerEXT'));
  glVertexWeightfEXT := TglVertexWeightfEXT(ProcAddress('glVertexWeightfEXT'));
  glVertexWeightfvEXT := TglVertexWeightfvEXT(ProcAddress('glVertexWeightfvEXT'));
  glVertexWeighthNV := TglVertexWeighthNV(ProcAddress('glVertexWeighthNV'));
  glVertexWeighthvNV := TglVertexWeighthvNV(ProcAddress('glVertexWeighthvNV'));
  glVideoCaptureNV := TglVideoCaptureNV(ProcAddress('glVideoCaptureNV'));
  glVideoCaptureStreamParameterdvNV := TglVideoCaptureStreamParameterdvNV(ProcAddress('glVideoCaptureStreamParameterdvNV'));
  glVideoCaptureStreamParameterfvNV := TglVideoCaptureStreamParameterfvNV(ProcAddress('glVideoCaptureStreamParameterfvNV'));
  glVideoCaptureStreamParameterivNV := TglVideoCaptureStreamParameterivNV(ProcAddress('glVideoCaptureStreamParameterivNV'));
  glViewport := TglViewport(ProcAddress('glViewport'));
  glViewportArrayv := TglViewportArrayv(ProcAddress('glViewportArrayv'));
  glViewportArrayvNV := TglViewportArrayvNV(ProcAddress('glViewportArrayvNV'));
  glViewportArrayvOES := TglViewportArrayvOES(ProcAddress('glViewportArrayvOES'));
  glViewportIndexedf := TglViewportIndexedf(ProcAddress('glViewportIndexedf'));
  glViewportIndexedfOES := TglViewportIndexedfOES(ProcAddress('glViewportIndexedfOES'));
  glViewportIndexedfNV := TglViewportIndexedfNV(ProcAddress('glViewportIndexedfNV'));
  glViewportIndexedfv := TglViewportIndexedfv(ProcAddress('glViewportIndexedfv'));
  glViewportIndexedfvOES := TglViewportIndexedfvOES(ProcAddress('glViewportIndexedfvOES'));
  glViewportIndexedfvNV := TglViewportIndexedfvNV(ProcAddress('glViewportIndexedfvNV'));
  glViewportPositionWScaleNV := TglViewportPositionWScaleNV(ProcAddress('glViewportPositionWScaleNV'));
  glViewportSwizzleNV := TglViewportSwizzleNV(ProcAddress('glViewportSwizzleNV'));
  glWaitSemaphoreEXT := TglWaitSemaphoreEXT(ProcAddress('glWaitSemaphoreEXT'));
  glWaitSemaphoreui64NVX := TglWaitSemaphoreui64NVX(ProcAddress('glWaitSemaphoreui64NVX'));
  glWaitSync := TglWaitSync(ProcAddress('glWaitSync'));
  glWaitSyncAPPLE := TglWaitSyncAPPLE(ProcAddress('glWaitSyncAPPLE'));
  glWeightPathsNV := TglWeightPathsNV(ProcAddress('glWeightPathsNV'));
  glWeightPointerARB := TglWeightPointerARB(ProcAddress('glWeightPointerARB'));
  glWeightPointerOES := TglWeightPointerOES(ProcAddress('glWeightPointerOES'));
  glWeightbvARB := TglWeightbvARB(ProcAddress('glWeightbvARB'));
  glWeightdvARB := TglWeightdvARB(ProcAddress('glWeightdvARB'));
  glWeightfvARB := TglWeightfvARB(ProcAddress('glWeightfvARB'));
  glWeightivARB := TglWeightivARB(ProcAddress('glWeightivARB'));
  glWeightsvARB := TglWeightsvARB(ProcAddress('glWeightsvARB'));
  glWeightubvARB := TglWeightubvARB(ProcAddress('glWeightubvARB'));
  glWeightuivARB := TglWeightuivARB(ProcAddress('glWeightuivARB'));
  glWeightusvARB := TglWeightusvARB(ProcAddress('glWeightusvARB'));
  glWindowPos2d := TglWindowPos2d(ProcAddress('glWindowPos2d'));
  glWindowPos2dARB := TglWindowPos2dARB(ProcAddress('glWindowPos2dARB'));
  glWindowPos2dMESA := TglWindowPos2dMESA(ProcAddress('glWindowPos2dMESA'));
  glWindowPos2dv := TglWindowPos2dv(ProcAddress('glWindowPos2dv'));
  glWindowPos2dvARB := TglWindowPos2dvARB(ProcAddress('glWindowPos2dvARB'));
  glWindowPos2dvMESA := TglWindowPos2dvMESA(ProcAddress('glWindowPos2dvMESA'));
  glWindowPos2f := TglWindowPos2f(ProcAddress('glWindowPos2f'));
  glWindowPos2fARB := TglWindowPos2fARB(ProcAddress('glWindowPos2fARB'));
  glWindowPos2fMESA := TglWindowPos2fMESA(ProcAddress('glWindowPos2fMESA'));
  glWindowPos2fv := TglWindowPos2fv(ProcAddress('glWindowPos2fv'));
  glWindowPos2fvARB := TglWindowPos2fvARB(ProcAddress('glWindowPos2fvARB'));
  glWindowPos2fvMESA := TglWindowPos2fvMESA(ProcAddress('glWindowPos2fvMESA'));
  glWindowPos2i := TglWindowPos2i(ProcAddress('glWindowPos2i'));
  glWindowPos2iARB := TglWindowPos2iARB(ProcAddress('glWindowPos2iARB'));
  glWindowPos2iMESA := TglWindowPos2iMESA(ProcAddress('glWindowPos2iMESA'));
  glWindowPos2iv := TglWindowPos2iv(ProcAddress('glWindowPos2iv'));
  glWindowPos2ivARB := TglWindowPos2ivARB(ProcAddress('glWindowPos2ivARB'));
  glWindowPos2ivMESA := TglWindowPos2ivMESA(ProcAddress('glWindowPos2ivMESA'));
  glWindowPos2s := TglWindowPos2s(ProcAddress('glWindowPos2s'));
  glWindowPos2sARB := TglWindowPos2sARB(ProcAddress('glWindowPos2sARB'));
  glWindowPos2sMESA := TglWindowPos2sMESA(ProcAddress('glWindowPos2sMESA'));
  glWindowPos2sv := TglWindowPos2sv(ProcAddress('glWindowPos2sv'));
  glWindowPos2svARB := TglWindowPos2svARB(ProcAddress('glWindowPos2svARB'));
  glWindowPos2svMESA := TglWindowPos2svMESA(ProcAddress('glWindowPos2svMESA'));
  glWindowPos3d := TglWindowPos3d(ProcAddress('glWindowPos3d'));
  glWindowPos3dARB := TglWindowPos3dARB(ProcAddress('glWindowPos3dARB'));
  glWindowPos3dMESA := TglWindowPos3dMESA(ProcAddress('glWindowPos3dMESA'));
  glWindowPos3dv := TglWindowPos3dv(ProcAddress('glWindowPos3dv'));
  glWindowPos3dvARB := TglWindowPos3dvARB(ProcAddress('glWindowPos3dvARB'));
  glWindowPos3dvMESA := TglWindowPos3dvMESA(ProcAddress('glWindowPos3dvMESA'));
  glWindowPos3f := TglWindowPos3f(ProcAddress('glWindowPos3f'));
  glWindowPos3fARB := TglWindowPos3fARB(ProcAddress('glWindowPos3fARB'));
  glWindowPos3fMESA := TglWindowPos3fMESA(ProcAddress('glWindowPos3fMESA'));
  glWindowPos3fv := TglWindowPos3fv(ProcAddress('glWindowPos3fv'));
  glWindowPos3fvARB := TglWindowPos3fvARB(ProcAddress('glWindowPos3fvARB'));
  glWindowPos3fvMESA := TglWindowPos3fvMESA(ProcAddress('glWindowPos3fvMESA'));
  glWindowPos3i := TglWindowPos3i(ProcAddress('glWindowPos3i'));
  glWindowPos3iARB := TglWindowPos3iARB(ProcAddress('glWindowPos3iARB'));
  glWindowPos3iMESA := TglWindowPos3iMESA(ProcAddress('glWindowPos3iMESA'));
  glWindowPos3iv := TglWindowPos3iv(ProcAddress('glWindowPos3iv'));
  glWindowPos3ivARB := TglWindowPos3ivARB(ProcAddress('glWindowPos3ivARB'));
  glWindowPos3ivMESA := TglWindowPos3ivMESA(ProcAddress('glWindowPos3ivMESA'));
  glWindowPos3s := TglWindowPos3s(ProcAddress('glWindowPos3s'));
  glWindowPos3sARB := TglWindowPos3sARB(ProcAddress('glWindowPos3sARB'));
  glWindowPos3sMESA := TglWindowPos3sMESA(ProcAddress('glWindowPos3sMESA'));
  glWindowPos3sv := TglWindowPos3sv(ProcAddress('glWindowPos3sv'));
  glWindowPos3svARB := TglWindowPos3svARB(ProcAddress('glWindowPos3svARB'));
  glWindowPos3svMESA := TglWindowPos3svMESA(ProcAddress('glWindowPos3svMESA'));
  glWindowPos4dMESA := TglWindowPos4dMESA(ProcAddress('glWindowPos4dMESA'));
  glWindowPos4dvMESA := TglWindowPos4dvMESA(ProcAddress('glWindowPos4dvMESA'));
  glWindowPos4fMESA := TglWindowPos4fMESA(ProcAddress('glWindowPos4fMESA'));
  glWindowPos4fvMESA := TglWindowPos4fvMESA(ProcAddress('glWindowPos4fvMESA'));
  glWindowPos4iMESA := TglWindowPos4iMESA(ProcAddress('glWindowPos4iMESA'));
  glWindowPos4ivMESA := TglWindowPos4ivMESA(ProcAddress('glWindowPos4ivMESA'));
  glWindowPos4sMESA := TglWindowPos4sMESA(ProcAddress('glWindowPos4sMESA'));
  glWindowPos4svMESA := TglWindowPos4svMESA(ProcAddress('glWindowPos4svMESA'));
  glWindowRectanglesEXT := TglWindowRectanglesEXT(ProcAddress('glWindowRectanglesEXT'));
  glWriteMaskEXT := TglWriteMaskEXT(ProcAddress('glWriteMaskEXT'));
  glDrawVkImageNV := TglDrawVkImageNV(ProcAddress('glDrawVkImageNV'));
  glGetVkProcAddrNV := TglGetVkProcAddrNV(ProcAddress('glGetVkProcAddrNV'));
  glWaitVkSemaphoreNV := TglWaitVkSemaphoreNV(ProcAddress('glWaitVkSemaphoreNV'));
  glSignalVkSemaphoreNV := TglSignalVkSemaphoreNV(ProcAddress('glSignalVkSemaphoreNV'));
  glSignalVkFenceNV := TglSignalVkFenceNV(ProcAddress('glSignalVkFenceNV'));
  glFramebufferParameteriMESA := TglFramebufferParameteriMESA(ProcAddress('glFramebufferParameteriMESA'));
  glGetFramebufferParameterivMESA := TglGetFramebufferParameterivMESA(ProcAddress('glGetFramebufferParameterivMESA'));
end;

{$if defined(WINDOWS)}
var TmpWindow: HWND;
procedure WinInit;
  var pf: Integer;
  var pfd: TPixelFormatDescriptor;
begin
  wglCreateContext := TwglCreateContext(LibAddress(Lib, 'wglCreateContext'));
  wglMakeCurrent := TwglMakeCurrent(LibAddress(Lib, 'wglMakeCurrent'));
  TmpWindow := CreateWindowEx(
    WS_EX_APPWINDOW or WS_EX_WINDOWEDGE,
    PChar('STATIC'),
    PChar('PasOpenGL Temporary'),
    WS_OVERLAPPEDWINDOW or WS_CLIPSIBLINGS or WS_CLIPCHILDREN,
    0, 0, 100, 100,
    0, 0, hInstance,
    nil
  );
  glSharedDC := GetDC(TmpWindow);
  {$push}
  {$hints off}
  FillChar(pfd, SizeOf(pfd), 0);
  {$pop}
  pfd.nSize := SizeOf(pfd);
  pfd.nVersion := 1;
  pfd.dwFlags := PFD_DRAW_TO_WINDOW or PFD_SUPPORT_OPENGL or PFD_DOUBLEBUFFER;
  pfd.iPixelType := PFD_TYPE_RGBA;
  pfd.iLayerType := PFD_MAIN_PLANE;
  pf := GDIChoosePixelFormat(glSharedDC, @pfd);
  GDISetPixelFormat(glSharedDC, pf, @pfd);
  glSharedContext := wglCreateContext(glSharedDC);
  wglMakeCurrent(glSharedDC, glSharedContext);
  wglGetProcAddress := TwglGetProcAddress(LibAddress(Lib, 'wglGetProcAddress'));
  LoadCommands;
end;

procedure WinFin;
begin
  wglMakeCurrent(glSharedDC, 0);
  wglDeleteContext(glSharedContext);
  ReleaseDC(TmpWindow, glSharedDC);
  DestroyWindow(TmpWindow);
end;
{$elseif defined(LINUX)}
var TmpDisplay: PDisplay;
procedure LinuxInit;
  var VisualAttribs: array of Int32;
  var ColorMap: TColormap;
  var WindowAttribsInit: TXSetWindowAttributes;
  var Screen: Int32;
  var VisualInfo: PTXVisualInfo;
begin
  LoadCommands;
  TmpDisplay := XOpenDisplay(nil);
  Screen := DefaultScreen(TmpDisplay);
  VisualAttribs := [
    GLX_RGBA, GLX_DEPTH_SIZE, 24,
    GLX_DOUBLEBUFFER, None
  ];
  VisualInfo := glXChooseVisual(TmpDisplay, 0, @VisualAttribs[0]);
  ColorMap := XCreateColormap(TmpDisplay, DefaultRootWindow(TmpDisplay), VisualInfo^.visual, AllocNone);
  WindowAttribsInit := Default(TXSetWindowAttributes);
  WindowAttribsInit.colormap := ColorMap;
  glSharedWindow := XCreateWindow(
    TmpDisplay, RootWindow(TmpDisplay, Screen), 0, 0, 100, 100, 1,
    DefaultDepth(TmpDisplay, Screen), InputOutput, VisualInfo^.visual,
    CWColormap, @WindowAttribsInit
  );
  glSharedContext := glXCreateContext(TmpDisplay, VisualInfo, nil, GL_TRUE);
end;

procedure LinuxFin;
begin
  glXMakeCurrent(TmpDisplay, glSharedWindow, glSharedContext);
  glXDestroyContext(TmpDisplay, glSharedContext);
  XDestroyWindow(TmpDisplay, glSharedWindow);
  XCloseDisplay(TmpDisplay);
end;
{$endif}

procedure LoadOpenGL;
begin
  Lib := LibOpen(LibGL);
{$if defined(WINDOWS)}
  WinInit;
{$elseif defined(LINUX)}
  LinuxInit;
{$endif}
end;

procedure UnloadOpenGL;
begin
{$if defined(WINDOWS)}
  WinFin;
{$elseif defined(LINUX)}
  LinuxFin;
{$endif}
  if Lib <> 0 then LibClose(Lib);
  Lib := 0;
end;

initialization
begin
  LoadOpenGL;
end;

finalization
begin
  UnloadOpenGL;
end;

end.
